--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=11 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 15.0 cbx_cycloneii 2015:04:22:18:04:07:SJ cbx_lpm_add_sub 2015:04:22:18:04:07:SJ cbx_lpm_compare 2015:04:22:18:04:07:SJ cbx_lpm_decode 2015:04:22:18:04:08:SJ cbx_mgl 2015:04:22:18:06:50:SJ cbx_stratix 2015:04:22:18:04:08:SJ cbx_stratixii 2015:04:22:18:04:08:SJ  VERSION_END


-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_6ua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[10..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[10..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode2882w[1..0]	: WIRE;
	w_anode2891w[3..0]	: WIRE;
	w_anode2908w[3..0]	: WIRE;
	w_anode2918w[3..0]	: WIRE;
	w_anode2928w[3..0]	: WIRE;
	w_anode2938w[3..0]	: WIRE;
	w_anode2948w[3..0]	: WIRE;
	w_anode2958w[3..0]	: WIRE;
	w_anode2968w[3..0]	: WIRE;
	w_anode2980w[1..0]	: WIRE;
	w_anode2987w[3..0]	: WIRE;
	w_anode2998w[3..0]	: WIRE;
	w_anode3008w[3..0]	: WIRE;
	w_anode3018w[3..0]	: WIRE;
	w_anode3028w[3..0]	: WIRE;
	w_anode3038w[3..0]	: WIRE;
	w_anode3048w[3..0]	: WIRE;
	w_anode3058w[3..0]	: WIRE;
	w_data2880w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[10..0] = eq_wire[10..0];
	eq_wire[] = ( ( w_anode3058w[3..3], w_anode3048w[3..3], w_anode3038w[3..3], w_anode3028w[3..3], w_anode3018w[3..3], w_anode3008w[3..3], w_anode2998w[3..3], w_anode2987w[3..3]), ( w_anode2968w[3..3], w_anode2958w[3..3], w_anode2948w[3..3], w_anode2938w[3..3], w_anode2928w[3..3], w_anode2918w[3..3], w_anode2908w[3..3], w_anode2891w[3..3]));
	w_anode2882w[] = ( (w_anode2882w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode2891w[] = ( (w_anode2891w[2..2] & (! w_data2880w[2..2])), (w_anode2891w[1..1] & (! w_data2880w[1..1])), (w_anode2891w[0..0] & (! w_data2880w[0..0])), w_anode2882w[1..1]);
	w_anode2908w[] = ( (w_anode2908w[2..2] & (! w_data2880w[2..2])), (w_anode2908w[1..1] & (! w_data2880w[1..1])), (w_anode2908w[0..0] & w_data2880w[0..0]), w_anode2882w[1..1]);
	w_anode2918w[] = ( (w_anode2918w[2..2] & (! w_data2880w[2..2])), (w_anode2918w[1..1] & w_data2880w[1..1]), (w_anode2918w[0..0] & (! w_data2880w[0..0])), w_anode2882w[1..1]);
	w_anode2928w[] = ( (w_anode2928w[2..2] & (! w_data2880w[2..2])), (w_anode2928w[1..1] & w_data2880w[1..1]), (w_anode2928w[0..0] & w_data2880w[0..0]), w_anode2882w[1..1]);
	w_anode2938w[] = ( (w_anode2938w[2..2] & w_data2880w[2..2]), (w_anode2938w[1..1] & (! w_data2880w[1..1])), (w_anode2938w[0..0] & (! w_data2880w[0..0])), w_anode2882w[1..1]);
	w_anode2948w[] = ( (w_anode2948w[2..2] & w_data2880w[2..2]), (w_anode2948w[1..1] & (! w_data2880w[1..1])), (w_anode2948w[0..0] & w_data2880w[0..0]), w_anode2882w[1..1]);
	w_anode2958w[] = ( (w_anode2958w[2..2] & w_data2880w[2..2]), (w_anode2958w[1..1] & w_data2880w[1..1]), (w_anode2958w[0..0] & (! w_data2880w[0..0])), w_anode2882w[1..1]);
	w_anode2968w[] = ( (w_anode2968w[2..2] & w_data2880w[2..2]), (w_anode2968w[1..1] & w_data2880w[1..1]), (w_anode2968w[0..0] & w_data2880w[0..0]), w_anode2882w[1..1]);
	w_anode2980w[] = ( (w_anode2980w[0..0] & data_wire[3..3]), enable_wire);
	w_anode2987w[] = ( (w_anode2987w[2..2] & (! w_data2880w[2..2])), (w_anode2987w[1..1] & (! w_data2880w[1..1])), (w_anode2987w[0..0] & (! w_data2880w[0..0])), w_anode2980w[1..1]);
	w_anode2998w[] = ( (w_anode2998w[2..2] & (! w_data2880w[2..2])), (w_anode2998w[1..1] & (! w_data2880w[1..1])), (w_anode2998w[0..0] & w_data2880w[0..0]), w_anode2980w[1..1]);
	w_anode3008w[] = ( (w_anode3008w[2..2] & (! w_data2880w[2..2])), (w_anode3008w[1..1] & w_data2880w[1..1]), (w_anode3008w[0..0] & (! w_data2880w[0..0])), w_anode2980w[1..1]);
	w_anode3018w[] = ( (w_anode3018w[2..2] & (! w_data2880w[2..2])), (w_anode3018w[1..1] & w_data2880w[1..1]), (w_anode3018w[0..0] & w_data2880w[0..0]), w_anode2980w[1..1]);
	w_anode3028w[] = ( (w_anode3028w[2..2] & w_data2880w[2..2]), (w_anode3028w[1..1] & (! w_data2880w[1..1])), (w_anode3028w[0..0] & (! w_data2880w[0..0])), w_anode2980w[1..1]);
	w_anode3038w[] = ( (w_anode3038w[2..2] & w_data2880w[2..2]), (w_anode3038w[1..1] & (! w_data2880w[1..1])), (w_anode3038w[0..0] & w_data2880w[0..0]), w_anode2980w[1..1]);
	w_anode3048w[] = ( (w_anode3048w[2..2] & w_data2880w[2..2]), (w_anode3048w[1..1] & w_data2880w[1..1]), (w_anode3048w[0..0] & (! w_data2880w[0..0])), w_anode2980w[1..1]);
	w_anode3058w[] = ( (w_anode3058w[2..2] & w_data2880w[2..2]), (w_anode3058w[1..1] & w_data2880w[1..1]), (w_anode3058w[0..0] & w_data2880w[0..0]), w_anode2980w[1..1]);
	w_data2880w[2..0] = data_wire[2..0];
END;
--VALID FILE
