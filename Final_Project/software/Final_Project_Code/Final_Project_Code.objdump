
Final_Project_Code.elf:     file format elf32-littlenios2
Final_Project_Code.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000022c

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0000f838 memsz 0x0000f838 flags r-x
    LOAD off    0x00010858 vaddr 0x0000f858 paddr 0x00011344 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00012e30 vaddr 0x00012e30 paddr 0x00012e30 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000020c  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f314  0000022c  0000022c  0000122c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000318  0000f540  0000f540  00010540  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0000f858  00011344  00010858  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00012e30  00012e30  00012e30  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00012f90  00012f90  00012344  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00012344  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000cd0  00000000  00000000  00012368  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0002334f  00000000  00000000  00013038  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008de9  00000000  00000000  00036387  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000acdc  00000000  00000000  0003f170  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002058  00000000  00000000  00049e4c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000364a  00000000  00000000  0004bea4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00016ceb  00000000  00000000  0004f4ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  000661dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001388  00000000  00000000  000661f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006a68c  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006a68f  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006a69b  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006a69c  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0006a69d  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0006a6a1  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0006a6a5  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  0006a6a9  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  0006a6b4  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  0006a6bf  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000b  00000000  00000000  0006a6ca  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000003b  00000000  00000000  0006a6d5  2**0
                  CONTENTS, READONLY
 29 .jdi          000055dc  00000000  00000000  0006a710  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0005f626  00000000  00000000  0006fcec  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
0000022c l    d  .text	00000000 .text
0000f540 l    d  .rodata	00000000 .rodata
0000f858 l    d  .rwdata	00000000 .rwdata
00012e30 l    d  .bss	00000000 .bss
00012f90 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../Final_Project_Code_bsp//obj/HAL/src/crt0.o
00000264 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000f59e l     O .rodata	00000010 zeroes.4181
0000f5ae l     O .rodata	00000010 blanks.4180
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00003004 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00004bac l     F .text	00000008 __fp_lock
00004bb4 l     F .text	00000008 __fp_unlock
00004bc8 l     F .text	000001a0 __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0000fc60 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
000100a4 l     O .rwdata	00000020 lc_ctype_charset
00010084 l     O .rwdata	00000020 lc_message_charset
000100c4 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0000f5e0 l     O .rodata	0000000c p05.2678
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00006df4 l     F .text	000000fc __sprint_r.part.0
0000f714 l     O .rodata	00000010 blanks.4125
0000f704 l     O .rodata	00000010 zeroes.4126
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0000a498 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0000cde8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000cf10 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000cf3c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0000d044 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000d140 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000d224 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000d408 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00011334 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000d68c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000d7dc l     F .text	00000038 alt_dev_reg
000102a4 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000dab8 l     F .text	00000204 altera_avalon_jtag_uart_irq
0000dcbc l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000e438 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000e8d0 l     F .text	000000e0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0000ea28 l     F .text	00000050 alt_get_errno
0000ea78 l     F .text	000000f4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00012e64 g     O .bss	00000004 alt_instruction_exception_handler
00006990 g     F .text	00000074 _mprec_log10
00006a7c g     F .text	0000008c __any_on
00008cc4 g     F .text	00000054 _isatty_r
0000f5ec g     O .rodata	00000028 __mprec_tinytens
0000d350 g     F .text	00000078 alt_main
00012e90 g     O .bss	00000100 alt_irq
00008d18 g     F .text	0000005c _lseek_r
00011344 g       *ABS*	00000000 __flash_rwdata_start
0000b808 g     F .text	00000084 .hidden __eqdf2
00012f90 g       *ABS*	00000000 __alt_heap_start
00000d24 g     F .text	0000003c printf
0000963c g     F .text	0000009c _wcrtomb_r
00006c54 g     F .text	0000005c __sseek
00004f10 g     F .text	00000010 __sinit
000094cc g     F .text	00000154 __swbuf_r
000054e4 g     F .text	0000007c _setlocale_r
00004d68 g     F .text	00000078 __sfmoreglue
0000d3e8 g     F .text	00000020 __malloc_unlock
00008d74 g     F .text	0000015c memmove
00004ef8 g     F .text	00000018 _cleanup
00005ac0 g     F .text	000000a8 _Balloc
0000b88c g     F .text	000000e0 .hidden __gtdf2
0000ee68 g     F .text	00000020 altera_nios2_gen2_irq_init
00000000  w      *UND*	00000000 __errno
00000000 g     F .entry	0000000c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
000087c8 g     F .text	00000058 _fstat_r
00012e3c g     O .bss	00000004 errno
00006bd0 g     F .text	00000008 __seofread
00012e50 g     O .bss	00000004 alt_argv
00019304 g       *ABS*	00000000 _gp
00010124 g     O .rwdata	00000180 alt_fd_list
0000ee88 g     F .text	00000090 alt_find_dev
00005864 g     F .text	00000138 memcpy
00004bbc g     F .text	0000000c _cleanup_r
0000cc10 g     F .text	000000d0 .hidden __floatsidf
0000e9b0 g     F .text	00000078 alt_io_redirect
0000b96c g     F .text	000000e0 .hidden __ltdf2
0000f540 g       *ABS*	00000000 __DTOR_END__
0000f100 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00006b08 g     F .text	00000074 __fpclassifyd
000068ec g     F .text	000000a4 __ratio
0000832c g     F .text	00000024 __vfiprintf_internal
0000deb8 g     F .text	0000020c altera_avalon_jtag_uart_read
00000528 g     F .text	00000014 malloc
00000cf8 g     F .text	0000002c _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0000a5b4 g     F .text	00000008 .hidden __udivsi3
0000d094 g     F .text	000000ac isatty
0000f63c g     O .rodata	000000c8 __mprec_tens
00005560 g     F .text	0000000c __locale_charset
00012e38 g     O .bss	00000004 __malloc_top_pad
00011314 g     O .rwdata	00000004 __mb_cur_max
00005590 g     F .text	0000000c _localeconv_r
00008820 g     F .text	000004a4 __sfvwrite_r
00005ee8 g     F .text	0000003c __i2b
00000d60 g     F .text	00000054 _sbrk_r
00008ed0 g     F .text	0000005c _read_r
0001132c g     O .rwdata	00000004 alt_max_fd
000084d8 g     F .text	00000100 _fclose_r
00004b7c g     F .text	00000030 fflush
00012e34 g     O .bss	00000004 __malloc_max_sbrked_mem
0000a5ec g     F .text	0000089c .hidden __adddf3
00006694 g     F .text	0000011c __b2d
00009e7c g     F .text	0000061c .hidden __umoddi3
0000d274 g     F .text	000000dc lseek
0001130c g     O .rwdata	00000004 _global_impure_ptr
00008f2c g     F .text	000005a0 _realloc_r
00012f90 g       *ABS*	00000000 __bss_end
0000e7e0 g     F .text	000000f0 alt_iic_isr_register
0000ed64 g     F .text	00000104 alt_tick
0000983c g     F .text	00000640 .hidden __udivdi3
000085ec g     F .text	00000184 _fputwc_r
0000f614 g     O .rodata	00000028 __mprec_bigtens
00005ccc g     F .text	00000104 __s2b
0000cce0 g     F .text	000000a4 .hidden __floatunsidf
0000643c g     F .text	00000060 __mcmp
00004f30 g     F .text	00000018 __fp_lock_all
0000e794 g     F .text	0000004c alt_ic_irq_enabled
0000eccc g     F .text	00000098 alt_alarm_stop
00012e58 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000d0 alt_irq_handler
000100fc g     O .rwdata	00000028 alt_dev_null
000003ec g     F .text	000000ac init_players
0000e41c g     F .text	0000001c alt_dcache_flush_all
00005dd0 g     F .text	00000068 __hi0bits
0000cb88 g     F .text	00000088 .hidden __fixdfsi
00011344 g       *ABS*	00000000 __ram_rwdata_end
00011324 g     O .rwdata	00000008 alt_dev_list
0000d6dc g     F .text	00000100 write
0000f858 g       *ABS*	00000000 __ram_rodata_end
0000cf8c g     F .text	000000b8 fstat
0000b96c g     F .text	000000e0 .hidden __ledf2
000061b4 g     F .text	00000140 __pow5mult
00006f08 g     F .text	00001424 ___vfiprintf_internal_r
00012e48 g     O .bss	00000004 __nlocale_changed
0000a5bc g     F .text	00000008 .hidden __umodsi3
00012f90 g       *ABS*	00000000 end
0000d9f4 g     F .text	000000c4 altera_avalon_jtag_uart_init
000001cc g     F .exceptions	00000060 alt_instruction_exception_entry
0000f540 g       *ABS*	00000000 __CTOR_LIST__
00061a80 g       *ABS*	00000000 __alt_stack_pointer
0000cd84 g     F .text	00000064 .hidden __clzsi2
0000e0c4 g     F .text	00000218 altera_avalon_jtag_uart_write
00004f20 g     F .text	00000004 __sfp_lock_acquire
0000577c g     F .text	000000e8 memchr
00000db4 g     F .text	000020fc ___vfprintf_internal_r
00000354 g     F .text	00000098 render_sprites
00005084 g     F .text	000002f0 _free_r
0000556c g     F .text	00000010 __locale_mb_cur_max
0000f378 g     F .text	00000194 __call_exitprocs
00012e44 g     O .bss	00000004 __mlocale_changed
00011304 g     O .rwdata	00000004 __malloc_sbrk_base
0000022c g     F .text	0000003c _start
00012e5c g     O .bss	00000004 _alt_tick_rate
000062f4 g     F .text	00000148 __lshift
00012e60 g     O .bss	00000004 _alt_nticks
0000d458 g     F .text	00000104 read
0000d848 g     F .text	00000048 alt_sys_init
0000f264 g     F .text	00000114 __register_exitproc
00005f24 g     F .text	00000290 __multiply
0000dd64 g     F .text	00000068 altera_avalon_jtag_uart_close
00000268 g     F .text	000000b4 renderer
0000a5c4 g     F .text	00000028 .hidden __mulsi3
0000f858 g       *ABS*	00000000 __ram_rwdata_start
0000f540 g       *ABS*	00000000 __ram_rodata_start
00012e68 g     O .bss	00000028 __malloc_current_mallinfo
000067b0 g     F .text	0000013c __d2b
0000d890 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000f02c g     F .text	000000d4 alt_get_fd
000083ac g     F .text	00000054 _close_r
0000f1e8 g     F .text	0000007c memcmp
0000d950 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00012f90 g       *ABS*	00000000 __alt_stack_base
0000d9a0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00002ed4 g     F .text	00000130 __swsetup_r
0000ae88 g     F .text	00000980 .hidden __divdf3
00004de0 g     F .text	00000118 __sfp
00006a04 g     F .text	00000078 __copybits
0000f858 g     O .rwdata	00000408 __malloc_av_
00004f2c g     F .text	00000004 __sinit_lock_release
0000ba4c g     F .text	0000086c .hidden __muldf3
00006b7c g     F .text	00000054 __sread
0000ef18 g     F .text	00000114 alt_find_file
0000e488 g     F .text	000000a4 alt_dev_llist_insert
0000d3c8 g     F .text	00000020 __malloc_lock
0000d5dc g     F .text	000000b0 sbrk
00004954 g     F .text	00000228 _fflush_r
00008400 g     F .text	000000d8 _calloc_r
00012e30 g       *ABS*	00000000 __bss_start
0000599c g     F .text	00000124 memset
00000498 g     F .text	00000090 main
00012e54 g     O .bss	00000004 alt_envp
00012e30 g     O .bss	00000004 __malloc_max_total_mem
0000d8f0 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00009620 g     F .text	0000001c __swbuf
00006cb0 g     F .text	00000008 __sclose
00061a80 g       *ABS*	00000000 __alt_heap_limit
000085d8 g     F .text	00000014 fclose
0000322c g     F .text	00001728 _dtoa_r
00000550 g     F .text	000007a8 _malloc_r
000097b0 g     F .text	00000030 __ascii_wctomb
00011330 g     O .rwdata	00000004 alt_errno
00005374 g     F .text	000000b8 _fwalk
0000a504 g     F .text	00000054 .hidden __divsi3
00004f60 g     F .text	00000124 _malloc_trim_r
0000f540 g       *ABS*	00000000 __CTOR_END__
00006cb8 g     F .text	000000a4 strcmp
0000f540 g       *ABS*	00000000 __flash_rodata_start
0000f540 g       *ABS*	00000000 __DTOR_LIST__
0000b808 g     F .text	00000084 .hidden __nedf2
0000d814 g     F .text	00000034 alt_irq_init
0000d55c g     F .text	00000080 alt_release_fd
0000f724 g     O .rodata	00000100 .hidden __clz_tab
00012e40 g     O .bss	00000004 _PathLocale
0000f19c g     F .text	00000014 atexit
00008350 g     F .text	0000005c _write_r
0000559c g     F .text	0000001c setlocale
00011310 g     O .rwdata	00000004 _impure_ptr
00012e4c g     O .bss	00000004 alt_argc
0000e588 g     F .text	0000005c _do_dtors
00005588 g     F .text	00000008 __locale_cjk_lang
00000020 g       .exceptions	00000000 alt_irq_entry
00006634 g     F .text	00000060 __ulp
00004f48 g     F .text	00000018 __fp_unlock_all
0001131c g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
000055b8 g     F .text	0000000c localeconv
0000e600 g     F .text	00000050 alt_ic_isr_register
00011344 g       *ABS*	00000000 _edata
00012f90 g       *ABS*	00000000 _end
0000022c g       *ABS*	00000000 __ram_exceptions_end
0000ddcc g     F .text	000000ec altera_avalon_jtag_uart_ioctl
0000031c g     F .text	00000038 render_background
0000e6f0 g     F .text	000000a4 alt_ic_irq_disable
00006bd8 g     F .text	0000007c __swrite
00011308 g     O .rwdata	00000004 __malloc_trim_threshold
0000557c g     F .text	0000000c __locale_msgcharset
0000f1b0 g     F .text	00000038 exit
0000542c g     F .text	000000b8 _fwalk_reent
0000649c g     F .text	00000198 __mdiff
0000a558 g     F .text	0000005c .hidden __modsi3
00061a80 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
00004f24 g     F .text	00000004 __sfp_lock_release
0000f50c g     F .text	00000034 _exit
0000e2dc g     F .text	00000140 alt_alarm_start
000055c4 g     F .text	000001b8 __smakebuf_r
00006d5c g     F .text	00000098 strlen
0000eb6c g     F .text	00000160 open
0000b88c g     F .text	000000e0 .hidden __gedf2
00011318 g     O .rwdata	00000004 __wctomb
00006ef0 g     F .text	00000018 __sprint_r
0000e5e4 g     F .text	0000001c alt_icache_flush_all
00011338 g     O .rwdata	00000004 alt_priority_mask
0000e650 g     F .text	000000a0 alt_ic_irq_enable
00002eb0 g     F .text	00000024 __vfprintf_internal
000097e0 g     F .text	0000005c _wctomb_r
0000c2b8 g     F .text	000008d0 .hidden __subdf3
00005e38 g     F .text	000000b0 __lo0bits
0001133c g     O .rwdata	00000008 alt_alarm_list
0000e52c g     F .text	0000005c _do_ctors
000096d8 g     F .text	000000d8 wcrtomb
0000ce38 g     F .text	000000d8 close
0000d1a4 g     F .text	00000080 alt_load
00008770 g     F .text	00000058 fputwc
0000053c g     F .text	00000014 free
00004f28 g     F .text	00000004 __sinit_lock_acquire
00005b90 g     F .text	0000013c __multadd
00005b68 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408b14 	ori	at,at,556
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  8c:	df401215 	stw	ea,72(sp)
        ldhu.n  r2, 0(r4)
        ldhu.n  r3, 2(r4)
        slli.n  r3, r3, 16
        or.n    r2, r2, r3 /* Instruction that caused exception */
#else
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001cc0 	call	1cc <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001426 	beq	r2,zero,18c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	00800074 	movhi	r2,1
 140:	108ba404 	addi	r2,r2,11920
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	00800074 	movhi	r2,1
 158:	108ba404 	addi	r2,r2,11920
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	1009883a 	mov	r4,r2
 174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 17c:	0005313a 	rdctl	r2,ipending
 180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 184:	e0bfff17 	ldw	r2,-4(fp)
 188:	00000706 	br	1a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 18c:	e0bffc17 	ldw	r2,-16(fp)
 190:	1085883a 	add	r2,r2,r2
 194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 198:	e0bffd17 	ldw	r2,-12(fp)
 19c:	10800044 	addi	r2,r2,1
 1a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a4:	003fe106 	br	12c <__alt_data_end+0xfff9e6ac>

    active = alt_irq_pending ();
 1a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1ac:	e0bffb17 	ldw	r2,-20(fp)
 1b0:	103fdb1e 	bne	r2,zero,120 <__alt_data_end+0xfff9e6a0>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b4:	0001883a 	nop
}
 1b8:	e037883a 	mov	sp,fp
 1bc:	dfc00117 	ldw	ra,4(sp)
 1c0:	df000017 	ldw	fp,0(sp)
 1c4:	dec00204 	addi	sp,sp,8
 1c8:	f800283a 	ret

000001cc <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1cc:	defffb04 	addi	sp,sp,-20
 1d0:	dfc00415 	stw	ra,16(sp)
 1d4:	df000315 	stw	fp,12(sp)
 1d8:	df000304 	addi	fp,sp,12
 1dc:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1e0:	00bfffc4 	movi	r2,-1
 1e4:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 1e8:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1ec:	d0a6d817 	ldw	r2,-25760(gp)
 1f0:	10000726 	beq	r2,zero,210 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1f4:	d0a6d817 	ldw	r2,-25760(gp)
 1f8:	e0fffd17 	ldw	r3,-12(fp)
 1fc:	1809883a 	mov	r4,r3
 200:	e17fff17 	ldw	r5,-4(fp)
 204:	e1bffe17 	ldw	r6,-8(fp)
 208:	103ee83a 	callr	r2
 20c:	00000206 	br	218 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 210:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 214:	0005883a 	mov	r2,zero
}
 218:	e037883a 	mov	sp,fp
 21c:	dfc00117 	ldw	ra,4(sp)
 220:	df000017 	ldw	fp,0(sp)
 224:	dec00204 	addi	sp,sp,8
 228:	f800283a 	ret

Disassembly of section .text:

0000022c <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     22c:	06c001b4 	movhi	sp,6
    ori sp, sp, %lo(__alt_stack_pointer)
     230:	dec6a014 	ori	sp,sp,6784
    movhi gp, %hi(_gp)
     234:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     238:	d6a4c114 	ori	gp,gp,37636
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     23c:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     240:	108b8c14 	ori	r2,r2,11824

    movhi r3, %hi(__bss_end)
     244:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     248:	18cbe414 	ori	r3,r3,12176

    beq r2, r3, 1f
     24c:	10c00326 	beq	r2,r3,25c <_start+0x30>

0:
    stw zero, (r2)
     250:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     254:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     258:	10fffd36 	bltu	r2,r3,250 <__alt_data_end+0xfff9e7d0>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     25c:	000d1a40 	call	d1a4 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     260:	000d3500 	call	d350 <alt_main>

00000264 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     264:	003fff06 	br	264 <__alt_data_end+0xfff9e7e4>

00000268 <renderer>:




void renderer(int x, int y, int sprite_num)
{
     268:	defffc04 	addi	sp,sp,-16
     26c:	df000315 	stw	fp,12(sp)
     270:	df000304 	addi	fp,sp,12
     274:	e13ffd15 	stw	r4,-12(fp)
     278:	e17ffe15 	stw	r5,-8(fp)
     27c:	e1bfff15 	stw	r6,-4(fp)
	*sprite_number = sprite_num;
     280:	00800234 	movhi	r2,8
     284:	10841004 	addi	r2,r2,4160
     288:	e0ffff17 	ldw	r3,-4(fp)
     28c:	10c00015 	stw	r3,0(r2)
	*sprite_xy = 1024*x + y;
     290:	00800234 	movhi	r2,8
     294:	10840c04 	addi	r2,r2,4144
     298:	e0fffd17 	ldw	r3,-12(fp)
     29c:	180892ba 	slli	r4,r3,10
     2a0:	e0fffe17 	ldw	r3,-8(fp)
     2a4:	20c7883a 	add	r3,r4,r3
     2a8:	10c00015 	stw	r3,0(r2)
	*sw_to_hw = 2;
     2ac:	00800234 	movhi	r2,8
     2b0:	10840804 	addi	r2,r2,4128
     2b4:	00c00084 	movi	r3,2
     2b8:	10c00015 	stw	r3,0(r2)
	while(*hw_to_sw%2 != 0)
     2bc:	0001883a 	nop
     2c0:	00800234 	movhi	r2,8
     2c4:	10840404 	addi	r2,r2,4112
     2c8:	10800017 	ldw	r2,0(r2)
     2cc:	1080004c 	andi	r2,r2,1
     2d0:	103ffb1e 	bne	r2,zero,2c0 <__alt_data_end+0xfff9e840>
	{}
	*sw_to_hw = 0;
     2d4:	00800234 	movhi	r2,8
     2d8:	10840804 	addi	r2,r2,4128
     2dc:	10000015 	stw	zero,0(r2)
	while(*hw_to_sw != 1)
     2e0:	0001883a 	nop
     2e4:	00800234 	movhi	r2,8
     2e8:	10840404 	addi	r2,r2,4112
     2ec:	10800017 	ldw	r2,0(r2)
     2f0:	10800058 	cmpnei	r2,r2,1
     2f4:	103ffb1e 	bne	r2,zero,2e4 <__alt_data_end+0xfff9e864>
	{}
	*sw_to_hw = 1;
     2f8:	00800234 	movhi	r2,8
     2fc:	10840804 	addi	r2,r2,4128
     300:	00c00044 	movi	r3,1
     304:	10c00015 	stw	r3,0(r2)
	return;
     308:	0001883a 	nop
}
     30c:	e037883a 	mov	sp,fp
     310:	df000017 	ldw	fp,0(sp)
     314:	dec00104 	addi	sp,sp,4
     318:	f800283a 	ret

0000031c <render_background>:

void render_background()
{
     31c:	defffe04 	addi	sp,sp,-8
     320:	dfc00115 	stw	ra,4(sp)
     324:	df000015 	stw	fp,0(sp)
     328:	d839883a 	mov	fp,sp
	renderer(0, 0, 0);
     32c:	0009883a 	mov	r4,zero
     330:	000b883a 	mov	r5,zero
     334:	000d883a 	mov	r6,zero
     338:	00002680 	call	268 <renderer>
	return;
     33c:	0001883a 	nop
}
     340:	e037883a 	mov	sp,fp
     344:	dfc00117 	ldw	ra,4(sp)
     348:	df000017 	ldw	fp,0(sp)
     34c:	dec00204 	addi	sp,sp,8
     350:	f800283a 	ret

00000354 <render_sprites>:

void render_sprites(player *first,player *second){
     354:	defffc04 	addi	sp,sp,-16
     358:	dfc00315 	stw	ra,12(sp)
     35c:	df000215 	stw	fp,8(sp)
     360:	df000204 	addi	fp,sp,8
     364:	e13ffe15 	stw	r4,-8(fp)
     368:	e17fff15 	stw	r5,-4(fp)
	render_background();
     36c:	000031c0 	call	31c <render_background>
	if(first==NULL || second ==NULL){
     370:	e0bffe17 	ldw	r2,-8(fp)
     374:	10000226 	beq	r2,zero,380 <render_sprites+0x2c>
     378:	e0bfff17 	ldw	r2,-4(fp)
     37c:	1000041e 	bne	r2,zero,390 <render_sprites+0x3c>
		printf("players not instantiated");
     380:	01000074 	movhi	r4,1
     384:	213d5004 	addi	r4,r4,-2752
     388:	0000d240 	call	d24 <printf>
     38c:	00001206 	br	3d8 <render_sprites+0x84>
	}
	else{
		renderer(first->x_pos,first->y_pos,first->id);
     390:	e0bffe17 	ldw	r2,-8(fp)
     394:	11000017 	ldw	r4,0(r2)
     398:	e0bffe17 	ldw	r2,-8(fp)
     39c:	10c00117 	ldw	r3,4(r2)
     3a0:	e0bffe17 	ldw	r2,-8(fp)
     3a4:	10800317 	ldw	r2,12(r2)
     3a8:	180b883a 	mov	r5,r3
     3ac:	100d883a 	mov	r6,r2
     3b0:	00002680 	call	268 <renderer>
		renderer(second->x_pos,second->y_pos,second->id);
     3b4:	e0bfff17 	ldw	r2,-4(fp)
     3b8:	11000017 	ldw	r4,0(r2)
     3bc:	e0bfff17 	ldw	r2,-4(fp)
     3c0:	10c00117 	ldw	r3,4(r2)
     3c4:	e0bfff17 	ldw	r2,-4(fp)
     3c8:	10800317 	ldw	r2,12(r2)
     3cc:	180b883a 	mov	r5,r3
     3d0:	100d883a 	mov	r6,r2
     3d4:	00002680 	call	268 <renderer>
	}

}
     3d8:	e037883a 	mov	sp,fp
     3dc:	dfc00117 	ldw	ra,4(sp)
     3e0:	df000017 	ldw	fp,0(sp)
     3e4:	dec00204 	addi	sp,sp,8
     3e8:	f800283a 	ret

000003ec <init_players>:
void init_players(player *first,player *second){
     3ec:	defffc04 	addi	sp,sp,-16
     3f0:	dfc00315 	stw	ra,12(sp)
     3f4:	df000215 	stw	fp,8(sp)
     3f8:	df000204 	addi	fp,sp,8
     3fc:	e13ffe15 	stw	r4,-8(fp)
     400:	e17fff15 	stw	r5,-4(fp)
	if(first==NULL || second ==NULL)
     404:	e0bffe17 	ldw	r2,-8(fp)
     408:	10000226 	beq	r2,zero,414 <init_players+0x28>
     40c:	e0bfff17 	ldw	r2,-4(fp)
     410:	1000041e 	bne	r2,zero,424 <init_players+0x38>
	{
		printf("players not instantiated");
     414:	01000074 	movhi	r4,1
     418:	213d5004 	addi	r4,r4,-2752
     41c:	0000d240 	call	d24 <printf>
     420:	00001806 	br	484 <init_players+0x98>
	}
	else{
		first->x_pos = 300,
     424:	e0bffe17 	ldw	r2,-8(fp)
     428:	00c04b04 	movi	r3,300
     42c:	10c00015 	stw	r3,0(r2)
		first->y_pos = 400;
     430:	e0bffe17 	ldw	r2,-8(fp)
     434:	00c06404 	movi	r3,400
     438:	10c00115 	stw	r3,4(r2)
		first->health = 3;
     43c:	e0bffe17 	ldw	r2,-8(fp)
     440:	00c000c4 	movi	r3,3
     444:	10c00215 	stw	r3,8(r2)
		first->id=player_sprite1;
     448:	e0bffe17 	ldw	r2,-8(fp)
     44c:	00c00044 	movi	r3,1
     450:	10c00315 	stw	r3,12(r2)
		second->x_pos= 200;
     454:	e0bfff17 	ldw	r2,-4(fp)
     458:	00c03204 	movi	r3,200
     45c:	10c00015 	stw	r3,0(r2)
		second->y_pos= 200;
     460:	e0bfff17 	ldw	r2,-4(fp)
     464:	00c03204 	movi	r3,200
     468:	10c00115 	stw	r3,4(r2)
		second->health=3;
     46c:	e0bfff17 	ldw	r2,-4(fp)
     470:	00c000c4 	movi	r3,3
     474:	10c00215 	stw	r3,8(r2)
		second->id = player_sprite1;
     478:	e0bfff17 	ldw	r2,-4(fp)
     47c:	00c00044 	movi	r3,1
     480:	10c00315 	stw	r3,12(r2)
	}
}
     484:	e037883a 	mov	sp,fp
     488:	dfc00117 	ldw	ra,4(sp)
     48c:	df000017 	ldw	fp,0(sp)
     490:	dec00204 	addi	sp,sp,8
     494:	f800283a 	ret

00000498 <main>:

int main()
{
     498:	defffc04 	addi	sp,sp,-16
     49c:	dfc00315 	stw	ra,12(sp)
     4a0:	df000215 	stw	fp,8(sp)
     4a4:	df000204 	addi	fp,sp,8
	int i;
	player *first=(player *)malloc(sizeof(player));
     4a8:	01000404 	movi	r4,16
     4ac:	00005280 	call	528 <malloc>
     4b0:	e0bffe15 	stw	r2,-8(fp)
	player *second=(player *)malloc(sizeof(player));
     4b4:	01000404 	movi	r4,16
     4b8:	00005280 	call	528 <malloc>
     4bc:	e0bfff15 	stw	r2,-4(fp)
	init_players(first,second);
     4c0:	e13ffe17 	ldw	r4,-8(fp)
     4c4:	e17fff17 	ldw	r5,-4(fp)
     4c8:	00003ec0 	call	3ec <init_players>

	while(1)
	{
		render_sprites(first,second);
     4cc:	e13ffe17 	ldw	r4,-8(fp)
     4d0:	e17fff17 	ldw	r5,-4(fp)
     4d4:	00003540 	call	354 <render_sprites>

		if((first->x_pos+64+32) < x_bounds){
     4d8:	e0bffe17 	ldw	r2,-8(fp)
     4dc:	10800017 	ldw	r2,0(r2)
     4e0:	10801804 	addi	r2,r2,96
     4e4:	1080a008 	cmpgei	r2,r2,640
     4e8:	1000051e 	bne	r2,zero,500 <main+0x68>
			first->x_pos+=32;
     4ec:	e0bffe17 	ldw	r2,-8(fp)
     4f0:	10800017 	ldw	r2,0(r2)
     4f4:	10c00804 	addi	r3,r2,32
     4f8:	e0bffe17 	ldw	r2,-8(fp)
     4fc:	10c00015 	stw	r3,0(r2)
		}
		if(second->y_pos-32 > 0 ){
     500:	e0bfff17 	ldw	r2,-4(fp)
     504:	10800117 	ldw	r2,4(r2)
     508:	10bff804 	addi	r2,r2,-32
     50c:	0080050e 	bge	zero,r2,524 <main+0x8c>
			second->y_pos-=32;
     510:	e0bfff17 	ldw	r2,-4(fp)
     514:	10800117 	ldw	r2,4(r2)
     518:	10fff804 	addi	r3,r2,-32
     51c:	e0bfff17 	ldw	r2,-4(fp)
     520:	10c00115 	stw	r3,4(r2)
		}


	}
     524:	003fe906 	br	4cc <__alt_data_end+0xfff9ea4c>

00000528 <malloc>:
     528:	00800074 	movhi	r2,1
     52c:	1084c404 	addi	r2,r2,4880
     530:	200b883a 	mov	r5,r4
     534:	11000017 	ldw	r4,0(r2)
     538:	00005501 	jmpi	550 <_malloc_r>

0000053c <free>:
     53c:	00800074 	movhi	r2,1
     540:	1084c404 	addi	r2,r2,4880
     544:	200b883a 	mov	r5,r4
     548:	11000017 	ldw	r4,0(r2)
     54c:	00050841 	jmpi	5084 <_free_r>

00000550 <_malloc_r>:
     550:	defff504 	addi	sp,sp,-44
     554:	dc800315 	stw	r18,12(sp)
     558:	dfc00a15 	stw	ra,40(sp)
     55c:	df000915 	stw	fp,36(sp)
     560:	ddc00815 	stw	r23,32(sp)
     564:	dd800715 	stw	r22,28(sp)
     568:	dd400615 	stw	r21,24(sp)
     56c:	dd000515 	stw	r20,20(sp)
     570:	dcc00415 	stw	r19,16(sp)
     574:	dc400215 	stw	r17,8(sp)
     578:	dc000115 	stw	r16,4(sp)
     57c:	288002c4 	addi	r2,r5,11
     580:	00c00584 	movi	r3,22
     584:	2025883a 	mov	r18,r4
     588:	18802a2e 	bgeu	r3,r2,634 <_malloc_r+0xe4>
     58c:	047ffe04 	movi	r17,-8
     590:	1462703a 	and	r17,r2,r17
     594:	88009e16 	blt	r17,zero,810 <_malloc_r+0x2c0>
     598:	89409d36 	bltu	r17,r5,810 <_malloc_r+0x2c0>
     59c:	000d3c80 	call	d3c8 <__malloc_lock>
     5a0:	00807dc4 	movi	r2,503
     5a4:	14402736 	bltu	r2,r17,644 <_malloc_r+0xf4>
     5a8:	8806d0fa 	srli	r3,r17,3
     5ac:	04c00074 	movhi	r19,1
     5b0:	9cfe1604 	addi	r19,r19,-1960
     5b4:	18c5883a 	add	r2,r3,r3
     5b8:	1085883a 	add	r2,r2,r2
     5bc:	1085883a 	add	r2,r2,r2
     5c0:	9885883a 	add	r2,r19,r2
     5c4:	14000317 	ldw	r16,12(r2)
     5c8:	80814a26 	beq	r16,r2,af4 <_malloc_r+0x5a4>
     5cc:	80c00117 	ldw	r3,4(r16)
     5d0:	81000317 	ldw	r4,12(r16)
     5d4:	00bfff04 	movi	r2,-4
     5d8:	1884703a 	and	r2,r3,r2
     5dc:	81400217 	ldw	r5,8(r16)
     5e0:	8085883a 	add	r2,r16,r2
     5e4:	10c00117 	ldw	r3,4(r2)
     5e8:	29000315 	stw	r4,12(r5)
     5ec:	21400215 	stw	r5,8(r4)
     5f0:	18c00054 	ori	r3,r3,1
     5f4:	10c00115 	stw	r3,4(r2)
     5f8:	9009883a 	mov	r4,r18
     5fc:	000d3e80 	call	d3e8 <__malloc_unlock>
     600:	80800204 	addi	r2,r16,8
     604:	dfc00a17 	ldw	ra,40(sp)
     608:	df000917 	ldw	fp,36(sp)
     60c:	ddc00817 	ldw	r23,32(sp)
     610:	dd800717 	ldw	r22,28(sp)
     614:	dd400617 	ldw	r21,24(sp)
     618:	dd000517 	ldw	r20,20(sp)
     61c:	dcc00417 	ldw	r19,16(sp)
     620:	dc800317 	ldw	r18,12(sp)
     624:	dc400217 	ldw	r17,8(sp)
     628:	dc000117 	ldw	r16,4(sp)
     62c:	dec00b04 	addi	sp,sp,44
     630:	f800283a 	ret
     634:	04400404 	movi	r17,16
     638:	89407536 	bltu	r17,r5,810 <_malloc_r+0x2c0>
     63c:	000d3c80 	call	d3c8 <__malloc_lock>
     640:	003fd906 	br	5a8 <__alt_data_end+0xfff9eb28>
     644:	8806d27a 	srli	r3,r17,9
     648:	18007526 	beq	r3,zero,820 <_malloc_r+0x2d0>
     64c:	00800104 	movi	r2,4
     650:	10c0ef36 	bltu	r2,r3,a10 <_malloc_r+0x4c0>
     654:	8806d1ba 	srli	r3,r17,6
     658:	19c00e04 	addi	r7,r3,56
     65c:	39cb883a 	add	r5,r7,r7
     660:	04c00074 	movhi	r19,1
     664:	294b883a 	add	r5,r5,r5
     668:	9cfe1604 	addi	r19,r19,-1960
     66c:	294b883a 	add	r5,r5,r5
     670:	994b883a 	add	r5,r19,r5
     674:	2c000317 	ldw	r16,12(r5)
     678:	2c000e26 	beq	r5,r16,6b4 <_malloc_r+0x164>
     67c:	80800117 	ldw	r2,4(r16)
     680:	01bfff04 	movi	r6,-4
     684:	010003c4 	movi	r4,15
     688:	1184703a 	and	r2,r2,r6
     68c:	1447c83a 	sub	r3,r2,r17
     690:	20c00716 	blt	r4,r3,6b0 <_malloc_r+0x160>
     694:	1800650e 	bge	r3,zero,82c <_malloc_r+0x2dc>
     698:	84000317 	ldw	r16,12(r16)
     69c:	2c000526 	beq	r5,r16,6b4 <_malloc_r+0x164>
     6a0:	80800117 	ldw	r2,4(r16)
     6a4:	1184703a 	and	r2,r2,r6
     6a8:	1447c83a 	sub	r3,r2,r17
     6ac:	20fff90e 	bge	r4,r3,694 <__alt_data_end+0xfff9ec14>
     6b0:	39ffffc4 	addi	r7,r7,-1
     6b4:	38c00044 	addi	r3,r7,1
     6b8:	01800074 	movhi	r6,1
     6bc:	9c000417 	ldw	r16,16(r19)
     6c0:	31be1604 	addi	r6,r6,-1960
     6c4:	32400204 	addi	r9,r6,8
     6c8:	82410326 	beq	r16,r9,ad8 <_malloc_r+0x588>
     6cc:	81000117 	ldw	r4,4(r16)
     6d0:	00bfff04 	movi	r2,-4
     6d4:	208e703a 	and	r7,r4,r2
     6d8:	3c45c83a 	sub	r2,r7,r17
     6dc:	010003c4 	movi	r4,15
     6e0:	2080ee16 	blt	r4,r2,a9c <_malloc_r+0x54c>
     6e4:	32400515 	stw	r9,20(r6)
     6e8:	32400415 	stw	r9,16(r6)
     6ec:	1000510e 	bge	r2,zero,834 <_malloc_r+0x2e4>
     6f0:	00807fc4 	movi	r2,511
     6f4:	11c0ce36 	bltu	r2,r7,a30 <_malloc_r+0x4e0>
     6f8:	3808d0fa 	srli	r4,r7,3
     6fc:	01c00044 	movi	r7,1
     700:	30800117 	ldw	r2,4(r6)
     704:	210b883a 	add	r5,r4,r4
     708:	294b883a 	add	r5,r5,r5
     70c:	2009d0ba 	srai	r4,r4,2
     710:	294b883a 	add	r5,r5,r5
     714:	298b883a 	add	r5,r5,r6
     718:	2a000217 	ldw	r8,8(r5)
     71c:	3908983a 	sll	r4,r7,r4
     720:	81400315 	stw	r5,12(r16)
     724:	82000215 	stw	r8,8(r16)
     728:	2088b03a 	or	r4,r4,r2
     72c:	2c000215 	stw	r16,8(r5)
     730:	31000115 	stw	r4,4(r6)
     734:	44000315 	stw	r16,12(r8)
     738:	1805d0ba 	srai	r2,r3,2
     73c:	01400044 	movi	r5,1
     740:	288a983a 	sll	r5,r5,r2
     744:	21404336 	bltu	r4,r5,854 <_malloc_r+0x304>
     748:	2144703a 	and	r2,r4,r5
     74c:	10000a1e 	bne	r2,zero,778 <_malloc_r+0x228>
     750:	00bfff04 	movi	r2,-4
     754:	294b883a 	add	r5,r5,r5
     758:	1886703a 	and	r3,r3,r2
     75c:	2144703a 	and	r2,r4,r5
     760:	18c00104 	addi	r3,r3,4
     764:	1000041e 	bne	r2,zero,778 <_malloc_r+0x228>
     768:	294b883a 	add	r5,r5,r5
     76c:	2144703a 	and	r2,r4,r5
     770:	18c00104 	addi	r3,r3,4
     774:	103ffc26 	beq	r2,zero,768 <__alt_data_end+0xfff9ece8>
     778:	023fff04 	movi	r8,-4
     77c:	01c003c4 	movi	r7,15
     780:	18c5883a 	add	r2,r3,r3
     784:	1085883a 	add	r2,r2,r2
     788:	1085883a 	add	r2,r2,r2
     78c:	9895883a 	add	r10,r19,r2
     790:	52c00304 	addi	r11,r10,12
     794:	1819883a 	mov	r12,r3
     798:	5c000017 	ldw	r16,0(r11)
     79c:	59bffd04 	addi	r6,r11,-12
     7a0:	8180041e 	bne	r16,r6,7b4 <_malloc_r+0x264>
     7a4:	0000ce06 	br	ae0 <_malloc_r+0x590>
     7a8:	2000d70e 	bge	r4,zero,b08 <_malloc_r+0x5b8>
     7ac:	84000317 	ldw	r16,12(r16)
     7b0:	8180cb26 	beq	r16,r6,ae0 <_malloc_r+0x590>
     7b4:	80800117 	ldw	r2,4(r16)
     7b8:	1204703a 	and	r2,r2,r8
     7bc:	1449c83a 	sub	r4,r2,r17
     7c0:	393ff90e 	bge	r7,r4,7a8 <__alt_data_end+0xfff9ed28>
     7c4:	80800317 	ldw	r2,12(r16)
     7c8:	80c00217 	ldw	r3,8(r16)
     7cc:	89400054 	ori	r5,r17,1
     7d0:	81400115 	stw	r5,4(r16)
     7d4:	18800315 	stw	r2,12(r3)
     7d8:	10c00215 	stw	r3,8(r2)
     7dc:	8463883a 	add	r17,r16,r17
     7e0:	9c400515 	stw	r17,20(r19)
     7e4:	9c400415 	stw	r17,16(r19)
     7e8:	20800054 	ori	r2,r4,1
     7ec:	88800115 	stw	r2,4(r17)
     7f0:	8a400315 	stw	r9,12(r17)
     7f4:	8a400215 	stw	r9,8(r17)
     7f8:	8923883a 	add	r17,r17,r4
     7fc:	89000015 	stw	r4,0(r17)
     800:	9009883a 	mov	r4,r18
     804:	000d3e80 	call	d3e8 <__malloc_unlock>
     808:	80800204 	addi	r2,r16,8
     80c:	003f7d06 	br	604 <__alt_data_end+0xfff9eb84>
     810:	00800304 	movi	r2,12
     814:	90800015 	stw	r2,0(r18)
     818:	0005883a 	mov	r2,zero
     81c:	003f7906 	br	604 <__alt_data_end+0xfff9eb84>
     820:	01401f84 	movi	r5,126
     824:	01c00fc4 	movi	r7,63
     828:	003f8d06 	br	660 <__alt_data_end+0xfff9ebe0>
     82c:	81000317 	ldw	r4,12(r16)
     830:	003f6a06 	br	5dc <__alt_data_end+0xfff9eb5c>
     834:	81c5883a 	add	r2,r16,r7
     838:	10c00117 	ldw	r3,4(r2)
     83c:	9009883a 	mov	r4,r18
     840:	18c00054 	ori	r3,r3,1
     844:	10c00115 	stw	r3,4(r2)
     848:	000d3e80 	call	d3e8 <__malloc_unlock>
     84c:	80800204 	addi	r2,r16,8
     850:	003f6c06 	br	604 <__alt_data_end+0xfff9eb84>
     854:	9c000217 	ldw	r16,8(r19)
     858:	00bfff04 	movi	r2,-4
     85c:	85800117 	ldw	r22,4(r16)
     860:	b0ac703a 	and	r22,r22,r2
     864:	b4400336 	bltu	r22,r17,874 <_malloc_r+0x324>
     868:	b445c83a 	sub	r2,r22,r17
     86c:	00c003c4 	movi	r3,15
     870:	18805d16 	blt	r3,r2,9e8 <_malloc_r+0x498>
     874:	05c00074 	movhi	r23,1
     878:	00800074 	movhi	r2,1
     87c:	bdc4c104 	addi	r23,r23,4868
     880:	108b8e04 	addi	r2,r2,11832
     884:	15400017 	ldw	r21,0(r2)
     888:	b9000017 	ldw	r4,0(r23)
     88c:	00ffffc4 	movi	r3,-1
     890:	858d883a 	add	r6,r16,r22
     894:	8d6b883a 	add	r21,r17,r21
     898:	20c0e426 	beq	r4,r3,c2c <_malloc_r+0x6dc>
     89c:	ad4403c4 	addi	r21,r21,4111
     8a0:	00fc0004 	movi	r3,-4096
     8a4:	a8ea703a 	and	r21,r21,r3
     8a8:	9009883a 	mov	r4,r18
     8ac:	a80b883a 	mov	r5,r21
     8b0:	d9800015 	stw	r6,0(sp)
     8b4:	0000d600 	call	d60 <_sbrk_r>
     8b8:	00ffffc4 	movi	r3,-1
     8bc:	1029883a 	mov	r20,r2
     8c0:	d9800017 	ldw	r6,0(sp)
     8c4:	10c0a426 	beq	r2,r3,b58 <_malloc_r+0x608>
     8c8:	1180a236 	bltu	r2,r6,b54 <_malloc_r+0x604>
     8cc:	07000074 	movhi	fp,1
     8d0:	e70b9a04 	addi	fp,fp,11880
     8d4:	e0c00017 	ldw	r3,0(fp)
     8d8:	a8c7883a 	add	r3,r21,r3
     8dc:	e0c00015 	stw	r3,0(fp)
     8e0:	3500da26 	beq	r6,r20,c4c <_malloc_r+0x6fc>
     8e4:	b9000017 	ldw	r4,0(r23)
     8e8:	00bfffc4 	movi	r2,-1
     8ec:	2080e426 	beq	r4,r2,c80 <_malloc_r+0x730>
     8f0:	a185c83a 	sub	r2,r20,r6
     8f4:	1885883a 	add	r2,r3,r2
     8f8:	e0800015 	stw	r2,0(fp)
     8fc:	a0c001cc 	andi	r3,r20,7
     900:	1800b526 	beq	r3,zero,bd8 <_malloc_r+0x688>
     904:	a0e9c83a 	sub	r20,r20,r3
     908:	00840204 	movi	r2,4104
     90c:	a5000204 	addi	r20,r20,8
     910:	10c7c83a 	sub	r3,r2,r3
     914:	a545883a 	add	r2,r20,r21
     918:	1083ffcc 	andi	r2,r2,4095
     91c:	18abc83a 	sub	r21,r3,r2
     920:	9009883a 	mov	r4,r18
     924:	a80b883a 	mov	r5,r21
     928:	0000d600 	call	d60 <_sbrk_r>
     92c:	00ffffc4 	movi	r3,-1
     930:	10c0d026 	beq	r2,r3,c74 <_malloc_r+0x724>
     934:	1507c83a 	sub	r3,r2,r20
     938:	a8c7883a 	add	r3,r21,r3
     93c:	18c00054 	ori	r3,r3,1
     940:	e0800017 	ldw	r2,0(fp)
     944:	9d000215 	stw	r20,8(r19)
     948:	a0c00115 	stw	r3,4(r20)
     94c:	a887883a 	add	r3,r21,r2
     950:	e0c00015 	stw	r3,0(fp)
     954:	84c00e26 	beq	r16,r19,990 <_malloc_r+0x440>
     958:	018003c4 	movi	r6,15
     95c:	3580a02e 	bgeu	r6,r22,be0 <_malloc_r+0x690>
     960:	81400117 	ldw	r5,4(r16)
     964:	013ffe04 	movi	r4,-8
     968:	b0bffd04 	addi	r2,r22,-12
     96c:	1104703a 	and	r2,r2,r4
     970:	2900004c 	andi	r4,r5,1
     974:	1108b03a 	or	r4,r2,r4
     978:	81000115 	stw	r4,4(r16)
     97c:	01400144 	movi	r5,5
     980:	8089883a 	add	r4,r16,r2
     984:	21400115 	stw	r5,4(r4)
     988:	21400215 	stw	r5,8(r4)
     98c:	3080c036 	bltu	r6,r2,c90 <_malloc_r+0x740>
     990:	00800074 	movhi	r2,1
     994:	108b8d04 	addi	r2,r2,11828
     998:	11000017 	ldw	r4,0(r2)
     99c:	20c0012e 	bgeu	r4,r3,9a4 <_malloc_r+0x454>
     9a0:	10c00015 	stw	r3,0(r2)
     9a4:	00800074 	movhi	r2,1
     9a8:	108b8c04 	addi	r2,r2,11824
     9ac:	11000017 	ldw	r4,0(r2)
     9b0:	9c000217 	ldw	r16,8(r19)
     9b4:	20c0012e 	bgeu	r4,r3,9bc <_malloc_r+0x46c>
     9b8:	10c00015 	stw	r3,0(r2)
     9bc:	80c00117 	ldw	r3,4(r16)
     9c0:	00bfff04 	movi	r2,-4
     9c4:	1886703a 	and	r3,r3,r2
     9c8:	1c45c83a 	sub	r2,r3,r17
     9cc:	1c400236 	bltu	r3,r17,9d8 <_malloc_r+0x488>
     9d0:	00c003c4 	movi	r3,15
     9d4:	18800416 	blt	r3,r2,9e8 <_malloc_r+0x498>
     9d8:	9009883a 	mov	r4,r18
     9dc:	000d3e80 	call	d3e8 <__malloc_unlock>
     9e0:	0005883a 	mov	r2,zero
     9e4:	003f0706 	br	604 <__alt_data_end+0xfff9eb84>
     9e8:	88c00054 	ori	r3,r17,1
     9ec:	80c00115 	stw	r3,4(r16)
     9f0:	8463883a 	add	r17,r16,r17
     9f4:	10800054 	ori	r2,r2,1
     9f8:	9c400215 	stw	r17,8(r19)
     9fc:	88800115 	stw	r2,4(r17)
     a00:	9009883a 	mov	r4,r18
     a04:	000d3e80 	call	d3e8 <__malloc_unlock>
     a08:	80800204 	addi	r2,r16,8
     a0c:	003efd06 	br	604 <__alt_data_end+0xfff9eb84>
     a10:	00800504 	movi	r2,20
     a14:	10c0482e 	bgeu	r2,r3,b38 <_malloc_r+0x5e8>
     a18:	00801504 	movi	r2,84
     a1c:	10c06836 	bltu	r2,r3,bc0 <_malloc_r+0x670>
     a20:	8806d33a 	srli	r3,r17,12
     a24:	19c01b84 	addi	r7,r3,110
     a28:	39cb883a 	add	r5,r7,r7
     a2c:	003f0c06 	br	660 <__alt_data_end+0xfff9ebe0>
     a30:	3804d27a 	srli	r2,r7,9
     a34:	01000104 	movi	r4,4
     a38:	2080422e 	bgeu	r4,r2,b44 <_malloc_r+0x5f4>
     a3c:	01000504 	movi	r4,20
     a40:	20807c36 	bltu	r4,r2,c34 <_malloc_r+0x6e4>
     a44:	110016c4 	addi	r4,r2,91
     a48:	210b883a 	add	r5,r4,r4
     a4c:	294b883a 	add	r5,r5,r5
     a50:	294b883a 	add	r5,r5,r5
     a54:	994b883a 	add	r5,r19,r5
     a58:	28800217 	ldw	r2,8(r5)
     a5c:	02000074 	movhi	r8,1
     a60:	423e1604 	addi	r8,r8,-1960
     a64:	11406326 	beq	r2,r5,bf4 <_malloc_r+0x6a4>
     a68:	01bfff04 	movi	r6,-4
     a6c:	11000117 	ldw	r4,4(r2)
     a70:	2188703a 	and	r4,r4,r6
     a74:	3900022e 	bgeu	r7,r4,a80 <_malloc_r+0x530>
     a78:	10800217 	ldw	r2,8(r2)
     a7c:	28bffb1e 	bne	r5,r2,a6c <__alt_data_end+0xfff9efec>
     a80:	11800317 	ldw	r6,12(r2)
     a84:	99000117 	ldw	r4,4(r19)
     a88:	81800315 	stw	r6,12(r16)
     a8c:	80800215 	stw	r2,8(r16)
     a90:	34000215 	stw	r16,8(r6)
     a94:	14000315 	stw	r16,12(r2)
     a98:	003f2706 	br	738 <__alt_data_end+0xfff9ecb8>
     a9c:	88c00054 	ori	r3,r17,1
     aa0:	80c00115 	stw	r3,4(r16)
     aa4:	8463883a 	add	r17,r16,r17
     aa8:	34400515 	stw	r17,20(r6)
     aac:	34400415 	stw	r17,16(r6)
     ab0:	10c00054 	ori	r3,r2,1
     ab4:	8a400315 	stw	r9,12(r17)
     ab8:	8a400215 	stw	r9,8(r17)
     abc:	88c00115 	stw	r3,4(r17)
     ac0:	88a3883a 	add	r17,r17,r2
     ac4:	88800015 	stw	r2,0(r17)
     ac8:	9009883a 	mov	r4,r18
     acc:	000d3e80 	call	d3e8 <__malloc_unlock>
     ad0:	80800204 	addi	r2,r16,8
     ad4:	003ecb06 	br	604 <__alt_data_end+0xfff9eb84>
     ad8:	31000117 	ldw	r4,4(r6)
     adc:	003f1606 	br	738 <__alt_data_end+0xfff9ecb8>
     ae0:	63000044 	addi	r12,r12,1
     ae4:	608000cc 	andi	r2,r12,3
     ae8:	5ac00204 	addi	r11,r11,8
     aec:	103f2a1e 	bne	r2,zero,798 <__alt_data_end+0xfff9ed18>
     af0:	00002106 	br	b78 <_malloc_r+0x628>
     af4:	80800204 	addi	r2,r16,8
     af8:	84000517 	ldw	r16,20(r16)
     afc:	143eb31e 	bne	r2,r16,5cc <__alt_data_end+0xfff9eb4c>
     b00:	18c00084 	addi	r3,r3,2
     b04:	003eec06 	br	6b8 <__alt_data_end+0xfff9ec38>
     b08:	8085883a 	add	r2,r16,r2
     b0c:	10c00117 	ldw	r3,4(r2)
     b10:	81000317 	ldw	r4,12(r16)
     b14:	81400217 	ldw	r5,8(r16)
     b18:	18c00054 	ori	r3,r3,1
     b1c:	10c00115 	stw	r3,4(r2)
     b20:	29000315 	stw	r4,12(r5)
     b24:	21400215 	stw	r5,8(r4)
     b28:	9009883a 	mov	r4,r18
     b2c:	000d3e80 	call	d3e8 <__malloc_unlock>
     b30:	80800204 	addi	r2,r16,8
     b34:	003eb306 	br	604 <__alt_data_end+0xfff9eb84>
     b38:	19c016c4 	addi	r7,r3,91
     b3c:	39cb883a 	add	r5,r7,r7
     b40:	003ec706 	br	660 <__alt_data_end+0xfff9ebe0>
     b44:	3804d1ba 	srli	r2,r7,6
     b48:	11000e04 	addi	r4,r2,56
     b4c:	210b883a 	add	r5,r4,r4
     b50:	003fbe06 	br	a4c <__alt_data_end+0xfff9efcc>
     b54:	84ff5d26 	beq	r16,r19,8cc <__alt_data_end+0xfff9ee4c>
     b58:	9c000217 	ldw	r16,8(r19)
     b5c:	00bfff04 	movi	r2,-4
     b60:	80c00117 	ldw	r3,4(r16)
     b64:	1886703a 	and	r3,r3,r2
     b68:	003f9706 	br	9c8 <__alt_data_end+0xfff9ef48>
     b6c:	52800017 	ldw	r10,0(r10)
     b70:	18ffffc4 	addi	r3,r3,-1
     b74:	50805c1e 	bne	r10,r2,ce8 <_malloc_r+0x798>
     b78:	190000cc 	andi	r4,r3,3
     b7c:	50bffe04 	addi	r2,r10,-8
     b80:	203ffa1e 	bne	r4,zero,b6c <__alt_data_end+0xfff9f0ec>
     b84:	98800117 	ldw	r2,4(r19)
     b88:	0146303a 	nor	r3,zero,r5
     b8c:	1884703a 	and	r2,r3,r2
     b90:	98800115 	stw	r2,4(r19)
     b94:	294b883a 	add	r5,r5,r5
     b98:	117f2e36 	bltu	r2,r5,854 <__alt_data_end+0xfff9edd4>
     b9c:	283f2d26 	beq	r5,zero,854 <__alt_data_end+0xfff9edd4>
     ba0:	1146703a 	and	r3,r2,r5
     ba4:	1800521e 	bne	r3,zero,cf0 <_malloc_r+0x7a0>
     ba8:	6007883a 	mov	r3,r12
     bac:	294b883a 	add	r5,r5,r5
     bb0:	1148703a 	and	r4,r2,r5
     bb4:	18c00104 	addi	r3,r3,4
     bb8:	203ffc26 	beq	r4,zero,bac <__alt_data_end+0xfff9f12c>
     bbc:	003ef006 	br	780 <__alt_data_end+0xfff9ed00>
     bc0:	00805504 	movi	r2,340
     bc4:	10c01336 	bltu	r2,r3,c14 <_malloc_r+0x6c4>
     bc8:	8806d3fa 	srli	r3,r17,15
     bcc:	19c01dc4 	addi	r7,r3,119
     bd0:	39cb883a 	add	r5,r7,r7
     bd4:	003ea206 	br	660 <__alt_data_end+0xfff9ebe0>
     bd8:	00c40004 	movi	r3,4096
     bdc:	003f4d06 	br	914 <__alt_data_end+0xfff9ee94>
     be0:	00800044 	movi	r2,1
     be4:	a0800115 	stw	r2,4(r20)
     be8:	a021883a 	mov	r16,r20
     bec:	0007883a 	mov	r3,zero
     bf0:	003f7506 	br	9c8 <__alt_data_end+0xfff9ef48>
     bf4:	200bd0ba 	srai	r5,r4,2
     bf8:	01800044 	movi	r6,1
     bfc:	41000117 	ldw	r4,4(r8)
     c00:	314a983a 	sll	r5,r6,r5
     c04:	100d883a 	mov	r6,r2
     c08:	2908b03a 	or	r4,r5,r4
     c0c:	41000115 	stw	r4,4(r8)
     c10:	003f9d06 	br	a88 <__alt_data_end+0xfff9f008>
     c14:	00815504 	movi	r2,1364
     c18:	10c01336 	bltu	r2,r3,c68 <_malloc_r+0x718>
     c1c:	8806d4ba 	srli	r3,r17,18
     c20:	19c01f04 	addi	r7,r3,124
     c24:	39cb883a 	add	r5,r7,r7
     c28:	003e8d06 	br	660 <__alt_data_end+0xfff9ebe0>
     c2c:	ad400404 	addi	r21,r21,16
     c30:	003f1d06 	br	8a8 <__alt_data_end+0xfff9ee28>
     c34:	01001504 	movi	r4,84
     c38:	20801c36 	bltu	r4,r2,cac <_malloc_r+0x75c>
     c3c:	3804d33a 	srli	r2,r7,12
     c40:	11001b84 	addi	r4,r2,110
     c44:	210b883a 	add	r5,r4,r4
     c48:	003f8006 	br	a4c <__alt_data_end+0xfff9efcc>
     c4c:	3083ffcc 	andi	r2,r6,4095
     c50:	103f241e 	bne	r2,zero,8e4 <__alt_data_end+0xfff9ee64>
     c54:	99000217 	ldw	r4,8(r19)
     c58:	ad85883a 	add	r2,r21,r22
     c5c:	10800054 	ori	r2,r2,1
     c60:	20800115 	stw	r2,4(r4)
     c64:	003f4a06 	br	990 <__alt_data_end+0xfff9ef10>
     c68:	01403f04 	movi	r5,252
     c6c:	01c01f84 	movi	r7,126
     c70:	003e7b06 	br	660 <__alt_data_end+0xfff9ebe0>
     c74:	00c00044 	movi	r3,1
     c78:	002b883a 	mov	r21,zero
     c7c:	003f3006 	br	940 <__alt_data_end+0xfff9eec0>
     c80:	00800074 	movhi	r2,1
     c84:	1084c104 	addi	r2,r2,4868
     c88:	15000015 	stw	r20,0(r2)
     c8c:	003f1b06 	br	8fc <__alt_data_end+0xfff9ee7c>
     c90:	9009883a 	mov	r4,r18
     c94:	81400204 	addi	r5,r16,8
     c98:	00050840 	call	5084 <_free_r>
     c9c:	00800074 	movhi	r2,1
     ca0:	108b9a04 	addi	r2,r2,11880
     ca4:	10c00017 	ldw	r3,0(r2)
     ca8:	003f3906 	br	990 <__alt_data_end+0xfff9ef10>
     cac:	01005504 	movi	r4,340
     cb0:	20800436 	bltu	r4,r2,cc4 <_malloc_r+0x774>
     cb4:	3804d3fa 	srli	r2,r7,15
     cb8:	11001dc4 	addi	r4,r2,119
     cbc:	210b883a 	add	r5,r4,r4
     cc0:	003f6206 	br	a4c <__alt_data_end+0xfff9efcc>
     cc4:	01015504 	movi	r4,1364
     cc8:	20800436 	bltu	r4,r2,cdc <_malloc_r+0x78c>
     ccc:	3804d4ba 	srli	r2,r7,18
     cd0:	11001f04 	addi	r4,r2,124
     cd4:	210b883a 	add	r5,r4,r4
     cd8:	003f5c06 	br	a4c <__alt_data_end+0xfff9efcc>
     cdc:	01403f04 	movi	r5,252
     ce0:	01001f84 	movi	r4,126
     ce4:	003f5906 	br	a4c <__alt_data_end+0xfff9efcc>
     ce8:	98800117 	ldw	r2,4(r19)
     cec:	003fa906 	br	b94 <__alt_data_end+0xfff9f114>
     cf0:	6007883a 	mov	r3,r12
     cf4:	003ea206 	br	780 <__alt_data_end+0xfff9ed00>

00000cf8 <_printf_r>:
     cf8:	defffd04 	addi	sp,sp,-12
     cfc:	dfc00015 	stw	ra,0(sp)
     d00:	d9800115 	stw	r6,4(sp)
     d04:	d9c00215 	stw	r7,8(sp)
     d08:	280d883a 	mov	r6,r5
     d0c:	21400217 	ldw	r5,8(r4)
     d10:	d9c00104 	addi	r7,sp,4
     d14:	0000db40 	call	db4 <___vfprintf_internal_r>
     d18:	dfc00017 	ldw	ra,0(sp)
     d1c:	dec00304 	addi	sp,sp,12
     d20:	f800283a 	ret

00000d24 <printf>:
     d24:	defffc04 	addi	sp,sp,-16
     d28:	dfc00015 	stw	ra,0(sp)
     d2c:	d9400115 	stw	r5,4(sp)
     d30:	d9800215 	stw	r6,8(sp)
     d34:	d9c00315 	stw	r7,12(sp)
     d38:	00800074 	movhi	r2,1
     d3c:	1084c404 	addi	r2,r2,4880
     d40:	10800017 	ldw	r2,0(r2)
     d44:	200b883a 	mov	r5,r4
     d48:	d9800104 	addi	r6,sp,4
     d4c:	11000217 	ldw	r4,8(r2)
     d50:	0002eb00 	call	2eb0 <__vfprintf_internal>
     d54:	dfc00017 	ldw	ra,0(sp)
     d58:	dec00404 	addi	sp,sp,16
     d5c:	f800283a 	ret

00000d60 <_sbrk_r>:
     d60:	defffd04 	addi	sp,sp,-12
     d64:	dc000015 	stw	r16,0(sp)
     d68:	04000074 	movhi	r16,1
     d6c:	dc400115 	stw	r17,4(sp)
     d70:	840b8f04 	addi	r16,r16,11836
     d74:	2023883a 	mov	r17,r4
     d78:	2809883a 	mov	r4,r5
     d7c:	dfc00215 	stw	ra,8(sp)
     d80:	80000015 	stw	zero,0(r16)
     d84:	000d5dc0 	call	d5dc <sbrk>
     d88:	00ffffc4 	movi	r3,-1
     d8c:	10c00526 	beq	r2,r3,da4 <_sbrk_r+0x44>
     d90:	dfc00217 	ldw	ra,8(sp)
     d94:	dc400117 	ldw	r17,4(sp)
     d98:	dc000017 	ldw	r16,0(sp)
     d9c:	dec00304 	addi	sp,sp,12
     da0:	f800283a 	ret
     da4:	80c00017 	ldw	r3,0(r16)
     da8:	183ff926 	beq	r3,zero,d90 <__alt_data_end+0xfff9f310>
     dac:	88c00015 	stw	r3,0(r17)
     db0:	003ff706 	br	d90 <__alt_data_end+0xfff9f310>

00000db4 <___vfprintf_internal_r>:
     db4:	defeb604 	addi	sp,sp,-1320
     db8:	dfc14915 	stw	ra,1316(sp)
     dbc:	ddc14715 	stw	r23,1308(sp)
     dc0:	dd814615 	stw	r22,1304(sp)
     dc4:	202f883a 	mov	r23,r4
     dc8:	282d883a 	mov	r22,r5
     dcc:	d9812a15 	stw	r6,1192(sp)
     dd0:	d9c12d15 	stw	r7,1204(sp)
     dd4:	df014815 	stw	fp,1312(sp)
     dd8:	dd414515 	stw	r21,1300(sp)
     ddc:	dd014415 	stw	r20,1296(sp)
     de0:	dcc14315 	stw	r19,1292(sp)
     de4:	dc814215 	stw	r18,1288(sp)
     de8:	dc414115 	stw	r17,1284(sp)
     dec:	dc014015 	stw	r16,1280(sp)
     df0:	00055900 	call	5590 <_localeconv_r>
     df4:	10800017 	ldw	r2,0(r2)
     df8:	1009883a 	mov	r4,r2
     dfc:	d8813515 	stw	r2,1236(sp)
     e00:	0006d5c0 	call	6d5c <strlen>
     e04:	d8813815 	stw	r2,1248(sp)
     e08:	b8000226 	beq	r23,zero,e14 <___vfprintf_internal_r+0x60>
     e0c:	b8800e17 	ldw	r2,56(r23)
     e10:	10010526 	beq	r2,zero,1228 <___vfprintf_internal_r+0x474>
     e14:	b0c0030b 	ldhu	r3,12(r22)
     e18:	1908000c 	andi	r4,r3,8192
     e1c:	1805883a 	mov	r2,r3
     e20:	2000071e 	bne	r4,zero,e40 <___vfprintf_internal_r+0x8c>
     e24:	b1001917 	ldw	r4,100(r22)
     e28:	18880014 	ori	r2,r3,8192
     e2c:	00f7ffc4 	movi	r3,-8193
     e30:	20c8703a 	and	r4,r4,r3
     e34:	b080030d 	sth	r2,12(r22)
     e38:	1007883a 	mov	r3,r2
     e3c:	b1001915 	stw	r4,100(r22)
     e40:	1100020c 	andi	r4,r2,8
     e44:	2000a826 	beq	r4,zero,10e8 <___vfprintf_internal_r+0x334>
     e48:	b1000417 	ldw	r4,16(r22)
     e4c:	2000a626 	beq	r4,zero,10e8 <___vfprintf_internal_r+0x334>
     e50:	1080068c 	andi	r2,r2,26
     e54:	01000284 	movi	r4,10
     e58:	1100ac26 	beq	r2,r4,110c <___vfprintf_internal_r+0x358>
     e5c:	d8c10e04 	addi	r3,sp,1080
     e60:	d9010dc4 	addi	r4,sp,1079
     e64:	d9400404 	addi	r5,sp,16
     e68:	05000074 	movhi	r20,1
     e6c:	1905c83a 	sub	r2,r3,r4
     e70:	a53d6784 	addi	r20,r20,-2658
     e74:	d8c12815 	stw	r3,1184(sp)
     e78:	d9012915 	stw	r4,1188(sp)
     e7c:	d9411e15 	stw	r5,1144(sp)
     e80:	d8012015 	stw	zero,1152(sp)
     e84:	d8011f15 	stw	zero,1148(sp)
     e88:	d8013315 	stw	zero,1228(sp)
     e8c:	d8013715 	stw	zero,1244(sp)
     e90:	d8013915 	stw	zero,1252(sp)
     e94:	d8013b15 	stw	zero,1260(sp)
     e98:	d8013a15 	stw	zero,1256(sp)
     e9c:	d8012f15 	stw	zero,1212(sp)
     ea0:	2811883a 	mov	r8,r5
     ea4:	d8813c15 	stw	r2,1264(sp)
     ea8:	d8c12a17 	ldw	r3,1192(sp)
     eac:	18800007 	ldb	r2,0(r3)
     eb0:	10021326 	beq	r2,zero,1700 <___vfprintf_internal_r+0x94c>
     eb4:	00c00944 	movi	r3,37
     eb8:	dc012a17 	ldw	r16,1192(sp)
     ebc:	10c0021e 	bne	r2,r3,ec8 <___vfprintf_internal_r+0x114>
     ec0:	00001606 	br	f1c <___vfprintf_internal_r+0x168>
     ec4:	10c08526 	beq	r2,r3,10dc <___vfprintf_internal_r+0x328>
     ec8:	84000044 	addi	r16,r16,1
     ecc:	80800007 	ldb	r2,0(r16)
     ed0:	103ffc1e 	bne	r2,zero,ec4 <__alt_data_end+0xfff9f444>
     ed4:	d9012a17 	ldw	r4,1192(sp)
     ed8:	8123c83a 	sub	r17,r16,r4
     edc:	88000f26 	beq	r17,zero,f1c <___vfprintf_internal_r+0x168>
     ee0:	d8812a17 	ldw	r2,1192(sp)
     ee4:	d8c12017 	ldw	r3,1152(sp)
     ee8:	44400115 	stw	r17,4(r8)
     eec:	40800015 	stw	r2,0(r8)
     ef0:	d8811f17 	ldw	r2,1148(sp)
     ef4:	1c47883a 	add	r3,r3,r17
     ef8:	d8c12015 	stw	r3,1152(sp)
     efc:	10800044 	addi	r2,r2,1
     f00:	d8811f15 	stw	r2,1148(sp)
     f04:	00c001c4 	movi	r3,7
     f08:	1880b516 	blt	r3,r2,11e0 <___vfprintf_internal_r+0x42c>
     f0c:	42000204 	addi	r8,r8,8
     f10:	d8c12f17 	ldw	r3,1212(sp)
     f14:	1c47883a 	add	r3,r3,r17
     f18:	d8c12f15 	stw	r3,1212(sp)
     f1c:	80800007 	ldb	r2,0(r16)
     f20:	1000b626 	beq	r2,zero,11fc <___vfprintf_internal_r+0x448>
     f24:	80800044 	addi	r2,r16,1
     f28:	84000047 	ldb	r16,1(r16)
     f2c:	0027883a 	mov	r19,zero
     f30:	0039883a 	mov	fp,zero
     f34:	dcc12b05 	stb	r19,1196(sp)
     f38:	d8012785 	stb	zero,1182(sp)
     f3c:	027fffc4 	movi	r9,-1
     f40:	d8012e15 	stw	zero,1208(sp)
     f44:	04401604 	movi	r17,88
     f48:	04800244 	movi	r18,9
     f4c:	da012a15 	stw	r8,1192(sp)
     f50:	e027883a 	mov	r19,fp
     f54:	17000044 	addi	fp,r2,1
     f58:	80bff804 	addi	r2,r16,-32
     f5c:	88831236 	bltu	r17,r2,1ba8 <___vfprintf_internal_r+0xdf4>
     f60:	100490ba 	slli	r2,r2,2
     f64:	01000034 	movhi	r4,0
     f68:	2103de04 	addi	r4,r4,3960
     f6c:	1105883a 	add	r2,r2,r4
     f70:	10800017 	ldw	r2,0(r2)
     f74:	1000683a 	jmp	r2
     f78:	00001ac4 	movi	zero,107
     f7c:	00001ba8 	cmpgeui	zero,zero,110
     f80:	00001ba8 	cmpgeui	zero,zero,110
     f84:	00001ae0 	cmpeqi	zero,zero,107
     f88:	00001ba8 	cmpgeui	zero,zero,110
     f8c:	00001ba8 	cmpgeui	zero,zero,110
     f90:	00001ba8 	cmpgeui	zero,zero,110
     f94:	00001ba8 	cmpgeui	zero,zero,110
     f98:	00001ba8 	cmpgeui	zero,zero,110
     f9c:	00001ba8 	cmpgeui	zero,zero,110
     fa0:	00001af0 	cmpltui	zero,zero,107
     fa4:	00001b18 	cmpnei	zero,zero,108
     fa8:	00001ba8 	cmpgeui	zero,zero,110
     fac:	00001234 	movhi	zero,72
     fb0:	00001244 	movi	zero,73
     fb4:	00001ba8 	cmpgeui	zero,zero,110
     fb8:	00001294 	movui	zero,74
     fbc:	000012a4 	muli	zero,zero,74
     fc0:	000012a4 	muli	zero,zero,74
     fc4:	000012a4 	muli	zero,zero,74
     fc8:	000012a4 	muli	zero,zero,74
     fcc:	000012a4 	muli	zero,zero,74
     fd0:	000012a4 	muli	zero,zero,74
     fd4:	000012a4 	muli	zero,zero,74
     fd8:	000012a4 	muli	zero,zero,74
     fdc:	000012a4 	muli	zero,zero,74
     fe0:	00001ba8 	cmpgeui	zero,zero,110
     fe4:	00001ba8 	cmpgeui	zero,zero,110
     fe8:	00001ba8 	cmpgeui	zero,zero,110
     fec:	00001ba8 	cmpgeui	zero,zero,110
     ff0:	00001ba8 	cmpgeui	zero,zero,110
     ff4:	00001ba8 	cmpgeui	zero,zero,110
     ff8:	00001ba8 	cmpgeui	zero,zero,110
     ffc:	00001ba8 	cmpgeui	zero,zero,110
    1000:	00001ba8 	cmpgeui	zero,zero,110
    1004:	00001ba8 	cmpgeui	zero,zero,110
    1008:	000012e8 	cmpgeui	zero,zero,75
    100c:	00001708 	cmpgei	zero,zero,92
    1010:	00001ba8 	cmpgeui	zero,zero,110
    1014:	00001708 	cmpgei	zero,zero,92
    1018:	00001ba8 	cmpgeui	zero,zero,110
    101c:	00001ba8 	cmpgeui	zero,zero,110
    1020:	00001ba8 	cmpgeui	zero,zero,110
    1024:	00001ba8 	cmpgeui	zero,zero,110
    1028:	000017b0 	cmpltui	zero,zero,94
    102c:	00001ba8 	cmpgeui	zero,zero,110
    1030:	00001ba8 	cmpgeui	zero,zero,110
    1034:	000017c0 	call	17c <alt_irq_handler+0x80>
    1038:	00001ba8 	cmpgeui	zero,zero,110
    103c:	00001ba8 	cmpgeui	zero,zero,110
    1040:	00001ba8 	cmpgeui	zero,zero,110
    1044:	00001ba8 	cmpgeui	zero,zero,110
    1048:	00001ba8 	cmpgeui	zero,zero,110
    104c:	00001804 	movi	zero,96
    1050:	00001ba8 	cmpgeui	zero,zero,110
    1054:	00001ba8 	cmpgeui	zero,zero,110
    1058:	0000183c 	xorhi	zero,zero,96
    105c:	00001ba8 	cmpgeui	zero,zero,110
    1060:	00001ba8 	cmpgeui	zero,zero,110
    1064:	00001ba8 	cmpgeui	zero,zero,110
    1068:	00001ba8 	cmpgeui	zero,zero,110
    106c:	00001ba8 	cmpgeui	zero,zero,110
    1070:	00001ba8 	cmpgeui	zero,zero,110
    1074:	00001ba8 	cmpgeui	zero,zero,110
    1078:	00001ba8 	cmpgeui	zero,zero,110
    107c:	00001ba8 	cmpgeui	zero,zero,110
    1080:	00001ba8 	cmpgeui	zero,zero,110
    1084:	00001a78 	rdprs	zero,zero,105
    1088:	00001a24 	muli	zero,zero,104
    108c:	00001708 	cmpgei	zero,zero,92
    1090:	00001708 	cmpgei	zero,zero,92
    1094:	00001708 	cmpgei	zero,zero,92
    1098:	00001a68 	cmpgeui	zero,zero,105
    109c:	00001a24 	muli	zero,zero,104
    10a0:	00001ba8 	cmpgeui	zero,zero,110
    10a4:	00001ba8 	cmpgeui	zero,zero,110
    10a8:	00001940 	call	194 <alt_irq_handler+0x98>
    10ac:	00001ba8 	cmpgeui	zero,zero,110
    10b0:	00001958 	cmpnei	zero,zero,101
    10b4:	00001998 	cmpnei	zero,zero,102
    10b8:	000019d8 	cmpnei	zero,zero,103
    10bc:	000018a4 	muli	zero,zero,98
    10c0:	00001ba8 	cmpgeui	zero,zero,110
    10c4:	00001b2c 	andhi	zero,zero,108
    10c8:	00001ba8 	cmpgeui	zero,zero,110
    10cc:	000018b4 	movhi	zero,98
    10d0:	00001ba8 	cmpgeui	zero,zero,110
    10d4:	00001ba8 	cmpgeui	zero,zero,110
    10d8:	000018f4 	movhi	zero,99
    10dc:	d9412a17 	ldw	r5,1192(sp)
    10e0:	8163c83a 	sub	r17,r16,r5
    10e4:	003f7d06 	br	edc <__alt_data_end+0xfff9f45c>
    10e8:	b809883a 	mov	r4,r23
    10ec:	b00b883a 	mov	r5,r22
    10f0:	0002ed40 	call	2ed4 <__swsetup_r>
    10f4:	10002d1e 	bne	r2,zero,11ac <___vfprintf_internal_r+0x3f8>
    10f8:	b0c0030b 	ldhu	r3,12(r22)
    10fc:	01000284 	movi	r4,10
    1100:	1805883a 	mov	r2,r3
    1104:	1080068c 	andi	r2,r2,26
    1108:	113f541e 	bne	r2,r4,e5c <__alt_data_end+0xfff9f3dc>
    110c:	b080038b 	ldhu	r2,14(r22)
    1110:	113fffcc 	andi	r4,r2,65535
    1114:	2120001c 	xori	r4,r4,32768
    1118:	21200004 	addi	r4,r4,-32768
    111c:	203f4f16 	blt	r4,zero,e5c <__alt_data_end+0xfff9f3dc>
    1120:	b2c01917 	ldw	r11,100(r22)
    1124:	b2800717 	ldw	r10,28(r22)
    1128:	b2400917 	ldw	r9,36(r22)
    112c:	d9812a17 	ldw	r6,1192(sp)
    1130:	d9c12d17 	ldw	r7,1204(sp)
    1134:	02010004 	movi	r8,1024
    1138:	18ffff4c 	andi	r3,r3,65533
    113c:	d881078d 	sth	r2,1054(sp)
    1140:	b809883a 	mov	r4,r23
    1144:	d8800404 	addi	r2,sp,16
    1148:	d9410404 	addi	r5,sp,1040
    114c:	d8c1070d 	sth	r3,1052(sp)
    1150:	dac11d15 	stw	r11,1140(sp)
    1154:	da810b15 	stw	r10,1068(sp)
    1158:	da410d15 	stw	r9,1076(sp)
    115c:	d8810415 	stw	r2,1040(sp)
    1160:	d8810815 	stw	r2,1056(sp)
    1164:	da010615 	stw	r8,1048(sp)
    1168:	da010915 	stw	r8,1060(sp)
    116c:	d8010a15 	stw	zero,1064(sp)
    1170:	0000db40 	call	db4 <___vfprintf_internal_r>
    1174:	1021883a 	mov	r16,r2
    1178:	10000416 	blt	r2,zero,118c <___vfprintf_internal_r+0x3d8>
    117c:	b809883a 	mov	r4,r23
    1180:	d9410404 	addi	r5,sp,1040
    1184:	00049540 	call	4954 <_fflush_r>
    1188:	1007301e 	bne	r2,zero,2e4c <___vfprintf_internal_r+0x2098>
    118c:	d881070b 	ldhu	r2,1052(sp)
    1190:	1080100c 	andi	r2,r2,64
    1194:	10000326 	beq	r2,zero,11a4 <___vfprintf_internal_r+0x3f0>
    1198:	b080030b 	ldhu	r2,12(r22)
    119c:	10801014 	ori	r2,r2,64
    11a0:	b080030d 	sth	r2,12(r22)
    11a4:	8005883a 	mov	r2,r16
    11a8:	00000106 	br	11b0 <___vfprintf_internal_r+0x3fc>
    11ac:	00bfffc4 	movi	r2,-1
    11b0:	dfc14917 	ldw	ra,1316(sp)
    11b4:	df014817 	ldw	fp,1312(sp)
    11b8:	ddc14717 	ldw	r23,1308(sp)
    11bc:	dd814617 	ldw	r22,1304(sp)
    11c0:	dd414517 	ldw	r21,1300(sp)
    11c4:	dd014417 	ldw	r20,1296(sp)
    11c8:	dcc14317 	ldw	r19,1292(sp)
    11cc:	dc814217 	ldw	r18,1288(sp)
    11d0:	dc414117 	ldw	r17,1284(sp)
    11d4:	dc014017 	ldw	r16,1280(sp)
    11d8:	dec14a04 	addi	sp,sp,1320
    11dc:	f800283a 	ret
    11e0:	b809883a 	mov	r4,r23
    11e4:	b00b883a 	mov	r5,r22
    11e8:	d9811e04 	addi	r6,sp,1144
    11ec:	0006ef00 	call	6ef0 <__sprint_r>
    11f0:	1000081e 	bne	r2,zero,1214 <___vfprintf_internal_r+0x460>
    11f4:	da000404 	addi	r8,sp,16
    11f8:	003f4506 	br	f10 <__alt_data_end+0xfff9f490>
    11fc:	d8812017 	ldw	r2,1152(sp)
    1200:	10000426 	beq	r2,zero,1214 <___vfprintf_internal_r+0x460>
    1204:	b809883a 	mov	r4,r23
    1208:	b00b883a 	mov	r5,r22
    120c:	d9811e04 	addi	r6,sp,1144
    1210:	0006ef00 	call	6ef0 <__sprint_r>
    1214:	b080030b 	ldhu	r2,12(r22)
    1218:	1080100c 	andi	r2,r2,64
    121c:	103fe31e 	bne	r2,zero,11ac <__alt_data_end+0xfff9f72c>
    1220:	d8812f17 	ldw	r2,1212(sp)
    1224:	003fe206 	br	11b0 <__alt_data_end+0xfff9f730>
    1228:	b809883a 	mov	r4,r23
    122c:	0004f100 	call	4f10 <__sinit>
    1230:	003ef806 	br	e14 <__alt_data_end+0xfff9f394>
    1234:	e005883a 	mov	r2,fp
    1238:	9cc00114 	ori	r19,r19,4
    123c:	e4000007 	ldb	r16,0(fp)
    1240:	003f4406 	br	f54 <__alt_data_end+0xfff9f4d4>
    1244:	e4000007 	ldb	r16,0(fp)
    1248:	01000a84 	movi	r4,42
    124c:	e0800044 	addi	r2,fp,1
    1250:	8106f626 	beq	r16,r4,2e2c <___vfprintf_internal_r+0x2078>
    1254:	857ff404 	addi	r21,r16,-48
    1258:	1039883a 	mov	fp,r2
    125c:	0013883a 	mov	r9,zero
    1260:	957f3d36 	bltu	r18,r21,f58 <__alt_data_end+0xfff9f4d8>
    1264:	0009883a 	mov	r4,zero
    1268:	01400284 	movi	r5,10
    126c:	000a5c40 	call	a5c4 <__mulsi3>
    1270:	e4000007 	ldb	r16,0(fp)
    1274:	a889883a 	add	r4,r21,r2
    1278:	e7000044 	addi	fp,fp,1
    127c:	857ff404 	addi	r21,r16,-48
    1280:	957ff92e 	bgeu	r18,r21,1268 <__alt_data_end+0xfff9f7e8>
    1284:	2013883a 	mov	r9,r4
    1288:	203f330e 	bge	r4,zero,f58 <__alt_data_end+0xfff9f4d8>
    128c:	027fffc4 	movi	r9,-1
    1290:	003f3106 	br	f58 <__alt_data_end+0xfff9f4d8>
    1294:	9cc02014 	ori	r19,r19,128
    1298:	e005883a 	mov	r2,fp
    129c:	e4000007 	ldb	r16,0(fp)
    12a0:	003f2c06 	br	f54 <__alt_data_end+0xfff9f4d4>
    12a4:	857ff404 	addi	r21,r16,-48
    12a8:	d8012e15 	stw	zero,1208(sp)
    12ac:	e021883a 	mov	r16,fp
    12b0:	0009883a 	mov	r4,zero
    12b4:	da412c15 	stw	r9,1200(sp)
    12b8:	01400284 	movi	r5,10
    12bc:	000a5c40 	call	a5c4 <__mulsi3>
    12c0:	81400007 	ldb	r5,0(r16)
    12c4:	1549883a 	add	r4,r2,r21
    12c8:	e7000044 	addi	fp,fp,1
    12cc:	2d7ff404 	addi	r21,r5,-48
    12d0:	e021883a 	mov	r16,fp
    12d4:	957ff82e 	bgeu	r18,r21,12b8 <__alt_data_end+0xfff9f838>
    12d8:	2821883a 	mov	r16,r5
    12dc:	d9012e15 	stw	r4,1208(sp)
    12e0:	da412c17 	ldw	r9,1200(sp)
    12e4:	003f1c06 	br	f58 <__alt_data_end+0xfff9f4d8>
    12e8:	da012a17 	ldw	r8,1192(sp)
    12ec:	df012a15 	stw	fp,1192(sp)
    12f0:	9839883a 	mov	fp,r19
    12f4:	dcc12b03 	ldbu	r19,1196(sp)
    12f8:	e7000414 	ori	fp,fp,16
    12fc:	e080080c 	andi	r2,fp,32
    1300:	dcc12785 	stb	r19,1182(sp)
    1304:	d8c12d17 	ldw	r3,1204(sp)
    1308:	1001ce26 	beq	r2,zero,1a44 <___vfprintf_internal_r+0xc90>
    130c:	d9012d17 	ldw	r4,1204(sp)
    1310:	18800117 	ldw	r2,4(r3)
    1314:	1c800017 	ldw	r18,0(r3)
    1318:	21000204 	addi	r4,r4,8
    131c:	d9012d15 	stw	r4,1204(sp)
    1320:	102b883a 	mov	r21,r2
    1324:	10044916 	blt	r2,zero,244c <___vfprintf_internal_r+0x1698>
    1328:	dcc12783 	ldbu	r19,1182(sp)
    132c:	da413215 	stw	r9,1224(sp)
    1330:	00800044 	movi	r2,1
    1334:	9546b03a 	or	r3,r18,r21
    1338:	48000216 	blt	r9,zero,1344 <___vfprintf_internal_r+0x590>
    133c:	013fdfc4 	movi	r4,-129
    1340:	e138703a 	and	fp,fp,r4
    1344:	1802251e 	bne	r3,zero,1bdc <___vfprintf_internal_r+0xe28>
    1348:	48031726 	beq	r9,zero,1fa8 <___vfprintf_internal_r+0x11f4>
    134c:	10803fcc 	andi	r2,r2,255
    1350:	00c00044 	movi	r3,1
    1354:	10c24526 	beq	r2,r3,1c6c <___vfprintf_internal_r+0xeb8>
    1358:	00c00084 	movi	r3,2
    135c:	10c33426 	beq	r2,r3,2030 <___vfprintf_internal_r+0x127c>
    1360:	d8c10e04 	addi	r3,sp,1080
    1364:	9008d0fa 	srli	r4,r18,3
    1368:	a80a977a 	slli	r5,r21,29
    136c:	a82ad0fa 	srli	r21,r21,3
    1370:	948001cc 	andi	r18,r18,7
    1374:	90800c04 	addi	r2,r18,48
    1378:	18ffffc4 	addi	r3,r3,-1
    137c:	2924b03a 	or	r18,r5,r4
    1380:	18800005 	stb	r2,0(r3)
    1384:	9548b03a 	or	r4,r18,r21
    1388:	203ff61e 	bne	r4,zero,1364 <__alt_data_end+0xfff9f8e4>
    138c:	e100004c 	andi	r4,fp,1
    1390:	d8c13115 	stw	r3,1220(sp)
    1394:	20039a1e 	bne	r4,zero,2200 <___vfprintf_internal_r+0x144c>
    1398:	d8812817 	ldw	r2,1184(sp)
    139c:	10e3c83a 	sub	r17,r2,r3
    13a0:	8805883a 	mov	r2,r17
    13a4:	8a40010e 	bge	r17,r9,13ac <___vfprintf_internal_r+0x5f8>
    13a8:	4805883a 	mov	r2,r9
    13ac:	d8812b15 	stw	r2,1196(sp)
    13b0:	d8013415 	stw	zero,1232(sp)
    13b4:	98803fcc 	andi	r2,r19,255
    13b8:	1080201c 	xori	r2,r2,128
    13bc:	10bfe004 	addi	r2,r2,-128
    13c0:	10000326 	beq	r2,zero,13d0 <___vfprintf_internal_r+0x61c>
    13c4:	d8c12b17 	ldw	r3,1196(sp)
    13c8:	18c00044 	addi	r3,r3,1
    13cc:	d8c12b15 	stw	r3,1196(sp)
    13d0:	e0c0008c 	andi	r3,fp,2
    13d4:	d8c12c15 	stw	r3,1200(sp)
    13d8:	18000326 	beq	r3,zero,13e8 <___vfprintf_internal_r+0x634>
    13dc:	d8c12b17 	ldw	r3,1196(sp)
    13e0:	18c00084 	addi	r3,r3,2
    13e4:	d8c12b15 	stw	r3,1196(sp)
    13e8:	e0c0210c 	andi	r3,fp,132
    13ec:	d8c13015 	stw	r3,1216(sp)
    13f0:	1801f81e 	bne	r3,zero,1bd4 <___vfprintf_internal_r+0xe20>
    13f4:	d9012e17 	ldw	r4,1208(sp)
    13f8:	d8c12b17 	ldw	r3,1196(sp)
    13fc:	20ebc83a 	sub	r21,r4,r3
    1400:	0541f40e 	bge	zero,r21,1bd4 <___vfprintf_internal_r+0xe20>
    1404:	02400404 	movi	r9,16
    1408:	d8c12017 	ldw	r3,1152(sp)
    140c:	d8811f17 	ldw	r2,1148(sp)
    1410:	4d45750e 	bge	r9,r21,29e8 <___vfprintf_internal_r+0x1c34>
    1414:	01400074 	movhi	r5,1
    1418:	297d6b84 	addi	r5,r5,-2642
    141c:	d9413615 	stw	r5,1240(sp)
    1420:	4827883a 	mov	r19,r9
    1424:	048001c4 	movi	r18,7
    1428:	00000306 	br	1438 <___vfprintf_internal_r+0x684>
    142c:	ad7ffc04 	addi	r21,r21,-16
    1430:	42000204 	addi	r8,r8,8
    1434:	9d40130e 	bge	r19,r21,1484 <___vfprintf_internal_r+0x6d0>
    1438:	01000074 	movhi	r4,1
    143c:	18c00404 	addi	r3,r3,16
    1440:	10800044 	addi	r2,r2,1
    1444:	213d6b84 	addi	r4,r4,-2642
    1448:	41000015 	stw	r4,0(r8)
    144c:	44c00115 	stw	r19,4(r8)
    1450:	d8c12015 	stw	r3,1152(sp)
    1454:	d8811f15 	stw	r2,1148(sp)
    1458:	90bff40e 	bge	r18,r2,142c <__alt_data_end+0xfff9f9ac>
    145c:	b809883a 	mov	r4,r23
    1460:	b00b883a 	mov	r5,r22
    1464:	d9811e04 	addi	r6,sp,1144
    1468:	0006ef00 	call	6ef0 <__sprint_r>
    146c:	103f691e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    1470:	ad7ffc04 	addi	r21,r21,-16
    1474:	d8c12017 	ldw	r3,1152(sp)
    1478:	d8811f17 	ldw	r2,1148(sp)
    147c:	da000404 	addi	r8,sp,16
    1480:	9d7fed16 	blt	r19,r21,1438 <__alt_data_end+0xfff9f9b8>
    1484:	d9413617 	ldw	r5,1240(sp)
    1488:	a8c7883a 	add	r3,r21,r3
    148c:	10800044 	addi	r2,r2,1
    1490:	41400015 	stw	r5,0(r8)
    1494:	45400115 	stw	r21,4(r8)
    1498:	d8c12015 	stw	r3,1152(sp)
    149c:	d8811f15 	stw	r2,1148(sp)
    14a0:	010001c4 	movi	r4,7
    14a4:	20832b16 	blt	r4,r2,2154 <___vfprintf_internal_r+0x13a0>
    14a8:	d8812787 	ldb	r2,1182(sp)
    14ac:	42000204 	addi	r8,r8,8
    14b0:	10000c26 	beq	r2,zero,14e4 <___vfprintf_internal_r+0x730>
    14b4:	d8811f17 	ldw	r2,1148(sp)
    14b8:	d9012784 	addi	r4,sp,1182
    14bc:	18c00044 	addi	r3,r3,1
    14c0:	10800044 	addi	r2,r2,1
    14c4:	41000015 	stw	r4,0(r8)
    14c8:	01000044 	movi	r4,1
    14cc:	41000115 	stw	r4,4(r8)
    14d0:	d8c12015 	stw	r3,1152(sp)
    14d4:	d8811f15 	stw	r2,1148(sp)
    14d8:	010001c4 	movi	r4,7
    14dc:	2082c416 	blt	r4,r2,1ff0 <___vfprintf_internal_r+0x123c>
    14e0:	42000204 	addi	r8,r8,8
    14e4:	d8812c17 	ldw	r2,1200(sp)
    14e8:	10000c26 	beq	r2,zero,151c <___vfprintf_internal_r+0x768>
    14ec:	d8811f17 	ldw	r2,1148(sp)
    14f0:	d9012704 	addi	r4,sp,1180
    14f4:	18c00084 	addi	r3,r3,2
    14f8:	10800044 	addi	r2,r2,1
    14fc:	41000015 	stw	r4,0(r8)
    1500:	01000084 	movi	r4,2
    1504:	41000115 	stw	r4,4(r8)
    1508:	d8c12015 	stw	r3,1152(sp)
    150c:	d8811f15 	stw	r2,1148(sp)
    1510:	010001c4 	movi	r4,7
    1514:	2082be16 	blt	r4,r2,2010 <___vfprintf_internal_r+0x125c>
    1518:	42000204 	addi	r8,r8,8
    151c:	d9013017 	ldw	r4,1216(sp)
    1520:	00802004 	movi	r2,128
    1524:	20822026 	beq	r4,r2,1da8 <___vfprintf_internal_r+0xff4>
    1528:	d9413217 	ldw	r5,1224(sp)
    152c:	2c67c83a 	sub	r19,r5,r17
    1530:	04c0260e 	bge	zero,r19,15cc <___vfprintf_internal_r+0x818>
    1534:	05400404 	movi	r21,16
    1538:	d8811f17 	ldw	r2,1148(sp)
    153c:	acc4720e 	bge	r21,r19,2708 <___vfprintf_internal_r+0x1954>
    1540:	01400074 	movhi	r5,1
    1544:	297d6784 	addi	r5,r5,-2658
    1548:	d9412c15 	stw	r5,1200(sp)
    154c:	048001c4 	movi	r18,7
    1550:	00000306 	br	1560 <___vfprintf_internal_r+0x7ac>
    1554:	9cfffc04 	addi	r19,r19,-16
    1558:	42000204 	addi	r8,r8,8
    155c:	acc0110e 	bge	r21,r19,15a4 <___vfprintf_internal_r+0x7f0>
    1560:	18c00404 	addi	r3,r3,16
    1564:	10800044 	addi	r2,r2,1
    1568:	45000015 	stw	r20,0(r8)
    156c:	45400115 	stw	r21,4(r8)
    1570:	d8c12015 	stw	r3,1152(sp)
    1574:	d8811f15 	stw	r2,1148(sp)
    1578:	90bff60e 	bge	r18,r2,1554 <__alt_data_end+0xfff9fad4>
    157c:	b809883a 	mov	r4,r23
    1580:	b00b883a 	mov	r5,r22
    1584:	d9811e04 	addi	r6,sp,1144
    1588:	0006ef00 	call	6ef0 <__sprint_r>
    158c:	103f211e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    1590:	9cfffc04 	addi	r19,r19,-16
    1594:	d8c12017 	ldw	r3,1152(sp)
    1598:	d8811f17 	ldw	r2,1148(sp)
    159c:	da000404 	addi	r8,sp,16
    15a0:	acffef16 	blt	r21,r19,1560 <__alt_data_end+0xfff9fae0>
    15a4:	d9012c17 	ldw	r4,1200(sp)
    15a8:	1cc7883a 	add	r3,r3,r19
    15ac:	10800044 	addi	r2,r2,1
    15b0:	41000015 	stw	r4,0(r8)
    15b4:	44c00115 	stw	r19,4(r8)
    15b8:	d8c12015 	stw	r3,1152(sp)
    15bc:	d8811f15 	stw	r2,1148(sp)
    15c0:	010001c4 	movi	r4,7
    15c4:	20828216 	blt	r4,r2,1fd0 <___vfprintf_internal_r+0x121c>
    15c8:	42000204 	addi	r8,r8,8
    15cc:	e080400c 	andi	r2,fp,256
    15d0:	1001ac1e 	bne	r2,zero,1c84 <___vfprintf_internal_r+0xed0>
    15d4:	d8811f17 	ldw	r2,1148(sp)
    15d8:	d9413117 	ldw	r5,1220(sp)
    15dc:	1c47883a 	add	r3,r3,r17
    15e0:	10800044 	addi	r2,r2,1
    15e4:	41400015 	stw	r5,0(r8)
    15e8:	44400115 	stw	r17,4(r8)
    15ec:	d8c12015 	stw	r3,1152(sp)
    15f0:	d8811f15 	stw	r2,1148(sp)
    15f4:	010001c4 	movi	r4,7
    15f8:	20825d16 	blt	r4,r2,1f70 <___vfprintf_internal_r+0x11bc>
    15fc:	42000204 	addi	r8,r8,8
    1600:	e080010c 	andi	r2,fp,4
    1604:	10003126 	beq	r2,zero,16cc <___vfprintf_internal_r+0x918>
    1608:	d8812e17 	ldw	r2,1208(sp)
    160c:	d9012b17 	ldw	r4,1196(sp)
    1610:	1121c83a 	sub	r16,r2,r4
    1614:	04002d0e 	bge	zero,r16,16cc <___vfprintf_internal_r+0x918>
    1618:	04400404 	movi	r17,16
    161c:	d8811f17 	ldw	r2,1148(sp)
    1620:	8c05340e 	bge	r17,r16,2af4 <___vfprintf_internal_r+0x1d40>
    1624:	01000074 	movhi	r4,1
    1628:	213d6b84 	addi	r4,r4,-2642
    162c:	d9013615 	stw	r4,1240(sp)
    1630:	048001c4 	movi	r18,7
    1634:	00000306 	br	1644 <___vfprintf_internal_r+0x890>
    1638:	843ffc04 	addi	r16,r16,-16
    163c:	42000204 	addi	r8,r8,8
    1640:	8c00130e 	bge	r17,r16,1690 <___vfprintf_internal_r+0x8dc>
    1644:	01400074 	movhi	r5,1
    1648:	18c00404 	addi	r3,r3,16
    164c:	10800044 	addi	r2,r2,1
    1650:	297d6b84 	addi	r5,r5,-2642
    1654:	41400015 	stw	r5,0(r8)
    1658:	44400115 	stw	r17,4(r8)
    165c:	d8c12015 	stw	r3,1152(sp)
    1660:	d8811f15 	stw	r2,1148(sp)
    1664:	90bff40e 	bge	r18,r2,1638 <__alt_data_end+0xfff9fbb8>
    1668:	b809883a 	mov	r4,r23
    166c:	b00b883a 	mov	r5,r22
    1670:	d9811e04 	addi	r6,sp,1144
    1674:	0006ef00 	call	6ef0 <__sprint_r>
    1678:	103ee61e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    167c:	843ffc04 	addi	r16,r16,-16
    1680:	d8c12017 	ldw	r3,1152(sp)
    1684:	d8811f17 	ldw	r2,1148(sp)
    1688:	da000404 	addi	r8,sp,16
    168c:	8c3fed16 	blt	r17,r16,1644 <__alt_data_end+0xfff9fbc4>
    1690:	d9013617 	ldw	r4,1240(sp)
    1694:	1c07883a 	add	r3,r3,r16
    1698:	10800044 	addi	r2,r2,1
    169c:	41000015 	stw	r4,0(r8)
    16a0:	44000115 	stw	r16,4(r8)
    16a4:	d8c12015 	stw	r3,1152(sp)
    16a8:	d8811f15 	stw	r2,1148(sp)
    16ac:	010001c4 	movi	r4,7
    16b0:	2080060e 	bge	r4,r2,16cc <___vfprintf_internal_r+0x918>
    16b4:	b809883a 	mov	r4,r23
    16b8:	b00b883a 	mov	r5,r22
    16bc:	d9811e04 	addi	r6,sp,1144
    16c0:	0006ef00 	call	6ef0 <__sprint_r>
    16c4:	103ed31e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    16c8:	d8c12017 	ldw	r3,1152(sp)
    16cc:	df012b17 	ldw	fp,1196(sp)
    16d0:	d9412e17 	ldw	r5,1208(sp)
    16d4:	e140010e 	bge	fp,r5,16dc <___vfprintf_internal_r+0x928>
    16d8:	2839883a 	mov	fp,r5
    16dc:	d8812f17 	ldw	r2,1212(sp)
    16e0:	1705883a 	add	r2,r2,fp
    16e4:	d8812f15 	stw	r2,1212(sp)
    16e8:	1802291e 	bne	r3,zero,1f90 <___vfprintf_internal_r+0x11dc>
    16ec:	d8c12a17 	ldw	r3,1192(sp)
    16f0:	d8011f15 	stw	zero,1148(sp)
    16f4:	da000404 	addi	r8,sp,16
    16f8:	18800007 	ldb	r2,0(r3)
    16fc:	103ded1e 	bne	r2,zero,eb4 <__alt_data_end+0xfff9f434>
    1700:	dc012a17 	ldw	r16,1192(sp)
    1704:	003e0506 	br	f1c <__alt_data_end+0xfff9f49c>
    1708:	d9012d17 	ldw	r4,1204(sp)
    170c:	d9412d17 	ldw	r5,1204(sp)
    1710:	da012a17 	ldw	r8,1192(sp)
    1714:	21000017 	ldw	r4,0(r4)
    1718:	29400117 	ldw	r5,4(r5)
    171c:	df012a15 	stw	fp,1192(sp)
    1720:	9839883a 	mov	fp,r19
    1724:	dcc12b03 	ldbu	r19,1196(sp)
    1728:	d9013715 	stw	r4,1244(sp)
    172c:	d9413915 	stw	r5,1252(sp)
    1730:	da013f15 	stw	r8,1276(sp)
    1734:	da413e15 	stw	r9,1272(sp)
    1738:	dcc12785 	stb	r19,1182(sp)
    173c:	0006b080 	call	6b08 <__fpclassifyd>
    1740:	d8c12d17 	ldw	r3,1204(sp)
    1744:	04400044 	movi	r17,1
    1748:	da013f17 	ldw	r8,1276(sp)
    174c:	1c800204 	addi	r18,r3,8
    1750:	da413e17 	ldw	r9,1272(sp)
    1754:	d9013717 	ldw	r4,1244(sp)
    1758:	d9413917 	ldw	r5,1252(sp)
    175c:	1443451e 	bne	r2,r17,2474 <___vfprintf_internal_r+0x16c0>
    1760:	000d883a 	mov	r6,zero
    1764:	000f883a 	mov	r7,zero
    1768:	000b96c0 	call	b96c <__ledf2>
    176c:	da013f17 	ldw	r8,1276(sp)
    1770:	1004fe16 	blt	r2,zero,2b6c <___vfprintf_internal_r+0x1db8>
    1774:	dcc12783 	ldbu	r19,1182(sp)
    1778:	008011c4 	movi	r2,71
    177c:	14045d0e 	bge	r2,r16,28f4 <___vfprintf_internal_r+0x1b40>
    1780:	01400074 	movhi	r5,1
    1784:	297d5804 	addi	r5,r5,-2720
    1788:	d9413115 	stw	r5,1220(sp)
    178c:	00c000c4 	movi	r3,3
    1790:	00bfdfc4 	movi	r2,-129
    1794:	d8c12b15 	stw	r3,1196(sp)
    1798:	e0b8703a 	and	fp,fp,r2
    179c:	dc812d15 	stw	r18,1204(sp)
    17a0:	1823883a 	mov	r17,r3
    17a4:	d8013215 	stw	zero,1224(sp)
    17a8:	d8013415 	stw	zero,1232(sp)
    17ac:	003f0106 	br	13b4 <__alt_data_end+0xfff9f934>
    17b0:	9cc00214 	ori	r19,r19,8
    17b4:	e005883a 	mov	r2,fp
    17b8:	e4000007 	ldb	r16,0(fp)
    17bc:	003de506 	br	f54 <__alt_data_end+0xfff9f4d4>
    17c0:	da012a17 	ldw	r8,1192(sp)
    17c4:	df012a15 	stw	fp,1192(sp)
    17c8:	9f000414 	ori	fp,r19,16
    17cc:	e0c0080c 	andi	r3,fp,32
    17d0:	d8812d17 	ldw	r2,1204(sp)
    17d4:	18007626 	beq	r3,zero,19b0 <___vfprintf_internal_r+0xbfc>
    17d8:	d9412d17 	ldw	r5,1204(sp)
    17dc:	14800017 	ldw	r18,0(r2)
    17e0:	15400117 	ldw	r21,4(r2)
    17e4:	29400204 	addi	r5,r5,8
    17e8:	d9412d15 	stw	r5,1204(sp)
    17ec:	0005883a 	mov	r2,zero
    17f0:	9546b03a 	or	r3,r18,r21
    17f4:	d8012785 	stb	zero,1182(sp)
    17f8:	da413215 	stw	r9,1224(sp)
    17fc:	0027883a 	mov	r19,zero
    1800:	003ecd06 	br	1338 <__alt_data_end+0xfff9f8b8>
    1804:	da012a17 	ldw	r8,1192(sp)
    1808:	df012a15 	stw	fp,1192(sp)
    180c:	9f000414 	ori	fp,r19,16
    1810:	e0c0080c 	andi	r3,fp,32
    1814:	d8812d17 	ldw	r2,1204(sp)
    1818:	18002c26 	beq	r3,zero,18cc <___vfprintf_internal_r+0xb18>
    181c:	d9012d17 	ldw	r4,1204(sp)
    1820:	14800017 	ldw	r18,0(r2)
    1824:	15400117 	ldw	r21,4(r2)
    1828:	21000204 	addi	r4,r4,8
    182c:	d9012d15 	stw	r4,1204(sp)
    1830:	00800044 	movi	r2,1
    1834:	9546b03a 	or	r3,r18,r21
    1838:	003fee06 	br	17f4 <__alt_data_end+0xfff9fd74>
    183c:	da012a17 	ldw	r8,1192(sp)
    1840:	df012a15 	stw	fp,1192(sp)
    1844:	9839883a 	mov	fp,r19
    1848:	dcc12b03 	ldbu	r19,1196(sp)
    184c:	01400074 	movhi	r5,1
    1850:	297d5b04 	addi	r5,r5,-2708
    1854:	dcc12785 	stb	r19,1182(sp)
    1858:	d9413b15 	stw	r5,1260(sp)
    185c:	e0c0080c 	andi	r3,fp,32
    1860:	d8812d17 	ldw	r2,1204(sp)
    1864:	18002e26 	beq	r3,zero,1920 <___vfprintf_internal_r+0xb6c>
    1868:	d9412d17 	ldw	r5,1204(sp)
    186c:	14800017 	ldw	r18,0(r2)
    1870:	15400117 	ldw	r21,4(r2)
    1874:	29400204 	addi	r5,r5,8
    1878:	d9412d15 	stw	r5,1204(sp)
    187c:	e080004c 	andi	r2,fp,1
    1880:	10025c26 	beq	r2,zero,21f4 <___vfprintf_internal_r+0x1440>
    1884:	9546b03a 	or	r3,r18,r21
    1888:	18038f26 	beq	r3,zero,26c8 <___vfprintf_internal_r+0x1914>
    188c:	00800c04 	movi	r2,48
    1890:	d8812705 	stb	r2,1180(sp)
    1894:	dc012745 	stb	r16,1181(sp)
    1898:	e7000094 	ori	fp,fp,2
    189c:	00800084 	movi	r2,2
    18a0:	003fd406 	br	17f4 <__alt_data_end+0xfff9fd74>
    18a4:	9cc00814 	ori	r19,r19,32
    18a8:	e005883a 	mov	r2,fp
    18ac:	e4000007 	ldb	r16,0(fp)
    18b0:	003da806 	br	f54 <__alt_data_end+0xfff9f4d4>
    18b4:	da012a17 	ldw	r8,1192(sp)
    18b8:	df012a15 	stw	fp,1192(sp)
    18bc:	9839883a 	mov	fp,r19
    18c0:	e0c0080c 	andi	r3,fp,32
    18c4:	d8812d17 	ldw	r2,1204(sp)
    18c8:	183fd41e 	bne	r3,zero,181c <__alt_data_end+0xfff9fd9c>
    18cc:	e0c0040c 	andi	r3,fp,16
    18d0:	18035f26 	beq	r3,zero,2650 <___vfprintf_internal_r+0x189c>
    18d4:	d9412d17 	ldw	r5,1204(sp)
    18d8:	14800017 	ldw	r18,0(r2)
    18dc:	002b883a 	mov	r21,zero
    18e0:	29400104 	addi	r5,r5,4
    18e4:	d9412d15 	stw	r5,1204(sp)
    18e8:	00800044 	movi	r2,1
    18ec:	9007883a 	mov	r3,r18
    18f0:	003fc006 	br	17f4 <__alt_data_end+0xfff9fd74>
    18f4:	da012a17 	ldw	r8,1192(sp)
    18f8:	df012a15 	stw	fp,1192(sp)
    18fc:	9839883a 	mov	fp,r19
    1900:	dcc12b03 	ldbu	r19,1196(sp)
    1904:	01000074 	movhi	r4,1
    1908:	213d6004 	addi	r4,r4,-2688
    190c:	d9013b15 	stw	r4,1260(sp)
    1910:	dcc12785 	stb	r19,1182(sp)
    1914:	e0c0080c 	andi	r3,fp,32
    1918:	d8812d17 	ldw	r2,1204(sp)
    191c:	183fd21e 	bne	r3,zero,1868 <__alt_data_end+0xfff9fde8>
    1920:	e0c0040c 	andi	r3,fp,16
    1924:	18035426 	beq	r3,zero,2678 <___vfprintf_internal_r+0x18c4>
    1928:	d8c12d17 	ldw	r3,1204(sp)
    192c:	14800017 	ldw	r18,0(r2)
    1930:	002b883a 	mov	r21,zero
    1934:	18c00104 	addi	r3,r3,4
    1938:	d8c12d15 	stw	r3,1204(sp)
    193c:	003fcf06 	br	187c <__alt_data_end+0xfff9fdfc>
    1940:	e4000007 	ldb	r16,0(fp)
    1944:	00801b04 	movi	r2,108
    1948:	8083f726 	beq	r16,r2,2928 <___vfprintf_internal_r+0x1b74>
    194c:	9cc00414 	ori	r19,r19,16
    1950:	e005883a 	mov	r2,fp
    1954:	003d7f06 	br	f54 <__alt_data_end+0xfff9f4d4>
    1958:	da012a17 	ldw	r8,1192(sp)
    195c:	df012a15 	stw	fp,1192(sp)
    1960:	9839883a 	mov	fp,r19
    1964:	dcc12b03 	ldbu	r19,1196(sp)
    1968:	e080080c 	andi	r2,fp,32
    196c:	dcc12785 	stb	r19,1182(sp)
    1970:	10032226 	beq	r2,zero,25fc <___vfprintf_internal_r+0x1848>
    1974:	d9412d17 	ldw	r5,1204(sp)
    1978:	d9012f17 	ldw	r4,1212(sp)
    197c:	28800017 	ldw	r2,0(r5)
    1980:	2007d7fa 	srai	r3,r4,31
    1984:	29400104 	addi	r5,r5,4
    1988:	d9412d15 	stw	r5,1204(sp)
    198c:	11000015 	stw	r4,0(r2)
    1990:	10c00115 	stw	r3,4(r2)
    1994:	003d4406 	br	ea8 <__alt_data_end+0xfff9f428>
    1998:	da012a17 	ldw	r8,1192(sp)
    199c:	df012a15 	stw	fp,1192(sp)
    19a0:	9839883a 	mov	fp,r19
    19a4:	e0c0080c 	andi	r3,fp,32
    19a8:	d8812d17 	ldw	r2,1204(sp)
    19ac:	183f8a1e 	bne	r3,zero,17d8 <__alt_data_end+0xfff9fd58>
    19b0:	e0c0040c 	andi	r3,fp,16
    19b4:	18031c26 	beq	r3,zero,2628 <___vfprintf_internal_r+0x1874>
    19b8:	14800017 	ldw	r18,0(r2)
    19bc:	d8812d17 	ldw	r2,1204(sp)
    19c0:	002b883a 	mov	r21,zero
    19c4:	9007883a 	mov	r3,r18
    19c8:	10800104 	addi	r2,r2,4
    19cc:	d8812d15 	stw	r2,1204(sp)
    19d0:	0005883a 	mov	r2,zero
    19d4:	003f8706 	br	17f4 <__alt_data_end+0xfff9fd74>
    19d8:	d9412d17 	ldw	r5,1204(sp)
    19dc:	00800c04 	movi	r2,48
    19e0:	d8812705 	stb	r2,1180(sp)
    19e4:	2c800017 	ldw	r18,0(r5)
    19e8:	00801e04 	movi	r2,120
    19ec:	d8812745 	stb	r2,1181(sp)
    19f0:	00800074 	movhi	r2,1
    19f4:	10bd6004 	addi	r2,r2,-2688
    19f8:	29400104 	addi	r5,r5,4
    19fc:	da012a17 	ldw	r8,1192(sp)
    1a00:	d8813b15 	stw	r2,1260(sp)
    1a04:	df012a15 	stw	fp,1192(sp)
    1a08:	002b883a 	mov	r21,zero
    1a0c:	9f000094 	ori	fp,r19,2
    1a10:	d9412d15 	stw	r5,1204(sp)
    1a14:	00800084 	movi	r2,2
    1a18:	04001e04 	movi	r16,120
    1a1c:	9007883a 	mov	r3,r18
    1a20:	003f7406 	br	17f4 <__alt_data_end+0xfff9fd74>
    1a24:	da012a17 	ldw	r8,1192(sp)
    1a28:	df012a15 	stw	fp,1192(sp)
    1a2c:	9839883a 	mov	fp,r19
    1a30:	dcc12b03 	ldbu	r19,1196(sp)
    1a34:	e080080c 	andi	r2,fp,32
    1a38:	d8c12d17 	ldw	r3,1204(sp)
    1a3c:	dcc12785 	stb	r19,1182(sp)
    1a40:	103e321e 	bne	r2,zero,130c <__alt_data_end+0xfff9f88c>
    1a44:	e080040c 	andi	r2,fp,16
    1a48:	10031326 	beq	r2,zero,2698 <___vfprintf_internal_r+0x18e4>
    1a4c:	1c800017 	ldw	r18,0(r3)
    1a50:	d9412d17 	ldw	r5,1204(sp)
    1a54:	902bd7fa 	srai	r21,r18,31
    1a58:	29400104 	addi	r5,r5,4
    1a5c:	d9412d15 	stw	r5,1204(sp)
    1a60:	a805883a 	mov	r2,r21
    1a64:	003e2f06 	br	1324 <__alt_data_end+0xfff9f8a4>
    1a68:	9cc01014 	ori	r19,r19,64
    1a6c:	e005883a 	mov	r2,fp
    1a70:	e4000007 	ldb	r16,0(fp)
    1a74:	003d3706 	br	f54 <__alt_data_end+0xfff9f4d4>
    1a78:	d8c12d17 	ldw	r3,1204(sp)
    1a7c:	d9012d17 	ldw	r4,1204(sp)
    1a80:	da012a17 	ldw	r8,1192(sp)
    1a84:	18800017 	ldw	r2,0(r3)
    1a88:	21000104 	addi	r4,r4,4
    1a8c:	00c00044 	movi	r3,1
    1a90:	df012a15 	stw	fp,1192(sp)
    1a94:	d8c12b15 	stw	r3,1196(sp)
    1a98:	9839883a 	mov	fp,r19
    1a9c:	d8012785 	stb	zero,1182(sp)
    1aa0:	d8810405 	stb	r2,1040(sp)
    1aa4:	d9012d15 	stw	r4,1204(sp)
    1aa8:	1823883a 	mov	r17,r3
    1aac:	d8c10404 	addi	r3,sp,1040
    1ab0:	d8013215 	stw	zero,1224(sp)
    1ab4:	d8013415 	stw	zero,1232(sp)
    1ab8:	d8c13115 	stw	r3,1220(sp)
    1abc:	0005883a 	mov	r2,zero
    1ac0:	003e4306 	br	13d0 <__alt_data_end+0xfff9f950>
    1ac4:	d8812b07 	ldb	r2,1196(sp)
    1ac8:	1002fc1e 	bne	r2,zero,26bc <___vfprintf_internal_r+0x1908>
    1acc:	00c00804 	movi	r3,32
    1ad0:	d8c12b05 	stb	r3,1196(sp)
    1ad4:	e005883a 	mov	r2,fp
    1ad8:	e4000007 	ldb	r16,0(fp)
    1adc:	003d1d06 	br	f54 <__alt_data_end+0xfff9f4d4>
    1ae0:	9cc00054 	ori	r19,r19,1
    1ae4:	e005883a 	mov	r2,fp
    1ae8:	e4000007 	ldb	r16,0(fp)
    1aec:	003d1906 	br	f54 <__alt_data_end+0xfff9f4d4>
    1af0:	d9012d17 	ldw	r4,1204(sp)
    1af4:	d9412d17 	ldw	r5,1204(sp)
    1af8:	21000017 	ldw	r4,0(r4)
    1afc:	28c00104 	addi	r3,r5,4
    1b00:	d9012e15 	stw	r4,1208(sp)
    1b04:	20038c16 	blt	r4,zero,2938 <___vfprintf_internal_r+0x1b84>
    1b08:	d8c12d15 	stw	r3,1204(sp)
    1b0c:	e005883a 	mov	r2,fp
    1b10:	e4000007 	ldb	r16,0(fp)
    1b14:	003d0f06 	br	f54 <__alt_data_end+0xfff9f4d4>
    1b18:	00c00ac4 	movi	r3,43
    1b1c:	d8c12b05 	stb	r3,1196(sp)
    1b20:	e005883a 	mov	r2,fp
    1b24:	e4000007 	ldb	r16,0(fp)
    1b28:	003d0a06 	br	f54 <__alt_data_end+0xfff9f4d4>
    1b2c:	d8c12d17 	ldw	r3,1204(sp)
    1b30:	d9012d17 	ldw	r4,1204(sp)
    1b34:	da012a17 	ldw	r8,1192(sp)
    1b38:	18c00017 	ldw	r3,0(r3)
    1b3c:	df012a15 	stw	fp,1192(sp)
    1b40:	d8012785 	stb	zero,1182(sp)
    1b44:	d8c13115 	stw	r3,1220(sp)
    1b48:	9839883a 	mov	fp,r19
    1b4c:	24800104 	addi	r18,r4,4
    1b50:	1803f726 	beq	r3,zero,2b30 <___vfprintf_internal_r+0x1d7c>
    1b54:	d9013117 	ldw	r4,1220(sp)
    1b58:	48038916 	blt	r9,zero,2980 <___vfprintf_internal_r+0x1bcc>
    1b5c:	480d883a 	mov	r6,r9
    1b60:	000b883a 	mov	r5,zero
    1b64:	da013f15 	stw	r8,1276(sp)
    1b68:	da413e15 	stw	r9,1272(sp)
    1b6c:	000577c0 	call	577c <memchr>
    1b70:	da013f17 	ldw	r8,1276(sp)
    1b74:	da413e17 	ldw	r9,1272(sp)
    1b78:	10045926 	beq	r2,zero,2ce0 <___vfprintf_internal_r+0x1f2c>
    1b7c:	d8c13117 	ldw	r3,1220(sp)
    1b80:	10e3c83a 	sub	r17,r2,r3
    1b84:	4c433516 	blt	r9,r17,285c <___vfprintf_internal_r+0x1aa8>
    1b88:	8805883a 	mov	r2,r17
    1b8c:	88038116 	blt	r17,zero,2994 <___vfprintf_internal_r+0x1be0>
    1b90:	dcc12783 	ldbu	r19,1182(sp)
    1b94:	d8812b15 	stw	r2,1196(sp)
    1b98:	dc812d15 	stw	r18,1204(sp)
    1b9c:	d8013215 	stw	zero,1224(sp)
    1ba0:	d8013415 	stw	zero,1232(sp)
    1ba4:	003e0306 	br	13b4 <__alt_data_end+0xfff9f934>
    1ba8:	da012a17 	ldw	r8,1192(sp)
    1bac:	df012a15 	stw	fp,1192(sp)
    1bb0:	9839883a 	mov	fp,r19
    1bb4:	dcc12b03 	ldbu	r19,1196(sp)
    1bb8:	dcc12785 	stb	r19,1182(sp)
    1bbc:	803d8f26 	beq	r16,zero,11fc <__alt_data_end+0xfff9f77c>
    1bc0:	00c00044 	movi	r3,1
    1bc4:	d8c12b15 	stw	r3,1196(sp)
    1bc8:	dc010405 	stb	r16,1040(sp)
    1bcc:	d8012785 	stb	zero,1182(sp)
    1bd0:	003fb506 	br	1aa8 <__alt_data_end+0xfffa0028>
    1bd4:	d8c12017 	ldw	r3,1152(sp)
    1bd8:	003e3506 	br	14b0 <__alt_data_end+0xfff9fa30>
    1bdc:	10803fcc 	andi	r2,r2,255
    1be0:	00c00044 	movi	r3,1
    1be4:	10fddc1e 	bne	r2,r3,1358 <__alt_data_end+0xfff9f8d8>
    1be8:	a800021e 	bne	r21,zero,1bf4 <___vfprintf_internal_r+0xe40>
    1bec:	00800244 	movi	r2,9
    1bf0:	14801e2e 	bgeu	r2,r18,1c6c <___vfprintf_internal_r+0xeb8>
    1bf4:	dc012b15 	stw	r16,1196(sp)
    1bf8:	dc410e04 	addi	r17,sp,1080
    1bfc:	9021883a 	mov	r16,r18
    1c00:	da012c15 	stw	r8,1200(sp)
    1c04:	a825883a 	mov	r18,r21
    1c08:	482b883a 	mov	r21,r9
    1c0c:	8009883a 	mov	r4,r16
    1c10:	900b883a 	mov	r5,r18
    1c14:	01800284 	movi	r6,10
    1c18:	000f883a 	mov	r7,zero
    1c1c:	0009e7c0 	call	9e7c <__umoddi3>
    1c20:	10800c04 	addi	r2,r2,48
    1c24:	8c7fffc4 	addi	r17,r17,-1
    1c28:	8009883a 	mov	r4,r16
    1c2c:	900b883a 	mov	r5,r18
    1c30:	01800284 	movi	r6,10
    1c34:	000f883a 	mov	r7,zero
    1c38:	88800005 	stb	r2,0(r17)
    1c3c:	000983c0 	call	983c <__udivdi3>
    1c40:	1021883a 	mov	r16,r2
    1c44:	10c4b03a 	or	r2,r2,r3
    1c48:	1825883a 	mov	r18,r3
    1c4c:	103fef1e 	bne	r2,zero,1c0c <__alt_data_end+0xfffa018c>
    1c50:	d9012817 	ldw	r4,1184(sp)
    1c54:	dc413115 	stw	r17,1220(sp)
    1c58:	dc012b17 	ldw	r16,1196(sp)
    1c5c:	da012c17 	ldw	r8,1200(sp)
    1c60:	a813883a 	mov	r9,r21
    1c64:	2463c83a 	sub	r17,r4,r17
    1c68:	003dcd06 	br	13a0 <__alt_data_end+0xfff9f920>
    1c6c:	94800c04 	addi	r18,r18,48
    1c70:	d8c10dc4 	addi	r3,sp,1079
    1c74:	dc810dc5 	stb	r18,1079(sp)
    1c78:	dc413c17 	ldw	r17,1264(sp)
    1c7c:	d8c13115 	stw	r3,1220(sp)
    1c80:	003dc706 	br	13a0 <__alt_data_end+0xfff9f920>
    1c84:	00801944 	movi	r2,101
    1c88:	1400720e 	bge	r2,r16,1e54 <___vfprintf_internal_r+0x10a0>
    1c8c:	d9013717 	ldw	r4,1244(sp)
    1c90:	d9413917 	ldw	r5,1252(sp)
    1c94:	000d883a 	mov	r6,zero
    1c98:	000f883a 	mov	r7,zero
    1c9c:	d8c13d15 	stw	r3,1268(sp)
    1ca0:	da013f15 	stw	r8,1276(sp)
    1ca4:	000b8080 	call	b808 <__eqdf2>
    1ca8:	d8c13d17 	ldw	r3,1268(sp)
    1cac:	da013f17 	ldw	r8,1276(sp)
    1cb0:	1000f41e 	bne	r2,zero,2084 <___vfprintf_internal_r+0x12d0>
    1cb4:	d8811f17 	ldw	r2,1148(sp)
    1cb8:	01000074 	movhi	r4,1
    1cbc:	213d6704 	addi	r4,r4,-2660
    1cc0:	18c00044 	addi	r3,r3,1
    1cc4:	10800044 	addi	r2,r2,1
    1cc8:	41000015 	stw	r4,0(r8)
    1ccc:	01000044 	movi	r4,1
    1cd0:	41000115 	stw	r4,4(r8)
    1cd4:	d8c12015 	stw	r3,1152(sp)
    1cd8:	d8811f15 	stw	r2,1148(sp)
    1cdc:	010001c4 	movi	r4,7
    1ce0:	20828d16 	blt	r4,r2,2718 <___vfprintf_internal_r+0x1964>
    1ce4:	42000204 	addi	r8,r8,8
    1ce8:	d8812617 	ldw	r2,1176(sp)
    1cec:	d9413317 	ldw	r5,1228(sp)
    1cf0:	11400216 	blt	r2,r5,1cfc <___vfprintf_internal_r+0xf48>
    1cf4:	e080004c 	andi	r2,fp,1
    1cf8:	103e4126 	beq	r2,zero,1600 <__alt_data_end+0xfff9fb80>
    1cfc:	d8813817 	ldw	r2,1248(sp)
    1d00:	d9013517 	ldw	r4,1236(sp)
    1d04:	d9413817 	ldw	r5,1248(sp)
    1d08:	1887883a 	add	r3,r3,r2
    1d0c:	d8811f17 	ldw	r2,1148(sp)
    1d10:	41000015 	stw	r4,0(r8)
    1d14:	41400115 	stw	r5,4(r8)
    1d18:	10800044 	addi	r2,r2,1
    1d1c:	d8c12015 	stw	r3,1152(sp)
    1d20:	d8811f15 	stw	r2,1148(sp)
    1d24:	010001c4 	movi	r4,7
    1d28:	20830916 	blt	r4,r2,2950 <___vfprintf_internal_r+0x1b9c>
    1d2c:	42000204 	addi	r8,r8,8
    1d30:	d8813317 	ldw	r2,1228(sp)
    1d34:	143fffc4 	addi	r16,r2,-1
    1d38:	043e310e 	bge	zero,r16,1600 <__alt_data_end+0xfff9fb80>
    1d3c:	04400404 	movi	r17,16
    1d40:	d8811f17 	ldw	r2,1148(sp)
    1d44:	8c007e0e 	bge	r17,r16,1f40 <___vfprintf_internal_r+0x118c>
    1d48:	01400074 	movhi	r5,1
    1d4c:	297d6784 	addi	r5,r5,-2658
    1d50:	d9412c15 	stw	r5,1200(sp)
    1d54:	04c001c4 	movi	r19,7
    1d58:	00000306 	br	1d68 <___vfprintf_internal_r+0xfb4>
    1d5c:	42000204 	addi	r8,r8,8
    1d60:	843ffc04 	addi	r16,r16,-16
    1d64:	8c00790e 	bge	r17,r16,1f4c <___vfprintf_internal_r+0x1198>
    1d68:	18c00404 	addi	r3,r3,16
    1d6c:	10800044 	addi	r2,r2,1
    1d70:	45000015 	stw	r20,0(r8)
    1d74:	44400115 	stw	r17,4(r8)
    1d78:	d8c12015 	stw	r3,1152(sp)
    1d7c:	d8811f15 	stw	r2,1148(sp)
    1d80:	98bff60e 	bge	r19,r2,1d5c <__alt_data_end+0xfffa02dc>
    1d84:	b809883a 	mov	r4,r23
    1d88:	b00b883a 	mov	r5,r22
    1d8c:	d9811e04 	addi	r6,sp,1144
    1d90:	0006ef00 	call	6ef0 <__sprint_r>
    1d94:	103d1f1e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    1d98:	d8c12017 	ldw	r3,1152(sp)
    1d9c:	d8811f17 	ldw	r2,1148(sp)
    1da0:	da000404 	addi	r8,sp,16
    1da4:	003fee06 	br	1d60 <__alt_data_end+0xfffa02e0>
    1da8:	d9412e17 	ldw	r5,1208(sp)
    1dac:	d8812b17 	ldw	r2,1196(sp)
    1db0:	28a7c83a 	sub	r19,r5,r2
    1db4:	04fddc0e 	bge	zero,r19,1528 <__alt_data_end+0xfff9faa8>
    1db8:	05400404 	movi	r21,16
    1dbc:	d8811f17 	ldw	r2,1148(sp)
    1dc0:	acc3870e 	bge	r21,r19,2be0 <___vfprintf_internal_r+0x1e2c>
    1dc4:	01400074 	movhi	r5,1
    1dc8:	297d6784 	addi	r5,r5,-2658
    1dcc:	d9412c15 	stw	r5,1200(sp)
    1dd0:	048001c4 	movi	r18,7
    1dd4:	00000306 	br	1de4 <___vfprintf_internal_r+0x1030>
    1dd8:	9cfffc04 	addi	r19,r19,-16
    1ddc:	42000204 	addi	r8,r8,8
    1de0:	acc0110e 	bge	r21,r19,1e28 <___vfprintf_internal_r+0x1074>
    1de4:	18c00404 	addi	r3,r3,16
    1de8:	10800044 	addi	r2,r2,1
    1dec:	45000015 	stw	r20,0(r8)
    1df0:	45400115 	stw	r21,4(r8)
    1df4:	d8c12015 	stw	r3,1152(sp)
    1df8:	d8811f15 	stw	r2,1148(sp)
    1dfc:	90bff60e 	bge	r18,r2,1dd8 <__alt_data_end+0xfffa0358>
    1e00:	b809883a 	mov	r4,r23
    1e04:	b00b883a 	mov	r5,r22
    1e08:	d9811e04 	addi	r6,sp,1144
    1e0c:	0006ef00 	call	6ef0 <__sprint_r>
    1e10:	103d001e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    1e14:	9cfffc04 	addi	r19,r19,-16
    1e18:	d8c12017 	ldw	r3,1152(sp)
    1e1c:	d8811f17 	ldw	r2,1148(sp)
    1e20:	da000404 	addi	r8,sp,16
    1e24:	acffef16 	blt	r21,r19,1de4 <__alt_data_end+0xfffa0364>
    1e28:	d9012c17 	ldw	r4,1200(sp)
    1e2c:	1cc7883a 	add	r3,r3,r19
    1e30:	10800044 	addi	r2,r2,1
    1e34:	41000015 	stw	r4,0(r8)
    1e38:	44c00115 	stw	r19,4(r8)
    1e3c:	d8c12015 	stw	r3,1152(sp)
    1e40:	d8811f15 	stw	r2,1148(sp)
    1e44:	010001c4 	movi	r4,7
    1e48:	20817816 	blt	r4,r2,242c <___vfprintf_internal_r+0x1678>
    1e4c:	42000204 	addi	r8,r8,8
    1e50:	003db506 	br	1528 <__alt_data_end+0xfff9faa8>
    1e54:	d9413317 	ldw	r5,1228(sp)
    1e58:	00800044 	movi	r2,1
    1e5c:	18c00044 	addi	r3,r3,1
    1e60:	11413e0e 	bge	r2,r5,235c <___vfprintf_internal_r+0x15a8>
    1e64:	dc011f17 	ldw	r16,1148(sp)
    1e68:	d8813117 	ldw	r2,1220(sp)
    1e6c:	d8c12015 	stw	r3,1152(sp)
    1e70:	84000044 	addi	r16,r16,1
    1e74:	40800015 	stw	r2,0(r8)
    1e78:	00800044 	movi	r2,1
    1e7c:	40800115 	stw	r2,4(r8)
    1e80:	dc011f15 	stw	r16,1148(sp)
    1e84:	008001c4 	movi	r2,7
    1e88:	14015616 	blt	r2,r16,23e4 <___vfprintf_internal_r+0x1630>
    1e8c:	42000204 	addi	r8,r8,8
    1e90:	d9013817 	ldw	r4,1248(sp)
    1e94:	d9413517 	ldw	r5,1236(sp)
    1e98:	84000044 	addi	r16,r16,1
    1e9c:	1907883a 	add	r3,r3,r4
    1ea0:	41400015 	stw	r5,0(r8)
    1ea4:	41000115 	stw	r4,4(r8)
    1ea8:	d8c12015 	stw	r3,1152(sp)
    1eac:	dc011f15 	stw	r16,1148(sp)
    1eb0:	008001c4 	movi	r2,7
    1eb4:	14015416 	blt	r2,r16,2408 <___vfprintf_internal_r+0x1654>
    1eb8:	44400204 	addi	r17,r8,8
    1ebc:	d9013717 	ldw	r4,1244(sp)
    1ec0:	d9413917 	ldw	r5,1252(sp)
    1ec4:	000d883a 	mov	r6,zero
    1ec8:	000f883a 	mov	r7,zero
    1ecc:	d8c13d15 	stw	r3,1268(sp)
    1ed0:	000b8080 	call	b808 <__eqdf2>
    1ed4:	d8c13d17 	ldw	r3,1268(sp)
    1ed8:	1000a726 	beq	r2,zero,2178 <___vfprintf_internal_r+0x13c4>
    1edc:	d9013317 	ldw	r4,1228(sp)
    1ee0:	d9413117 	ldw	r5,1220(sp)
    1ee4:	84000044 	addi	r16,r16,1
    1ee8:	20bfffc4 	addi	r2,r4,-1
    1eec:	1887883a 	add	r3,r3,r2
    1ef0:	29000044 	addi	r4,r5,1
    1ef4:	88800115 	stw	r2,4(r17)
    1ef8:	89000015 	stw	r4,0(r17)
    1efc:	d8c12015 	stw	r3,1152(sp)
    1f00:	dc011f15 	stw	r16,1148(sp)
    1f04:	008001c4 	movi	r2,7
    1f08:	14012d16 	blt	r2,r16,23c0 <___vfprintf_internal_r+0x160c>
    1f0c:	8c400204 	addi	r17,r17,8
    1f10:	d9413a17 	ldw	r5,1256(sp)
    1f14:	dcc122c4 	addi	r19,sp,1163
    1f18:	84000044 	addi	r16,r16,1
    1f1c:	28c7883a 	add	r3,r5,r3
    1f20:	8cc00015 	stw	r19,0(r17)
    1f24:	89400115 	stw	r5,4(r17)
    1f28:	d8c12015 	stw	r3,1152(sp)
    1f2c:	dc011f15 	stw	r16,1148(sp)
    1f30:	008001c4 	movi	r2,7
    1f34:	14000e16 	blt	r2,r16,1f70 <___vfprintf_internal_r+0x11bc>
    1f38:	8a000204 	addi	r8,r17,8
    1f3c:	003db006 	br	1600 <__alt_data_end+0xfff9fb80>
    1f40:	01000074 	movhi	r4,1
    1f44:	213d6784 	addi	r4,r4,-2658
    1f48:	d9012c15 	stw	r4,1200(sp)
    1f4c:	d9012c17 	ldw	r4,1200(sp)
    1f50:	1c07883a 	add	r3,r3,r16
    1f54:	44000115 	stw	r16,4(r8)
    1f58:	41000015 	stw	r4,0(r8)
    1f5c:	10800044 	addi	r2,r2,1
    1f60:	d8c12015 	stw	r3,1152(sp)
    1f64:	d8811f15 	stw	r2,1148(sp)
    1f68:	010001c4 	movi	r4,7
    1f6c:	20bda30e 	bge	r4,r2,15fc <__alt_data_end+0xfff9fb7c>
    1f70:	b809883a 	mov	r4,r23
    1f74:	b00b883a 	mov	r5,r22
    1f78:	d9811e04 	addi	r6,sp,1144
    1f7c:	0006ef00 	call	6ef0 <__sprint_r>
    1f80:	103ca41e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    1f84:	d8c12017 	ldw	r3,1152(sp)
    1f88:	da000404 	addi	r8,sp,16
    1f8c:	003d9c06 	br	1600 <__alt_data_end+0xfff9fb80>
    1f90:	b809883a 	mov	r4,r23
    1f94:	b00b883a 	mov	r5,r22
    1f98:	d9811e04 	addi	r6,sp,1144
    1f9c:	0006ef00 	call	6ef0 <__sprint_r>
    1fa0:	103dd226 	beq	r2,zero,16ec <__alt_data_end+0xfff9fc6c>
    1fa4:	003c9b06 	br	1214 <__alt_data_end+0xfff9f794>
    1fa8:	10803fcc 	andi	r2,r2,255
    1fac:	1000311e 	bne	r2,zero,2074 <___vfprintf_internal_r+0x12c0>
    1fb0:	e080004c 	andi	r2,fp,1
    1fb4:	10002f26 	beq	r2,zero,2074 <___vfprintf_internal_r+0x12c0>
    1fb8:	00800c04 	movi	r2,48
    1fbc:	d8c10dc4 	addi	r3,sp,1079
    1fc0:	d8810dc5 	stb	r2,1079(sp)
    1fc4:	dc413c17 	ldw	r17,1264(sp)
    1fc8:	d8c13115 	stw	r3,1220(sp)
    1fcc:	003cf406 	br	13a0 <__alt_data_end+0xfff9f920>
    1fd0:	b809883a 	mov	r4,r23
    1fd4:	b00b883a 	mov	r5,r22
    1fd8:	d9811e04 	addi	r6,sp,1144
    1fdc:	0006ef00 	call	6ef0 <__sprint_r>
    1fe0:	103c8c1e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    1fe4:	d8c12017 	ldw	r3,1152(sp)
    1fe8:	da000404 	addi	r8,sp,16
    1fec:	003d7706 	br	15cc <__alt_data_end+0xfff9fb4c>
    1ff0:	b809883a 	mov	r4,r23
    1ff4:	b00b883a 	mov	r5,r22
    1ff8:	d9811e04 	addi	r6,sp,1144
    1ffc:	0006ef00 	call	6ef0 <__sprint_r>
    2000:	103c841e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    2004:	d8c12017 	ldw	r3,1152(sp)
    2008:	da000404 	addi	r8,sp,16
    200c:	003d3506 	br	14e4 <__alt_data_end+0xfff9fa64>
    2010:	b809883a 	mov	r4,r23
    2014:	b00b883a 	mov	r5,r22
    2018:	d9811e04 	addi	r6,sp,1144
    201c:	0006ef00 	call	6ef0 <__sprint_r>
    2020:	103c7c1e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    2024:	d8c12017 	ldw	r3,1152(sp)
    2028:	da000404 	addi	r8,sp,16
    202c:	003d3b06 	br	151c <__alt_data_end+0xfff9fa9c>
    2030:	d9413b17 	ldw	r5,1260(sp)
    2034:	d8c10e04 	addi	r3,sp,1080
    2038:	908003cc 	andi	r2,r18,15
    203c:	a808973a 	slli	r4,r21,28
    2040:	2885883a 	add	r2,r5,r2
    2044:	9024d13a 	srli	r18,r18,4
    2048:	10800003 	ldbu	r2,0(r2)
    204c:	a82ad13a 	srli	r21,r21,4
    2050:	18ffffc4 	addi	r3,r3,-1
    2054:	24a4b03a 	or	r18,r4,r18
    2058:	18800005 	stb	r2,0(r3)
    205c:	9544b03a 	or	r2,r18,r21
    2060:	103ff51e 	bne	r2,zero,2038 <__alt_data_end+0xfffa05b8>
    2064:	d9412817 	ldw	r5,1184(sp)
    2068:	d8c13115 	stw	r3,1220(sp)
    206c:	28e3c83a 	sub	r17,r5,r3
    2070:	003ccb06 	br	13a0 <__alt_data_end+0xfff9f920>
    2074:	d8c10e04 	addi	r3,sp,1080
    2078:	0023883a 	mov	r17,zero
    207c:	d8c13115 	stw	r3,1220(sp)
    2080:	003cc706 	br	13a0 <__alt_data_end+0xfff9f920>
    2084:	dc012617 	ldw	r16,1176(sp)
    2088:	0401ab0e 	bge	zero,r16,2738 <___vfprintf_internal_r+0x1984>
    208c:	d8813317 	ldw	r2,1228(sp)
    2090:	d9413117 	ldw	r5,1220(sp)
    2094:	d9013417 	ldw	r4,1232(sp)
    2098:	1023883a 	mov	r17,r2
    209c:	28a1883a 	add	r16,r5,r2
    20a0:	2080010e 	bge	r4,r2,20a8 <___vfprintf_internal_r+0x12f4>
    20a4:	2023883a 	mov	r17,r4
    20a8:	04400b0e 	bge	zero,r17,20d8 <___vfprintf_internal_r+0x1324>
    20ac:	d8811f17 	ldw	r2,1148(sp)
    20b0:	d9413117 	ldw	r5,1220(sp)
    20b4:	1c47883a 	add	r3,r3,r17
    20b8:	10800044 	addi	r2,r2,1
    20bc:	41400015 	stw	r5,0(r8)
    20c0:	44400115 	stw	r17,4(r8)
    20c4:	d8c12015 	stw	r3,1152(sp)
    20c8:	d8811f15 	stw	r2,1148(sp)
    20cc:	010001c4 	movi	r4,7
    20d0:	20826716 	blt	r4,r2,2a70 <___vfprintf_internal_r+0x1cbc>
    20d4:	42000204 	addi	r8,r8,8
    20d8:	88026316 	blt	r17,zero,2a68 <___vfprintf_internal_r+0x1cb4>
    20dc:	d8813417 	ldw	r2,1232(sp)
    20e0:	1463c83a 	sub	r17,r2,r17
    20e4:	0440590e 	bge	zero,r17,224c <___vfprintf_internal_r+0x1498>
    20e8:	04c00404 	movi	r19,16
    20ec:	d8811f17 	ldw	r2,1148(sp)
    20f0:	9c41770e 	bge	r19,r17,26d0 <___vfprintf_internal_r+0x191c>
    20f4:	01400074 	movhi	r5,1
    20f8:	297d6784 	addi	r5,r5,-2658
    20fc:	d9412c15 	stw	r5,1200(sp)
    2100:	054001c4 	movi	r21,7
    2104:	00000306 	br	2114 <___vfprintf_internal_r+0x1360>
    2108:	42000204 	addi	r8,r8,8
    210c:	8c7ffc04 	addi	r17,r17,-16
    2110:	9c41720e 	bge	r19,r17,26dc <___vfprintf_internal_r+0x1928>
    2114:	18c00404 	addi	r3,r3,16
    2118:	10800044 	addi	r2,r2,1
    211c:	45000015 	stw	r20,0(r8)
    2120:	44c00115 	stw	r19,4(r8)
    2124:	d8c12015 	stw	r3,1152(sp)
    2128:	d8811f15 	stw	r2,1148(sp)
    212c:	a8bff60e 	bge	r21,r2,2108 <__alt_data_end+0xfffa0688>
    2130:	b809883a 	mov	r4,r23
    2134:	b00b883a 	mov	r5,r22
    2138:	d9811e04 	addi	r6,sp,1144
    213c:	0006ef00 	call	6ef0 <__sprint_r>
    2140:	103c341e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    2144:	d8c12017 	ldw	r3,1152(sp)
    2148:	d8811f17 	ldw	r2,1148(sp)
    214c:	da000404 	addi	r8,sp,16
    2150:	003fee06 	br	210c <__alt_data_end+0xfffa068c>
    2154:	b809883a 	mov	r4,r23
    2158:	b00b883a 	mov	r5,r22
    215c:	d9811e04 	addi	r6,sp,1144
    2160:	0006ef00 	call	6ef0 <__sprint_r>
    2164:	103c2b1e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    2168:	d8c12017 	ldw	r3,1152(sp)
    216c:	d8812787 	ldb	r2,1182(sp)
    2170:	da000404 	addi	r8,sp,16
    2174:	003cce06 	br	14b0 <__alt_data_end+0xfff9fa30>
    2178:	d8813317 	ldw	r2,1228(sp)
    217c:	14ffffc4 	addi	r19,r2,-1
    2180:	04ff630e 	bge	zero,r19,1f10 <__alt_data_end+0xfffa0490>
    2184:	05400404 	movi	r21,16
    2188:	acc0810e 	bge	r21,r19,2390 <___vfprintf_internal_r+0x15dc>
    218c:	01400074 	movhi	r5,1
    2190:	297d6784 	addi	r5,r5,-2658
    2194:	d9412c15 	stw	r5,1200(sp)
    2198:	01c001c4 	movi	r7,7
    219c:	00000306 	br	21ac <___vfprintf_internal_r+0x13f8>
    21a0:	8c400204 	addi	r17,r17,8
    21a4:	9cfffc04 	addi	r19,r19,-16
    21a8:	acc07c0e 	bge	r21,r19,239c <___vfprintf_internal_r+0x15e8>
    21ac:	18c00404 	addi	r3,r3,16
    21b0:	84000044 	addi	r16,r16,1
    21b4:	8d000015 	stw	r20,0(r17)
    21b8:	8d400115 	stw	r21,4(r17)
    21bc:	d8c12015 	stw	r3,1152(sp)
    21c0:	dc011f15 	stw	r16,1148(sp)
    21c4:	3c3ff60e 	bge	r7,r16,21a0 <__alt_data_end+0xfffa0720>
    21c8:	b809883a 	mov	r4,r23
    21cc:	b00b883a 	mov	r5,r22
    21d0:	d9811e04 	addi	r6,sp,1144
    21d4:	d9c13d15 	stw	r7,1268(sp)
    21d8:	0006ef00 	call	6ef0 <__sprint_r>
    21dc:	d9c13d17 	ldw	r7,1268(sp)
    21e0:	103c0c1e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    21e4:	d8c12017 	ldw	r3,1152(sp)
    21e8:	dc011f17 	ldw	r16,1148(sp)
    21ec:	dc400404 	addi	r17,sp,16
    21f0:	003fec06 	br	21a4 <__alt_data_end+0xfffa0724>
    21f4:	00800084 	movi	r2,2
    21f8:	9546b03a 	or	r3,r18,r21
    21fc:	003d7d06 	br	17f4 <__alt_data_end+0xfff9fd74>
    2200:	10803fcc 	andi	r2,r2,255
    2204:	1080201c 	xori	r2,r2,128
    2208:	10bfe004 	addi	r2,r2,-128
    220c:	01000c04 	movi	r4,48
    2210:	1101d726 	beq	r2,r4,2970 <___vfprintf_internal_r+0x1bbc>
    2214:	d9413117 	ldw	r5,1220(sp)
    2218:	d8812817 	ldw	r2,1184(sp)
    221c:	193fffc5 	stb	r4,-1(r3)
    2220:	297fffc4 	addi	r5,r5,-1
    2224:	d9413115 	stw	r5,1220(sp)
    2228:	1163c83a 	sub	r17,r2,r5
    222c:	003c5c06 	br	13a0 <__alt_data_end+0xfff9f920>
    2230:	b809883a 	mov	r4,r23
    2234:	b00b883a 	mov	r5,r22
    2238:	d9811e04 	addi	r6,sp,1144
    223c:	0006ef00 	call	6ef0 <__sprint_r>
    2240:	103bf41e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    2244:	d8c12017 	ldw	r3,1152(sp)
    2248:	da000404 	addi	r8,sp,16
    224c:	d9413117 	ldw	r5,1220(sp)
    2250:	d9013417 	ldw	r4,1232(sp)
    2254:	d8812617 	ldw	r2,1176(sp)
    2258:	2923883a 	add	r17,r5,r4
    225c:	d9413317 	ldw	r5,1228(sp)
    2260:	11400216 	blt	r2,r5,226c <___vfprintf_internal_r+0x14b8>
    2264:	e100004c 	andi	r4,fp,1
    2268:	20000d26 	beq	r4,zero,22a0 <___vfprintf_internal_r+0x14ec>
    226c:	d9013817 	ldw	r4,1248(sp)
    2270:	d9413517 	ldw	r5,1236(sp)
    2274:	1907883a 	add	r3,r3,r4
    2278:	d9011f17 	ldw	r4,1148(sp)
    227c:	41400015 	stw	r5,0(r8)
    2280:	d9413817 	ldw	r5,1248(sp)
    2284:	21000044 	addi	r4,r4,1
    2288:	d8c12015 	stw	r3,1152(sp)
    228c:	41400115 	stw	r5,4(r8)
    2290:	d9011f15 	stw	r4,1148(sp)
    2294:	014001c4 	movi	r5,7
    2298:	2901fd16 	blt	r5,r4,2a90 <___vfprintf_internal_r+0x1cdc>
    229c:	42000204 	addi	r8,r8,8
    22a0:	d9013317 	ldw	r4,1228(sp)
    22a4:	2085c83a 	sub	r2,r4,r2
    22a8:	8449c83a 	sub	r4,r16,r17
    22ac:	1021883a 	mov	r16,r2
    22b0:	2080010e 	bge	r4,r2,22b8 <___vfprintf_internal_r+0x1504>
    22b4:	2021883a 	mov	r16,r4
    22b8:	04000a0e 	bge	zero,r16,22e4 <___vfprintf_internal_r+0x1530>
    22bc:	d9011f17 	ldw	r4,1148(sp)
    22c0:	1c07883a 	add	r3,r3,r16
    22c4:	44400015 	stw	r17,0(r8)
    22c8:	21000044 	addi	r4,r4,1
    22cc:	44000115 	stw	r16,4(r8)
    22d0:	d8c12015 	stw	r3,1152(sp)
    22d4:	d9011f15 	stw	r4,1148(sp)
    22d8:	014001c4 	movi	r5,7
    22dc:	29020916 	blt	r5,r4,2b04 <___vfprintf_internal_r+0x1d50>
    22e0:	42000204 	addi	r8,r8,8
    22e4:	80020116 	blt	r16,zero,2aec <___vfprintf_internal_r+0x1d38>
    22e8:	1421c83a 	sub	r16,r2,r16
    22ec:	043cc40e 	bge	zero,r16,1600 <__alt_data_end+0xfff9fb80>
    22f0:	04400404 	movi	r17,16
    22f4:	d8811f17 	ldw	r2,1148(sp)
    22f8:	8c3f110e 	bge	r17,r16,1f40 <__alt_data_end+0xfffa04c0>
    22fc:	01400074 	movhi	r5,1
    2300:	297d6784 	addi	r5,r5,-2658
    2304:	d9412c15 	stw	r5,1200(sp)
    2308:	04c001c4 	movi	r19,7
    230c:	00000306 	br	231c <___vfprintf_internal_r+0x1568>
    2310:	42000204 	addi	r8,r8,8
    2314:	843ffc04 	addi	r16,r16,-16
    2318:	8c3f0c0e 	bge	r17,r16,1f4c <__alt_data_end+0xfffa04cc>
    231c:	18c00404 	addi	r3,r3,16
    2320:	10800044 	addi	r2,r2,1
    2324:	45000015 	stw	r20,0(r8)
    2328:	44400115 	stw	r17,4(r8)
    232c:	d8c12015 	stw	r3,1152(sp)
    2330:	d8811f15 	stw	r2,1148(sp)
    2334:	98bff60e 	bge	r19,r2,2310 <__alt_data_end+0xfffa0890>
    2338:	b809883a 	mov	r4,r23
    233c:	b00b883a 	mov	r5,r22
    2340:	d9811e04 	addi	r6,sp,1144
    2344:	0006ef00 	call	6ef0 <__sprint_r>
    2348:	103bb21e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    234c:	d8c12017 	ldw	r3,1152(sp)
    2350:	d8811f17 	ldw	r2,1148(sp)
    2354:	da000404 	addi	r8,sp,16
    2358:	003fee06 	br	2314 <__alt_data_end+0xfffa0894>
    235c:	e088703a 	and	r4,fp,r2
    2360:	203ec01e 	bne	r4,zero,1e64 <__alt_data_end+0xfffa03e4>
    2364:	dc011f17 	ldw	r16,1148(sp)
    2368:	d9013117 	ldw	r4,1220(sp)
    236c:	40800115 	stw	r2,4(r8)
    2370:	84000044 	addi	r16,r16,1
    2374:	41000015 	stw	r4,0(r8)
    2378:	d8c12015 	stw	r3,1152(sp)
    237c:	dc011f15 	stw	r16,1148(sp)
    2380:	008001c4 	movi	r2,7
    2384:	14000e16 	blt	r2,r16,23c0 <___vfprintf_internal_r+0x160c>
    2388:	44400204 	addi	r17,r8,8
    238c:	003ee006 	br	1f10 <__alt_data_end+0xfffa0490>
    2390:	01000074 	movhi	r4,1
    2394:	213d6784 	addi	r4,r4,-2658
    2398:	d9012c15 	stw	r4,1200(sp)
    239c:	d8812c17 	ldw	r2,1200(sp)
    23a0:	1cc7883a 	add	r3,r3,r19
    23a4:	84000044 	addi	r16,r16,1
    23a8:	88800015 	stw	r2,0(r17)
    23ac:	8cc00115 	stw	r19,4(r17)
    23b0:	d8c12015 	stw	r3,1152(sp)
    23b4:	dc011f15 	stw	r16,1148(sp)
    23b8:	008001c4 	movi	r2,7
    23bc:	143ed30e 	bge	r2,r16,1f0c <__alt_data_end+0xfffa048c>
    23c0:	b809883a 	mov	r4,r23
    23c4:	b00b883a 	mov	r5,r22
    23c8:	d9811e04 	addi	r6,sp,1144
    23cc:	0006ef00 	call	6ef0 <__sprint_r>
    23d0:	103b901e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    23d4:	d8c12017 	ldw	r3,1152(sp)
    23d8:	dc011f17 	ldw	r16,1148(sp)
    23dc:	dc400404 	addi	r17,sp,16
    23e0:	003ecb06 	br	1f10 <__alt_data_end+0xfffa0490>
    23e4:	b809883a 	mov	r4,r23
    23e8:	b00b883a 	mov	r5,r22
    23ec:	d9811e04 	addi	r6,sp,1144
    23f0:	0006ef00 	call	6ef0 <__sprint_r>
    23f4:	103b871e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    23f8:	d8c12017 	ldw	r3,1152(sp)
    23fc:	dc011f17 	ldw	r16,1148(sp)
    2400:	da000404 	addi	r8,sp,16
    2404:	003ea206 	br	1e90 <__alt_data_end+0xfffa0410>
    2408:	b809883a 	mov	r4,r23
    240c:	b00b883a 	mov	r5,r22
    2410:	d9811e04 	addi	r6,sp,1144
    2414:	0006ef00 	call	6ef0 <__sprint_r>
    2418:	103b7e1e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    241c:	d8c12017 	ldw	r3,1152(sp)
    2420:	dc011f17 	ldw	r16,1148(sp)
    2424:	dc400404 	addi	r17,sp,16
    2428:	003ea406 	br	1ebc <__alt_data_end+0xfffa043c>
    242c:	b809883a 	mov	r4,r23
    2430:	b00b883a 	mov	r5,r22
    2434:	d9811e04 	addi	r6,sp,1144
    2438:	0006ef00 	call	6ef0 <__sprint_r>
    243c:	103b751e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    2440:	d8c12017 	ldw	r3,1152(sp)
    2444:	da000404 	addi	r8,sp,16
    2448:	003c3706 	br	1528 <__alt_data_end+0xfff9faa8>
    244c:	04a5c83a 	sub	r18,zero,r18
    2450:	9004c03a 	cmpne	r2,r18,zero
    2454:	056bc83a 	sub	r21,zero,r21
    2458:	a8abc83a 	sub	r21,r21,r2
    245c:	04c00b44 	movi	r19,45
    2460:	dcc12785 	stb	r19,1182(sp)
    2464:	da413215 	stw	r9,1224(sp)
    2468:	00800044 	movi	r2,1
    246c:	9546b03a 	or	r3,r18,r21
    2470:	003bb106 	br	1338 <__alt_data_end+0xfff9f8b8>
    2474:	da013f15 	stw	r8,1276(sp)
    2478:	da413e15 	stw	r9,1272(sp)
    247c:	0006b080 	call	6b08 <__fpclassifyd>
    2480:	da013f17 	ldw	r8,1276(sp)
    2484:	da413e17 	ldw	r9,1272(sp)
    2488:	1000e526 	beq	r2,zero,2820 <___vfprintf_internal_r+0x1a6c>
    248c:	04fff7c4 	movi	r19,-33
    2490:	00bfffc4 	movi	r2,-1
    2494:	84e6703a 	and	r19,r16,r19
    2498:	48822926 	beq	r9,r2,2d40 <___vfprintf_internal_r+0x1f8c>
    249c:	008011c4 	movi	r2,71
    24a0:	98821626 	beq	r19,r2,2cfc <___vfprintf_internal_r+0x1f48>
    24a4:	d9013917 	ldw	r4,1252(sp)
    24a8:	e0c04014 	ori	r3,fp,256
    24ac:	d8c12d15 	stw	r3,1204(sp)
    24b0:	20021f16 	blt	r4,zero,2d30 <___vfprintf_internal_r+0x1f7c>
    24b4:	dc413917 	ldw	r17,1252(sp)
    24b8:	d8012b05 	stb	zero,1196(sp)
    24bc:	00801984 	movi	r2,102
    24c0:	80814d26 	beq	r16,r2,29f8 <___vfprintf_internal_r+0x1c44>
    24c4:	00801184 	movi	r2,70
    24c8:	80814b26 	beq	r16,r2,29f8 <___vfprintf_internal_r+0x1c44>
    24cc:	00801144 	movi	r2,69
    24d0:	98821d26 	beq	r19,r2,2d48 <___vfprintf_internal_r+0x1f94>
    24d4:	482b883a 	mov	r21,r9
    24d8:	d8812604 	addi	r2,sp,1176
    24dc:	d8800115 	stw	r2,4(sp)
    24e0:	d9413717 	ldw	r5,1244(sp)
    24e4:	d8812504 	addi	r2,sp,1172
    24e8:	d8800215 	stw	r2,8(sp)
    24ec:	d8812104 	addi	r2,sp,1156
    24f0:	dd400015 	stw	r21,0(sp)
    24f4:	d8800315 	stw	r2,12(sp)
    24f8:	b809883a 	mov	r4,r23
    24fc:	880d883a 	mov	r6,r17
    2500:	01c00084 	movi	r7,2
    2504:	da013f15 	stw	r8,1276(sp)
    2508:	da413e15 	stw	r9,1272(sp)
    250c:	000322c0 	call	322c <_dtoa_r>
    2510:	d8813115 	stw	r2,1220(sp)
    2514:	008019c4 	movi	r2,103
    2518:	da013f17 	ldw	r8,1276(sp)
    251c:	da413e17 	ldw	r9,1272(sp)
    2520:	80800226 	beq	r16,r2,252c <___vfprintf_internal_r+0x1778>
    2524:	008011c4 	movi	r2,71
    2528:	8081451e 	bne	r16,r2,2a40 <___vfprintf_internal_r+0x1c8c>
    252c:	e080004c 	andi	r2,fp,1
    2530:	10021e26 	beq	r2,zero,2dac <___vfprintf_internal_r+0x1ff8>
    2534:	d8c13117 	ldw	r3,1220(sp)
    2538:	1d55883a 	add	r10,r3,r21
    253c:	d9013717 	ldw	r4,1244(sp)
    2540:	880b883a 	mov	r5,r17
    2544:	000d883a 	mov	r6,zero
    2548:	000f883a 	mov	r7,zero
    254c:	da013f15 	stw	r8,1276(sp)
    2550:	da413e15 	stw	r9,1272(sp)
    2554:	da813d15 	stw	r10,1268(sp)
    2558:	000b8080 	call	b808 <__eqdf2>
    255c:	da013f17 	ldw	r8,1276(sp)
    2560:	da413e17 	ldw	r9,1272(sp)
    2564:	da813d17 	ldw	r10,1268(sp)
    2568:	1001a126 	beq	r2,zero,2bf0 <___vfprintf_internal_r+0x1e3c>
    256c:	d8812117 	ldw	r2,1156(sp)
    2570:	1280062e 	bgeu	r2,r10,258c <___vfprintf_internal_r+0x17d8>
    2574:	01000c04 	movi	r4,48
    2578:	10c00044 	addi	r3,r2,1
    257c:	d8c12115 	stw	r3,1156(sp)
    2580:	11000005 	stb	r4,0(r2)
    2584:	d8812117 	ldw	r2,1156(sp)
    2588:	12bffb36 	bltu	r2,r10,2578 <__alt_data_end+0xfffa0af8>
    258c:	d8c13117 	ldw	r3,1220(sp)
    2590:	10c5c83a 	sub	r2,r2,r3
    2594:	d8813315 	stw	r2,1228(sp)
    2598:	008011c4 	movi	r2,71
    259c:	98818926 	beq	r19,r2,2bc4 <___vfprintf_internal_r+0x1e10>
    25a0:	00801944 	movi	r2,101
    25a4:	14023c0e 	bge	r2,r16,2e98 <___vfprintf_internal_r+0x20e4>
    25a8:	d8c12617 	ldw	r3,1176(sp)
    25ac:	00801984 	movi	r2,102
    25b0:	d8c13415 	stw	r3,1232(sp)
    25b4:	8081ef26 	beq	r16,r2,2d74 <___vfprintf_internal_r+0x1fc0>
    25b8:	d8c13417 	ldw	r3,1232(sp)
    25bc:	d9013317 	ldw	r4,1228(sp)
    25c0:	1901e316 	blt	r3,r4,2d50 <___vfprintf_internal_r+0x1f9c>
    25c4:	e080004c 	andi	r2,fp,1
    25c8:	1001f426 	beq	r2,zero,2d9c <___vfprintf_internal_r+0x1fe8>
    25cc:	d8c13417 	ldw	r3,1232(sp)
    25d0:	1c400044 	addi	r17,r3,1
    25d4:	8839883a 	mov	fp,r17
    25d8:	8801e416 	blt	r17,zero,2d6c <___vfprintf_internal_r+0x1fb8>
    25dc:	dd412b07 	ldb	r21,1196(sp)
    25e0:	a801701e 	bne	r21,zero,2ba4 <___vfprintf_internal_r+0x1df0>
    25e4:	df012b15 	stw	fp,1196(sp)
    25e8:	dcc12783 	ldbu	r19,1182(sp)
    25ec:	df012d17 	ldw	fp,1204(sp)
    25f0:	d8013215 	stw	zero,1224(sp)
    25f4:	dc812d15 	stw	r18,1204(sp)
    25f8:	003b6e06 	br	13b4 <__alt_data_end+0xfff9f934>
    25fc:	e080040c 	andi	r2,fp,16
    2600:	1000b51e 	bne	r2,zero,28d8 <___vfprintf_internal_r+0x1b24>
    2604:	e080100c 	andi	r2,fp,64
    2608:	10015b26 	beq	r2,zero,2b78 <___vfprintf_internal_r+0x1dc4>
    260c:	d9012d17 	ldw	r4,1204(sp)
    2610:	d9412f17 	ldw	r5,1212(sp)
    2614:	20800017 	ldw	r2,0(r4)
    2618:	21000104 	addi	r4,r4,4
    261c:	d9012d15 	stw	r4,1204(sp)
    2620:	1140000d 	sth	r5,0(r2)
    2624:	003a2006 	br	ea8 <__alt_data_end+0xfff9f428>
    2628:	e0c0100c 	andi	r3,fp,64
    262c:	1800a226 	beq	r3,zero,28b8 <___vfprintf_internal_r+0x1b04>
    2630:	d8c12d17 	ldw	r3,1204(sp)
    2634:	1480000b 	ldhu	r18,0(r2)
    2638:	002b883a 	mov	r21,zero
    263c:	18c00104 	addi	r3,r3,4
    2640:	d8c12d15 	stw	r3,1204(sp)
    2644:	0005883a 	mov	r2,zero
    2648:	9007883a 	mov	r3,r18
    264c:	003c6906 	br	17f4 <__alt_data_end+0xfff9fd74>
    2650:	e0c0100c 	andi	r3,fp,64
    2654:	18009026 	beq	r3,zero,2898 <___vfprintf_internal_r+0x1ae4>
    2658:	1480000b 	ldhu	r18,0(r2)
    265c:	d8812d17 	ldw	r2,1204(sp)
    2660:	002b883a 	mov	r21,zero
    2664:	9007883a 	mov	r3,r18
    2668:	10800104 	addi	r2,r2,4
    266c:	d8812d15 	stw	r2,1204(sp)
    2670:	00800044 	movi	r2,1
    2674:	003c5f06 	br	17f4 <__alt_data_end+0xfff9fd74>
    2678:	e0c0100c 	andi	r3,fp,64
    267c:	18008026 	beq	r3,zero,2880 <___vfprintf_internal_r+0x1acc>
    2680:	d9012d17 	ldw	r4,1204(sp)
    2684:	1480000b 	ldhu	r18,0(r2)
    2688:	002b883a 	mov	r21,zero
    268c:	21000104 	addi	r4,r4,4
    2690:	d9012d15 	stw	r4,1204(sp)
    2694:	003c7906 	br	187c <__alt_data_end+0xfff9fdfc>
    2698:	e080100c 	andi	r2,fp,64
    269c:	10007126 	beq	r2,zero,2864 <___vfprintf_internal_r+0x1ab0>
    26a0:	1c80000f 	ldh	r18,0(r3)
    26a4:	d8812d17 	ldw	r2,1204(sp)
    26a8:	902bd7fa 	srai	r21,r18,31
    26ac:	10800104 	addi	r2,r2,4
    26b0:	d8812d15 	stw	r2,1204(sp)
    26b4:	a805883a 	mov	r2,r21
    26b8:	003b1a06 	br	1324 <__alt_data_end+0xfff9f8a4>
    26bc:	e4000007 	ldb	r16,0(fp)
    26c0:	e005883a 	mov	r2,fp
    26c4:	003a2306 	br	f54 <__alt_data_end+0xfff9f4d4>
    26c8:	00800084 	movi	r2,2
    26cc:	003c4906 	br	17f4 <__alt_data_end+0xfff9fd74>
    26d0:	01000074 	movhi	r4,1
    26d4:	213d6784 	addi	r4,r4,-2658
    26d8:	d9012c15 	stw	r4,1200(sp)
    26dc:	d9012c17 	ldw	r4,1200(sp)
    26e0:	1c47883a 	add	r3,r3,r17
    26e4:	10800044 	addi	r2,r2,1
    26e8:	41000015 	stw	r4,0(r8)
    26ec:	44400115 	stw	r17,4(r8)
    26f0:	d8c12015 	stw	r3,1152(sp)
    26f4:	d8811f15 	stw	r2,1148(sp)
    26f8:	010001c4 	movi	r4,7
    26fc:	20becc16 	blt	r4,r2,2230 <__alt_data_end+0xfffa07b0>
    2700:	42000204 	addi	r8,r8,8
    2704:	003ed106 	br	224c <__alt_data_end+0xfffa07cc>
    2708:	01000074 	movhi	r4,1
    270c:	213d6784 	addi	r4,r4,-2658
    2710:	d9012c15 	stw	r4,1200(sp)
    2714:	003ba306 	br	15a4 <__alt_data_end+0xfff9fb24>
    2718:	b809883a 	mov	r4,r23
    271c:	b00b883a 	mov	r5,r22
    2720:	d9811e04 	addi	r6,sp,1144
    2724:	0006ef00 	call	6ef0 <__sprint_r>
    2728:	103aba1e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    272c:	d8c12017 	ldw	r3,1152(sp)
    2730:	da000404 	addi	r8,sp,16
    2734:	003d6c06 	br	1ce8 <__alt_data_end+0xfffa0268>
    2738:	d8811f17 	ldw	r2,1148(sp)
    273c:	01400074 	movhi	r5,1
    2740:	01000044 	movi	r4,1
    2744:	18c00044 	addi	r3,r3,1
    2748:	10800044 	addi	r2,r2,1
    274c:	297d6704 	addi	r5,r5,-2660
    2750:	41000115 	stw	r4,4(r8)
    2754:	41400015 	stw	r5,0(r8)
    2758:	d8c12015 	stw	r3,1152(sp)
    275c:	d8811f15 	stw	r2,1148(sp)
    2760:	010001c4 	movi	r4,7
    2764:	20806716 	blt	r4,r2,2904 <___vfprintf_internal_r+0x1b50>
    2768:	42000204 	addi	r8,r8,8
    276c:	8000041e 	bne	r16,zero,2780 <___vfprintf_internal_r+0x19cc>
    2770:	d8813317 	ldw	r2,1228(sp)
    2774:	1000021e 	bne	r2,zero,2780 <___vfprintf_internal_r+0x19cc>
    2778:	e080004c 	andi	r2,fp,1
    277c:	103ba026 	beq	r2,zero,1600 <__alt_data_end+0xfff9fb80>
    2780:	d9013817 	ldw	r4,1248(sp)
    2784:	d8811f17 	ldw	r2,1148(sp)
    2788:	d9413517 	ldw	r5,1236(sp)
    278c:	1907883a 	add	r3,r3,r4
    2790:	10800044 	addi	r2,r2,1
    2794:	41000115 	stw	r4,4(r8)
    2798:	41400015 	stw	r5,0(r8)
    279c:	d8c12015 	stw	r3,1152(sp)
    27a0:	d8811f15 	stw	r2,1148(sp)
    27a4:	010001c4 	movi	r4,7
    27a8:	20815716 	blt	r4,r2,2d08 <___vfprintf_internal_r+0x1f54>
    27ac:	42000204 	addi	r8,r8,8
    27b0:	0421c83a 	sub	r16,zero,r16
    27b4:	0400810e 	bge	zero,r16,29bc <___vfprintf_internal_r+0x1c08>
    27b8:	04400404 	movi	r17,16
    27bc:	8c00bd0e 	bge	r17,r16,2ab4 <___vfprintf_internal_r+0x1d00>
    27c0:	01400074 	movhi	r5,1
    27c4:	297d6784 	addi	r5,r5,-2658
    27c8:	d9412c15 	stw	r5,1200(sp)
    27cc:	04c001c4 	movi	r19,7
    27d0:	00000306 	br	27e0 <___vfprintf_internal_r+0x1a2c>
    27d4:	42000204 	addi	r8,r8,8
    27d8:	843ffc04 	addi	r16,r16,-16
    27dc:	8c00b80e 	bge	r17,r16,2ac0 <___vfprintf_internal_r+0x1d0c>
    27e0:	18c00404 	addi	r3,r3,16
    27e4:	10800044 	addi	r2,r2,1
    27e8:	45000015 	stw	r20,0(r8)
    27ec:	44400115 	stw	r17,4(r8)
    27f0:	d8c12015 	stw	r3,1152(sp)
    27f4:	d8811f15 	stw	r2,1148(sp)
    27f8:	98bff60e 	bge	r19,r2,27d4 <__alt_data_end+0xfffa0d54>
    27fc:	b809883a 	mov	r4,r23
    2800:	b00b883a 	mov	r5,r22
    2804:	d9811e04 	addi	r6,sp,1144
    2808:	0006ef00 	call	6ef0 <__sprint_r>
    280c:	103a811e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    2810:	d8c12017 	ldw	r3,1152(sp)
    2814:	d8811f17 	ldw	r2,1148(sp)
    2818:	da000404 	addi	r8,sp,16
    281c:	003fee06 	br	27d8 <__alt_data_end+0xfffa0d58>
    2820:	008011c4 	movi	r2,71
    2824:	1400db16 	blt	r2,r16,2b94 <___vfprintf_internal_r+0x1de0>
    2828:	01000074 	movhi	r4,1
    282c:	213d5904 	addi	r4,r4,-2716
    2830:	d9013115 	stw	r4,1220(sp)
    2834:	00c000c4 	movi	r3,3
    2838:	00bfdfc4 	movi	r2,-129
    283c:	d8c12b15 	stw	r3,1196(sp)
    2840:	e0b8703a 	and	fp,fp,r2
    2844:	dcc12783 	ldbu	r19,1182(sp)
    2848:	dc812d15 	stw	r18,1204(sp)
    284c:	1823883a 	mov	r17,r3
    2850:	d8013215 	stw	zero,1224(sp)
    2854:	d8013415 	stw	zero,1232(sp)
    2858:	003ad606 	br	13b4 <__alt_data_end+0xfff9f934>
    285c:	4823883a 	mov	r17,r9
    2860:	003cc906 	br	1b88 <__alt_data_end+0xfffa0108>
    2864:	1c800017 	ldw	r18,0(r3)
    2868:	d8c12d17 	ldw	r3,1204(sp)
    286c:	902bd7fa 	srai	r21,r18,31
    2870:	18c00104 	addi	r3,r3,4
    2874:	d8c12d15 	stw	r3,1204(sp)
    2878:	a805883a 	mov	r2,r21
    287c:	003aa906 	br	1324 <__alt_data_end+0xfff9f8a4>
    2880:	d9412d17 	ldw	r5,1204(sp)
    2884:	14800017 	ldw	r18,0(r2)
    2888:	002b883a 	mov	r21,zero
    288c:	29400104 	addi	r5,r5,4
    2890:	d9412d15 	stw	r5,1204(sp)
    2894:	003bf906 	br	187c <__alt_data_end+0xfff9fdfc>
    2898:	d8c12d17 	ldw	r3,1204(sp)
    289c:	14800017 	ldw	r18,0(r2)
    28a0:	002b883a 	mov	r21,zero
    28a4:	18c00104 	addi	r3,r3,4
    28a8:	d8c12d15 	stw	r3,1204(sp)
    28ac:	00800044 	movi	r2,1
    28b0:	9007883a 	mov	r3,r18
    28b4:	003bcf06 	br	17f4 <__alt_data_end+0xfff9fd74>
    28b8:	d9012d17 	ldw	r4,1204(sp)
    28bc:	14800017 	ldw	r18,0(r2)
    28c0:	002b883a 	mov	r21,zero
    28c4:	21000104 	addi	r4,r4,4
    28c8:	d9012d15 	stw	r4,1204(sp)
    28cc:	0005883a 	mov	r2,zero
    28d0:	9007883a 	mov	r3,r18
    28d4:	003bc706 	br	17f4 <__alt_data_end+0xfff9fd74>
    28d8:	d9412d17 	ldw	r5,1204(sp)
    28dc:	d8c12f17 	ldw	r3,1212(sp)
    28e0:	28800017 	ldw	r2,0(r5)
    28e4:	29400104 	addi	r5,r5,4
    28e8:	d9412d15 	stw	r5,1204(sp)
    28ec:	10c00015 	stw	r3,0(r2)
    28f0:	00396d06 	br	ea8 <__alt_data_end+0xfff9f428>
    28f4:	01000074 	movhi	r4,1
    28f8:	213d5704 	addi	r4,r4,-2724
    28fc:	d9013115 	stw	r4,1220(sp)
    2900:	003ba206 	br	178c <__alt_data_end+0xfff9fd0c>
    2904:	b809883a 	mov	r4,r23
    2908:	b00b883a 	mov	r5,r22
    290c:	d9811e04 	addi	r6,sp,1144
    2910:	0006ef00 	call	6ef0 <__sprint_r>
    2914:	103a3f1e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    2918:	dc012617 	ldw	r16,1176(sp)
    291c:	d8c12017 	ldw	r3,1152(sp)
    2920:	da000404 	addi	r8,sp,16
    2924:	003f9106 	br	276c <__alt_data_end+0xfffa0cec>
    2928:	e0800044 	addi	r2,fp,1
    292c:	9cc00814 	ori	r19,r19,32
    2930:	e4000047 	ldb	r16,1(fp)
    2934:	00398706 	br	f54 <__alt_data_end+0xfff9f4d4>
    2938:	d8812e17 	ldw	r2,1208(sp)
    293c:	d8c12d15 	stw	r3,1204(sp)
    2940:	0085c83a 	sub	r2,zero,r2
    2944:	d8812e15 	stw	r2,1208(sp)
    2948:	e005883a 	mov	r2,fp
    294c:	003a3a06 	br	1238 <__alt_data_end+0xfff9f7b8>
    2950:	b809883a 	mov	r4,r23
    2954:	b00b883a 	mov	r5,r22
    2958:	d9811e04 	addi	r6,sp,1144
    295c:	0006ef00 	call	6ef0 <__sprint_r>
    2960:	103a2c1e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    2964:	d8c12017 	ldw	r3,1152(sp)
    2968:	da000404 	addi	r8,sp,16
    296c:	003cf006 	br	1d30 <__alt_data_end+0xfffa02b0>
    2970:	d8c12817 	ldw	r3,1184(sp)
    2974:	d9013117 	ldw	r4,1220(sp)
    2978:	1923c83a 	sub	r17,r3,r4
    297c:	003a8806 	br	13a0 <__alt_data_end+0xfff9f920>
    2980:	da013f15 	stw	r8,1276(sp)
    2984:	0006d5c0 	call	6d5c <strlen>
    2988:	1023883a 	mov	r17,r2
    298c:	da013f17 	ldw	r8,1276(sp)
    2990:	883c7f0e 	bge	r17,zero,1b90 <__alt_data_end+0xfffa0110>
    2994:	0005883a 	mov	r2,zero
    2998:	003c7d06 	br	1b90 <__alt_data_end+0xfffa0110>
    299c:	b809883a 	mov	r4,r23
    29a0:	b00b883a 	mov	r5,r22
    29a4:	d9811e04 	addi	r6,sp,1144
    29a8:	0006ef00 	call	6ef0 <__sprint_r>
    29ac:	103a191e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    29b0:	d8c12017 	ldw	r3,1152(sp)
    29b4:	d8811f17 	ldw	r2,1148(sp)
    29b8:	da000404 	addi	r8,sp,16
    29bc:	d9413317 	ldw	r5,1228(sp)
    29c0:	d9013117 	ldw	r4,1220(sp)
    29c4:	10800044 	addi	r2,r2,1
    29c8:	28c7883a 	add	r3,r5,r3
    29cc:	41000015 	stw	r4,0(r8)
    29d0:	41400115 	stw	r5,4(r8)
    29d4:	d8c12015 	stw	r3,1152(sp)
    29d8:	d8811f15 	stw	r2,1148(sp)
    29dc:	010001c4 	movi	r4,7
    29e0:	20bb060e 	bge	r4,r2,15fc <__alt_data_end+0xfff9fb7c>
    29e4:	003d6206 	br	1f70 <__alt_data_end+0xfffa04f0>
    29e8:	01000074 	movhi	r4,1
    29ec:	213d6b84 	addi	r4,r4,-2642
    29f0:	d9013615 	stw	r4,1240(sp)
    29f4:	003aa306 	br	1484 <__alt_data_end+0xfff9fa04>
    29f8:	d8812604 	addi	r2,sp,1176
    29fc:	d8800115 	stw	r2,4(sp)
    2a00:	d9413717 	ldw	r5,1244(sp)
    2a04:	d8812504 	addi	r2,sp,1172
    2a08:	d8800215 	stw	r2,8(sp)
    2a0c:	d8812104 	addi	r2,sp,1156
    2a10:	da400015 	stw	r9,0(sp)
    2a14:	d8800315 	stw	r2,12(sp)
    2a18:	b809883a 	mov	r4,r23
    2a1c:	880d883a 	mov	r6,r17
    2a20:	01c000c4 	movi	r7,3
    2a24:	da013f15 	stw	r8,1276(sp)
    2a28:	da413e15 	stw	r9,1272(sp)
    2a2c:	000322c0 	call	322c <_dtoa_r>
    2a30:	da413e17 	ldw	r9,1272(sp)
    2a34:	da013f17 	ldw	r8,1276(sp)
    2a38:	d8813115 	stw	r2,1220(sp)
    2a3c:	482b883a 	mov	r21,r9
    2a40:	d8c13117 	ldw	r3,1220(sp)
    2a44:	00801184 	movi	r2,70
    2a48:	1d55883a 	add	r10,r3,r21
    2a4c:	98bebb1e 	bne	r19,r2,253c <__alt_data_end+0xfffa0abc>
    2a50:	19000007 	ldb	r4,0(r3)
    2a54:	00800c04 	movi	r2,48
    2a58:	2080dd26 	beq	r4,r2,2dd0 <___vfprintf_internal_r+0x201c>
    2a5c:	d8c12617 	ldw	r3,1176(sp)
    2a60:	50d5883a 	add	r10,r10,r3
    2a64:	003eb506 	br	253c <__alt_data_end+0xfffa0abc>
    2a68:	0023883a 	mov	r17,zero
    2a6c:	003d9b06 	br	20dc <__alt_data_end+0xfffa065c>
    2a70:	b809883a 	mov	r4,r23
    2a74:	b00b883a 	mov	r5,r22
    2a78:	d9811e04 	addi	r6,sp,1144
    2a7c:	0006ef00 	call	6ef0 <__sprint_r>
    2a80:	1039e41e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    2a84:	d8c12017 	ldw	r3,1152(sp)
    2a88:	da000404 	addi	r8,sp,16
    2a8c:	003d9206 	br	20d8 <__alt_data_end+0xfffa0658>
    2a90:	b809883a 	mov	r4,r23
    2a94:	b00b883a 	mov	r5,r22
    2a98:	d9811e04 	addi	r6,sp,1144
    2a9c:	0006ef00 	call	6ef0 <__sprint_r>
    2aa0:	1039dc1e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    2aa4:	d8812617 	ldw	r2,1176(sp)
    2aa8:	d8c12017 	ldw	r3,1152(sp)
    2aac:	da000404 	addi	r8,sp,16
    2ab0:	003dfb06 	br	22a0 <__alt_data_end+0xfffa0820>
    2ab4:	01000074 	movhi	r4,1
    2ab8:	213d6784 	addi	r4,r4,-2658
    2abc:	d9012c15 	stw	r4,1200(sp)
    2ac0:	d9012c17 	ldw	r4,1200(sp)
    2ac4:	1c07883a 	add	r3,r3,r16
    2ac8:	10800044 	addi	r2,r2,1
    2acc:	41000015 	stw	r4,0(r8)
    2ad0:	44000115 	stw	r16,4(r8)
    2ad4:	d8c12015 	stw	r3,1152(sp)
    2ad8:	d8811f15 	stw	r2,1148(sp)
    2adc:	010001c4 	movi	r4,7
    2ae0:	20bfae16 	blt	r4,r2,299c <__alt_data_end+0xfffa0f1c>
    2ae4:	42000204 	addi	r8,r8,8
    2ae8:	003fb406 	br	29bc <__alt_data_end+0xfffa0f3c>
    2aec:	0021883a 	mov	r16,zero
    2af0:	003dfd06 	br	22e8 <__alt_data_end+0xfffa0868>
    2af4:	01400074 	movhi	r5,1
    2af8:	297d6b84 	addi	r5,r5,-2642
    2afc:	d9413615 	stw	r5,1240(sp)
    2b00:	003ae306 	br	1690 <__alt_data_end+0xfff9fc10>
    2b04:	b809883a 	mov	r4,r23
    2b08:	b00b883a 	mov	r5,r22
    2b0c:	d9811e04 	addi	r6,sp,1144
    2b10:	0006ef00 	call	6ef0 <__sprint_r>
    2b14:	1039bf1e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    2b18:	d8812617 	ldw	r2,1176(sp)
    2b1c:	d9413317 	ldw	r5,1228(sp)
    2b20:	d8c12017 	ldw	r3,1152(sp)
    2b24:	da000404 	addi	r8,sp,16
    2b28:	2885c83a 	sub	r2,r5,r2
    2b2c:	003ded06 	br	22e4 <__alt_data_end+0xfffa0864>
    2b30:	00800184 	movi	r2,6
    2b34:	1240012e 	bgeu	r2,r9,2b3c <___vfprintf_internal_r+0x1d88>
    2b38:	1013883a 	mov	r9,r2
    2b3c:	4823883a 	mov	r17,r9
    2b40:	4805883a 	mov	r2,r9
    2b44:	4800b216 	blt	r9,zero,2e10 <___vfprintf_internal_r+0x205c>
    2b48:	01400074 	movhi	r5,1
    2b4c:	297d6504 	addi	r5,r5,-2668
    2b50:	d8812b15 	stw	r2,1196(sp)
    2b54:	dc812d15 	stw	r18,1204(sp)
    2b58:	d8013215 	stw	zero,1224(sp)
    2b5c:	d8013415 	stw	zero,1232(sp)
    2b60:	d9413115 	stw	r5,1220(sp)
    2b64:	0005883a 	mov	r2,zero
    2b68:	003a1906 	br	13d0 <__alt_data_end+0xfff9f950>
    2b6c:	04c00b44 	movi	r19,45
    2b70:	dcc12785 	stb	r19,1182(sp)
    2b74:	003b0006 	br	1778 <__alt_data_end+0xfff9fcf8>
    2b78:	d8c12d17 	ldw	r3,1204(sp)
    2b7c:	d9012f17 	ldw	r4,1212(sp)
    2b80:	18800017 	ldw	r2,0(r3)
    2b84:	18c00104 	addi	r3,r3,4
    2b88:	d8c12d15 	stw	r3,1204(sp)
    2b8c:	11000015 	stw	r4,0(r2)
    2b90:	0038c506 	br	ea8 <__alt_data_end+0xfff9f428>
    2b94:	01400074 	movhi	r5,1
    2b98:	297d5a04 	addi	r5,r5,-2712
    2b9c:	d9413115 	stw	r5,1220(sp)
    2ba0:	003f2406 	br	2834 <__alt_data_end+0xfffa0db4>
    2ba4:	00800b44 	movi	r2,45
    2ba8:	d8812785 	stb	r2,1182(sp)
    2bac:	df012b15 	stw	fp,1196(sp)
    2bb0:	d8013215 	stw	zero,1224(sp)
    2bb4:	df012d17 	ldw	fp,1204(sp)
    2bb8:	00800b44 	movi	r2,45
    2bbc:	dc812d15 	stw	r18,1204(sp)
    2bc0:	003a0006 	br	13c4 <__alt_data_end+0xfff9f944>
    2bc4:	d8c12617 	ldw	r3,1176(sp)
    2bc8:	00bfff44 	movi	r2,-3
    2bcc:	18800a16 	blt	r3,r2,2bf8 <___vfprintf_internal_r+0x1e44>
    2bd0:	48c00916 	blt	r9,r3,2bf8 <___vfprintf_internal_r+0x1e44>
    2bd4:	d8c13415 	stw	r3,1232(sp)
    2bd8:	040019c4 	movi	r16,103
    2bdc:	003e7606 	br	25b8 <__alt_data_end+0xfffa0b38>
    2be0:	01000074 	movhi	r4,1
    2be4:	213d6784 	addi	r4,r4,-2658
    2be8:	d9012c15 	stw	r4,1200(sp)
    2bec:	003c8e06 	br	1e28 <__alt_data_end+0xfffa03a8>
    2bf0:	5005883a 	mov	r2,r10
    2bf4:	003e6506 	br	258c <__alt_data_end+0xfffa0b0c>
    2bf8:	843fff84 	addi	r16,r16,-2
    2bfc:	1d7fffc4 	addi	r21,r3,-1
    2c00:	dd412615 	stw	r21,1176(sp)
    2c04:	dc0122c5 	stb	r16,1163(sp)
    2c08:	a8009216 	blt	r21,zero,2e54 <___vfprintf_internal_r+0x20a0>
    2c0c:	00800ac4 	movi	r2,43
    2c10:	d8812305 	stb	r2,1164(sp)
    2c14:	00800244 	movi	r2,9
    2c18:	1540660e 	bge	r2,r21,2db4 <___vfprintf_internal_r+0x2000>
    2c1c:	dcc122c4 	addi	r19,sp,1163
    2c20:	dc012c15 	stw	r16,1200(sp)
    2c24:	4023883a 	mov	r17,r8
    2c28:	9821883a 	mov	r16,r19
    2c2c:	a809883a 	mov	r4,r21
    2c30:	01400284 	movi	r5,10
    2c34:	000a5580 	call	a558 <__modsi3>
    2c38:	10800c04 	addi	r2,r2,48
    2c3c:	843fffc4 	addi	r16,r16,-1
    2c40:	a809883a 	mov	r4,r21
    2c44:	01400284 	movi	r5,10
    2c48:	80800005 	stb	r2,0(r16)
    2c4c:	000a5040 	call	a504 <__divsi3>
    2c50:	01000244 	movi	r4,9
    2c54:	102b883a 	mov	r21,r2
    2c58:	20bff416 	blt	r4,r2,2c2c <__alt_data_end+0xfffa11ac>
    2c5c:	8811883a 	mov	r8,r17
    2c60:	10800c04 	addi	r2,r2,48
    2c64:	8023883a 	mov	r17,r16
    2c68:	897fffc4 	addi	r5,r17,-1
    2c6c:	88bfffc5 	stb	r2,-1(r17)
    2c70:	dc012c17 	ldw	r16,1200(sp)
    2c74:	2cc08a2e 	bgeu	r5,r19,2ea0 <___vfprintf_internal_r+0x20ec>
    2c78:	d9812384 	addi	r6,sp,1166
    2c7c:	344dc83a 	sub	r6,r6,r17
    2c80:	d9012344 	addi	r4,sp,1165
    2c84:	998d883a 	add	r6,r19,r6
    2c88:	00000106 	br	2c90 <___vfprintf_internal_r+0x1edc>
    2c8c:	28800003 	ldbu	r2,0(r5)
    2c90:	20800005 	stb	r2,0(r4)
    2c94:	21000044 	addi	r4,r4,1
    2c98:	29400044 	addi	r5,r5,1
    2c9c:	21bffb1e 	bne	r4,r6,2c8c <__alt_data_end+0xfffa120c>
    2ca0:	d8812304 	addi	r2,sp,1164
    2ca4:	1445c83a 	sub	r2,r2,r17
    2ca8:	d9412344 	addi	r5,sp,1165
    2cac:	2885883a 	add	r2,r5,r2
    2cb0:	14e7c83a 	sub	r19,r2,r19
    2cb4:	d8813317 	ldw	r2,1228(sp)
    2cb8:	d8c13317 	ldw	r3,1228(sp)
    2cbc:	dcc13a15 	stw	r19,1256(sp)
    2cc0:	14e3883a 	add	r17,r2,r19
    2cc4:	00800044 	movi	r2,1
    2cc8:	10c0550e 	bge	r2,r3,2e20 <___vfprintf_internal_r+0x206c>
    2ccc:	8c400044 	addi	r17,r17,1
    2cd0:	8839883a 	mov	fp,r17
    2cd4:	88005016 	blt	r17,zero,2e18 <___vfprintf_internal_r+0x2064>
    2cd8:	d8013415 	stw	zero,1232(sp)
    2cdc:	003e3f06 	br	25dc <__alt_data_end+0xfffa0b5c>
    2ce0:	da412b15 	stw	r9,1196(sp)
    2ce4:	dcc12783 	ldbu	r19,1182(sp)
    2ce8:	4823883a 	mov	r17,r9
    2cec:	dc812d15 	stw	r18,1204(sp)
    2cf0:	d8013215 	stw	zero,1224(sp)
    2cf4:	d8013415 	stw	zero,1232(sp)
    2cf8:	0039ae06 	br	13b4 <__alt_data_end+0xfff9f934>
    2cfc:	483de91e 	bne	r9,zero,24a4 <__alt_data_end+0xfffa0a24>
    2d00:	8813883a 	mov	r9,r17
    2d04:	003de706 	br	24a4 <__alt_data_end+0xfffa0a24>
    2d08:	b809883a 	mov	r4,r23
    2d0c:	b00b883a 	mov	r5,r22
    2d10:	d9811e04 	addi	r6,sp,1144
    2d14:	0006ef00 	call	6ef0 <__sprint_r>
    2d18:	10393e1e 	bne	r2,zero,1214 <__alt_data_end+0xfff9f794>
    2d1c:	dc012617 	ldw	r16,1176(sp)
    2d20:	d8c12017 	ldw	r3,1152(sp)
    2d24:	d8811f17 	ldw	r2,1148(sp)
    2d28:	da000404 	addi	r8,sp,16
    2d2c:	003ea006 	br	27b0 <__alt_data_end+0xfffa0d30>
    2d30:	00c00b44 	movi	r3,45
    2d34:	2460003c 	xorhi	r17,r4,32768
    2d38:	d8c12b05 	stb	r3,1196(sp)
    2d3c:	003ddf06 	br	24bc <__alt_data_end+0xfffa0a3c>
    2d40:	02400184 	movi	r9,6
    2d44:	003dd706 	br	24a4 <__alt_data_end+0xfffa0a24>
    2d48:	4d400044 	addi	r21,r9,1
    2d4c:	003de206 	br	24d8 <__alt_data_end+0xfffa0a58>
    2d50:	d8c13417 	ldw	r3,1232(sp)
    2d54:	00c0490e 	bge	zero,r3,2e7c <___vfprintf_internal_r+0x20c8>
    2d58:	04400044 	movi	r17,1
    2d5c:	d9013317 	ldw	r4,1228(sp)
    2d60:	8923883a 	add	r17,r17,r4
    2d64:	8839883a 	mov	fp,r17
    2d68:	883e1c0e 	bge	r17,zero,25dc <__alt_data_end+0xfffa0b5c>
    2d6c:	0039883a 	mov	fp,zero
    2d70:	003e1a06 	br	25dc <__alt_data_end+0xfffa0b5c>
    2d74:	00c03b0e 	bge	zero,r3,2e64 <___vfprintf_internal_r+0x20b0>
    2d78:	4800021e 	bne	r9,zero,2d84 <___vfprintf_internal_r+0x1fd0>
    2d7c:	e080004c 	andi	r2,fp,1
    2d80:	10000626 	beq	r2,zero,2d9c <___vfprintf_internal_r+0x1fe8>
    2d84:	d8c13417 	ldw	r3,1232(sp)
    2d88:	4a400044 	addi	r9,r9,1
    2d8c:	1a63883a 	add	r17,r3,r9
    2d90:	8839883a 	mov	fp,r17
    2d94:	883e110e 	bge	r17,zero,25dc <__alt_data_end+0xfffa0b5c>
    2d98:	003ff406 	br	2d6c <__alt_data_end+0xfffa12ec>
    2d9c:	1839883a 	mov	fp,r3
    2da0:	18004116 	blt	r3,zero,2ea8 <___vfprintf_internal_r+0x20f4>
    2da4:	dc413417 	ldw	r17,1232(sp)
    2da8:	003e0c06 	br	25dc <__alt_data_end+0xfffa0b5c>
    2dac:	d8812117 	ldw	r2,1156(sp)
    2db0:	003df606 	br	258c <__alt_data_end+0xfffa0b0c>
    2db4:	00800c04 	movi	r2,48
    2db8:	a8c00c04 	addi	r3,r21,48
    2dbc:	d8812345 	stb	r2,1165(sp)
    2dc0:	d8c12385 	stb	r3,1166(sp)
    2dc4:	d88123c4 	addi	r2,sp,1167
    2dc8:	dcc122c4 	addi	r19,sp,1163
    2dcc:	003fb806 	br	2cb0 <__alt_data_end+0xfffa1230>
    2dd0:	d9013717 	ldw	r4,1244(sp)
    2dd4:	880b883a 	mov	r5,r17
    2dd8:	000d883a 	mov	r6,zero
    2ddc:	000f883a 	mov	r7,zero
    2de0:	da013f15 	stw	r8,1276(sp)
    2de4:	da413e15 	stw	r9,1272(sp)
    2de8:	da813d15 	stw	r10,1268(sp)
    2dec:	000b8080 	call	b808 <__eqdf2>
    2df0:	da013f17 	ldw	r8,1276(sp)
    2df4:	da413e17 	ldw	r9,1272(sp)
    2df8:	da813d17 	ldw	r10,1268(sp)
    2dfc:	103f1726 	beq	r2,zero,2a5c <__alt_data_end+0xfffa0fdc>
    2e00:	00800044 	movi	r2,1
    2e04:	1547c83a 	sub	r3,r2,r21
    2e08:	d8c12615 	stw	r3,1176(sp)
    2e0c:	003f1406 	br	2a60 <__alt_data_end+0xfffa0fe0>
    2e10:	0005883a 	mov	r2,zero
    2e14:	003f4c06 	br	2b48 <__alt_data_end+0xfffa10c8>
    2e18:	0039883a 	mov	fp,zero
    2e1c:	003fae06 	br	2cd8 <__alt_data_end+0xfffa1258>
    2e20:	e084703a 	and	r2,fp,r2
    2e24:	103faa26 	beq	r2,zero,2cd0 <__alt_data_end+0xfffa1250>
    2e28:	003fa806 	br	2ccc <__alt_data_end+0xfffa124c>
    2e2c:	d9412d17 	ldw	r5,1204(sp)
    2e30:	2a400017 	ldw	r9,0(r5)
    2e34:	28c00104 	addi	r3,r5,4
    2e38:	d8c12d15 	stw	r3,1204(sp)
    2e3c:	483ebc0e 	bge	r9,zero,2930 <__alt_data_end+0xfffa0eb0>
    2e40:	027fffc4 	movi	r9,-1
    2e44:	e4000047 	ldb	r16,1(fp)
    2e48:	00384206 	br	f54 <__alt_data_end+0xfff9f4d4>
    2e4c:	043fffc4 	movi	r16,-1
    2e50:	0038ce06 	br	118c <__alt_data_end+0xfff9f70c>
    2e54:	00800b44 	movi	r2,45
    2e58:	056bc83a 	sub	r21,zero,r21
    2e5c:	d8812305 	stb	r2,1164(sp)
    2e60:	003f6c06 	br	2c14 <__alt_data_end+0xfffa1194>
    2e64:	4800081e 	bne	r9,zero,2e88 <___vfprintf_internal_r+0x20d4>
    2e68:	e080004c 	andi	r2,fp,1
    2e6c:	1000061e 	bne	r2,zero,2e88 <___vfprintf_internal_r+0x20d4>
    2e70:	07000044 	movi	fp,1
    2e74:	e023883a 	mov	r17,fp
    2e78:	003dd806 	br	25dc <__alt_data_end+0xfffa0b5c>
    2e7c:	04400084 	movi	r17,2
    2e80:	88e3c83a 	sub	r17,r17,r3
    2e84:	003fb506 	br	2d5c <__alt_data_end+0xfffa12dc>
    2e88:	4c400084 	addi	r17,r9,2
    2e8c:	8839883a 	mov	fp,r17
    2e90:	883dd20e 	bge	r17,zero,25dc <__alt_data_end+0xfffa0b5c>
    2e94:	003fb506 	br	2d6c <__alt_data_end+0xfffa12ec>
    2e98:	d8c12617 	ldw	r3,1176(sp)
    2e9c:	003f5706 	br	2bfc <__alt_data_end+0xfffa117c>
    2ea0:	d8812344 	addi	r2,sp,1165
    2ea4:	003f8206 	br	2cb0 <__alt_data_end+0xfffa1230>
    2ea8:	0039883a 	mov	fp,zero
    2eac:	003fbd06 	br	2da4 <__alt_data_end+0xfffa1324>

00002eb0 <__vfprintf_internal>:
    2eb0:	2007883a 	mov	r3,r4
    2eb4:	01000074 	movhi	r4,1
    2eb8:	2104c404 	addi	r4,r4,4880
    2ebc:	21000017 	ldw	r4,0(r4)
    2ec0:	2805883a 	mov	r2,r5
    2ec4:	300f883a 	mov	r7,r6
    2ec8:	180b883a 	mov	r5,r3
    2ecc:	100d883a 	mov	r6,r2
    2ed0:	0000db41 	jmpi	db4 <___vfprintf_internal_r>

00002ed4 <__swsetup_r>:
    2ed4:	00800074 	movhi	r2,1
    2ed8:	defffd04 	addi	sp,sp,-12
    2edc:	1084c404 	addi	r2,r2,4880
    2ee0:	dc400115 	stw	r17,4(sp)
    2ee4:	2023883a 	mov	r17,r4
    2ee8:	11000017 	ldw	r4,0(r2)
    2eec:	dc000015 	stw	r16,0(sp)
    2ef0:	dfc00215 	stw	ra,8(sp)
    2ef4:	2821883a 	mov	r16,r5
    2ef8:	20000226 	beq	r4,zero,2f04 <__swsetup_r+0x30>
    2efc:	20c00e17 	ldw	r3,56(r4)
    2f00:	18002e26 	beq	r3,zero,2fbc <__swsetup_r+0xe8>
    2f04:	8080030b 	ldhu	r2,12(r16)
    2f08:	10c0020c 	andi	r3,r2,8
    2f0c:	100d883a 	mov	r6,r2
    2f10:	18000f26 	beq	r3,zero,2f50 <__swsetup_r+0x7c>
    2f14:	80c00417 	ldw	r3,16(r16)
    2f18:	18001526 	beq	r3,zero,2f70 <__swsetup_r+0x9c>
    2f1c:	1100004c 	andi	r4,r2,1
    2f20:	20001c1e 	bne	r4,zero,2f94 <__swsetup_r+0xc0>
    2f24:	1080008c 	andi	r2,r2,2
    2f28:	1000261e 	bne	r2,zero,2fc4 <__swsetup_r+0xf0>
    2f2c:	80800517 	ldw	r2,20(r16)
    2f30:	80800215 	stw	r2,8(r16)
    2f34:	18001c26 	beq	r3,zero,2fa8 <__swsetup_r+0xd4>
    2f38:	0005883a 	mov	r2,zero
    2f3c:	dfc00217 	ldw	ra,8(sp)
    2f40:	dc400117 	ldw	r17,4(sp)
    2f44:	dc000017 	ldw	r16,0(sp)
    2f48:	dec00304 	addi	sp,sp,12
    2f4c:	f800283a 	ret
    2f50:	3080040c 	andi	r2,r6,16
    2f54:	10001726 	beq	r2,zero,2fb4 <__swsetup_r+0xe0>
    2f58:	3080010c 	andi	r2,r6,4
    2f5c:	10001b1e 	bne	r2,zero,2fcc <__swsetup_r+0xf8>
    2f60:	80c00417 	ldw	r3,16(r16)
    2f64:	30800214 	ori	r2,r6,8
    2f68:	8080030d 	sth	r2,12(r16)
    2f6c:	183feb1e 	bne	r3,zero,2f1c <__alt_data_end+0xfffa149c>
    2f70:	1140a00c 	andi	r5,r2,640
    2f74:	01008004 	movi	r4,512
    2f78:	293fe826 	beq	r5,r4,2f1c <__alt_data_end+0xfffa149c>
    2f7c:	8809883a 	mov	r4,r17
    2f80:	800b883a 	mov	r5,r16
    2f84:	00055c40 	call	55c4 <__smakebuf_r>
    2f88:	8080030b 	ldhu	r2,12(r16)
    2f8c:	80c00417 	ldw	r3,16(r16)
    2f90:	003fe206 	br	2f1c <__alt_data_end+0xfffa149c>
    2f94:	80800517 	ldw	r2,20(r16)
    2f98:	80000215 	stw	zero,8(r16)
    2f9c:	0085c83a 	sub	r2,zero,r2
    2fa0:	80800615 	stw	r2,24(r16)
    2fa4:	183fe41e 	bne	r3,zero,2f38 <__alt_data_end+0xfffa14b8>
    2fa8:	8080030b 	ldhu	r2,12(r16)
    2fac:	1080200c 	andi	r2,r2,128
    2fb0:	103fe226 	beq	r2,zero,2f3c <__alt_data_end+0xfffa14bc>
    2fb4:	00bfffc4 	movi	r2,-1
    2fb8:	003fe006 	br	2f3c <__alt_data_end+0xfffa14bc>
    2fbc:	0004f100 	call	4f10 <__sinit>
    2fc0:	003fd006 	br	2f04 <__alt_data_end+0xfffa1484>
    2fc4:	0005883a 	mov	r2,zero
    2fc8:	003fd906 	br	2f30 <__alt_data_end+0xfffa14b0>
    2fcc:	81400c17 	ldw	r5,48(r16)
    2fd0:	28000626 	beq	r5,zero,2fec <__swsetup_r+0x118>
    2fd4:	80801004 	addi	r2,r16,64
    2fd8:	28800326 	beq	r5,r2,2fe8 <__swsetup_r+0x114>
    2fdc:	8809883a 	mov	r4,r17
    2fe0:	00050840 	call	5084 <_free_r>
    2fe4:	8180030b 	ldhu	r6,12(r16)
    2fe8:	80000c15 	stw	zero,48(r16)
    2fec:	80c00417 	ldw	r3,16(r16)
    2ff0:	00bff6c4 	movi	r2,-37
    2ff4:	118c703a 	and	r6,r2,r6
    2ff8:	80000115 	stw	zero,4(r16)
    2ffc:	80c00015 	stw	r3,0(r16)
    3000:	003fd806 	br	2f64 <__alt_data_end+0xfffa14e4>

00003004 <quorem>:
    3004:	defff204 	addi	sp,sp,-56
    3008:	ddc00b15 	stw	r23,44(sp)
    300c:	20800417 	ldw	r2,16(r4)
    3010:	2dc00417 	ldw	r23,16(r5)
    3014:	dfc00d15 	stw	ra,52(sp)
    3018:	df000c15 	stw	fp,48(sp)
    301c:	dd800a15 	stw	r22,40(sp)
    3020:	dd400915 	stw	r21,36(sp)
    3024:	dd000815 	stw	r20,32(sp)
    3028:	dcc00715 	stw	r19,28(sp)
    302c:	dc800615 	stw	r18,24(sp)
    3030:	dc400515 	stw	r17,20(sp)
    3034:	dc000415 	stw	r16,16(sp)
    3038:	15c07a16 	blt	r2,r23,3224 <quorem+0x220>
    303c:	bdffffc4 	addi	r23,r23,-1
    3040:	bde9883a 	add	r20,r23,r23
    3044:	28c00504 	addi	r3,r5,20
    3048:	a529883a 	add	r20,r20,r20
    304c:	1d39883a 	add	fp,r3,r20
    3050:	24c00504 	addi	r19,r4,20
    3054:	d9400215 	stw	r5,8(sp)
    3058:	9d29883a 	add	r20,r19,r20
    305c:	e1400017 	ldw	r5,0(fp)
    3060:	d9000015 	stw	r4,0(sp)
    3064:	a1000017 	ldw	r4,0(r20)
    3068:	29400044 	addi	r5,r5,1
    306c:	d8c00115 	stw	r3,4(sp)
    3070:	dd000315 	stw	r20,12(sp)
    3074:	000a5b40 	call	a5b4 <__udivsi3>
    3078:	1025883a 	mov	r18,r2
    307c:	10003026 	beq	r2,zero,3140 <quorem+0x13c>
    3080:	dc400117 	ldw	r17,4(sp)
    3084:	9829883a 	mov	r20,r19
    3088:	002d883a 	mov	r22,zero
    308c:	0021883a 	mov	r16,zero
    3090:	8d400017 	ldw	r21,0(r17)
    3094:	900b883a 	mov	r5,r18
    3098:	8c400104 	addi	r17,r17,4
    309c:	a93fffcc 	andi	r4,r21,65535
    30a0:	000a5c40 	call	a5c4 <__mulsi3>
    30a4:	a808d43a 	srli	r4,r21,16
    30a8:	900b883a 	mov	r5,r18
    30ac:	b0ad883a 	add	r22,r22,r2
    30b0:	000a5c40 	call	a5c4 <__mulsi3>
    30b4:	a1000017 	ldw	r4,0(r20)
    30b8:	b00cd43a 	srli	r6,r22,16
    30bc:	b0ffffcc 	andi	r3,r22,65535
    30c0:	217fffcc 	andi	r5,r4,65535
    30c4:	2c21883a 	add	r16,r5,r16
    30c8:	80c7c83a 	sub	r3,r16,r3
    30cc:	2008d43a 	srli	r4,r4,16
    30d0:	3085883a 	add	r2,r6,r2
    30d4:	1821d43a 	srai	r16,r3,16
    30d8:	117fffcc 	andi	r5,r2,65535
    30dc:	2149c83a 	sub	r4,r4,r5
    30e0:	2421883a 	add	r16,r4,r16
    30e4:	8008943a 	slli	r4,r16,16
    30e8:	18ffffcc 	andi	r3,r3,65535
    30ec:	102cd43a 	srli	r22,r2,16
    30f0:	20c8b03a 	or	r4,r4,r3
    30f4:	a1000015 	stw	r4,0(r20)
    30f8:	8021d43a 	srai	r16,r16,16
    30fc:	a5000104 	addi	r20,r20,4
    3100:	e47fe32e 	bgeu	fp,r17,3090 <__alt_data_end+0xfffa1610>
    3104:	d8c00317 	ldw	r3,12(sp)
    3108:	18800017 	ldw	r2,0(r3)
    310c:	10000c1e 	bne	r2,zero,3140 <quorem+0x13c>
    3110:	18bfff04 	addi	r2,r3,-4
    3114:	9880082e 	bgeu	r19,r2,3138 <quorem+0x134>
    3118:	18ffff17 	ldw	r3,-4(r3)
    311c:	18000326 	beq	r3,zero,312c <quorem+0x128>
    3120:	00000506 	br	3138 <quorem+0x134>
    3124:	10c00017 	ldw	r3,0(r2)
    3128:	1800031e 	bne	r3,zero,3138 <quorem+0x134>
    312c:	10bfff04 	addi	r2,r2,-4
    3130:	bdffffc4 	addi	r23,r23,-1
    3134:	98bffb36 	bltu	r19,r2,3124 <__alt_data_end+0xfffa16a4>
    3138:	d8c00017 	ldw	r3,0(sp)
    313c:	1dc00415 	stw	r23,16(r3)
    3140:	d9000017 	ldw	r4,0(sp)
    3144:	d9400217 	ldw	r5,8(sp)
    3148:	000643c0 	call	643c <__mcmp>
    314c:	10002816 	blt	r2,zero,31f0 <quorem+0x1ec>
    3150:	dc400117 	ldw	r17,4(sp)
    3154:	94800044 	addi	r18,r18,1
    3158:	980d883a 	mov	r6,r19
    315c:	0007883a 	mov	r3,zero
    3160:	31000017 	ldw	r4,0(r6)
    3164:	89400017 	ldw	r5,0(r17)
    3168:	31800104 	addi	r6,r6,4
    316c:	20bfffcc 	andi	r2,r4,65535
    3170:	10c7883a 	add	r3,r2,r3
    3174:	28bfffcc 	andi	r2,r5,65535
    3178:	1885c83a 	sub	r2,r3,r2
    317c:	280ad43a 	srli	r5,r5,16
    3180:	2008d43a 	srli	r4,r4,16
    3184:	1007d43a 	srai	r3,r2,16
    3188:	10bfffcc 	andi	r2,r2,65535
    318c:	2149c83a 	sub	r4,r4,r5
    3190:	20c9883a 	add	r4,r4,r3
    3194:	200a943a 	slli	r5,r4,16
    3198:	8c400104 	addi	r17,r17,4
    319c:	2007d43a 	srai	r3,r4,16
    31a0:	2884b03a 	or	r2,r5,r2
    31a4:	30bfff15 	stw	r2,-4(r6)
    31a8:	e47fed2e 	bgeu	fp,r17,3160 <__alt_data_end+0xfffa16e0>
    31ac:	bdc5883a 	add	r2,r23,r23
    31b0:	1085883a 	add	r2,r2,r2
    31b4:	9887883a 	add	r3,r19,r2
    31b8:	18800017 	ldw	r2,0(r3)
    31bc:	10000c1e 	bne	r2,zero,31f0 <quorem+0x1ec>
    31c0:	18bfff04 	addi	r2,r3,-4
    31c4:	9880082e 	bgeu	r19,r2,31e8 <quorem+0x1e4>
    31c8:	18ffff17 	ldw	r3,-4(r3)
    31cc:	18000326 	beq	r3,zero,31dc <quorem+0x1d8>
    31d0:	00000506 	br	31e8 <quorem+0x1e4>
    31d4:	10c00017 	ldw	r3,0(r2)
    31d8:	1800031e 	bne	r3,zero,31e8 <quorem+0x1e4>
    31dc:	10bfff04 	addi	r2,r2,-4
    31e0:	bdffffc4 	addi	r23,r23,-1
    31e4:	98bffb36 	bltu	r19,r2,31d4 <__alt_data_end+0xfffa1754>
    31e8:	d8c00017 	ldw	r3,0(sp)
    31ec:	1dc00415 	stw	r23,16(r3)
    31f0:	9005883a 	mov	r2,r18
    31f4:	dfc00d17 	ldw	ra,52(sp)
    31f8:	df000c17 	ldw	fp,48(sp)
    31fc:	ddc00b17 	ldw	r23,44(sp)
    3200:	dd800a17 	ldw	r22,40(sp)
    3204:	dd400917 	ldw	r21,36(sp)
    3208:	dd000817 	ldw	r20,32(sp)
    320c:	dcc00717 	ldw	r19,28(sp)
    3210:	dc800617 	ldw	r18,24(sp)
    3214:	dc400517 	ldw	r17,20(sp)
    3218:	dc000417 	ldw	r16,16(sp)
    321c:	dec00e04 	addi	sp,sp,56
    3220:	f800283a 	ret
    3224:	0005883a 	mov	r2,zero
    3228:	003ff206 	br	31f4 <__alt_data_end+0xfffa1774>

0000322c <_dtoa_r>:
    322c:	20801017 	ldw	r2,64(r4)
    3230:	deffde04 	addi	sp,sp,-136
    3234:	dd401d15 	stw	r21,116(sp)
    3238:	dcc01b15 	stw	r19,108(sp)
    323c:	dc801a15 	stw	r18,104(sp)
    3240:	dc401915 	stw	r17,100(sp)
    3244:	dc001815 	stw	r16,96(sp)
    3248:	dfc02115 	stw	ra,132(sp)
    324c:	df002015 	stw	fp,128(sp)
    3250:	ddc01f15 	stw	r23,124(sp)
    3254:	dd801e15 	stw	r22,120(sp)
    3258:	dd001c15 	stw	r20,112(sp)
    325c:	d9c00315 	stw	r7,12(sp)
    3260:	2021883a 	mov	r16,r4
    3264:	302b883a 	mov	r21,r6
    3268:	2825883a 	mov	r18,r5
    326c:	dc402417 	ldw	r17,144(sp)
    3270:	3027883a 	mov	r19,r6
    3274:	10000826 	beq	r2,zero,3298 <_dtoa_r+0x6c>
    3278:	21801117 	ldw	r6,68(r4)
    327c:	00c00044 	movi	r3,1
    3280:	100b883a 	mov	r5,r2
    3284:	1986983a 	sll	r3,r3,r6
    3288:	11800115 	stw	r6,4(r2)
    328c:	10c00215 	stw	r3,8(r2)
    3290:	0005b680 	call	5b68 <_Bfree>
    3294:	80001015 	stw	zero,64(r16)
    3298:	a8002d16 	blt	r21,zero,3350 <_dtoa_r+0x124>
    329c:	88000015 	stw	zero,0(r17)
    32a0:	a8dffc2c 	andhi	r3,r21,32752
    32a4:	009ffc34 	movhi	r2,32752
    32a8:	18801b26 	beq	r3,r2,3318 <_dtoa_r+0xec>
    32ac:	9009883a 	mov	r4,r18
    32b0:	980b883a 	mov	r5,r19
    32b4:	000d883a 	mov	r6,zero
    32b8:	000f883a 	mov	r7,zero
    32bc:	000b8080 	call	b808 <__eqdf2>
    32c0:	10002a1e 	bne	r2,zero,336c <_dtoa_r+0x140>
    32c4:	d8c02317 	ldw	r3,140(sp)
    32c8:	d9002517 	ldw	r4,148(sp)
    32cc:	00800044 	movi	r2,1
    32d0:	18800015 	stw	r2,0(r3)
    32d4:	2001a226 	beq	r4,zero,3960 <_dtoa_r+0x734>
    32d8:	00800074 	movhi	r2,1
    32dc:	10bd6744 	addi	r2,r2,-2659
    32e0:	20800015 	stw	r2,0(r4)
    32e4:	10bfffc4 	addi	r2,r2,-1
    32e8:	dfc02117 	ldw	ra,132(sp)
    32ec:	df002017 	ldw	fp,128(sp)
    32f0:	ddc01f17 	ldw	r23,124(sp)
    32f4:	dd801e17 	ldw	r22,120(sp)
    32f8:	dd401d17 	ldw	r21,116(sp)
    32fc:	dd001c17 	ldw	r20,112(sp)
    3300:	dcc01b17 	ldw	r19,108(sp)
    3304:	dc801a17 	ldw	r18,104(sp)
    3308:	dc401917 	ldw	r17,100(sp)
    330c:	dc001817 	ldw	r16,96(sp)
    3310:	dec02204 	addi	sp,sp,136
    3314:	f800283a 	ret
    3318:	d8c02317 	ldw	r3,140(sp)
    331c:	0089c3c4 	movi	r2,9999
    3320:	18800015 	stw	r2,0(r3)
    3324:	90017c26 	beq	r18,zero,3918 <_dtoa_r+0x6ec>
    3328:	00800074 	movhi	r2,1
    332c:	10bd7304 	addi	r2,r2,-2612
    3330:	d9002517 	ldw	r4,148(sp)
    3334:	203fec26 	beq	r4,zero,32e8 <__alt_data_end+0xfffa1868>
    3338:	10c000c7 	ldb	r3,3(r2)
    333c:	18017d1e 	bne	r3,zero,3934 <_dtoa_r+0x708>
    3340:	10c000c4 	addi	r3,r2,3
    3344:	d9802517 	ldw	r6,148(sp)
    3348:	30c00015 	stw	r3,0(r6)
    334c:	003fe606 	br	32e8 <__alt_data_end+0xfffa1868>
    3350:	04e00034 	movhi	r19,32768
    3354:	9cffffc4 	addi	r19,r19,-1
    3358:	00800044 	movi	r2,1
    335c:	ace6703a 	and	r19,r21,r19
    3360:	88800015 	stw	r2,0(r17)
    3364:	982b883a 	mov	r21,r19
    3368:	003fcd06 	br	32a0 <__alt_data_end+0xfffa1820>
    336c:	d8800204 	addi	r2,sp,8
    3370:	a822d53a 	srli	r17,r21,20
    3374:	d8800015 	stw	r2,0(sp)
    3378:	8009883a 	mov	r4,r16
    337c:	900b883a 	mov	r5,r18
    3380:	980d883a 	mov	r6,r19
    3384:	d9c00104 	addi	r7,sp,4
    3388:	00067b00 	call	67b0 <__d2b>
    338c:	1039883a 	mov	fp,r2
    3390:	88016a1e 	bne	r17,zero,393c <_dtoa_r+0x710>
    3394:	dd000217 	ldw	r20,8(sp)
    3398:	dc400117 	ldw	r17,4(sp)
    339c:	00befbc4 	movi	r2,-1041
    33a0:	a463883a 	add	r17,r20,r17
    33a4:	8882ea16 	blt	r17,r2,3f50 <_dtoa_r+0xd24>
    33a8:	00bf0384 	movi	r2,-1010
    33ac:	1445c83a 	sub	r2,r2,r17
    33b0:	89010484 	addi	r4,r17,1042
    33b4:	a8aa983a 	sll	r21,r21,r2
    33b8:	9108d83a 	srl	r4,r18,r4
    33bc:	a908b03a 	or	r4,r21,r4
    33c0:	000cce00 	call	cce0 <__floatunsidf>
    33c4:	017f8434 	movhi	r5,65040
    33c8:	01800044 	movi	r6,1
    33cc:	1009883a 	mov	r4,r2
    33d0:	194b883a 	add	r5,r3,r5
    33d4:	8c7fffc4 	addi	r17,r17,-1
    33d8:	d9800f15 	stw	r6,60(sp)
    33dc:	000d883a 	mov	r6,zero
    33e0:	01cffe34 	movhi	r7,16376
    33e4:	000c2b80 	call	c2b8 <__subdf3>
    33e8:	0198dbf4 	movhi	r6,25455
    33ec:	01cff4f4 	movhi	r7,16339
    33f0:	1009883a 	mov	r4,r2
    33f4:	180b883a 	mov	r5,r3
    33f8:	3190d844 	addi	r6,r6,17249
    33fc:	39e1e9c4 	addi	r7,r7,-30809
    3400:	000ba4c0 	call	ba4c <__muldf3>
    3404:	01a2d874 	movhi	r6,35681
    3408:	01cff1f4 	movhi	r7,16327
    340c:	180b883a 	mov	r5,r3
    3410:	31b22cc4 	addi	r6,r6,-14157
    3414:	39e28a04 	addi	r7,r7,-30168
    3418:	1009883a 	mov	r4,r2
    341c:	000a5ec0 	call	a5ec <__adddf3>
    3420:	8809883a 	mov	r4,r17
    3424:	102d883a 	mov	r22,r2
    3428:	182b883a 	mov	r21,r3
    342c:	000cc100 	call	cc10 <__floatsidf>
    3430:	019427f4 	movhi	r6,20639
    3434:	01cff4f4 	movhi	r7,16339
    3438:	1009883a 	mov	r4,r2
    343c:	180b883a 	mov	r5,r3
    3440:	319e7ec4 	addi	r6,r6,31227
    3444:	39d104c4 	addi	r7,r7,17427
    3448:	000ba4c0 	call	ba4c <__muldf3>
    344c:	b009883a 	mov	r4,r22
    3450:	a80b883a 	mov	r5,r21
    3454:	100d883a 	mov	r6,r2
    3458:	180f883a 	mov	r7,r3
    345c:	000a5ec0 	call	a5ec <__adddf3>
    3460:	1009883a 	mov	r4,r2
    3464:	180b883a 	mov	r5,r3
    3468:	102d883a 	mov	r22,r2
    346c:	182b883a 	mov	r21,r3
    3470:	000cb880 	call	cb88 <__fixdfsi>
    3474:	b009883a 	mov	r4,r22
    3478:	a80b883a 	mov	r5,r21
    347c:	000d883a 	mov	r6,zero
    3480:	000f883a 	mov	r7,zero
    3484:	d8800515 	stw	r2,20(sp)
    3488:	000b96c0 	call	b96c <__ledf2>
    348c:	10023116 	blt	r2,zero,3d54 <_dtoa_r+0xb28>
    3490:	d8c00517 	ldw	r3,20(sp)
    3494:	00800584 	movi	r2,22
    3498:	10c21f36 	bltu	r2,r3,3d18 <_dtoa_r+0xaec>
    349c:	180490fa 	slli	r2,r3,3
    34a0:	00c00074 	movhi	r3,1
    34a4:	18fd8f04 	addi	r3,r3,-2500
    34a8:	1885883a 	add	r2,r3,r2
    34ac:	11000017 	ldw	r4,0(r2)
    34b0:	11400117 	ldw	r5,4(r2)
    34b4:	900d883a 	mov	r6,r18
    34b8:	980f883a 	mov	r7,r19
    34bc:	000b88c0 	call	b88c <__gedf2>
    34c0:	0082a70e 	bge	zero,r2,3f60 <_dtoa_r+0xd34>
    34c4:	d9000517 	ldw	r4,20(sp)
    34c8:	d8000c15 	stw	zero,48(sp)
    34cc:	213fffc4 	addi	r4,r4,-1
    34d0:	d9000515 	stw	r4,20(sp)
    34d4:	a463c83a 	sub	r17,r20,r17
    34d8:	8dbfffc4 	addi	r22,r17,-1
    34dc:	b0021916 	blt	r22,zero,3d44 <_dtoa_r+0xb18>
    34e0:	d8000815 	stw	zero,32(sp)
    34e4:	d8800517 	ldw	r2,20(sp)
    34e8:	10020e16 	blt	r2,zero,3d24 <_dtoa_r+0xaf8>
    34ec:	b0ad883a 	add	r22,r22,r2
    34f0:	d8800a15 	stw	r2,40(sp)
    34f4:	d8000915 	stw	zero,36(sp)
    34f8:	d8c00317 	ldw	r3,12(sp)
    34fc:	00800244 	movi	r2,9
    3500:	10c11a36 	bltu	r2,r3,396c <_dtoa_r+0x740>
    3504:	00800144 	movi	r2,5
    3508:	10c4fc0e 	bge	r2,r3,48fc <_dtoa_r+0x16d0>
    350c:	18ffff04 	addi	r3,r3,-4
    3510:	d8c00315 	stw	r3,12(sp)
    3514:	0029883a 	mov	r20,zero
    3518:	d9800317 	ldw	r6,12(sp)
    351c:	008000c4 	movi	r2,3
    3520:	3083bd26 	beq	r6,r2,4418 <_dtoa_r+0x11ec>
    3524:	1183670e 	bge	r2,r6,42c4 <_dtoa_r+0x1098>
    3528:	d8c00317 	ldw	r3,12(sp)
    352c:	00800104 	movi	r2,4
    3530:	1882e726 	beq	r3,r2,40d0 <_dtoa_r+0xea4>
    3534:	00800144 	movi	r2,5
    3538:	1884f21e 	bne	r3,r2,4904 <_dtoa_r+0x16d8>
    353c:	00800044 	movi	r2,1
    3540:	d8800b15 	stw	r2,44(sp)
    3544:	d8c02217 	ldw	r3,136(sp)
    3548:	d9000517 	ldw	r4,20(sp)
    354c:	1907883a 	add	r3,r3,r4
    3550:	19800044 	addi	r6,r3,1
    3554:	d8c00d15 	stw	r3,52(sp)
    3558:	d9800615 	stw	r6,24(sp)
    355c:	0183c30e 	bge	zero,r6,446c <_dtoa_r+0x1240>
    3560:	d9800617 	ldw	r6,24(sp)
    3564:	3023883a 	mov	r17,r6
    3568:	80001115 	stw	zero,68(r16)
    356c:	008005c4 	movi	r2,23
    3570:	1184f62e 	bgeu	r2,r6,494c <_dtoa_r+0x1720>
    3574:	00c00044 	movi	r3,1
    3578:	00800104 	movi	r2,4
    357c:	1085883a 	add	r2,r2,r2
    3580:	11000504 	addi	r4,r2,20
    3584:	180b883a 	mov	r5,r3
    3588:	18c00044 	addi	r3,r3,1
    358c:	313ffb2e 	bgeu	r6,r4,357c <__alt_data_end+0xfffa1afc>
    3590:	81401115 	stw	r5,68(r16)
    3594:	8009883a 	mov	r4,r16
    3598:	0005ac00 	call	5ac0 <_Balloc>
    359c:	d8800715 	stw	r2,28(sp)
    35a0:	80801015 	stw	r2,64(r16)
    35a4:	00800384 	movi	r2,14
    35a8:	1440fd36 	bltu	r2,r17,39a0 <_dtoa_r+0x774>
    35ac:	a000fc26 	beq	r20,zero,39a0 <_dtoa_r+0x774>
    35b0:	d8800517 	ldw	r2,20(sp)
    35b4:	0083b90e 	bge	zero,r2,449c <_dtoa_r+0x1270>
    35b8:	d8c00517 	ldw	r3,20(sp)
    35bc:	108003cc 	andi	r2,r2,15
    35c0:	100490fa 	slli	r2,r2,3
    35c4:	182fd13a 	srai	r23,r3,4
    35c8:	00c00074 	movhi	r3,1
    35cc:	18fd8f04 	addi	r3,r3,-2500
    35d0:	1885883a 	add	r2,r3,r2
    35d4:	b8c0040c 	andi	r3,r23,16
    35d8:	12c00017 	ldw	r11,0(r2)
    35dc:	12800117 	ldw	r10,4(r2)
    35e0:	18039726 	beq	r3,zero,4440 <_dtoa_r+0x1214>
    35e4:	00800074 	movhi	r2,1
    35e8:	10bd8504 	addi	r2,r2,-2540
    35ec:	11800817 	ldw	r6,32(r2)
    35f0:	11c00917 	ldw	r7,36(r2)
    35f4:	9009883a 	mov	r4,r18
    35f8:	980b883a 	mov	r5,r19
    35fc:	da801615 	stw	r10,88(sp)
    3600:	dac01515 	stw	r11,84(sp)
    3604:	000ae880 	call	ae88 <__divdf3>
    3608:	da801617 	ldw	r10,88(sp)
    360c:	dac01517 	ldw	r11,84(sp)
    3610:	bdc003cc 	andi	r23,r23,15
    3614:	044000c4 	movi	r17,3
    3618:	d8800e15 	stw	r2,56(sp)
    361c:	182b883a 	mov	r21,r3
    3620:	b8001126 	beq	r23,zero,3668 <_dtoa_r+0x43c>
    3624:	05000074 	movhi	r20,1
    3628:	a53d8504 	addi	r20,r20,-2540
    362c:	5805883a 	mov	r2,r11
    3630:	5007883a 	mov	r3,r10
    3634:	b980004c 	andi	r6,r23,1
    3638:	1009883a 	mov	r4,r2
    363c:	b82fd07a 	srai	r23,r23,1
    3640:	180b883a 	mov	r5,r3
    3644:	30000426 	beq	r6,zero,3658 <_dtoa_r+0x42c>
    3648:	a1800017 	ldw	r6,0(r20)
    364c:	a1c00117 	ldw	r7,4(r20)
    3650:	8c400044 	addi	r17,r17,1
    3654:	000ba4c0 	call	ba4c <__muldf3>
    3658:	a5000204 	addi	r20,r20,8
    365c:	b83ff51e 	bne	r23,zero,3634 <__alt_data_end+0xfffa1bb4>
    3660:	1017883a 	mov	r11,r2
    3664:	1815883a 	mov	r10,r3
    3668:	d9000e17 	ldw	r4,56(sp)
    366c:	a80b883a 	mov	r5,r21
    3670:	580d883a 	mov	r6,r11
    3674:	500f883a 	mov	r7,r10
    3678:	000ae880 	call	ae88 <__divdf3>
    367c:	1029883a 	mov	r20,r2
    3680:	182b883a 	mov	r21,r3
    3684:	d9800c17 	ldw	r6,48(sp)
    3688:	30000626 	beq	r6,zero,36a4 <_dtoa_r+0x478>
    368c:	a009883a 	mov	r4,r20
    3690:	a80b883a 	mov	r5,r21
    3694:	000d883a 	mov	r6,zero
    3698:	01cffc34 	movhi	r7,16368
    369c:	000b96c0 	call	b96c <__ledf2>
    36a0:	10043216 	blt	r2,zero,476c <_dtoa_r+0x1540>
    36a4:	8809883a 	mov	r4,r17
    36a8:	000cc100 	call	cc10 <__floatsidf>
    36ac:	1009883a 	mov	r4,r2
    36b0:	180b883a 	mov	r5,r3
    36b4:	a00d883a 	mov	r6,r20
    36b8:	a80f883a 	mov	r7,r21
    36bc:	000ba4c0 	call	ba4c <__muldf3>
    36c0:	000d883a 	mov	r6,zero
    36c4:	1009883a 	mov	r4,r2
    36c8:	180b883a 	mov	r5,r3
    36cc:	01d00734 	movhi	r7,16412
    36d0:	000a5ec0 	call	a5ec <__adddf3>
    36d4:	1023883a 	mov	r17,r2
    36d8:	d9800617 	ldw	r6,24(sp)
    36dc:	00bf3034 	movhi	r2,64704
    36e0:	1885883a 	add	r2,r3,r2
    36e4:	d8800e15 	stw	r2,56(sp)
    36e8:	30032e26 	beq	r6,zero,43a4 <_dtoa_r+0x1178>
    36ec:	d8c00517 	ldw	r3,20(sp)
    36f0:	da800617 	ldw	r10,24(sp)
    36f4:	d8c01215 	stw	r3,72(sp)
    36f8:	d9000b17 	ldw	r4,44(sp)
    36fc:	2003b026 	beq	r4,zero,45c0 <_dtoa_r+0x1394>
    3700:	50bfffc4 	addi	r2,r10,-1
    3704:	100490fa 	slli	r2,r2,3
    3708:	00c00074 	movhi	r3,1
    370c:	18fd8f04 	addi	r3,r3,-2500
    3710:	1885883a 	add	r2,r3,r2
    3714:	11800017 	ldw	r6,0(r2)
    3718:	11c00117 	ldw	r7,4(r2)
    371c:	d8800717 	ldw	r2,28(sp)
    3720:	0009883a 	mov	r4,zero
    3724:	014ff834 	movhi	r5,16352
    3728:	da801615 	stw	r10,88(sp)
    372c:	15c00044 	addi	r23,r2,1
    3730:	000ae880 	call	ae88 <__divdf3>
    3734:	d9c00e17 	ldw	r7,56(sp)
    3738:	880d883a 	mov	r6,r17
    373c:	1009883a 	mov	r4,r2
    3740:	180b883a 	mov	r5,r3
    3744:	000c2b80 	call	c2b8 <__subdf3>
    3748:	a80b883a 	mov	r5,r21
    374c:	a009883a 	mov	r4,r20
    3750:	d8c01015 	stw	r3,64(sp)
    3754:	d8800e15 	stw	r2,56(sp)
    3758:	000cb880 	call	cb88 <__fixdfsi>
    375c:	1009883a 	mov	r4,r2
    3760:	d8801715 	stw	r2,92(sp)
    3764:	000cc100 	call	cc10 <__floatsidf>
    3768:	a009883a 	mov	r4,r20
    376c:	a80b883a 	mov	r5,r21
    3770:	100d883a 	mov	r6,r2
    3774:	180f883a 	mov	r7,r3
    3778:	000c2b80 	call	c2b8 <__subdf3>
    377c:	da001717 	ldw	r8,92(sp)
    3780:	1829883a 	mov	r20,r3
    3784:	d8c00717 	ldw	r3,28(sp)
    3788:	d9000e17 	ldw	r4,56(sp)
    378c:	d9401017 	ldw	r5,64(sp)
    3790:	42000c04 	addi	r8,r8,48
    3794:	1023883a 	mov	r17,r2
    3798:	1a000005 	stb	r8,0(r3)
    379c:	880d883a 	mov	r6,r17
    37a0:	a00f883a 	mov	r7,r20
    37a4:	402b883a 	mov	r21,r8
    37a8:	000b88c0 	call	b88c <__gedf2>
    37ac:	00844516 	blt	zero,r2,48c4 <_dtoa_r+0x1698>
    37b0:	0009883a 	mov	r4,zero
    37b4:	014ffc34 	movhi	r5,16368
    37b8:	880d883a 	mov	r6,r17
    37bc:	a00f883a 	mov	r7,r20
    37c0:	000c2b80 	call	c2b8 <__subdf3>
    37c4:	d9000e17 	ldw	r4,56(sp)
    37c8:	d9401017 	ldw	r5,64(sp)
    37cc:	100d883a 	mov	r6,r2
    37d0:	180f883a 	mov	r7,r3
    37d4:	000b88c0 	call	b88c <__gedf2>
    37d8:	da801617 	ldw	r10,88(sp)
    37dc:	00843616 	blt	zero,r2,48b8 <_dtoa_r+0x168c>
    37e0:	00800044 	movi	r2,1
    37e4:	12806e0e 	bge	r2,r10,39a0 <_dtoa_r+0x774>
    37e8:	d9000717 	ldw	r4,28(sp)
    37ec:	dd801315 	stw	r22,76(sp)
    37f0:	dc001115 	stw	r16,68(sp)
    37f4:	2295883a 	add	r10,r4,r10
    37f8:	dcc01415 	stw	r19,80(sp)
    37fc:	502d883a 	mov	r22,r10
    3800:	dcc01017 	ldw	r19,64(sp)
    3804:	b821883a 	mov	r16,r23
    3808:	dc801015 	stw	r18,64(sp)
    380c:	dc800e17 	ldw	r18,56(sp)
    3810:	00000906 	br	3838 <_dtoa_r+0x60c>
    3814:	000c2b80 	call	c2b8 <__subdf3>
    3818:	1009883a 	mov	r4,r2
    381c:	180b883a 	mov	r5,r3
    3820:	900d883a 	mov	r6,r18
    3824:	980f883a 	mov	r7,r19
    3828:	000b96c0 	call	b96c <__ledf2>
    382c:	10040e16 	blt	r2,zero,4868 <_dtoa_r+0x163c>
    3830:	b821883a 	mov	r16,r23
    3834:	bd841026 	beq	r23,r22,4878 <_dtoa_r+0x164c>
    3838:	9009883a 	mov	r4,r18
    383c:	980b883a 	mov	r5,r19
    3840:	000d883a 	mov	r6,zero
    3844:	01d00934 	movhi	r7,16420
    3848:	000ba4c0 	call	ba4c <__muldf3>
    384c:	000d883a 	mov	r6,zero
    3850:	01d00934 	movhi	r7,16420
    3854:	8809883a 	mov	r4,r17
    3858:	a00b883a 	mov	r5,r20
    385c:	1025883a 	mov	r18,r2
    3860:	1827883a 	mov	r19,r3
    3864:	000ba4c0 	call	ba4c <__muldf3>
    3868:	180b883a 	mov	r5,r3
    386c:	1009883a 	mov	r4,r2
    3870:	1823883a 	mov	r17,r3
    3874:	1029883a 	mov	r20,r2
    3878:	000cb880 	call	cb88 <__fixdfsi>
    387c:	1009883a 	mov	r4,r2
    3880:	102b883a 	mov	r21,r2
    3884:	000cc100 	call	cc10 <__floatsidf>
    3888:	a009883a 	mov	r4,r20
    388c:	880b883a 	mov	r5,r17
    3890:	100d883a 	mov	r6,r2
    3894:	180f883a 	mov	r7,r3
    3898:	000c2b80 	call	c2b8 <__subdf3>
    389c:	ad400c04 	addi	r21,r21,48
    38a0:	1009883a 	mov	r4,r2
    38a4:	180b883a 	mov	r5,r3
    38a8:	900d883a 	mov	r6,r18
    38ac:	980f883a 	mov	r7,r19
    38b0:	85400005 	stb	r21,0(r16)
    38b4:	1023883a 	mov	r17,r2
    38b8:	1829883a 	mov	r20,r3
    38bc:	000b96c0 	call	b96c <__ledf2>
    38c0:	bdc00044 	addi	r23,r23,1
    38c4:	0009883a 	mov	r4,zero
    38c8:	014ffc34 	movhi	r5,16368
    38cc:	880d883a 	mov	r6,r17
    38d0:	a00f883a 	mov	r7,r20
    38d4:	103fcf0e 	bge	r2,zero,3814 <__alt_data_end+0xfffa1d94>
    38d8:	d9801217 	ldw	r6,72(sp)
    38dc:	dc001117 	ldw	r16,68(sp)
    38e0:	d9800515 	stw	r6,20(sp)
    38e4:	8009883a 	mov	r4,r16
    38e8:	e00b883a 	mov	r5,fp
    38ec:	0005b680 	call	5b68 <_Bfree>
    38f0:	d8c00517 	ldw	r3,20(sp)
    38f4:	d9002317 	ldw	r4,140(sp)
    38f8:	d9802517 	ldw	r6,148(sp)
    38fc:	b8000005 	stb	zero,0(r23)
    3900:	18800044 	addi	r2,r3,1
    3904:	20800015 	stw	r2,0(r4)
    3908:	30027226 	beq	r6,zero,42d4 <_dtoa_r+0x10a8>
    390c:	35c00015 	stw	r23,0(r6)
    3910:	d8800717 	ldw	r2,28(sp)
    3914:	003e7406 	br	32e8 <__alt_data_end+0xfffa1868>
    3918:	00800434 	movhi	r2,16
    391c:	10bfffc4 	addi	r2,r2,-1
    3920:	a8aa703a 	and	r21,r21,r2
    3924:	a83e801e 	bne	r21,zero,3328 <__alt_data_end+0xfffa18a8>
    3928:	00800074 	movhi	r2,1
    392c:	10bd7004 	addi	r2,r2,-2624
    3930:	003e7f06 	br	3330 <__alt_data_end+0xfffa18b0>
    3934:	10c00204 	addi	r3,r2,8
    3938:	003e8206 	br	3344 <__alt_data_end+0xfffa18c4>
    393c:	01400434 	movhi	r5,16
    3940:	297fffc4 	addi	r5,r5,-1
    3944:	994a703a 	and	r5,r19,r5
    3948:	9009883a 	mov	r4,r18
    394c:	8c7f0044 	addi	r17,r17,-1023
    3950:	294ffc34 	orhi	r5,r5,16368
    3954:	dd000217 	ldw	r20,8(sp)
    3958:	d8000f15 	stw	zero,60(sp)
    395c:	003e9f06 	br	33dc <__alt_data_end+0xfffa195c>
    3960:	00800074 	movhi	r2,1
    3964:	10bd6704 	addi	r2,r2,-2660
    3968:	003e5f06 	br	32e8 <__alt_data_end+0xfffa1868>
    396c:	80001115 	stw	zero,68(r16)
    3970:	8009883a 	mov	r4,r16
    3974:	000b883a 	mov	r5,zero
    3978:	0005ac00 	call	5ac0 <_Balloc>
    397c:	01bfffc4 	movi	r6,-1
    3980:	d8800715 	stw	r2,28(sp)
    3984:	80801015 	stw	r2,64(r16)
    3988:	00800044 	movi	r2,1
    398c:	d9800615 	stw	r6,24(sp)
    3990:	d8800b15 	stw	r2,44(sp)
    3994:	d8002215 	stw	zero,136(sp)
    3998:	d9800d15 	stw	r6,52(sp)
    399c:	d8000315 	stw	zero,12(sp)
    39a0:	d8800117 	ldw	r2,4(sp)
    39a4:	10008e16 	blt	r2,zero,3be0 <_dtoa_r+0x9b4>
    39a8:	d9000517 	ldw	r4,20(sp)
    39ac:	00c00384 	movi	r3,14
    39b0:	19008b16 	blt	r3,r4,3be0 <_dtoa_r+0x9b4>
    39b4:	200490fa 	slli	r2,r4,3
    39b8:	00c00074 	movhi	r3,1
    39bc:	d9802217 	ldw	r6,136(sp)
    39c0:	18fd8f04 	addi	r3,r3,-2500
    39c4:	1885883a 	add	r2,r3,r2
    39c8:	14400017 	ldw	r17,0(r2)
    39cc:	15000117 	ldw	r20,4(r2)
    39d0:	3001c716 	blt	r6,zero,40f0 <_dtoa_r+0xec4>
    39d4:	880d883a 	mov	r6,r17
    39d8:	a00f883a 	mov	r7,r20
    39dc:	9009883a 	mov	r4,r18
    39e0:	980b883a 	mov	r5,r19
    39e4:	000ae880 	call	ae88 <__divdf3>
    39e8:	180b883a 	mov	r5,r3
    39ec:	1009883a 	mov	r4,r2
    39f0:	000cb880 	call	cb88 <__fixdfsi>
    39f4:	1009883a 	mov	r4,r2
    39f8:	102d883a 	mov	r22,r2
    39fc:	000cc100 	call	cc10 <__floatsidf>
    3a00:	1009883a 	mov	r4,r2
    3a04:	180b883a 	mov	r5,r3
    3a08:	880d883a 	mov	r6,r17
    3a0c:	a00f883a 	mov	r7,r20
    3a10:	000ba4c0 	call	ba4c <__muldf3>
    3a14:	9009883a 	mov	r4,r18
    3a18:	980b883a 	mov	r5,r19
    3a1c:	100d883a 	mov	r6,r2
    3a20:	180f883a 	mov	r7,r3
    3a24:	000c2b80 	call	c2b8 <__subdf3>
    3a28:	d9000717 	ldw	r4,28(sp)
    3a2c:	d9800617 	ldw	r6,24(sp)
    3a30:	180b883a 	mov	r5,r3
    3a34:	b0c00c04 	addi	r3,r22,48
    3a38:	20c00005 	stb	r3,0(r4)
    3a3c:	25c00044 	addi	r23,r4,1
    3a40:	01000044 	movi	r4,1
    3a44:	1011883a 	mov	r8,r2
    3a48:	2807883a 	mov	r3,r5
    3a4c:	31003d26 	beq	r6,r4,3b44 <_dtoa_r+0x918>
    3a50:	000d883a 	mov	r6,zero
    3a54:	01d00934 	movhi	r7,16420
    3a58:	1009883a 	mov	r4,r2
    3a5c:	000ba4c0 	call	ba4c <__muldf3>
    3a60:	1009883a 	mov	r4,r2
    3a64:	180b883a 	mov	r5,r3
    3a68:	000d883a 	mov	r6,zero
    3a6c:	000f883a 	mov	r7,zero
    3a70:	1027883a 	mov	r19,r2
    3a74:	182b883a 	mov	r21,r3
    3a78:	000b8080 	call	b808 <__eqdf2>
    3a7c:	103f9926 	beq	r2,zero,38e4 <__alt_data_end+0xfffa1e64>
    3a80:	d8c00617 	ldw	r3,24(sp)
    3a84:	d9000717 	ldw	r4,28(sp)
    3a88:	b825883a 	mov	r18,r23
    3a8c:	18bfffc4 	addi	r2,r3,-1
    3a90:	20ad883a 	add	r22,r4,r2
    3a94:	dc000315 	stw	r16,12(sp)
    3a98:	00000a06 	br	3ac4 <_dtoa_r+0x898>
    3a9c:	000ba4c0 	call	ba4c <__muldf3>
    3aa0:	1009883a 	mov	r4,r2
    3aa4:	180b883a 	mov	r5,r3
    3aa8:	000d883a 	mov	r6,zero
    3aac:	000f883a 	mov	r7,zero
    3ab0:	1027883a 	mov	r19,r2
    3ab4:	182b883a 	mov	r21,r3
    3ab8:	b825883a 	mov	r18,r23
    3abc:	000b8080 	call	b808 <__eqdf2>
    3ac0:	10022626 	beq	r2,zero,435c <_dtoa_r+0x1130>
    3ac4:	880d883a 	mov	r6,r17
    3ac8:	a00f883a 	mov	r7,r20
    3acc:	9809883a 	mov	r4,r19
    3ad0:	a80b883a 	mov	r5,r21
    3ad4:	000ae880 	call	ae88 <__divdf3>
    3ad8:	180b883a 	mov	r5,r3
    3adc:	1009883a 	mov	r4,r2
    3ae0:	000cb880 	call	cb88 <__fixdfsi>
    3ae4:	1009883a 	mov	r4,r2
    3ae8:	1021883a 	mov	r16,r2
    3aec:	000cc100 	call	cc10 <__floatsidf>
    3af0:	1009883a 	mov	r4,r2
    3af4:	180b883a 	mov	r5,r3
    3af8:	880d883a 	mov	r6,r17
    3afc:	a00f883a 	mov	r7,r20
    3b00:	000ba4c0 	call	ba4c <__muldf3>
    3b04:	9809883a 	mov	r4,r19
    3b08:	a80b883a 	mov	r5,r21
    3b0c:	100d883a 	mov	r6,r2
    3b10:	180f883a 	mov	r7,r3
    3b14:	000c2b80 	call	c2b8 <__subdf3>
    3b18:	82000c04 	addi	r8,r16,48
    3b1c:	92000005 	stb	r8,0(r18)
    3b20:	1009883a 	mov	r4,r2
    3b24:	180b883a 	mov	r5,r3
    3b28:	000d883a 	mov	r6,zero
    3b2c:	01d00934 	movhi	r7,16420
    3b30:	1011883a 	mov	r8,r2
    3b34:	bdc00044 	addi	r23,r23,1
    3b38:	95bfd81e 	bne	r18,r22,3a9c <__alt_data_end+0xfffa201c>
    3b3c:	802d883a 	mov	r22,r16
    3b40:	dc000317 	ldw	r16,12(sp)
    3b44:	4009883a 	mov	r4,r8
    3b48:	180b883a 	mov	r5,r3
    3b4c:	400d883a 	mov	r6,r8
    3b50:	180f883a 	mov	r7,r3
    3b54:	000a5ec0 	call	a5ec <__adddf3>
    3b58:	8809883a 	mov	r4,r17
    3b5c:	a00b883a 	mov	r5,r20
    3b60:	100d883a 	mov	r6,r2
    3b64:	180f883a 	mov	r7,r3
    3b68:	1027883a 	mov	r19,r2
    3b6c:	1825883a 	mov	r18,r3
    3b70:	000b96c0 	call	b96c <__ledf2>
    3b74:	10000816 	blt	r2,zero,3b98 <_dtoa_r+0x96c>
    3b78:	8809883a 	mov	r4,r17
    3b7c:	a00b883a 	mov	r5,r20
    3b80:	980d883a 	mov	r6,r19
    3b84:	900f883a 	mov	r7,r18
    3b88:	000b8080 	call	b808 <__eqdf2>
    3b8c:	103f551e 	bne	r2,zero,38e4 <__alt_data_end+0xfffa1e64>
    3b90:	b580004c 	andi	r22,r22,1
    3b94:	b03f5326 	beq	r22,zero,38e4 <__alt_data_end+0xfffa1e64>
    3b98:	bd7fffc3 	ldbu	r21,-1(r23)
    3b9c:	b8bfffc4 	addi	r2,r23,-1
    3ba0:	1007883a 	mov	r3,r2
    3ba4:	01400e44 	movi	r5,57
    3ba8:	d9800717 	ldw	r6,28(sp)
    3bac:	00000506 	br	3bc4 <_dtoa_r+0x998>
    3bb0:	18ffffc4 	addi	r3,r3,-1
    3bb4:	30825e26 	beq	r6,r2,4530 <_dtoa_r+0x1304>
    3bb8:	1d400003 	ldbu	r21,0(r3)
    3bbc:	102f883a 	mov	r23,r2
    3bc0:	10bfffc4 	addi	r2,r2,-1
    3bc4:	a9003fcc 	andi	r4,r21,255
    3bc8:	2100201c 	xori	r4,r4,128
    3bcc:	213fe004 	addi	r4,r4,-128
    3bd0:	217ff726 	beq	r4,r5,3bb0 <__alt_data_end+0xfffa2130>
    3bd4:	aa000044 	addi	r8,r21,1
    3bd8:	12000005 	stb	r8,0(r2)
    3bdc:	003f4106 	br	38e4 <__alt_data_end+0xfffa1e64>
    3be0:	d8c00b17 	ldw	r3,44(sp)
    3be4:	18006726 	beq	r3,zero,3d84 <_dtoa_r+0xb58>
    3be8:	d9000317 	ldw	r4,12(sp)
    3bec:	00c00044 	movi	r3,1
    3bf0:	19016a0e 	bge	r3,r4,419c <_dtoa_r+0xf70>
    3bf4:	d8800617 	ldw	r2,24(sp)
    3bf8:	d8c00917 	ldw	r3,36(sp)
    3bfc:	157fffc4 	addi	r21,r2,-1
    3c00:	1d420716 	blt	r3,r21,4420 <_dtoa_r+0x11f4>
    3c04:	1d6bc83a 	sub	r21,r3,r21
    3c08:	d8800617 	ldw	r2,24(sp)
    3c0c:	1002c716 	blt	r2,zero,472c <_dtoa_r+0x1500>
    3c10:	dd000817 	ldw	r20,32(sp)
    3c14:	d8800617 	ldw	r2,24(sp)
    3c18:	d9800817 	ldw	r6,32(sp)
    3c1c:	8009883a 	mov	r4,r16
    3c20:	01400044 	movi	r5,1
    3c24:	308d883a 	add	r6,r6,r2
    3c28:	d9800815 	stw	r6,32(sp)
    3c2c:	b0ad883a 	add	r22,r22,r2
    3c30:	0005ee80 	call	5ee8 <__i2b>
    3c34:	1023883a 	mov	r17,r2
    3c38:	a0000826 	beq	r20,zero,3c5c <_dtoa_r+0xa30>
    3c3c:	0580070e 	bge	zero,r22,3c5c <_dtoa_r+0xa30>
    3c40:	b005883a 	mov	r2,r22
    3c44:	a5812016 	blt	r20,r22,40c8 <_dtoa_r+0xe9c>
    3c48:	d8c00817 	ldw	r3,32(sp)
    3c4c:	a0a9c83a 	sub	r20,r20,r2
    3c50:	b0adc83a 	sub	r22,r22,r2
    3c54:	1887c83a 	sub	r3,r3,r2
    3c58:	d8c00815 	stw	r3,32(sp)
    3c5c:	d9000917 	ldw	r4,36(sp)
    3c60:	0100140e 	bge	zero,r4,3cb4 <_dtoa_r+0xa88>
    3c64:	d9800b17 	ldw	r6,44(sp)
    3c68:	3001e526 	beq	r6,zero,4400 <_dtoa_r+0x11d4>
    3c6c:	05400e0e 	bge	zero,r21,3ca8 <_dtoa_r+0xa7c>
    3c70:	880b883a 	mov	r5,r17
    3c74:	8009883a 	mov	r4,r16
    3c78:	a80d883a 	mov	r6,r21
    3c7c:	00061b40 	call	61b4 <__pow5mult>
    3c80:	e00d883a 	mov	r6,fp
    3c84:	8009883a 	mov	r4,r16
    3c88:	100b883a 	mov	r5,r2
    3c8c:	1023883a 	mov	r17,r2
    3c90:	0005f240 	call	5f24 <__multiply>
    3c94:	102f883a 	mov	r23,r2
    3c98:	e00b883a 	mov	r5,fp
    3c9c:	8009883a 	mov	r4,r16
    3ca0:	0005b680 	call	5b68 <_Bfree>
    3ca4:	b839883a 	mov	fp,r23
    3ca8:	d8800917 	ldw	r2,36(sp)
    3cac:	154dc83a 	sub	r6,r2,r21
    3cb0:	3001281e 	bne	r6,zero,4154 <_dtoa_r+0xf28>
    3cb4:	05c00044 	movi	r23,1
    3cb8:	8009883a 	mov	r4,r16
    3cbc:	b80b883a 	mov	r5,r23
    3cc0:	0005ee80 	call	5ee8 <__i2b>
    3cc4:	d8c00a17 	ldw	r3,40(sp)
    3cc8:	102b883a 	mov	r21,r2
    3ccc:	00c0310e 	bge	zero,r3,3d94 <_dtoa_r+0xb68>
    3cd0:	8009883a 	mov	r4,r16
    3cd4:	100b883a 	mov	r5,r2
    3cd8:	180d883a 	mov	r6,r3
    3cdc:	00061b40 	call	61b4 <__pow5mult>
    3ce0:	d9000317 	ldw	r4,12(sp)
    3ce4:	102b883a 	mov	r21,r2
    3ce8:	b9011f0e 	bge	r23,r4,4168 <_dtoa_r+0xf3c>
    3cec:	0027883a 	mov	r19,zero
    3cf0:	a8800417 	ldw	r2,16(r21)
    3cf4:	10800104 	addi	r2,r2,4
    3cf8:	1085883a 	add	r2,r2,r2
    3cfc:	1085883a 	add	r2,r2,r2
    3d00:	a885883a 	add	r2,r21,r2
    3d04:	11000017 	ldw	r4,0(r2)
    3d08:	0005dd00 	call	5dd0 <__hi0bits>
    3d0c:	00c00804 	movi	r3,32
    3d10:	1885c83a 	sub	r2,r3,r2
    3d14:	00002506 	br	3dac <_dtoa_r+0xb80>
    3d18:	01800044 	movi	r6,1
    3d1c:	d9800c15 	stw	r6,48(sp)
    3d20:	003dec06 	br	34d4 <__alt_data_end+0xfffa1a54>
    3d24:	d8c00817 	ldw	r3,32(sp)
    3d28:	d9000517 	ldw	r4,20(sp)
    3d2c:	d8000a15 	stw	zero,40(sp)
    3d30:	1907c83a 	sub	r3,r3,r4
    3d34:	010dc83a 	sub	r6,zero,r4
    3d38:	d8c00815 	stw	r3,32(sp)
    3d3c:	d9800915 	stw	r6,36(sp)
    3d40:	003ded06 	br	34f8 <__alt_data_end+0xfffa1a78>
    3d44:	05adc83a 	sub	r22,zero,r22
    3d48:	dd800815 	stw	r22,32(sp)
    3d4c:	002d883a 	mov	r22,zero
    3d50:	003de406 	br	34e4 <__alt_data_end+0xfffa1a64>
    3d54:	d9000517 	ldw	r4,20(sp)
    3d58:	000cc100 	call	cc10 <__floatsidf>
    3d5c:	1009883a 	mov	r4,r2
    3d60:	180b883a 	mov	r5,r3
    3d64:	b00d883a 	mov	r6,r22
    3d68:	a80f883a 	mov	r7,r21
    3d6c:	000b8080 	call	b808 <__eqdf2>
    3d70:	103dc726 	beq	r2,zero,3490 <__alt_data_end+0xfffa1a10>
    3d74:	d8800517 	ldw	r2,20(sp)
    3d78:	10bfffc4 	addi	r2,r2,-1
    3d7c:	d8800515 	stw	r2,20(sp)
    3d80:	003dc306 	br	3490 <__alt_data_end+0xfffa1a10>
    3d84:	dd400917 	ldw	r21,36(sp)
    3d88:	dd000817 	ldw	r20,32(sp)
    3d8c:	0023883a 	mov	r17,zero
    3d90:	003fa906 	br	3c38 <__alt_data_end+0xfffa21b8>
    3d94:	d9800317 	ldw	r6,12(sp)
    3d98:	b981670e 	bge	r23,r6,4338 <_dtoa_r+0x110c>
    3d9c:	0027883a 	mov	r19,zero
    3da0:	d8c00a17 	ldw	r3,40(sp)
    3da4:	183fd21e 	bne	r3,zero,3cf0 <__alt_data_end+0xfffa2270>
    3da8:	00800044 	movi	r2,1
    3dac:	1585883a 	add	r2,r2,r22
    3db0:	108007cc 	andi	r2,r2,31
    3db4:	10005f26 	beq	r2,zero,3f34 <_dtoa_r+0xd08>
    3db8:	00c00804 	movi	r3,32
    3dbc:	1887c83a 	sub	r3,r3,r2
    3dc0:	01000104 	movi	r4,4
    3dc4:	20c2dd0e 	bge	r4,r3,493c <_dtoa_r+0x1710>
    3dc8:	d9000817 	ldw	r4,32(sp)
    3dcc:	00c00704 	movi	r3,28
    3dd0:	1885c83a 	sub	r2,r3,r2
    3dd4:	2089883a 	add	r4,r4,r2
    3dd8:	d9000815 	stw	r4,32(sp)
    3ddc:	a0a9883a 	add	r20,r20,r2
    3de0:	b0ad883a 	add	r22,r22,r2
    3de4:	d8800817 	ldw	r2,32(sp)
    3de8:	0080050e 	bge	zero,r2,3e00 <_dtoa_r+0xbd4>
    3dec:	e00b883a 	mov	r5,fp
    3df0:	8009883a 	mov	r4,r16
    3df4:	100d883a 	mov	r6,r2
    3df8:	00062f40 	call	62f4 <__lshift>
    3dfc:	1039883a 	mov	fp,r2
    3e00:	0580050e 	bge	zero,r22,3e18 <_dtoa_r+0xbec>
    3e04:	a80b883a 	mov	r5,r21
    3e08:	8009883a 	mov	r4,r16
    3e0c:	b00d883a 	mov	r6,r22
    3e10:	00062f40 	call	62f4 <__lshift>
    3e14:	102b883a 	mov	r21,r2
    3e18:	d8c00c17 	ldw	r3,48(sp)
    3e1c:	1801161e 	bne	r3,zero,4278 <_dtoa_r+0x104c>
    3e20:	d8c00617 	ldw	r3,24(sp)
    3e24:	00c12d0e 	bge	zero,r3,42dc <_dtoa_r+0x10b0>
    3e28:	d8c00b17 	ldw	r3,44(sp)
    3e2c:	1800571e 	bne	r3,zero,3f8c <_dtoa_r+0xd60>
    3e30:	dc800717 	ldw	r18,28(sp)
    3e34:	dcc00617 	ldw	r19,24(sp)
    3e38:	9029883a 	mov	r20,r18
    3e3c:	00000206 	br	3e48 <_dtoa_r+0xc1c>
    3e40:	0005b900 	call	5b90 <__multadd>
    3e44:	1039883a 	mov	fp,r2
    3e48:	e009883a 	mov	r4,fp
    3e4c:	a80b883a 	mov	r5,r21
    3e50:	00030040 	call	3004 <quorem>
    3e54:	10800c04 	addi	r2,r2,48
    3e58:	90800005 	stb	r2,0(r18)
    3e5c:	94800044 	addi	r18,r18,1
    3e60:	9507c83a 	sub	r3,r18,r20
    3e64:	8009883a 	mov	r4,r16
    3e68:	e00b883a 	mov	r5,fp
    3e6c:	01800284 	movi	r6,10
    3e70:	000f883a 	mov	r7,zero
    3e74:	1cfff216 	blt	r3,r19,3e40 <__alt_data_end+0xfffa23c0>
    3e78:	1011883a 	mov	r8,r2
    3e7c:	d8800617 	ldw	r2,24(sp)
    3e80:	00822e0e 	bge	zero,r2,473c <_dtoa_r+0x1510>
    3e84:	d9000717 	ldw	r4,28(sp)
    3e88:	0025883a 	mov	r18,zero
    3e8c:	20af883a 	add	r23,r4,r2
    3e90:	e00b883a 	mov	r5,fp
    3e94:	01800044 	movi	r6,1
    3e98:	8009883a 	mov	r4,r16
    3e9c:	da001715 	stw	r8,92(sp)
    3ea0:	00062f40 	call	62f4 <__lshift>
    3ea4:	1009883a 	mov	r4,r2
    3ea8:	a80b883a 	mov	r5,r21
    3eac:	1039883a 	mov	fp,r2
    3eb0:	000643c0 	call	643c <__mcmp>
    3eb4:	da001717 	ldw	r8,92(sp)
    3eb8:	00816e0e 	bge	zero,r2,4474 <_dtoa_r+0x1248>
    3ebc:	b93fffc3 	ldbu	r4,-1(r23)
    3ec0:	b8bfffc4 	addi	r2,r23,-1
    3ec4:	1007883a 	mov	r3,r2
    3ec8:	01800e44 	movi	r6,57
    3ecc:	d9c00717 	ldw	r7,28(sp)
    3ed0:	00000506 	br	3ee8 <_dtoa_r+0xcbc>
    3ed4:	18ffffc4 	addi	r3,r3,-1
    3ed8:	38811926 	beq	r7,r2,4340 <_dtoa_r+0x1114>
    3edc:	19000003 	ldbu	r4,0(r3)
    3ee0:	102f883a 	mov	r23,r2
    3ee4:	10bfffc4 	addi	r2,r2,-1
    3ee8:	21403fcc 	andi	r5,r4,255
    3eec:	2940201c 	xori	r5,r5,128
    3ef0:	297fe004 	addi	r5,r5,-128
    3ef4:	29bff726 	beq	r5,r6,3ed4 <__alt_data_end+0xfffa2454>
    3ef8:	21000044 	addi	r4,r4,1
    3efc:	11000005 	stb	r4,0(r2)
    3f00:	8009883a 	mov	r4,r16
    3f04:	a80b883a 	mov	r5,r21
    3f08:	0005b680 	call	5b68 <_Bfree>
    3f0c:	883e7526 	beq	r17,zero,38e4 <__alt_data_end+0xfffa1e64>
    3f10:	90000426 	beq	r18,zero,3f24 <_dtoa_r+0xcf8>
    3f14:	94400326 	beq	r18,r17,3f24 <_dtoa_r+0xcf8>
    3f18:	8009883a 	mov	r4,r16
    3f1c:	900b883a 	mov	r5,r18
    3f20:	0005b680 	call	5b68 <_Bfree>
    3f24:	8009883a 	mov	r4,r16
    3f28:	880b883a 	mov	r5,r17
    3f2c:	0005b680 	call	5b68 <_Bfree>
    3f30:	003e6c06 	br	38e4 <__alt_data_end+0xfffa1e64>
    3f34:	00800704 	movi	r2,28
    3f38:	d9800817 	ldw	r6,32(sp)
    3f3c:	a0a9883a 	add	r20,r20,r2
    3f40:	b0ad883a 	add	r22,r22,r2
    3f44:	308d883a 	add	r6,r6,r2
    3f48:	d9800815 	stw	r6,32(sp)
    3f4c:	003fa506 	br	3de4 <__alt_data_end+0xfffa2364>
    3f50:	013efb84 	movi	r4,-1042
    3f54:	246bc83a 	sub	r21,r4,r17
    3f58:	9548983a 	sll	r4,r18,r21
    3f5c:	003d1806 	br	33c0 <__alt_data_end+0xfffa1940>
    3f60:	d8000c15 	stw	zero,48(sp)
    3f64:	003d5b06 	br	34d4 <__alt_data_end+0xfffa1a54>
    3f68:	880b883a 	mov	r5,r17
    3f6c:	8009883a 	mov	r4,r16
    3f70:	01800284 	movi	r6,10
    3f74:	000f883a 	mov	r7,zero
    3f78:	0005b900 	call	5b90 <__multadd>
    3f7c:	1023883a 	mov	r17,r2
    3f80:	d8800d17 	ldw	r2,52(sp)
    3f84:	0082550e 	bge	zero,r2,48dc <_dtoa_r+0x16b0>
    3f88:	d8800615 	stw	r2,24(sp)
    3f8c:	0500050e 	bge	zero,r20,3fa4 <_dtoa_r+0xd78>
    3f90:	880b883a 	mov	r5,r17
    3f94:	8009883a 	mov	r4,r16
    3f98:	a00d883a 	mov	r6,r20
    3f9c:	00062f40 	call	62f4 <__lshift>
    3fa0:	1023883a 	mov	r17,r2
    3fa4:	98016a1e 	bne	r19,zero,4550 <_dtoa_r+0x1324>
    3fa8:	8829883a 	mov	r20,r17
    3fac:	d9000617 	ldw	r4,24(sp)
    3fb0:	dcc00717 	ldw	r19,28(sp)
    3fb4:	9480004c 	andi	r18,r18,1
    3fb8:	20bfffc4 	addi	r2,r4,-1
    3fbc:	9885883a 	add	r2,r19,r2
    3fc0:	d8800415 	stw	r2,16(sp)
    3fc4:	dc800615 	stw	r18,24(sp)
    3fc8:	e009883a 	mov	r4,fp
    3fcc:	a80b883a 	mov	r5,r21
    3fd0:	00030040 	call	3004 <quorem>
    3fd4:	e009883a 	mov	r4,fp
    3fd8:	880b883a 	mov	r5,r17
    3fdc:	102f883a 	mov	r23,r2
    3fe0:	000643c0 	call	643c <__mcmp>
    3fe4:	8009883a 	mov	r4,r16
    3fe8:	a80b883a 	mov	r5,r21
    3fec:	a00d883a 	mov	r6,r20
    3ff0:	102d883a 	mov	r22,r2
    3ff4:	000649c0 	call	649c <__mdiff>
    3ff8:	1007883a 	mov	r3,r2
    3ffc:	10800317 	ldw	r2,12(r2)
    4000:	bc800c04 	addi	r18,r23,48
    4004:	1000971e 	bne	r2,zero,4264 <_dtoa_r+0x1038>
    4008:	180b883a 	mov	r5,r3
    400c:	e009883a 	mov	r4,fp
    4010:	d8c01515 	stw	r3,84(sp)
    4014:	000643c0 	call	643c <__mcmp>
    4018:	d8c01517 	ldw	r3,84(sp)
    401c:	8009883a 	mov	r4,r16
    4020:	d8801515 	stw	r2,84(sp)
    4024:	180b883a 	mov	r5,r3
    4028:	0005b680 	call	5b68 <_Bfree>
    402c:	d8801517 	ldw	r2,84(sp)
    4030:	1000041e 	bne	r2,zero,4044 <_dtoa_r+0xe18>
    4034:	d9800317 	ldw	r6,12(sp)
    4038:	3000021e 	bne	r6,zero,4044 <_dtoa_r+0xe18>
    403c:	d8c00617 	ldw	r3,24(sp)
    4040:	18007626 	beq	r3,zero,421c <_dtoa_r+0xff0>
    4044:	b0005b16 	blt	r22,zero,41b4 <_dtoa_r+0xf88>
    4048:	b000041e 	bne	r22,zero,405c <_dtoa_r+0xe30>
    404c:	d9000317 	ldw	r4,12(sp)
    4050:	2000021e 	bne	r4,zero,405c <_dtoa_r+0xe30>
    4054:	d8c00617 	ldw	r3,24(sp)
    4058:	18005626 	beq	r3,zero,41b4 <_dtoa_r+0xf88>
    405c:	00814d16 	blt	zero,r2,4594 <_dtoa_r+0x1368>
    4060:	d8c00417 	ldw	r3,16(sp)
    4064:	9d800044 	addi	r22,r19,1
    4068:	9c800005 	stb	r18,0(r19)
    406c:	b02f883a 	mov	r23,r22
    4070:	98c14c26 	beq	r19,r3,45a4 <_dtoa_r+0x1378>
    4074:	e00b883a 	mov	r5,fp
    4078:	8009883a 	mov	r4,r16
    407c:	01800284 	movi	r6,10
    4080:	000f883a 	mov	r7,zero
    4084:	0005b900 	call	5b90 <__multadd>
    4088:	1039883a 	mov	fp,r2
    408c:	8d006d26 	beq	r17,r20,4244 <_dtoa_r+0x1018>
    4090:	880b883a 	mov	r5,r17
    4094:	01800284 	movi	r6,10
    4098:	000f883a 	mov	r7,zero
    409c:	8009883a 	mov	r4,r16
    40a0:	0005b900 	call	5b90 <__multadd>
    40a4:	a00b883a 	mov	r5,r20
    40a8:	8009883a 	mov	r4,r16
    40ac:	01800284 	movi	r6,10
    40b0:	000f883a 	mov	r7,zero
    40b4:	1023883a 	mov	r17,r2
    40b8:	0005b900 	call	5b90 <__multadd>
    40bc:	1029883a 	mov	r20,r2
    40c0:	b027883a 	mov	r19,r22
    40c4:	003fc006 	br	3fc8 <__alt_data_end+0xfffa2548>
    40c8:	a005883a 	mov	r2,r20
    40cc:	003ede06 	br	3c48 <__alt_data_end+0xfffa21c8>
    40d0:	01000044 	movi	r4,1
    40d4:	d9000b15 	stw	r4,44(sp)
    40d8:	d9802217 	ldw	r6,136(sp)
    40dc:	0180dc0e 	bge	zero,r6,4450 <_dtoa_r+0x1224>
    40e0:	3023883a 	mov	r17,r6
    40e4:	d9800d15 	stw	r6,52(sp)
    40e8:	d9800615 	stw	r6,24(sp)
    40ec:	003d1e06 	br	3568 <__alt_data_end+0xfffa1ae8>
    40f0:	d8800617 	ldw	r2,24(sp)
    40f4:	00be3716 	blt	zero,r2,39d4 <__alt_data_end+0xfffa1f54>
    40f8:	1000be1e 	bne	r2,zero,43f4 <_dtoa_r+0x11c8>
    40fc:	8809883a 	mov	r4,r17
    4100:	a00b883a 	mov	r5,r20
    4104:	000d883a 	mov	r6,zero
    4108:	01d00534 	movhi	r7,16404
    410c:	000ba4c0 	call	ba4c <__muldf3>
    4110:	1009883a 	mov	r4,r2
    4114:	180b883a 	mov	r5,r3
    4118:	900d883a 	mov	r6,r18
    411c:	980f883a 	mov	r7,r19
    4120:	000b88c0 	call	b88c <__gedf2>
    4124:	002b883a 	mov	r21,zero
    4128:	0023883a 	mov	r17,zero
    412c:	10007a16 	blt	r2,zero,4318 <_dtoa_r+0x10ec>
    4130:	d9002217 	ldw	r4,136(sp)
    4134:	ddc00717 	ldw	r23,28(sp)
    4138:	0108303a 	nor	r4,zero,r4
    413c:	d9000515 	stw	r4,20(sp)
    4140:	8009883a 	mov	r4,r16
    4144:	a80b883a 	mov	r5,r21
    4148:	0005b680 	call	5b68 <_Bfree>
    414c:	883f751e 	bne	r17,zero,3f24 <__alt_data_end+0xfffa24a4>
    4150:	003de406 	br	38e4 <__alt_data_end+0xfffa1e64>
    4154:	e00b883a 	mov	r5,fp
    4158:	8009883a 	mov	r4,r16
    415c:	00061b40 	call	61b4 <__pow5mult>
    4160:	1039883a 	mov	fp,r2
    4164:	003ed306 	br	3cb4 <__alt_data_end+0xfffa2234>
    4168:	903ee01e 	bne	r18,zero,3cec <__alt_data_end+0xfffa226c>
    416c:	00800434 	movhi	r2,16
    4170:	10bfffc4 	addi	r2,r2,-1
    4174:	9884703a 	and	r2,r19,r2
    4178:	103f081e 	bne	r2,zero,3d9c <__alt_data_end+0xfffa231c>
    417c:	9cdffc2c 	andhi	r19,r19,32752
    4180:	983f0626 	beq	r19,zero,3d9c <__alt_data_end+0xfffa231c>
    4184:	d8800817 	ldw	r2,32(sp)
    4188:	b5800044 	addi	r22,r22,1
    418c:	04c00044 	movi	r19,1
    4190:	10800044 	addi	r2,r2,1
    4194:	d8800815 	stw	r2,32(sp)
    4198:	003f0106 	br	3da0 <__alt_data_end+0xfffa2320>
    419c:	d9800f17 	ldw	r6,60(sp)
    41a0:	30016826 	beq	r6,zero,4744 <_dtoa_r+0x1518>
    41a4:	10810cc4 	addi	r2,r2,1075
    41a8:	dd400917 	ldw	r21,36(sp)
    41ac:	dd000817 	ldw	r20,32(sp)
    41b0:	003e9906 	br	3c18 <__alt_data_end+0xfffa2198>
    41b4:	9011883a 	mov	r8,r18
    41b8:	4007883a 	mov	r3,r8
    41bc:	e02d883a 	mov	r22,fp
    41c0:	0080100e 	bge	zero,r2,4204 <_dtoa_r+0xfd8>
    41c4:	01800044 	movi	r6,1
    41c8:	8009883a 	mov	r4,r16
    41cc:	e00b883a 	mov	r5,fp
    41d0:	da001515 	stw	r8,84(sp)
    41d4:	da001715 	stw	r8,92(sp)
    41d8:	00062f40 	call	62f4 <__lshift>
    41dc:	1009883a 	mov	r4,r2
    41e0:	a80b883a 	mov	r5,r21
    41e4:	102d883a 	mov	r22,r2
    41e8:	000643c0 	call	643c <__mcmp>
    41ec:	d8c01517 	ldw	r3,84(sp)
    41f0:	da001717 	ldw	r8,92(sp)
    41f4:	0081a50e 	bge	zero,r2,488c <_dtoa_r+0x1660>
    41f8:	00800e44 	movi	r2,57
    41fc:	40817b26 	beq	r8,r2,47ec <_dtoa_r+0x15c0>
    4200:	40c00044 	addi	r3,r8,1
    4204:	8825883a 	mov	r18,r17
    4208:	9dc00044 	addi	r23,r19,1
    420c:	98c00005 	stb	r3,0(r19)
    4210:	a023883a 	mov	r17,r20
    4214:	b039883a 	mov	fp,r22
    4218:	003f3906 	br	3f00 <__alt_data_end+0xfffa2480>
    421c:	00800e44 	movi	r2,57
    4220:	9011883a 	mov	r8,r18
    4224:	90817226 	beq	r18,r2,47f0 <_dtoa_r+0x15c4>
    4228:	0580010e 	bge	zero,r22,4230 <_dtoa_r+0x1004>
    422c:	ba000c44 	addi	r8,r23,49
    4230:	8825883a 	mov	r18,r17
    4234:	9dc00044 	addi	r23,r19,1
    4238:	9a000005 	stb	r8,0(r19)
    423c:	a023883a 	mov	r17,r20
    4240:	003f2f06 	br	3f00 <__alt_data_end+0xfffa2480>
    4244:	880b883a 	mov	r5,r17
    4248:	8009883a 	mov	r4,r16
    424c:	01800284 	movi	r6,10
    4250:	000f883a 	mov	r7,zero
    4254:	0005b900 	call	5b90 <__multadd>
    4258:	1023883a 	mov	r17,r2
    425c:	1029883a 	mov	r20,r2
    4260:	003f9706 	br	40c0 <__alt_data_end+0xfffa2640>
    4264:	8009883a 	mov	r4,r16
    4268:	180b883a 	mov	r5,r3
    426c:	0005b680 	call	5b68 <_Bfree>
    4270:	00800044 	movi	r2,1
    4274:	003f7306 	br	4044 <__alt_data_end+0xfffa25c4>
    4278:	e009883a 	mov	r4,fp
    427c:	a80b883a 	mov	r5,r21
    4280:	000643c0 	call	643c <__mcmp>
    4284:	103ee60e 	bge	r2,zero,3e20 <__alt_data_end+0xfffa23a0>
    4288:	8009883a 	mov	r4,r16
    428c:	e00b883a 	mov	r5,fp
    4290:	01800284 	movi	r6,10
    4294:	000f883a 	mov	r7,zero
    4298:	0005b900 	call	5b90 <__multadd>
    429c:	d9000517 	ldw	r4,20(sp)
    42a0:	d9800b17 	ldw	r6,44(sp)
    42a4:	1039883a 	mov	fp,r2
    42a8:	213fffc4 	addi	r4,r4,-1
    42ac:	d9000515 	stw	r4,20(sp)
    42b0:	303f2d1e 	bne	r6,zero,3f68 <__alt_data_end+0xfffa24e8>
    42b4:	d9000d17 	ldw	r4,52(sp)
    42b8:	0101780e 	bge	zero,r4,489c <_dtoa_r+0x1670>
    42bc:	d9000615 	stw	r4,24(sp)
    42c0:	003edb06 	br	3e30 <__alt_data_end+0xfffa23b0>
    42c4:	00800084 	movi	r2,2
    42c8:	30818e1e 	bne	r6,r2,4904 <_dtoa_r+0x16d8>
    42cc:	d8000b15 	stw	zero,44(sp)
    42d0:	003f8106 	br	40d8 <__alt_data_end+0xfffa2658>
    42d4:	d8800717 	ldw	r2,28(sp)
    42d8:	003c0306 	br	32e8 <__alt_data_end+0xfffa1868>
    42dc:	d9000317 	ldw	r4,12(sp)
    42e0:	00800084 	movi	r2,2
    42e4:	113ed00e 	bge	r2,r4,3e28 <__alt_data_end+0xfffa23a8>
    42e8:	d8c00617 	ldw	r3,24(sp)
    42ec:	183f901e 	bne	r3,zero,4130 <__alt_data_end+0xfffa26b0>
    42f0:	a80b883a 	mov	r5,r21
    42f4:	8009883a 	mov	r4,r16
    42f8:	01800144 	movi	r6,5
    42fc:	000f883a 	mov	r7,zero
    4300:	0005b900 	call	5b90 <__multadd>
    4304:	e009883a 	mov	r4,fp
    4308:	100b883a 	mov	r5,r2
    430c:	102b883a 	mov	r21,r2
    4310:	000643c0 	call	643c <__mcmp>
    4314:	00bf860e 	bge	zero,r2,4130 <__alt_data_end+0xfffa26b0>
    4318:	d9800717 	ldw	r6,28(sp)
    431c:	00800c44 	movi	r2,49
    4320:	30800005 	stb	r2,0(r6)
    4324:	d8800517 	ldw	r2,20(sp)
    4328:	35c00044 	addi	r23,r6,1
    432c:	10800044 	addi	r2,r2,1
    4330:	d8800515 	stw	r2,20(sp)
    4334:	003f8206 	br	4140 <__alt_data_end+0xfffa26c0>
    4338:	903e981e 	bne	r18,zero,3d9c <__alt_data_end+0xfffa231c>
    433c:	003f8b06 	br	416c <__alt_data_end+0xfffa26ec>
    4340:	d9800517 	ldw	r6,20(sp)
    4344:	d8c00717 	ldw	r3,28(sp)
    4348:	00800c44 	movi	r2,49
    434c:	31800044 	addi	r6,r6,1
    4350:	d9800515 	stw	r6,20(sp)
    4354:	18800005 	stb	r2,0(r3)
    4358:	003ee906 	br	3f00 <__alt_data_end+0xfffa2480>
    435c:	dc000317 	ldw	r16,12(sp)
    4360:	003d6006 	br	38e4 <__alt_data_end+0xfffa1e64>
    4364:	8809883a 	mov	r4,r17
    4368:	000cc100 	call	cc10 <__floatsidf>
    436c:	a009883a 	mov	r4,r20
    4370:	a80b883a 	mov	r5,r21
    4374:	100d883a 	mov	r6,r2
    4378:	180f883a 	mov	r7,r3
    437c:	000ba4c0 	call	ba4c <__muldf3>
    4380:	1009883a 	mov	r4,r2
    4384:	180b883a 	mov	r5,r3
    4388:	000d883a 	mov	r6,zero
    438c:	01d00734 	movhi	r7,16412
    4390:	000a5ec0 	call	a5ec <__adddf3>
    4394:	1023883a 	mov	r17,r2
    4398:	00bf3034 	movhi	r2,64704
    439c:	1885883a 	add	r2,r3,r2
    43a0:	d8800e15 	stw	r2,56(sp)
    43a4:	a009883a 	mov	r4,r20
    43a8:	a80b883a 	mov	r5,r21
    43ac:	000d883a 	mov	r6,zero
    43b0:	01d00534 	movhi	r7,16404
    43b4:	000c2b80 	call	c2b8 <__subdf3>
    43b8:	d9c00e17 	ldw	r7,56(sp)
    43bc:	1009883a 	mov	r4,r2
    43c0:	180b883a 	mov	r5,r3
    43c4:	880d883a 	mov	r6,r17
    43c8:	102b883a 	mov	r21,r2
    43cc:	1829883a 	mov	r20,r3
    43d0:	000b88c0 	call	b88c <__gedf2>
    43d4:	00807716 	blt	zero,r2,45b4 <_dtoa_r+0x1388>
    43d8:	d8800e17 	ldw	r2,56(sp)
    43dc:	a809883a 	mov	r4,r21
    43e0:	a00b883a 	mov	r5,r20
    43e4:	11e0003c 	xorhi	r7,r2,32768
    43e8:	880d883a 	mov	r6,r17
    43ec:	000b96c0 	call	b96c <__ledf2>
    43f0:	103d6b0e 	bge	r2,zero,39a0 <__alt_data_end+0xfffa1f20>
    43f4:	002b883a 	mov	r21,zero
    43f8:	0023883a 	mov	r17,zero
    43fc:	003f4c06 	br	4130 <__alt_data_end+0xfffa26b0>
    4400:	d9800917 	ldw	r6,36(sp)
    4404:	e00b883a 	mov	r5,fp
    4408:	8009883a 	mov	r4,r16
    440c:	00061b40 	call	61b4 <__pow5mult>
    4410:	1039883a 	mov	fp,r2
    4414:	003e2706 	br	3cb4 <__alt_data_end+0xfffa2234>
    4418:	d8000b15 	stw	zero,44(sp)
    441c:	003c4906 	br	3544 <__alt_data_end+0xfffa1ac4>
    4420:	d9000917 	ldw	r4,36(sp)
    4424:	d9800a17 	ldw	r6,40(sp)
    4428:	dd400915 	stw	r21,36(sp)
    442c:	a905c83a 	sub	r2,r21,r4
    4430:	308d883a 	add	r6,r6,r2
    4434:	d9800a15 	stw	r6,40(sp)
    4438:	002b883a 	mov	r21,zero
    443c:	003df206 	br	3c08 <__alt_data_end+0xfffa2188>
    4440:	dc800e15 	stw	r18,56(sp)
    4444:	982b883a 	mov	r21,r19
    4448:	04400084 	movi	r17,2
    444c:	003c7406 	br	3620 <__alt_data_end+0xfffa1ba0>
    4450:	04400044 	movi	r17,1
    4454:	dc400d15 	stw	r17,52(sp)
    4458:	dc400615 	stw	r17,24(sp)
    445c:	dc402215 	stw	r17,136(sp)
    4460:	80001115 	stw	zero,68(r16)
    4464:	000b883a 	mov	r5,zero
    4468:	003c4a06 	br	3594 <__alt_data_end+0xfffa1b14>
    446c:	3023883a 	mov	r17,r6
    4470:	003ffb06 	br	4460 <__alt_data_end+0xfffa29e0>
    4474:	1000021e 	bne	r2,zero,4480 <_dtoa_r+0x1254>
    4478:	4200004c 	andi	r8,r8,1
    447c:	403e8f1e 	bne	r8,zero,3ebc <__alt_data_end+0xfffa243c>
    4480:	01000c04 	movi	r4,48
    4484:	00000106 	br	448c <_dtoa_r+0x1260>
    4488:	102f883a 	mov	r23,r2
    448c:	b8bfffc4 	addi	r2,r23,-1
    4490:	10c00007 	ldb	r3,0(r2)
    4494:	193ffc26 	beq	r3,r4,4488 <__alt_data_end+0xfffa2a08>
    4498:	003e9906 	br	3f00 <__alt_data_end+0xfffa2480>
    449c:	d9000517 	ldw	r4,20(sp)
    44a0:	012fc83a 	sub	r23,zero,r4
    44a4:	b800ad26 	beq	r23,zero,475c <_dtoa_r+0x1530>
    44a8:	b88003cc 	andi	r2,r23,15
    44ac:	100490fa 	slli	r2,r2,3
    44b0:	00c00074 	movhi	r3,1
    44b4:	18fd8f04 	addi	r3,r3,-2500
    44b8:	1885883a 	add	r2,r3,r2
    44bc:	11800017 	ldw	r6,0(r2)
    44c0:	11c00117 	ldw	r7,4(r2)
    44c4:	b82fd13a 	srai	r23,r23,4
    44c8:	9009883a 	mov	r4,r18
    44cc:	980b883a 	mov	r5,r19
    44d0:	000ba4c0 	call	ba4c <__muldf3>
    44d4:	1029883a 	mov	r20,r2
    44d8:	182b883a 	mov	r21,r3
    44dc:	b800f426 	beq	r23,zero,48b0 <_dtoa_r+0x1684>
    44e0:	02000074 	movhi	r8,1
    44e4:	423d8504 	addi	r8,r8,-2540
    44e8:	8029883a 	mov	r20,r16
    44ec:	04400084 	movi	r17,2
    44f0:	4021883a 	mov	r16,r8
    44f4:	b980004c 	andi	r6,r23,1
    44f8:	1009883a 	mov	r4,r2
    44fc:	b82fd07a 	srai	r23,r23,1
    4500:	180b883a 	mov	r5,r3
    4504:	30000426 	beq	r6,zero,4518 <_dtoa_r+0x12ec>
    4508:	81800017 	ldw	r6,0(r16)
    450c:	81c00117 	ldw	r7,4(r16)
    4510:	8c400044 	addi	r17,r17,1
    4514:	000ba4c0 	call	ba4c <__muldf3>
    4518:	84000204 	addi	r16,r16,8
    451c:	b83ff51e 	bne	r23,zero,44f4 <__alt_data_end+0xfffa2a74>
    4520:	a021883a 	mov	r16,r20
    4524:	182b883a 	mov	r21,r3
    4528:	1029883a 	mov	r20,r2
    452c:	003c5506 	br	3684 <__alt_data_end+0xfffa1c04>
    4530:	d9800517 	ldw	r6,20(sp)
    4534:	d9000717 	ldw	r4,28(sp)
    4538:	00c00c04 	movi	r3,48
    453c:	31800044 	addi	r6,r6,1
    4540:	d9800515 	stw	r6,20(sp)
    4544:	20c00005 	stb	r3,0(r4)
    4548:	02000c44 	movi	r8,49
    454c:	003da206 	br	3bd8 <__alt_data_end+0xfffa2158>
    4550:	89400117 	ldw	r5,4(r17)
    4554:	8009883a 	mov	r4,r16
    4558:	0005ac00 	call	5ac0 <_Balloc>
    455c:	89800417 	ldw	r6,16(r17)
    4560:	11000304 	addi	r4,r2,12
    4564:	89400304 	addi	r5,r17,12
    4568:	31800084 	addi	r6,r6,2
    456c:	318d883a 	add	r6,r6,r6
    4570:	318d883a 	add	r6,r6,r6
    4574:	1027883a 	mov	r19,r2
    4578:	00058640 	call	5864 <memcpy>
    457c:	8009883a 	mov	r4,r16
    4580:	980b883a 	mov	r5,r19
    4584:	01800044 	movi	r6,1
    4588:	00062f40 	call	62f4 <__lshift>
    458c:	1029883a 	mov	r20,r2
    4590:	003e8606 	br	3fac <__alt_data_end+0xfffa252c>
    4594:	00800e44 	movi	r2,57
    4598:	90809526 	beq	r18,r2,47f0 <_dtoa_r+0x15c4>
    459c:	92000044 	addi	r8,r18,1
    45a0:	003f2306 	br	4230 <__alt_data_end+0xfffa27b0>
    45a4:	9011883a 	mov	r8,r18
    45a8:	8825883a 	mov	r18,r17
    45ac:	a023883a 	mov	r17,r20
    45b0:	003e3706 	br	3e90 <__alt_data_end+0xfffa2410>
    45b4:	002b883a 	mov	r21,zero
    45b8:	0023883a 	mov	r17,zero
    45bc:	003f5606 	br	4318 <__alt_data_end+0xfffa2898>
    45c0:	51bfffc4 	addi	r6,r10,-1
    45c4:	300490fa 	slli	r2,r6,3
    45c8:	00c00074 	movhi	r3,1
    45cc:	18fd8f04 	addi	r3,r3,-2500
    45d0:	1885883a 	add	r2,r3,r2
    45d4:	d9c00e17 	ldw	r7,56(sp)
    45d8:	11000017 	ldw	r4,0(r2)
    45dc:	11400117 	ldw	r5,4(r2)
    45e0:	d8800717 	ldw	r2,28(sp)
    45e4:	d9801015 	stw	r6,64(sp)
    45e8:	880d883a 	mov	r6,r17
    45ec:	da801615 	stw	r10,88(sp)
    45f0:	15c00044 	addi	r23,r2,1
    45f4:	000ba4c0 	call	ba4c <__muldf3>
    45f8:	a80b883a 	mov	r5,r21
    45fc:	a009883a 	mov	r4,r20
    4600:	d8c01115 	stw	r3,68(sp)
    4604:	d8800e15 	stw	r2,56(sp)
    4608:	000cb880 	call	cb88 <__fixdfsi>
    460c:	1009883a 	mov	r4,r2
    4610:	1023883a 	mov	r17,r2
    4614:	000cc100 	call	cc10 <__floatsidf>
    4618:	a009883a 	mov	r4,r20
    461c:	a80b883a 	mov	r5,r21
    4620:	100d883a 	mov	r6,r2
    4624:	180f883a 	mov	r7,r3
    4628:	000c2b80 	call	c2b8 <__subdf3>
    462c:	1813883a 	mov	r9,r3
    4630:	d8c00717 	ldw	r3,28(sp)
    4634:	8c400c04 	addi	r17,r17,48
    4638:	1011883a 	mov	r8,r2
    463c:	1c400005 	stb	r17,0(r3)
    4640:	da801617 	ldw	r10,88(sp)
    4644:	00800044 	movi	r2,1
    4648:	50802326 	beq	r10,r2,46d8 <_dtoa_r+0x14ac>
    464c:	d8800717 	ldw	r2,28(sp)
    4650:	b82b883a 	mov	r21,r23
    4654:	dc001315 	stw	r16,76(sp)
    4658:	12a9883a 	add	r20,r2,r10
    465c:	4807883a 	mov	r3,r9
    4660:	4005883a 	mov	r2,r8
    4664:	dc801415 	stw	r18,80(sp)
    4668:	000d883a 	mov	r6,zero
    466c:	01d00934 	movhi	r7,16420
    4670:	1009883a 	mov	r4,r2
    4674:	180b883a 	mov	r5,r3
    4678:	000ba4c0 	call	ba4c <__muldf3>
    467c:	180b883a 	mov	r5,r3
    4680:	1009883a 	mov	r4,r2
    4684:	1821883a 	mov	r16,r3
    4688:	1025883a 	mov	r18,r2
    468c:	000cb880 	call	cb88 <__fixdfsi>
    4690:	1009883a 	mov	r4,r2
    4694:	1023883a 	mov	r17,r2
    4698:	000cc100 	call	cc10 <__floatsidf>
    469c:	9009883a 	mov	r4,r18
    46a0:	800b883a 	mov	r5,r16
    46a4:	100d883a 	mov	r6,r2
    46a8:	180f883a 	mov	r7,r3
    46ac:	8c400c04 	addi	r17,r17,48
    46b0:	000c2b80 	call	c2b8 <__subdf3>
    46b4:	ad400044 	addi	r21,r21,1
    46b8:	ac7fffc5 	stb	r17,-1(r21)
    46bc:	ad3fea1e 	bne	r21,r20,4668 <__alt_data_end+0xfffa2be8>
    46c0:	1813883a 	mov	r9,r3
    46c4:	d8c01017 	ldw	r3,64(sp)
    46c8:	dc001317 	ldw	r16,76(sp)
    46cc:	dc801417 	ldw	r18,80(sp)
    46d0:	1011883a 	mov	r8,r2
    46d4:	b8ef883a 	add	r23,r23,r3
    46d8:	d9000e17 	ldw	r4,56(sp)
    46dc:	d9401117 	ldw	r5,68(sp)
    46e0:	000d883a 	mov	r6,zero
    46e4:	01cff834 	movhi	r7,16352
    46e8:	da001715 	stw	r8,92(sp)
    46ec:	da401515 	stw	r9,84(sp)
    46f0:	000a5ec0 	call	a5ec <__adddf3>
    46f4:	da001717 	ldw	r8,92(sp)
    46f8:	da401517 	ldw	r9,84(sp)
    46fc:	1009883a 	mov	r4,r2
    4700:	400d883a 	mov	r6,r8
    4704:	480f883a 	mov	r7,r9
    4708:	180b883a 	mov	r5,r3
    470c:	000b96c0 	call	b96c <__ledf2>
    4710:	da001717 	ldw	r8,92(sp)
    4714:	da401517 	ldw	r9,84(sp)
    4718:	10003b0e 	bge	r2,zero,4808 <_dtoa_r+0x15dc>
    471c:	d9001217 	ldw	r4,72(sp)
    4720:	bd7fffc3 	ldbu	r21,-1(r23)
    4724:	d9000515 	stw	r4,20(sp)
    4728:	003d1c06 	br	3b9c <__alt_data_end+0xfffa211c>
    472c:	d8c00817 	ldw	r3,32(sp)
    4730:	18a9c83a 	sub	r20,r3,r2
    4734:	0005883a 	mov	r2,zero
    4738:	003d3706 	br	3c18 <__alt_data_end+0xfffa2198>
    473c:	00800044 	movi	r2,1
    4740:	003dd006 	br	3e84 <__alt_data_end+0xfffa2404>
    4744:	d8c00217 	ldw	r3,8(sp)
    4748:	00800d84 	movi	r2,54
    474c:	dd400917 	ldw	r21,36(sp)
    4750:	10c5c83a 	sub	r2,r2,r3
    4754:	dd000817 	ldw	r20,32(sp)
    4758:	003d2f06 	br	3c18 <__alt_data_end+0xfffa2198>
    475c:	9029883a 	mov	r20,r18
    4760:	982b883a 	mov	r21,r19
    4764:	04400084 	movi	r17,2
    4768:	003bc606 	br	3684 <__alt_data_end+0xfffa1c04>
    476c:	d8800617 	ldw	r2,24(sp)
    4770:	103efc26 	beq	r2,zero,4364 <__alt_data_end+0xfffa28e4>
    4774:	d8c00d17 	ldw	r3,52(sp)
    4778:	00fc890e 	bge	zero,r3,39a0 <__alt_data_end+0xfffa1f20>
    477c:	a80b883a 	mov	r5,r21
    4780:	a009883a 	mov	r4,r20
    4784:	000d883a 	mov	r6,zero
    4788:	01d00934 	movhi	r7,16420
    478c:	000ba4c0 	call	ba4c <__muldf3>
    4790:	89000044 	addi	r4,r17,1
    4794:	1029883a 	mov	r20,r2
    4798:	182b883a 	mov	r21,r3
    479c:	000cc100 	call	cc10 <__floatsidf>
    47a0:	a009883a 	mov	r4,r20
    47a4:	a80b883a 	mov	r5,r21
    47a8:	100d883a 	mov	r6,r2
    47ac:	180f883a 	mov	r7,r3
    47b0:	000ba4c0 	call	ba4c <__muldf3>
    47b4:	1009883a 	mov	r4,r2
    47b8:	180b883a 	mov	r5,r3
    47bc:	000d883a 	mov	r6,zero
    47c0:	01d00734 	movhi	r7,16412
    47c4:	000a5ec0 	call	a5ec <__adddf3>
    47c8:	d9000517 	ldw	r4,20(sp)
    47cc:	1023883a 	mov	r17,r2
    47d0:	00bf3034 	movhi	r2,64704
    47d4:	213fffc4 	addi	r4,r4,-1
    47d8:	1885883a 	add	r2,r3,r2
    47dc:	d9001215 	stw	r4,72(sp)
    47e0:	d8800e15 	stw	r2,56(sp)
    47e4:	da800d17 	ldw	r10,52(sp)
    47e8:	003bc306 	br	36f8 <__alt_data_end+0xfffa1c78>
    47ec:	b039883a 	mov	fp,r22
    47f0:	01000e44 	movi	r4,57
    47f4:	8825883a 	mov	r18,r17
    47f8:	9dc00044 	addi	r23,r19,1
    47fc:	99000005 	stb	r4,0(r19)
    4800:	a023883a 	mov	r17,r20
    4804:	003dae06 	br	3ec0 <__alt_data_end+0xfffa2440>
    4808:	d9800e17 	ldw	r6,56(sp)
    480c:	d9c01117 	ldw	r7,68(sp)
    4810:	0009883a 	mov	r4,zero
    4814:	014ff834 	movhi	r5,16352
    4818:	da001715 	stw	r8,92(sp)
    481c:	da401515 	stw	r9,84(sp)
    4820:	000c2b80 	call	c2b8 <__subdf3>
    4824:	da001717 	ldw	r8,92(sp)
    4828:	da401517 	ldw	r9,84(sp)
    482c:	1009883a 	mov	r4,r2
    4830:	180b883a 	mov	r5,r3
    4834:	400d883a 	mov	r6,r8
    4838:	480f883a 	mov	r7,r9
    483c:	000b88c0 	call	b88c <__gedf2>
    4840:	00bc570e 	bge	zero,r2,39a0 <__alt_data_end+0xfffa1f20>
    4844:	01000c04 	movi	r4,48
    4848:	00000106 	br	4850 <_dtoa_r+0x1624>
    484c:	102f883a 	mov	r23,r2
    4850:	b8bfffc4 	addi	r2,r23,-1
    4854:	10c00007 	ldb	r3,0(r2)
    4858:	193ffc26 	beq	r3,r4,484c <__alt_data_end+0xfffa2dcc>
    485c:	d9801217 	ldw	r6,72(sp)
    4860:	d9800515 	stw	r6,20(sp)
    4864:	003c1f06 	br	38e4 <__alt_data_end+0xfffa1e64>
    4868:	d8801217 	ldw	r2,72(sp)
    486c:	dc001117 	ldw	r16,68(sp)
    4870:	d8800515 	stw	r2,20(sp)
    4874:	003cc906 	br	3b9c <__alt_data_end+0xfffa211c>
    4878:	dd801317 	ldw	r22,76(sp)
    487c:	dc001117 	ldw	r16,68(sp)
    4880:	dcc01417 	ldw	r19,80(sp)
    4884:	dc801017 	ldw	r18,64(sp)
    4888:	003c4506 	br	39a0 <__alt_data_end+0xfffa1f20>
    488c:	103e5d1e 	bne	r2,zero,4204 <__alt_data_end+0xfffa2784>
    4890:	4080004c 	andi	r2,r8,1
    4894:	103e5b26 	beq	r2,zero,4204 <__alt_data_end+0xfffa2784>
    4898:	003e5706 	br	41f8 <__alt_data_end+0xfffa2778>
    489c:	d8c00317 	ldw	r3,12(sp)
    48a0:	00800084 	movi	r2,2
    48a4:	10c00a16 	blt	r2,r3,48d0 <_dtoa_r+0x16a4>
    48a8:	d9000d17 	ldw	r4,52(sp)
    48ac:	003e8306 	br	42bc <__alt_data_end+0xfffa283c>
    48b0:	04400084 	movi	r17,2
    48b4:	003b7306 	br	3684 <__alt_data_end+0xfffa1c04>
    48b8:	d9801217 	ldw	r6,72(sp)
    48bc:	d9800515 	stw	r6,20(sp)
    48c0:	003cb606 	br	3b9c <__alt_data_end+0xfffa211c>
    48c4:	d9001217 	ldw	r4,72(sp)
    48c8:	d9000515 	stw	r4,20(sp)
    48cc:	003c0506 	br	38e4 <__alt_data_end+0xfffa1e64>
    48d0:	d9800d17 	ldw	r6,52(sp)
    48d4:	d9800615 	stw	r6,24(sp)
    48d8:	003e8306 	br	42e8 <__alt_data_end+0xfffa2868>
    48dc:	d9800317 	ldw	r6,12(sp)
    48e0:	00800084 	movi	r2,2
    48e4:	11800216 	blt	r2,r6,48f0 <_dtoa_r+0x16c4>
    48e8:	d8800d17 	ldw	r2,52(sp)
    48ec:	003da606 	br	3f88 <__alt_data_end+0xfffa2508>
    48f0:	d8800d17 	ldw	r2,52(sp)
    48f4:	d8800615 	stw	r2,24(sp)
    48f8:	003e7b06 	br	42e8 <__alt_data_end+0xfffa2868>
    48fc:	05000044 	movi	r20,1
    4900:	003b0506 	br	3518 <__alt_data_end+0xfffa1a98>
    4904:	8009883a 	mov	r4,r16
    4908:	80001115 	stw	zero,68(r16)
    490c:	000b883a 	mov	r5,zero
    4910:	0005ac00 	call	5ac0 <_Balloc>
    4914:	d8800715 	stw	r2,28(sp)
    4918:	d8c00717 	ldw	r3,28(sp)
    491c:	00bfffc4 	movi	r2,-1
    4920:	01000044 	movi	r4,1
    4924:	d8800615 	stw	r2,24(sp)
    4928:	80c01015 	stw	r3,64(r16)
    492c:	d9000b15 	stw	r4,44(sp)
    4930:	d8002215 	stw	zero,136(sp)
    4934:	d8800d15 	stw	r2,52(sp)
    4938:	003c1906 	br	39a0 <__alt_data_end+0xfffa1f20>
    493c:	193d2926 	beq	r3,r4,3de4 <__alt_data_end+0xfffa2364>
    4940:	00c00f04 	movi	r3,60
    4944:	1885c83a 	sub	r2,r3,r2
    4948:	003d7b06 	br	3f38 <__alt_data_end+0xfffa24b8>
    494c:	000b883a 	mov	r5,zero
    4950:	003b1006 	br	3594 <__alt_data_end+0xfffa1b14>

00004954 <_fflush_r>:
    4954:	defffb04 	addi	sp,sp,-20
    4958:	dcc00315 	stw	r19,12(sp)
    495c:	dc000015 	stw	r16,0(sp)
    4960:	dfc00415 	stw	ra,16(sp)
    4964:	dc800215 	stw	r18,8(sp)
    4968:	dc400115 	stw	r17,4(sp)
    496c:	2027883a 	mov	r19,r4
    4970:	2821883a 	mov	r16,r5
    4974:	20000226 	beq	r4,zero,4980 <_fflush_r+0x2c>
    4978:	20800e17 	ldw	r2,56(r4)
    497c:	10005326 	beq	r2,zero,4acc <_fflush_r+0x178>
    4980:	8080030b 	ldhu	r2,12(r16)
    4984:	10ffffcc 	andi	r3,r2,65535
    4988:	18e0001c 	xori	r3,r3,32768
    498c:	18e00004 	addi	r3,r3,-32768
    4990:	18002c26 	beq	r3,zero,4a44 <_fflush_r+0xf0>
    4994:	10c0020c 	andi	r3,r2,8
    4998:	1800321e 	bne	r3,zero,4a64 <_fflush_r+0x110>
    499c:	80c00117 	ldw	r3,4(r16)
    49a0:	10820014 	ori	r2,r2,2048
    49a4:	8080030d 	sth	r2,12(r16)
    49a8:	00c0570e 	bge	zero,r3,4b08 <_fflush_r+0x1b4>
    49ac:	82000a17 	ldw	r8,40(r16)
    49b0:	40002426 	beq	r8,zero,4a44 <_fflush_r+0xf0>
    49b4:	9c400017 	ldw	r17,0(r19)
    49b8:	10c4000c 	andi	r3,r2,4096
    49bc:	98000015 	stw	zero,0(r19)
    49c0:	18004626 	beq	r3,zero,4adc <_fflush_r+0x188>
    49c4:	81801417 	ldw	r6,80(r16)
    49c8:	10c0010c 	andi	r3,r2,4
    49cc:	18000626 	beq	r3,zero,49e8 <_fflush_r+0x94>
    49d0:	80c00117 	ldw	r3,4(r16)
    49d4:	80800c17 	ldw	r2,48(r16)
    49d8:	30cdc83a 	sub	r6,r6,r3
    49dc:	10000226 	beq	r2,zero,49e8 <_fflush_r+0x94>
    49e0:	80800f17 	ldw	r2,60(r16)
    49e4:	308dc83a 	sub	r6,r6,r2
    49e8:	81400717 	ldw	r5,28(r16)
    49ec:	9809883a 	mov	r4,r19
    49f0:	000f883a 	mov	r7,zero
    49f4:	403ee83a 	callr	r8
    49f8:	00ffffc4 	movi	r3,-1
    49fc:	10c04526 	beq	r2,r3,4b14 <_fflush_r+0x1c0>
    4a00:	80c0030b 	ldhu	r3,12(r16)
    4a04:	81000417 	ldw	r4,16(r16)
    4a08:	80000115 	stw	zero,4(r16)
    4a0c:	197dffcc 	andi	r5,r3,63487
    4a10:	8140030d 	sth	r5,12(r16)
    4a14:	81000015 	stw	r4,0(r16)
    4a18:	18c4000c 	andi	r3,r3,4096
    4a1c:	18000126 	beq	r3,zero,4a24 <_fflush_r+0xd0>
    4a20:	80801415 	stw	r2,80(r16)
    4a24:	81400c17 	ldw	r5,48(r16)
    4a28:	9c400015 	stw	r17,0(r19)
    4a2c:	28000526 	beq	r5,zero,4a44 <_fflush_r+0xf0>
    4a30:	80801004 	addi	r2,r16,64
    4a34:	28800226 	beq	r5,r2,4a40 <_fflush_r+0xec>
    4a38:	9809883a 	mov	r4,r19
    4a3c:	00050840 	call	5084 <_free_r>
    4a40:	80000c15 	stw	zero,48(r16)
    4a44:	0005883a 	mov	r2,zero
    4a48:	dfc00417 	ldw	ra,16(sp)
    4a4c:	dcc00317 	ldw	r19,12(sp)
    4a50:	dc800217 	ldw	r18,8(sp)
    4a54:	dc400117 	ldw	r17,4(sp)
    4a58:	dc000017 	ldw	r16,0(sp)
    4a5c:	dec00504 	addi	sp,sp,20
    4a60:	f800283a 	ret
    4a64:	84800417 	ldw	r18,16(r16)
    4a68:	903ff626 	beq	r18,zero,4a44 <__alt_data_end+0xfffa2fc4>
    4a6c:	84400017 	ldw	r17,0(r16)
    4a70:	108000cc 	andi	r2,r2,3
    4a74:	84800015 	stw	r18,0(r16)
    4a78:	8ca3c83a 	sub	r17,r17,r18
    4a7c:	10001526 	beq	r2,zero,4ad4 <_fflush_r+0x180>
    4a80:	0005883a 	mov	r2,zero
    4a84:	80800215 	stw	r2,8(r16)
    4a88:	04400316 	blt	zero,r17,4a98 <_fflush_r+0x144>
    4a8c:	003fed06 	br	4a44 <__alt_data_end+0xfffa2fc4>
    4a90:	90a5883a 	add	r18,r18,r2
    4a94:	047feb0e 	bge	zero,r17,4a44 <__alt_data_end+0xfffa2fc4>
    4a98:	80800917 	ldw	r2,36(r16)
    4a9c:	81400717 	ldw	r5,28(r16)
    4aa0:	880f883a 	mov	r7,r17
    4aa4:	900d883a 	mov	r6,r18
    4aa8:	9809883a 	mov	r4,r19
    4aac:	103ee83a 	callr	r2
    4ab0:	88a3c83a 	sub	r17,r17,r2
    4ab4:	00bff616 	blt	zero,r2,4a90 <__alt_data_end+0xfffa3010>
    4ab8:	80c0030b 	ldhu	r3,12(r16)
    4abc:	00bfffc4 	movi	r2,-1
    4ac0:	18c01014 	ori	r3,r3,64
    4ac4:	80c0030d 	sth	r3,12(r16)
    4ac8:	003fdf06 	br	4a48 <__alt_data_end+0xfffa2fc8>
    4acc:	0004f100 	call	4f10 <__sinit>
    4ad0:	003fab06 	br	4980 <__alt_data_end+0xfffa2f00>
    4ad4:	80800517 	ldw	r2,20(r16)
    4ad8:	003fea06 	br	4a84 <__alt_data_end+0xfffa3004>
    4adc:	81400717 	ldw	r5,28(r16)
    4ae0:	000d883a 	mov	r6,zero
    4ae4:	9809883a 	mov	r4,r19
    4ae8:	01c00044 	movi	r7,1
    4aec:	403ee83a 	callr	r8
    4af0:	100d883a 	mov	r6,r2
    4af4:	00bfffc4 	movi	r2,-1
    4af8:	30801326 	beq	r6,r2,4b48 <_fflush_r+0x1f4>
    4afc:	8080030b 	ldhu	r2,12(r16)
    4b00:	82000a17 	ldw	r8,40(r16)
    4b04:	003fb006 	br	49c8 <__alt_data_end+0xfffa2f48>
    4b08:	80c00f17 	ldw	r3,60(r16)
    4b0c:	00ffa716 	blt	zero,r3,49ac <__alt_data_end+0xfffa2f2c>
    4b10:	003fcc06 	br	4a44 <__alt_data_end+0xfffa2fc4>
    4b14:	98c00017 	ldw	r3,0(r19)
    4b18:	183fb926 	beq	r3,zero,4a00 <__alt_data_end+0xfffa2f80>
    4b1c:	01000744 	movi	r4,29
    4b20:	19000226 	beq	r3,r4,4b2c <_fflush_r+0x1d8>
    4b24:	01000584 	movi	r4,22
    4b28:	1900101e 	bne	r3,r4,4b6c <_fflush_r+0x218>
    4b2c:	8080030b 	ldhu	r2,12(r16)
    4b30:	80c00417 	ldw	r3,16(r16)
    4b34:	80000115 	stw	zero,4(r16)
    4b38:	10bdffcc 	andi	r2,r2,63487
    4b3c:	8080030d 	sth	r2,12(r16)
    4b40:	80c00015 	stw	r3,0(r16)
    4b44:	003fb706 	br	4a24 <__alt_data_end+0xfffa2fa4>
    4b48:	98800017 	ldw	r2,0(r19)
    4b4c:	103feb26 	beq	r2,zero,4afc <__alt_data_end+0xfffa307c>
    4b50:	00c00744 	movi	r3,29
    4b54:	10c00226 	beq	r2,r3,4b60 <_fflush_r+0x20c>
    4b58:	00c00584 	movi	r3,22
    4b5c:	10ffd61e 	bne	r2,r3,4ab8 <__alt_data_end+0xfffa3038>
    4b60:	9c400015 	stw	r17,0(r19)
    4b64:	0005883a 	mov	r2,zero
    4b68:	003fb706 	br	4a48 <__alt_data_end+0xfffa2fc8>
    4b6c:	80c0030b 	ldhu	r3,12(r16)
    4b70:	18c01014 	ori	r3,r3,64
    4b74:	80c0030d 	sth	r3,12(r16)
    4b78:	003fb306 	br	4a48 <__alt_data_end+0xfffa2fc8>

00004b7c <fflush>:
    4b7c:	20000526 	beq	r4,zero,4b94 <fflush+0x18>
    4b80:	00800074 	movhi	r2,1
    4b84:	1084c404 	addi	r2,r2,4880
    4b88:	200b883a 	mov	r5,r4
    4b8c:	11000017 	ldw	r4,0(r2)
    4b90:	00049541 	jmpi	4954 <_fflush_r>
    4b94:	00800074 	movhi	r2,1
    4b98:	1084c304 	addi	r2,r2,4876
    4b9c:	11000017 	ldw	r4,0(r2)
    4ba0:	01400034 	movhi	r5,0
    4ba4:	29525504 	addi	r5,r5,18772
    4ba8:	000542c1 	jmpi	542c <_fwalk_reent>

00004bac <__fp_lock>:
    4bac:	0005883a 	mov	r2,zero
    4bb0:	f800283a 	ret

00004bb4 <__fp_unlock>:
    4bb4:	0005883a 	mov	r2,zero
    4bb8:	f800283a 	ret

00004bbc <_cleanup_r>:
    4bbc:	01400074 	movhi	r5,1
    4bc0:	29617604 	addi	r5,r5,-31272
    4bc4:	00053741 	jmpi	5374 <_fwalk>

00004bc8 <__sinit.part.1>:
    4bc8:	defff604 	addi	sp,sp,-40
    4bcc:	00c00034 	movhi	r3,0
    4bd0:	dfc00915 	stw	ra,36(sp)
    4bd4:	df000815 	stw	fp,32(sp)
    4bd8:	ddc00715 	stw	r23,28(sp)
    4bdc:	dd800615 	stw	r22,24(sp)
    4be0:	dd400515 	stw	r21,20(sp)
    4be4:	dd000415 	stw	r20,16(sp)
    4be8:	dcc00315 	stw	r19,12(sp)
    4bec:	dc800215 	stw	r18,8(sp)
    4bf0:	dc400115 	stw	r17,4(sp)
    4bf4:	dc000015 	stw	r16,0(sp)
    4bf8:	18d2ef04 	addi	r3,r3,19388
    4bfc:	24000117 	ldw	r16,4(r4)
    4c00:	20c00f15 	stw	r3,60(r4)
    4c04:	07000044 	movi	fp,1
    4c08:	00c000c4 	movi	r3,3
    4c0c:	2080bb04 	addi	r2,r4,748
    4c10:	20c0b915 	stw	r3,740(r4)
    4c14:	27000e15 	stw	fp,56(r4)
    4c18:	2080ba15 	stw	r2,744(r4)
    4c1c:	2000b815 	stw	zero,736(r4)
    4c20:	05c00204 	movi	r23,8
    4c24:	00800104 	movi	r2,4
    4c28:	2025883a 	mov	r18,r4
    4c2c:	b80d883a 	mov	r6,r23
    4c30:	81001704 	addi	r4,r16,92
    4c34:	000b883a 	mov	r5,zero
    4c38:	80000015 	stw	zero,0(r16)
    4c3c:	80000115 	stw	zero,4(r16)
    4c40:	80000215 	stw	zero,8(r16)
    4c44:	8080030d 	sth	r2,12(r16)
    4c48:	80001915 	stw	zero,100(r16)
    4c4c:	8000038d 	sth	zero,14(r16)
    4c50:	80000415 	stw	zero,16(r16)
    4c54:	80000515 	stw	zero,20(r16)
    4c58:	80000615 	stw	zero,24(r16)
    4c5c:	000599c0 	call	599c <memset>
    4c60:	05800034 	movhi	r22,0
    4c64:	94400217 	ldw	r17,8(r18)
    4c68:	05400034 	movhi	r21,0
    4c6c:	05000034 	movhi	r20,0
    4c70:	04c00034 	movhi	r19,0
    4c74:	b59adf04 	addi	r22,r22,27516
    4c78:	ad5af604 	addi	r21,r21,27608
    4c7c:	a51b1504 	addi	r20,r20,27732
    4c80:	9cdb2c04 	addi	r19,r19,27824
    4c84:	85800815 	stw	r22,32(r16)
    4c88:	85400915 	stw	r21,36(r16)
    4c8c:	85000a15 	stw	r20,40(r16)
    4c90:	84c00b15 	stw	r19,44(r16)
    4c94:	84000715 	stw	r16,28(r16)
    4c98:	00800284 	movi	r2,10
    4c9c:	89001704 	addi	r4,r17,92
    4ca0:	b80d883a 	mov	r6,r23
    4ca4:	000b883a 	mov	r5,zero
    4ca8:	88000015 	stw	zero,0(r17)
    4cac:	88000115 	stw	zero,4(r17)
    4cb0:	88000215 	stw	zero,8(r17)
    4cb4:	8880030d 	sth	r2,12(r17)
    4cb8:	88001915 	stw	zero,100(r17)
    4cbc:	8f00038d 	sth	fp,14(r17)
    4cc0:	88000415 	stw	zero,16(r17)
    4cc4:	88000515 	stw	zero,20(r17)
    4cc8:	88000615 	stw	zero,24(r17)
    4ccc:	000599c0 	call	599c <memset>
    4cd0:	94000317 	ldw	r16,12(r18)
    4cd4:	00800484 	movi	r2,18
    4cd8:	8c400715 	stw	r17,28(r17)
    4cdc:	8d800815 	stw	r22,32(r17)
    4ce0:	8d400915 	stw	r21,36(r17)
    4ce4:	8d000a15 	stw	r20,40(r17)
    4ce8:	8cc00b15 	stw	r19,44(r17)
    4cec:	8080030d 	sth	r2,12(r16)
    4cf0:	00800084 	movi	r2,2
    4cf4:	80000015 	stw	zero,0(r16)
    4cf8:	80000115 	stw	zero,4(r16)
    4cfc:	80000215 	stw	zero,8(r16)
    4d00:	80001915 	stw	zero,100(r16)
    4d04:	8080038d 	sth	r2,14(r16)
    4d08:	80000415 	stw	zero,16(r16)
    4d0c:	80000515 	stw	zero,20(r16)
    4d10:	80000615 	stw	zero,24(r16)
    4d14:	81001704 	addi	r4,r16,92
    4d18:	000b883a 	mov	r5,zero
    4d1c:	b80d883a 	mov	r6,r23
    4d20:	000599c0 	call	599c <memset>
    4d24:	84000715 	stw	r16,28(r16)
    4d28:	85800815 	stw	r22,32(r16)
    4d2c:	85400915 	stw	r21,36(r16)
    4d30:	85000a15 	stw	r20,40(r16)
    4d34:	84c00b15 	stw	r19,44(r16)
    4d38:	dfc00917 	ldw	ra,36(sp)
    4d3c:	df000817 	ldw	fp,32(sp)
    4d40:	ddc00717 	ldw	r23,28(sp)
    4d44:	dd800617 	ldw	r22,24(sp)
    4d48:	dd400517 	ldw	r21,20(sp)
    4d4c:	dd000417 	ldw	r20,16(sp)
    4d50:	dcc00317 	ldw	r19,12(sp)
    4d54:	dc800217 	ldw	r18,8(sp)
    4d58:	dc400117 	ldw	r17,4(sp)
    4d5c:	dc000017 	ldw	r16,0(sp)
    4d60:	dec00a04 	addi	sp,sp,40
    4d64:	f800283a 	ret

00004d68 <__sfmoreglue>:
    4d68:	defffc04 	addi	sp,sp,-16
    4d6c:	dc800215 	stw	r18,8(sp)
    4d70:	2825883a 	mov	r18,r5
    4d74:	dc000015 	stw	r16,0(sp)
    4d78:	01401a04 	movi	r5,104
    4d7c:	2021883a 	mov	r16,r4
    4d80:	9009883a 	mov	r4,r18
    4d84:	dfc00315 	stw	ra,12(sp)
    4d88:	dc400115 	stw	r17,4(sp)
    4d8c:	000a5c40 	call	a5c4 <__mulsi3>
    4d90:	8009883a 	mov	r4,r16
    4d94:	11400304 	addi	r5,r2,12
    4d98:	1023883a 	mov	r17,r2
    4d9c:	00005500 	call	550 <_malloc_r>
    4da0:	1021883a 	mov	r16,r2
    4da4:	10000726 	beq	r2,zero,4dc4 <__sfmoreglue+0x5c>
    4da8:	11000304 	addi	r4,r2,12
    4dac:	10000015 	stw	zero,0(r2)
    4db0:	14800115 	stw	r18,4(r2)
    4db4:	11000215 	stw	r4,8(r2)
    4db8:	000b883a 	mov	r5,zero
    4dbc:	880d883a 	mov	r6,r17
    4dc0:	000599c0 	call	599c <memset>
    4dc4:	8005883a 	mov	r2,r16
    4dc8:	dfc00317 	ldw	ra,12(sp)
    4dcc:	dc800217 	ldw	r18,8(sp)
    4dd0:	dc400117 	ldw	r17,4(sp)
    4dd4:	dc000017 	ldw	r16,0(sp)
    4dd8:	dec00404 	addi	sp,sp,16
    4ddc:	f800283a 	ret

00004de0 <__sfp>:
    4de0:	00800074 	movhi	r2,1
    4de4:	defffb04 	addi	sp,sp,-20
    4de8:	1084c304 	addi	r2,r2,4876
    4dec:	dc800215 	stw	r18,8(sp)
    4df0:	14800017 	ldw	r18,0(r2)
    4df4:	dcc00315 	stw	r19,12(sp)
    4df8:	dfc00415 	stw	ra,16(sp)
    4dfc:	90800e17 	ldw	r2,56(r18)
    4e00:	dc400115 	stw	r17,4(sp)
    4e04:	dc000015 	stw	r16,0(sp)
    4e08:	2027883a 	mov	r19,r4
    4e0c:	1000021e 	bne	r2,zero,4e18 <__sfp+0x38>
    4e10:	9009883a 	mov	r4,r18
    4e14:	0004bc80 	call	4bc8 <__sinit.part.1>
    4e18:	9480b804 	addi	r18,r18,736
    4e1c:	047fffc4 	movi	r17,-1
    4e20:	91400117 	ldw	r5,4(r18)
    4e24:	94000217 	ldw	r16,8(r18)
    4e28:	297fffc4 	addi	r5,r5,-1
    4e2c:	28000a16 	blt	r5,zero,4e58 <__sfp+0x78>
    4e30:	8080030f 	ldh	r2,12(r16)
    4e34:	10000c26 	beq	r2,zero,4e68 <__sfp+0x88>
    4e38:	80c01d04 	addi	r3,r16,116
    4e3c:	00000206 	br	4e48 <__sfp+0x68>
    4e40:	18bfe60f 	ldh	r2,-104(r3)
    4e44:	10000826 	beq	r2,zero,4e68 <__sfp+0x88>
    4e48:	297fffc4 	addi	r5,r5,-1
    4e4c:	1c3ffd04 	addi	r16,r3,-12
    4e50:	18c01a04 	addi	r3,r3,104
    4e54:	2c7ffa1e 	bne	r5,r17,4e40 <__alt_data_end+0xfffa33c0>
    4e58:	90800017 	ldw	r2,0(r18)
    4e5c:	10001d26 	beq	r2,zero,4ed4 <__sfp+0xf4>
    4e60:	1025883a 	mov	r18,r2
    4e64:	003fee06 	br	4e20 <__alt_data_end+0xfffa33a0>
    4e68:	00bfffc4 	movi	r2,-1
    4e6c:	8080038d 	sth	r2,14(r16)
    4e70:	00800044 	movi	r2,1
    4e74:	8080030d 	sth	r2,12(r16)
    4e78:	80001915 	stw	zero,100(r16)
    4e7c:	80000015 	stw	zero,0(r16)
    4e80:	80000215 	stw	zero,8(r16)
    4e84:	80000115 	stw	zero,4(r16)
    4e88:	80000415 	stw	zero,16(r16)
    4e8c:	80000515 	stw	zero,20(r16)
    4e90:	80000615 	stw	zero,24(r16)
    4e94:	81001704 	addi	r4,r16,92
    4e98:	000b883a 	mov	r5,zero
    4e9c:	01800204 	movi	r6,8
    4ea0:	000599c0 	call	599c <memset>
    4ea4:	8005883a 	mov	r2,r16
    4ea8:	80000c15 	stw	zero,48(r16)
    4eac:	80000d15 	stw	zero,52(r16)
    4eb0:	80001115 	stw	zero,68(r16)
    4eb4:	80001215 	stw	zero,72(r16)
    4eb8:	dfc00417 	ldw	ra,16(sp)
    4ebc:	dcc00317 	ldw	r19,12(sp)
    4ec0:	dc800217 	ldw	r18,8(sp)
    4ec4:	dc400117 	ldw	r17,4(sp)
    4ec8:	dc000017 	ldw	r16,0(sp)
    4ecc:	dec00504 	addi	sp,sp,20
    4ed0:	f800283a 	ret
    4ed4:	9809883a 	mov	r4,r19
    4ed8:	01400104 	movi	r5,4
    4edc:	0004d680 	call	4d68 <__sfmoreglue>
    4ee0:	90800015 	stw	r2,0(r18)
    4ee4:	103fde1e 	bne	r2,zero,4e60 <__alt_data_end+0xfffa33e0>
    4ee8:	00800304 	movi	r2,12
    4eec:	98800015 	stw	r2,0(r19)
    4ef0:	0005883a 	mov	r2,zero
    4ef4:	003ff006 	br	4eb8 <__alt_data_end+0xfffa3438>

00004ef8 <_cleanup>:
    4ef8:	00800074 	movhi	r2,1
    4efc:	1084c304 	addi	r2,r2,4876
    4f00:	11000017 	ldw	r4,0(r2)
    4f04:	01400074 	movhi	r5,1
    4f08:	29617604 	addi	r5,r5,-31272
    4f0c:	00053741 	jmpi	5374 <_fwalk>

00004f10 <__sinit>:
    4f10:	20800e17 	ldw	r2,56(r4)
    4f14:	10000126 	beq	r2,zero,4f1c <__sinit+0xc>
    4f18:	f800283a 	ret
    4f1c:	0004bc81 	jmpi	4bc8 <__sinit.part.1>

00004f20 <__sfp_lock_acquire>:
    4f20:	f800283a 	ret

00004f24 <__sfp_lock_release>:
    4f24:	f800283a 	ret

00004f28 <__sinit_lock_acquire>:
    4f28:	f800283a 	ret

00004f2c <__sinit_lock_release>:
    4f2c:	f800283a 	ret

00004f30 <__fp_lock_all>:
    4f30:	00800074 	movhi	r2,1
    4f34:	1084c404 	addi	r2,r2,4880
    4f38:	11000017 	ldw	r4,0(r2)
    4f3c:	01400034 	movhi	r5,0
    4f40:	2952eb04 	addi	r5,r5,19372
    4f44:	00053741 	jmpi	5374 <_fwalk>

00004f48 <__fp_unlock_all>:
    4f48:	00800074 	movhi	r2,1
    4f4c:	1084c404 	addi	r2,r2,4880
    4f50:	11000017 	ldw	r4,0(r2)
    4f54:	01400034 	movhi	r5,0
    4f58:	2952ed04 	addi	r5,r5,19380
    4f5c:	00053741 	jmpi	5374 <_fwalk>

00004f60 <_malloc_trim_r>:
    4f60:	defffb04 	addi	sp,sp,-20
    4f64:	dcc00315 	stw	r19,12(sp)
    4f68:	04c00074 	movhi	r19,1
    4f6c:	dc800215 	stw	r18,8(sp)
    4f70:	dc400115 	stw	r17,4(sp)
    4f74:	dc000015 	stw	r16,0(sp)
    4f78:	dfc00415 	stw	ra,16(sp)
    4f7c:	2821883a 	mov	r16,r5
    4f80:	9cfe1604 	addi	r19,r19,-1960
    4f84:	2025883a 	mov	r18,r4
    4f88:	000d3c80 	call	d3c8 <__malloc_lock>
    4f8c:	98800217 	ldw	r2,8(r19)
    4f90:	14400117 	ldw	r17,4(r2)
    4f94:	00bfff04 	movi	r2,-4
    4f98:	88a2703a 	and	r17,r17,r2
    4f9c:	8c21c83a 	sub	r16,r17,r16
    4fa0:	8403fbc4 	addi	r16,r16,4079
    4fa4:	8020d33a 	srli	r16,r16,12
    4fa8:	0083ffc4 	movi	r2,4095
    4fac:	843fffc4 	addi	r16,r16,-1
    4fb0:	8020933a 	slli	r16,r16,12
    4fb4:	1400060e 	bge	r2,r16,4fd0 <_malloc_trim_r+0x70>
    4fb8:	9009883a 	mov	r4,r18
    4fbc:	000b883a 	mov	r5,zero
    4fc0:	0000d600 	call	d60 <_sbrk_r>
    4fc4:	98c00217 	ldw	r3,8(r19)
    4fc8:	1c47883a 	add	r3,r3,r17
    4fcc:	10c00a26 	beq	r2,r3,4ff8 <_malloc_trim_r+0x98>
    4fd0:	9009883a 	mov	r4,r18
    4fd4:	000d3e80 	call	d3e8 <__malloc_unlock>
    4fd8:	0005883a 	mov	r2,zero
    4fdc:	dfc00417 	ldw	ra,16(sp)
    4fe0:	dcc00317 	ldw	r19,12(sp)
    4fe4:	dc800217 	ldw	r18,8(sp)
    4fe8:	dc400117 	ldw	r17,4(sp)
    4fec:	dc000017 	ldw	r16,0(sp)
    4ff0:	dec00504 	addi	sp,sp,20
    4ff4:	f800283a 	ret
    4ff8:	9009883a 	mov	r4,r18
    4ffc:	040bc83a 	sub	r5,zero,r16
    5000:	0000d600 	call	d60 <_sbrk_r>
    5004:	00ffffc4 	movi	r3,-1
    5008:	10c00d26 	beq	r2,r3,5040 <_malloc_trim_r+0xe0>
    500c:	00c00074 	movhi	r3,1
    5010:	18cb9a04 	addi	r3,r3,11880
    5014:	18800017 	ldw	r2,0(r3)
    5018:	99000217 	ldw	r4,8(r19)
    501c:	8c23c83a 	sub	r17,r17,r16
    5020:	8c400054 	ori	r17,r17,1
    5024:	1421c83a 	sub	r16,r2,r16
    5028:	24400115 	stw	r17,4(r4)
    502c:	9009883a 	mov	r4,r18
    5030:	1c000015 	stw	r16,0(r3)
    5034:	000d3e80 	call	d3e8 <__malloc_unlock>
    5038:	00800044 	movi	r2,1
    503c:	003fe706 	br	4fdc <__alt_data_end+0xfffa355c>
    5040:	9009883a 	mov	r4,r18
    5044:	000b883a 	mov	r5,zero
    5048:	0000d600 	call	d60 <_sbrk_r>
    504c:	99000217 	ldw	r4,8(r19)
    5050:	014003c4 	movi	r5,15
    5054:	1107c83a 	sub	r3,r2,r4
    5058:	28ffdd0e 	bge	r5,r3,4fd0 <__alt_data_end+0xfffa3550>
    505c:	01400074 	movhi	r5,1
    5060:	2944c104 	addi	r5,r5,4868
    5064:	29400017 	ldw	r5,0(r5)
    5068:	18c00054 	ori	r3,r3,1
    506c:	20c00115 	stw	r3,4(r4)
    5070:	00c00074 	movhi	r3,1
    5074:	1145c83a 	sub	r2,r2,r5
    5078:	18cb9a04 	addi	r3,r3,11880
    507c:	18800015 	stw	r2,0(r3)
    5080:	003fd306 	br	4fd0 <__alt_data_end+0xfffa3550>

00005084 <_free_r>:
    5084:	28004c26 	beq	r5,zero,51b8 <_free_r+0x134>
    5088:	defffd04 	addi	sp,sp,-12
    508c:	dc400115 	stw	r17,4(sp)
    5090:	dc000015 	stw	r16,0(sp)
    5094:	2023883a 	mov	r17,r4
    5098:	2821883a 	mov	r16,r5
    509c:	dfc00215 	stw	ra,8(sp)
    50a0:	000d3c80 	call	d3c8 <__malloc_lock>
    50a4:	813fff17 	ldw	r4,-4(r16)
    50a8:	00bfff84 	movi	r2,-2
    50ac:	02400074 	movhi	r9,1
    50b0:	81bffe04 	addi	r6,r16,-8
    50b4:	2084703a 	and	r2,r4,r2
    50b8:	4a7e1604 	addi	r9,r9,-1960
    50bc:	308b883a 	add	r5,r6,r2
    50c0:	2a000117 	ldw	r8,4(r5)
    50c4:	49c00217 	ldw	r7,8(r9)
    50c8:	00ffff04 	movi	r3,-4
    50cc:	40c6703a 	and	r3,r8,r3
    50d0:	39405326 	beq	r7,r5,5220 <_free_r+0x19c>
    50d4:	28c00115 	stw	r3,4(r5)
    50d8:	2100004c 	andi	r4,r4,1
    50dc:	2000091e 	bne	r4,zero,5104 <_free_r+0x80>
    50e0:	81fffe17 	ldw	r7,-8(r16)
    50e4:	4a000204 	addi	r8,r9,8
    50e8:	31cdc83a 	sub	r6,r6,r7
    50ec:	31000217 	ldw	r4,8(r6)
    50f0:	11c5883a 	add	r2,r2,r7
    50f4:	22006126 	beq	r4,r8,527c <_free_r+0x1f8>
    50f8:	31c00317 	ldw	r7,12(r6)
    50fc:	21c00315 	stw	r7,12(r4)
    5100:	39000215 	stw	r4,8(r7)
    5104:	28c9883a 	add	r4,r5,r3
    5108:	21c00117 	ldw	r7,4(r4)
    510c:	39c0004c 	andi	r7,r7,1
    5110:	38000d1e 	bne	r7,zero,5148 <_free_r+0xc4>
    5114:	29000217 	ldw	r4,8(r5)
    5118:	10c5883a 	add	r2,r2,r3
    511c:	00c00074 	movhi	r3,1
    5120:	18fe1804 	addi	r3,r3,-1952
    5124:	20c07526 	beq	r4,r3,52fc <_free_r+0x278>
    5128:	29c00317 	ldw	r7,12(r5)
    512c:	11400054 	ori	r5,r2,1
    5130:	3087883a 	add	r3,r6,r2
    5134:	21c00315 	stw	r7,12(r4)
    5138:	39000215 	stw	r4,8(r7)
    513c:	31400115 	stw	r5,4(r6)
    5140:	18800015 	stw	r2,0(r3)
    5144:	00000406 	br	5158 <_free_r+0xd4>
    5148:	10c00054 	ori	r3,r2,1
    514c:	30c00115 	stw	r3,4(r6)
    5150:	3087883a 	add	r3,r6,r2
    5154:	18800015 	stw	r2,0(r3)
    5158:	00c07fc4 	movi	r3,511
    515c:	18801736 	bltu	r3,r2,51bc <_free_r+0x138>
    5160:	1004d0fa 	srli	r2,r2,3
    5164:	01400044 	movi	r5,1
    5168:	49000117 	ldw	r4,4(r9)
    516c:	1087883a 	add	r3,r2,r2
    5170:	18c7883a 	add	r3,r3,r3
    5174:	1005d0ba 	srai	r2,r2,2
    5178:	18c7883a 	add	r3,r3,r3
    517c:	1a47883a 	add	r3,r3,r9
    5180:	19c00217 	ldw	r7,8(r3)
    5184:	2884983a 	sll	r2,r5,r2
    5188:	30c00315 	stw	r3,12(r6)
    518c:	31c00215 	stw	r7,8(r6)
    5190:	1104b03a 	or	r2,r2,r4
    5194:	19800215 	stw	r6,8(r3)
    5198:	48800115 	stw	r2,4(r9)
    519c:	39800315 	stw	r6,12(r7)
    51a0:	8809883a 	mov	r4,r17
    51a4:	dfc00217 	ldw	ra,8(sp)
    51a8:	dc400117 	ldw	r17,4(sp)
    51ac:	dc000017 	ldw	r16,0(sp)
    51b0:	dec00304 	addi	sp,sp,12
    51b4:	000d3e81 	jmpi	d3e8 <__malloc_unlock>
    51b8:	f800283a 	ret
    51bc:	1006d27a 	srli	r3,r2,9
    51c0:	01000104 	movi	r4,4
    51c4:	20c04036 	bltu	r4,r3,52c8 <_free_r+0x244>
    51c8:	1006d1ba 	srli	r3,r2,6
    51cc:	19400e04 	addi	r5,r3,56
    51d0:	2947883a 	add	r3,r5,r5
    51d4:	18c7883a 	add	r3,r3,r3
    51d8:	18c7883a 	add	r3,r3,r3
    51dc:	1a49883a 	add	r4,r3,r9
    51e0:	20c00217 	ldw	r3,8(r4)
    51e4:	01c00074 	movhi	r7,1
    51e8:	39fe1604 	addi	r7,r7,-1960
    51ec:	19003b26 	beq	r3,r4,52dc <_free_r+0x258>
    51f0:	01ffff04 	movi	r7,-4
    51f4:	19400117 	ldw	r5,4(r3)
    51f8:	29ca703a 	and	r5,r5,r7
    51fc:	1140022e 	bgeu	r2,r5,5208 <_free_r+0x184>
    5200:	18c00217 	ldw	r3,8(r3)
    5204:	20fffb1e 	bne	r4,r3,51f4 <__alt_data_end+0xfffa3774>
    5208:	18800317 	ldw	r2,12(r3)
    520c:	30800315 	stw	r2,12(r6)
    5210:	30c00215 	stw	r3,8(r6)
    5214:	11800215 	stw	r6,8(r2)
    5218:	19800315 	stw	r6,12(r3)
    521c:	003fe006 	br	51a0 <__alt_data_end+0xfffa3720>
    5220:	2100004c 	andi	r4,r4,1
    5224:	1885883a 	add	r2,r3,r2
    5228:	2000071e 	bne	r4,zero,5248 <_free_r+0x1c4>
    522c:	817ffe17 	ldw	r5,-8(r16)
    5230:	314dc83a 	sub	r6,r6,r5
    5234:	30c00317 	ldw	r3,12(r6)
    5238:	31000217 	ldw	r4,8(r6)
    523c:	1145883a 	add	r2,r2,r5
    5240:	20c00315 	stw	r3,12(r4)
    5244:	19000215 	stw	r4,8(r3)
    5248:	10c00054 	ori	r3,r2,1
    524c:	30c00115 	stw	r3,4(r6)
    5250:	00c00074 	movhi	r3,1
    5254:	18c4c204 	addi	r3,r3,4872
    5258:	18c00017 	ldw	r3,0(r3)
    525c:	49800215 	stw	r6,8(r9)
    5260:	10ffcf36 	bltu	r2,r3,51a0 <__alt_data_end+0xfffa3720>
    5264:	00800074 	movhi	r2,1
    5268:	108b8e04 	addi	r2,r2,11832
    526c:	11400017 	ldw	r5,0(r2)
    5270:	8809883a 	mov	r4,r17
    5274:	0004f600 	call	4f60 <_malloc_trim_r>
    5278:	003fc906 	br	51a0 <__alt_data_end+0xfffa3720>
    527c:	28c9883a 	add	r4,r5,r3
    5280:	21000117 	ldw	r4,4(r4)
    5284:	2100004c 	andi	r4,r4,1
    5288:	20000a1e 	bne	r4,zero,52b4 <_free_r+0x230>
    528c:	29000317 	ldw	r4,12(r5)
    5290:	29400217 	ldw	r5,8(r5)
    5294:	10c5883a 	add	r2,r2,r3
    5298:	10c00054 	ori	r3,r2,1
    529c:	29000315 	stw	r4,12(r5)
    52a0:	21400215 	stw	r5,8(r4)
    52a4:	30c00115 	stw	r3,4(r6)
    52a8:	308d883a 	add	r6,r6,r2
    52ac:	30800015 	stw	r2,0(r6)
    52b0:	003fbb06 	br	51a0 <__alt_data_end+0xfffa3720>
    52b4:	10c00054 	ori	r3,r2,1
    52b8:	30c00115 	stw	r3,4(r6)
    52bc:	308d883a 	add	r6,r6,r2
    52c0:	30800015 	stw	r2,0(r6)
    52c4:	003fb606 	br	51a0 <__alt_data_end+0xfffa3720>
    52c8:	01000504 	movi	r4,20
    52cc:	20c01436 	bltu	r4,r3,5320 <_free_r+0x29c>
    52d0:	194016c4 	addi	r5,r3,91
    52d4:	2947883a 	add	r3,r5,r5
    52d8:	003fbe06 	br	51d4 <__alt_data_end+0xfffa3754>
    52dc:	280bd0ba 	srai	r5,r5,2
    52e0:	00800044 	movi	r2,1
    52e4:	39000117 	ldw	r4,4(r7)
    52e8:	114a983a 	sll	r5,r2,r5
    52ec:	1805883a 	mov	r2,r3
    52f0:	2908b03a 	or	r4,r5,r4
    52f4:	39000115 	stw	r4,4(r7)
    52f8:	003fc406 	br	520c <__alt_data_end+0xfffa378c>
    52fc:	49800515 	stw	r6,20(r9)
    5300:	49800415 	stw	r6,16(r9)
    5304:	10c00054 	ori	r3,r2,1
    5308:	31000315 	stw	r4,12(r6)
    530c:	31000215 	stw	r4,8(r6)
    5310:	30c00115 	stw	r3,4(r6)
    5314:	308d883a 	add	r6,r6,r2
    5318:	30800015 	stw	r2,0(r6)
    531c:	003fa006 	br	51a0 <__alt_data_end+0xfffa3720>
    5320:	01001504 	movi	r4,84
    5324:	20c00436 	bltu	r4,r3,5338 <_free_r+0x2b4>
    5328:	1006d33a 	srli	r3,r2,12
    532c:	19401b84 	addi	r5,r3,110
    5330:	2947883a 	add	r3,r5,r5
    5334:	003fa706 	br	51d4 <__alt_data_end+0xfffa3754>
    5338:	01005504 	movi	r4,340
    533c:	20c00436 	bltu	r4,r3,5350 <_free_r+0x2cc>
    5340:	1006d3fa 	srli	r3,r2,15
    5344:	19401dc4 	addi	r5,r3,119
    5348:	2947883a 	add	r3,r5,r5
    534c:	003fa106 	br	51d4 <__alt_data_end+0xfffa3754>
    5350:	01015504 	movi	r4,1364
    5354:	20c00436 	bltu	r4,r3,5368 <_free_r+0x2e4>
    5358:	1006d4ba 	srli	r3,r2,18
    535c:	19401f04 	addi	r5,r3,124
    5360:	2947883a 	add	r3,r5,r5
    5364:	003f9b06 	br	51d4 <__alt_data_end+0xfffa3754>
    5368:	00c03f04 	movi	r3,252
    536c:	01401f84 	movi	r5,126
    5370:	003f9806 	br	51d4 <__alt_data_end+0xfffa3754>

00005374 <_fwalk>:
    5374:	defff804 	addi	sp,sp,-32
    5378:	dd400515 	stw	r21,20(sp)
    537c:	2540b804 	addi	r21,r4,736
    5380:	dd800615 	stw	r22,24(sp)
    5384:	dd000415 	stw	r20,16(sp)
    5388:	dfc00715 	stw	ra,28(sp)
    538c:	dcc00315 	stw	r19,12(sp)
    5390:	dc800215 	stw	r18,8(sp)
    5394:	dc400115 	stw	r17,4(sp)
    5398:	dc000015 	stw	r16,0(sp)
    539c:	2829883a 	mov	r20,r5
    53a0:	002d883a 	mov	r22,zero
    53a4:	0004f200 	call	4f20 <__sfp_lock_acquire>
    53a8:	a8001426 	beq	r21,zero,53fc <_fwalk+0x88>
    53ac:	04ffffc4 	movi	r19,-1
    53b0:	ac400117 	ldw	r17,4(r21)
    53b4:	ac800217 	ldw	r18,8(r21)
    53b8:	8c7fffc4 	addi	r17,r17,-1
    53bc:	88000d16 	blt	r17,zero,53f4 <_fwalk+0x80>
    53c0:	94000304 	addi	r16,r18,12
    53c4:	94800384 	addi	r18,r18,14
    53c8:	80c0000f 	ldh	r3,0(r16)
    53cc:	8c7fffc4 	addi	r17,r17,-1
    53d0:	813ffd04 	addi	r4,r16,-12
    53d4:	18000426 	beq	r3,zero,53e8 <_fwalk+0x74>
    53d8:	90c0000f 	ldh	r3,0(r18)
    53dc:	1cc00226 	beq	r3,r19,53e8 <_fwalk+0x74>
    53e0:	a03ee83a 	callr	r20
    53e4:	b0acb03a 	or	r22,r22,r2
    53e8:	84001a04 	addi	r16,r16,104
    53ec:	94801a04 	addi	r18,r18,104
    53f0:	8cfff51e 	bne	r17,r19,53c8 <__alt_data_end+0xfffa3948>
    53f4:	ad400017 	ldw	r21,0(r21)
    53f8:	a83fed1e 	bne	r21,zero,53b0 <__alt_data_end+0xfffa3930>
    53fc:	0004f240 	call	4f24 <__sfp_lock_release>
    5400:	b005883a 	mov	r2,r22
    5404:	dfc00717 	ldw	ra,28(sp)
    5408:	dd800617 	ldw	r22,24(sp)
    540c:	dd400517 	ldw	r21,20(sp)
    5410:	dd000417 	ldw	r20,16(sp)
    5414:	dcc00317 	ldw	r19,12(sp)
    5418:	dc800217 	ldw	r18,8(sp)
    541c:	dc400117 	ldw	r17,4(sp)
    5420:	dc000017 	ldw	r16,0(sp)
    5424:	dec00804 	addi	sp,sp,32
    5428:	f800283a 	ret

0000542c <_fwalk_reent>:
    542c:	defff804 	addi	sp,sp,-32
    5430:	dd400515 	stw	r21,20(sp)
    5434:	2540b804 	addi	r21,r4,736
    5438:	dd800615 	stw	r22,24(sp)
    543c:	dd000415 	stw	r20,16(sp)
    5440:	dcc00315 	stw	r19,12(sp)
    5444:	dfc00715 	stw	ra,28(sp)
    5448:	dc800215 	stw	r18,8(sp)
    544c:	dc400115 	stw	r17,4(sp)
    5450:	dc000015 	stw	r16,0(sp)
    5454:	2027883a 	mov	r19,r4
    5458:	2829883a 	mov	r20,r5
    545c:	002d883a 	mov	r22,zero
    5460:	0004f200 	call	4f20 <__sfp_lock_acquire>
    5464:	a8001326 	beq	r21,zero,54b4 <_fwalk_reent+0x88>
    5468:	04bfffc4 	movi	r18,-1
    546c:	ac400117 	ldw	r17,4(r21)
    5470:	ac000217 	ldw	r16,8(r21)
    5474:	8c7fffc4 	addi	r17,r17,-1
    5478:	88000c16 	blt	r17,zero,54ac <_fwalk_reent+0x80>
    547c:	84000304 	addi	r16,r16,12
    5480:	80c0000f 	ldh	r3,0(r16)
    5484:	8c7fffc4 	addi	r17,r17,-1
    5488:	817ffd04 	addi	r5,r16,-12
    548c:	18000526 	beq	r3,zero,54a4 <_fwalk_reent+0x78>
    5490:	80c0008f 	ldh	r3,2(r16)
    5494:	9809883a 	mov	r4,r19
    5498:	1c800226 	beq	r3,r18,54a4 <_fwalk_reent+0x78>
    549c:	a03ee83a 	callr	r20
    54a0:	b0acb03a 	or	r22,r22,r2
    54a4:	84001a04 	addi	r16,r16,104
    54a8:	8cbff51e 	bne	r17,r18,5480 <__alt_data_end+0xfffa3a00>
    54ac:	ad400017 	ldw	r21,0(r21)
    54b0:	a83fee1e 	bne	r21,zero,546c <__alt_data_end+0xfffa39ec>
    54b4:	0004f240 	call	4f24 <__sfp_lock_release>
    54b8:	b005883a 	mov	r2,r22
    54bc:	dfc00717 	ldw	ra,28(sp)
    54c0:	dd800617 	ldw	r22,24(sp)
    54c4:	dd400517 	ldw	r21,20(sp)
    54c8:	dd000417 	ldw	r20,16(sp)
    54cc:	dcc00317 	ldw	r19,12(sp)
    54d0:	dc800217 	ldw	r18,8(sp)
    54d4:	dc400117 	ldw	r17,4(sp)
    54d8:	dc000017 	ldw	r16,0(sp)
    54dc:	dec00804 	addi	sp,sp,32
    54e0:	f800283a 	ret

000054e4 <_setlocale_r>:
    54e4:	30001b26 	beq	r6,zero,5554 <_setlocale_r+0x70>
    54e8:	01400074 	movhi	r5,1
    54ec:	defffe04 	addi	sp,sp,-8
    54f0:	297d7504 	addi	r5,r5,-2604
    54f4:	3009883a 	mov	r4,r6
    54f8:	dc000015 	stw	r16,0(sp)
    54fc:	dfc00115 	stw	ra,4(sp)
    5500:	3021883a 	mov	r16,r6
    5504:	0006cb80 	call	6cb8 <strcmp>
    5508:	1000061e 	bne	r2,zero,5524 <_setlocale_r+0x40>
    550c:	00800074 	movhi	r2,1
    5510:	10bd7404 	addi	r2,r2,-2608
    5514:	dfc00117 	ldw	ra,4(sp)
    5518:	dc000017 	ldw	r16,0(sp)
    551c:	dec00204 	addi	sp,sp,8
    5520:	f800283a 	ret
    5524:	01400074 	movhi	r5,1
    5528:	297d7404 	addi	r5,r5,-2608
    552c:	8009883a 	mov	r4,r16
    5530:	0006cb80 	call	6cb8 <strcmp>
    5534:	103ff526 	beq	r2,zero,550c <__alt_data_end+0xfffa3a8c>
    5538:	01400074 	movhi	r5,1
    553c:	297d5f04 	addi	r5,r5,-2692
    5540:	8009883a 	mov	r4,r16
    5544:	0006cb80 	call	6cb8 <strcmp>
    5548:	103ff026 	beq	r2,zero,550c <__alt_data_end+0xfffa3a8c>
    554c:	0005883a 	mov	r2,zero
    5550:	003ff006 	br	5514 <__alt_data_end+0xfffa3a94>
    5554:	00800074 	movhi	r2,1
    5558:	10bd7404 	addi	r2,r2,-2608
    555c:	f800283a 	ret

00005560 <__locale_charset>:
    5560:	00800074 	movhi	r2,1
    5564:	10802904 	addi	r2,r2,164
    5568:	f800283a 	ret

0000556c <__locale_mb_cur_max>:
    556c:	00800074 	movhi	r2,1
    5570:	1084c504 	addi	r2,r2,4884
    5574:	10800017 	ldw	r2,0(r2)
    5578:	f800283a 	ret

0000557c <__locale_msgcharset>:
    557c:	00800074 	movhi	r2,1
    5580:	10802104 	addi	r2,r2,132
    5584:	f800283a 	ret

00005588 <__locale_cjk_lang>:
    5588:	0005883a 	mov	r2,zero
    558c:	f800283a 	ret

00005590 <_localeconv_r>:
    5590:	00800074 	movhi	r2,1
    5594:	10803104 	addi	r2,r2,196
    5598:	f800283a 	ret

0000559c <setlocale>:
    559c:	00c00074 	movhi	r3,1
    55a0:	18c4c404 	addi	r3,r3,4880
    55a4:	2005883a 	mov	r2,r4
    55a8:	19000017 	ldw	r4,0(r3)
    55ac:	280d883a 	mov	r6,r5
    55b0:	100b883a 	mov	r5,r2
    55b4:	00054e41 	jmpi	54e4 <_setlocale_r>

000055b8 <localeconv>:
    55b8:	00800074 	movhi	r2,1
    55bc:	10803104 	addi	r2,r2,196
    55c0:	f800283a 	ret

000055c4 <__smakebuf_r>:
    55c4:	2880030b 	ldhu	r2,12(r5)
    55c8:	10c0008c 	andi	r3,r2,2
    55cc:	1800401e 	bne	r3,zero,56d0 <__smakebuf_r+0x10c>
    55d0:	deffec04 	addi	sp,sp,-80
    55d4:	dc000f15 	stw	r16,60(sp)
    55d8:	2821883a 	mov	r16,r5
    55dc:	2940038f 	ldh	r5,14(r5)
    55e0:	dc401015 	stw	r17,64(sp)
    55e4:	dfc01315 	stw	ra,76(sp)
    55e8:	dcc01215 	stw	r19,72(sp)
    55ec:	dc801115 	stw	r18,68(sp)
    55f0:	2023883a 	mov	r17,r4
    55f4:	28001b16 	blt	r5,zero,5664 <__smakebuf_r+0xa0>
    55f8:	d80d883a 	mov	r6,sp
    55fc:	00087c80 	call	87c8 <_fstat_r>
    5600:	10001716 	blt	r2,zero,5660 <__smakebuf_r+0x9c>
    5604:	d8800117 	ldw	r2,4(sp)
    5608:	00e00014 	movui	r3,32768
    560c:	10bc000c 	andi	r2,r2,61440
    5610:	10c03726 	beq	r2,r3,56f0 <__smakebuf_r+0x12c>
    5614:	80c0030b 	ldhu	r3,12(r16)
    5618:	18c20014 	ori	r3,r3,2048
    561c:	80c0030d 	sth	r3,12(r16)
    5620:	00c80004 	movi	r3,8192
    5624:	10c03c1e 	bne	r2,r3,5718 <__smakebuf_r+0x154>
    5628:	8140038f 	ldh	r5,14(r16)
    562c:	8809883a 	mov	r4,r17
    5630:	0008cc40 	call	8cc4 <_isatty_r>
    5634:	10004e26 	beq	r2,zero,5770 <__smakebuf_r+0x1ac>
    5638:	8080030b 	ldhu	r2,12(r16)
    563c:	04c00044 	movi	r19,1
    5640:	80c010c4 	addi	r3,r16,67
    5644:	14c4b03a 	or	r2,r2,r19
    5648:	8080030d 	sth	r2,12(r16)
    564c:	80c00015 	stw	r3,0(r16)
    5650:	80c00415 	stw	r3,16(r16)
    5654:	84c00515 	stw	r19,20(r16)
    5658:	04810004 	movi	r18,1024
    565c:	00000706 	br	567c <__smakebuf_r+0xb8>
    5660:	8080030b 	ldhu	r2,12(r16)
    5664:	10c0200c 	andi	r3,r2,128
    5668:	18001f1e 	bne	r3,zero,56e8 <__smakebuf_r+0x124>
    566c:	04810004 	movi	r18,1024
    5670:	10820014 	ori	r2,r2,2048
    5674:	8080030d 	sth	r2,12(r16)
    5678:	0027883a 	mov	r19,zero
    567c:	8809883a 	mov	r4,r17
    5680:	900b883a 	mov	r5,r18
    5684:	00005500 	call	550 <_malloc_r>
    5688:	10002e26 	beq	r2,zero,5744 <__smakebuf_r+0x180>
    568c:	80c0030b 	ldhu	r3,12(r16)
    5690:	01000034 	movhi	r4,0
    5694:	2112ef04 	addi	r4,r4,19388
    5698:	89000f15 	stw	r4,60(r17)
    569c:	18c02014 	ori	r3,r3,128
    56a0:	80c0030d 	sth	r3,12(r16)
    56a4:	80800015 	stw	r2,0(r16)
    56a8:	80800415 	stw	r2,16(r16)
    56ac:	84800515 	stw	r18,20(r16)
    56b0:	98001c1e 	bne	r19,zero,5724 <__smakebuf_r+0x160>
    56b4:	dfc01317 	ldw	ra,76(sp)
    56b8:	dcc01217 	ldw	r19,72(sp)
    56bc:	dc801117 	ldw	r18,68(sp)
    56c0:	dc401017 	ldw	r17,64(sp)
    56c4:	dc000f17 	ldw	r16,60(sp)
    56c8:	dec01404 	addi	sp,sp,80
    56cc:	f800283a 	ret
    56d0:	288010c4 	addi	r2,r5,67
    56d4:	28800015 	stw	r2,0(r5)
    56d8:	28800415 	stw	r2,16(r5)
    56dc:	00800044 	movi	r2,1
    56e0:	28800515 	stw	r2,20(r5)
    56e4:	f800283a 	ret
    56e8:	04801004 	movi	r18,64
    56ec:	003fe006 	br	5670 <__alt_data_end+0xfffa3bf0>
    56f0:	81000a17 	ldw	r4,40(r16)
    56f4:	00c00034 	movhi	r3,0
    56f8:	18db1504 	addi	r3,r3,27732
    56fc:	20ffc51e 	bne	r4,r3,5614 <__alt_data_end+0xfffa3b94>
    5700:	80c0030b 	ldhu	r3,12(r16)
    5704:	01010004 	movi	r4,1024
    5708:	81001315 	stw	r4,76(r16)
    570c:	1906b03a 	or	r3,r3,r4
    5710:	80c0030d 	sth	r3,12(r16)
    5714:	003fc206 	br	5620 <__alt_data_end+0xfffa3ba0>
    5718:	0027883a 	mov	r19,zero
    571c:	04810004 	movi	r18,1024
    5720:	003fd606 	br	567c <__alt_data_end+0xfffa3bfc>
    5724:	8140038f 	ldh	r5,14(r16)
    5728:	8809883a 	mov	r4,r17
    572c:	0008cc40 	call	8cc4 <_isatty_r>
    5730:	103fe026 	beq	r2,zero,56b4 <__alt_data_end+0xfffa3c34>
    5734:	8080030b 	ldhu	r2,12(r16)
    5738:	10800054 	ori	r2,r2,1
    573c:	8080030d 	sth	r2,12(r16)
    5740:	003fdc06 	br	56b4 <__alt_data_end+0xfffa3c34>
    5744:	8080030b 	ldhu	r2,12(r16)
    5748:	10c0800c 	andi	r3,r2,512
    574c:	183fd91e 	bne	r3,zero,56b4 <__alt_data_end+0xfffa3c34>
    5750:	10800094 	ori	r2,r2,2
    5754:	80c010c4 	addi	r3,r16,67
    5758:	8080030d 	sth	r2,12(r16)
    575c:	00800044 	movi	r2,1
    5760:	80c00015 	stw	r3,0(r16)
    5764:	80c00415 	stw	r3,16(r16)
    5768:	80800515 	stw	r2,20(r16)
    576c:	003fd106 	br	56b4 <__alt_data_end+0xfffa3c34>
    5770:	04c00044 	movi	r19,1
    5774:	04810004 	movi	r18,1024
    5778:	003fc006 	br	567c <__alt_data_end+0xfffa3bfc>

0000577c <memchr>:
    577c:	208000cc 	andi	r2,r4,3
    5780:	280f883a 	mov	r7,r5
    5784:	10003526 	beq	r2,zero,585c <memchr+0xe0>
    5788:	30bfffc4 	addi	r2,r6,-1
    578c:	30001b26 	beq	r6,zero,57fc <memchr+0x80>
    5790:	21800003 	ldbu	r6,0(r4)
    5794:	28c03fcc 	andi	r3,r5,255
    5798:	30c01a26 	beq	r6,r3,5804 <memchr+0x88>
    579c:	180d883a 	mov	r6,r3
    57a0:	00000406 	br	57b4 <memchr+0x38>
    57a4:	10001526 	beq	r2,zero,57fc <memchr+0x80>
    57a8:	20c00003 	ldbu	r3,0(r4)
    57ac:	10bfffc4 	addi	r2,r2,-1
    57b0:	19801426 	beq	r3,r6,5804 <memchr+0x88>
    57b4:	21000044 	addi	r4,r4,1
    57b8:	20c000cc 	andi	r3,r4,3
    57bc:	183ff91e 	bne	r3,zero,57a4 <__alt_data_end+0xfffa3d24>
    57c0:	024000c4 	movi	r9,3
    57c4:	48801136 	bltu	r9,r2,580c <memchr+0x90>
    57c8:	10000c26 	beq	r2,zero,57fc <memchr+0x80>
    57cc:	20c00003 	ldbu	r3,0(r4)
    57d0:	29403fcc 	andi	r5,r5,255
    57d4:	19400b26 	beq	r3,r5,5804 <memchr+0x88>
    57d8:	20c00044 	addi	r3,r4,1
    57dc:	2085883a 	add	r2,r4,r2
    57e0:	39803fcc 	andi	r6,r7,255
    57e4:	00000306 	br	57f4 <memchr+0x78>
    57e8:	18c00044 	addi	r3,r3,1
    57ec:	197fffc3 	ldbu	r5,-1(r3)
    57f0:	29800426 	beq	r5,r6,5804 <memchr+0x88>
    57f4:	1809883a 	mov	r4,r3
    57f8:	18bffb1e 	bne	r3,r2,57e8 <__alt_data_end+0xfffa3d68>
    57fc:	0005883a 	mov	r2,zero
    5800:	f800283a 	ret
    5804:	2005883a 	mov	r2,r4
    5808:	f800283a 	ret
    580c:	28c03fcc 	andi	r3,r5,255
    5810:	1810923a 	slli	r8,r3,8
    5814:	02ffbff4 	movhi	r11,65279
    5818:	02a02074 	movhi	r10,32897
    581c:	40c6b03a 	or	r3,r8,r3
    5820:	1810943a 	slli	r8,r3,16
    5824:	5affbfc4 	addi	r11,r11,-257
    5828:	52a02004 	addi	r10,r10,-32640
    582c:	40d0b03a 	or	r8,r8,r3
    5830:	20c00017 	ldw	r3,0(r4)
    5834:	40c6f03a 	xor	r3,r8,r3
    5838:	1acd883a 	add	r6,r3,r11
    583c:	00c6303a 	nor	r3,zero,r3
    5840:	30c6703a 	and	r3,r6,r3
    5844:	1a86703a 	and	r3,r3,r10
    5848:	183fdf1e 	bne	r3,zero,57c8 <__alt_data_end+0xfffa3d48>
    584c:	10bfff04 	addi	r2,r2,-4
    5850:	21000104 	addi	r4,r4,4
    5854:	48bff636 	bltu	r9,r2,5830 <__alt_data_end+0xfffa3db0>
    5858:	003fdb06 	br	57c8 <__alt_data_end+0xfffa3d48>
    585c:	3005883a 	mov	r2,r6
    5860:	003fd706 	br	57c0 <__alt_data_end+0xfffa3d40>

00005864 <memcpy>:
    5864:	deffff04 	addi	sp,sp,-4
    5868:	dc000015 	stw	r16,0(sp)
    586c:	00c003c4 	movi	r3,15
    5870:	2005883a 	mov	r2,r4
    5874:	1980432e 	bgeu	r3,r6,5984 <memcpy+0x120>
    5878:	2146b03a 	or	r3,r4,r5
    587c:	18c000cc 	andi	r3,r3,3
    5880:	1800421e 	bne	r3,zero,598c <memcpy+0x128>
    5884:	343ffc04 	addi	r16,r6,-16
    5888:	8020d13a 	srli	r16,r16,4
    588c:	28c00104 	addi	r3,r5,4
    5890:	23400104 	addi	r13,r4,4
    5894:	801e913a 	slli	r15,r16,4
    5898:	2b000204 	addi	r12,r5,8
    589c:	22c00204 	addi	r11,r4,8
    58a0:	7bc00504 	addi	r15,r15,20
    58a4:	2a800304 	addi	r10,r5,12
    58a8:	22400304 	addi	r9,r4,12
    58ac:	2bdf883a 	add	r15,r5,r15
    58b0:	2811883a 	mov	r8,r5
    58b4:	200f883a 	mov	r7,r4
    58b8:	41000017 	ldw	r4,0(r8)
    58bc:	39c00404 	addi	r7,r7,16
    58c0:	18c00404 	addi	r3,r3,16
    58c4:	393ffc15 	stw	r4,-16(r7)
    58c8:	1bbffc17 	ldw	r14,-16(r3)
    58cc:	6b400404 	addi	r13,r13,16
    58d0:	5ac00404 	addi	r11,r11,16
    58d4:	6bbffc15 	stw	r14,-16(r13)
    58d8:	63800017 	ldw	r14,0(r12)
    58dc:	4a400404 	addi	r9,r9,16
    58e0:	42000404 	addi	r8,r8,16
    58e4:	5bbffc15 	stw	r14,-16(r11)
    58e8:	53800017 	ldw	r14,0(r10)
    58ec:	63000404 	addi	r12,r12,16
    58f0:	52800404 	addi	r10,r10,16
    58f4:	4bbffc15 	stw	r14,-16(r9)
    58f8:	1bffef1e 	bne	r3,r15,58b8 <__alt_data_end+0xfffa3e38>
    58fc:	81c00044 	addi	r7,r16,1
    5900:	380e913a 	slli	r7,r7,4
    5904:	310003cc 	andi	r4,r6,15
    5908:	02c000c4 	movi	r11,3
    590c:	11c7883a 	add	r3,r2,r7
    5910:	29cb883a 	add	r5,r5,r7
    5914:	59001f2e 	bgeu	r11,r4,5994 <memcpy+0x130>
    5918:	1813883a 	mov	r9,r3
    591c:	2811883a 	mov	r8,r5
    5920:	200f883a 	mov	r7,r4
    5924:	42800017 	ldw	r10,0(r8)
    5928:	4a400104 	addi	r9,r9,4
    592c:	39ffff04 	addi	r7,r7,-4
    5930:	4abfff15 	stw	r10,-4(r9)
    5934:	42000104 	addi	r8,r8,4
    5938:	59fffa36 	bltu	r11,r7,5924 <__alt_data_end+0xfffa3ea4>
    593c:	213fff04 	addi	r4,r4,-4
    5940:	2008d0ba 	srli	r4,r4,2
    5944:	318000cc 	andi	r6,r6,3
    5948:	21000044 	addi	r4,r4,1
    594c:	2109883a 	add	r4,r4,r4
    5950:	2109883a 	add	r4,r4,r4
    5954:	1907883a 	add	r3,r3,r4
    5958:	290b883a 	add	r5,r5,r4
    595c:	30000626 	beq	r6,zero,5978 <memcpy+0x114>
    5960:	198d883a 	add	r6,r3,r6
    5964:	29c00003 	ldbu	r7,0(r5)
    5968:	18c00044 	addi	r3,r3,1
    596c:	29400044 	addi	r5,r5,1
    5970:	19ffffc5 	stb	r7,-1(r3)
    5974:	19bffb1e 	bne	r3,r6,5964 <__alt_data_end+0xfffa3ee4>
    5978:	dc000017 	ldw	r16,0(sp)
    597c:	dec00104 	addi	sp,sp,4
    5980:	f800283a 	ret
    5984:	2007883a 	mov	r3,r4
    5988:	003ff406 	br	595c <__alt_data_end+0xfffa3edc>
    598c:	2007883a 	mov	r3,r4
    5990:	003ff306 	br	5960 <__alt_data_end+0xfffa3ee0>
    5994:	200d883a 	mov	r6,r4
    5998:	003ff006 	br	595c <__alt_data_end+0xfffa3edc>

0000599c <memset>:
    599c:	20c000cc 	andi	r3,r4,3
    59a0:	2005883a 	mov	r2,r4
    59a4:	18004326 	beq	r3,zero,5ab4 <memset+0x118>
    59a8:	31ffffc4 	addi	r7,r6,-1
    59ac:	30004026 	beq	r6,zero,5ab0 <memset+0x114>
    59b0:	2813883a 	mov	r9,r5
    59b4:	200d883a 	mov	r6,r4
    59b8:	2007883a 	mov	r3,r4
    59bc:	00000406 	br	59d0 <memset+0x34>
    59c0:	3a3fffc4 	addi	r8,r7,-1
    59c4:	31800044 	addi	r6,r6,1
    59c8:	38003926 	beq	r7,zero,5ab0 <memset+0x114>
    59cc:	400f883a 	mov	r7,r8
    59d0:	18c00044 	addi	r3,r3,1
    59d4:	32400005 	stb	r9,0(r6)
    59d8:	1a0000cc 	andi	r8,r3,3
    59dc:	403ff81e 	bne	r8,zero,59c0 <__alt_data_end+0xfffa3f40>
    59e0:	010000c4 	movi	r4,3
    59e4:	21c02d2e 	bgeu	r4,r7,5a9c <memset+0x100>
    59e8:	29803fcc 	andi	r6,r5,255
    59ec:	3008923a 	slli	r4,r6,8
    59f0:	218cb03a 	or	r6,r4,r6
    59f4:	3008943a 	slli	r4,r6,16
    59f8:	218cb03a 	or	r6,r4,r6
    59fc:	010003c4 	movi	r4,15
    5a00:	21c0182e 	bgeu	r4,r7,5a64 <memset+0xc8>
    5a04:	3b3ffc04 	addi	r12,r7,-16
    5a08:	6018d13a 	srli	r12,r12,4
    5a0c:	1a000104 	addi	r8,r3,4
    5a10:	1ac00204 	addi	r11,r3,8
    5a14:	6008913a 	slli	r4,r12,4
    5a18:	1a800304 	addi	r10,r3,12
    5a1c:	1813883a 	mov	r9,r3
    5a20:	21000504 	addi	r4,r4,20
    5a24:	1909883a 	add	r4,r3,r4
    5a28:	49800015 	stw	r6,0(r9)
    5a2c:	41800015 	stw	r6,0(r8)
    5a30:	59800015 	stw	r6,0(r11)
    5a34:	51800015 	stw	r6,0(r10)
    5a38:	42000404 	addi	r8,r8,16
    5a3c:	4a400404 	addi	r9,r9,16
    5a40:	5ac00404 	addi	r11,r11,16
    5a44:	52800404 	addi	r10,r10,16
    5a48:	413ff71e 	bne	r8,r4,5a28 <__alt_data_end+0xfffa3fa8>
    5a4c:	63000044 	addi	r12,r12,1
    5a50:	6018913a 	slli	r12,r12,4
    5a54:	39c003cc 	andi	r7,r7,15
    5a58:	010000c4 	movi	r4,3
    5a5c:	1b07883a 	add	r3,r3,r12
    5a60:	21c00e2e 	bgeu	r4,r7,5a9c <memset+0x100>
    5a64:	1813883a 	mov	r9,r3
    5a68:	3811883a 	mov	r8,r7
    5a6c:	010000c4 	movi	r4,3
    5a70:	49800015 	stw	r6,0(r9)
    5a74:	423fff04 	addi	r8,r8,-4
    5a78:	4a400104 	addi	r9,r9,4
    5a7c:	223ffc36 	bltu	r4,r8,5a70 <__alt_data_end+0xfffa3ff0>
    5a80:	393fff04 	addi	r4,r7,-4
    5a84:	2008d0ba 	srli	r4,r4,2
    5a88:	39c000cc 	andi	r7,r7,3
    5a8c:	21000044 	addi	r4,r4,1
    5a90:	2109883a 	add	r4,r4,r4
    5a94:	2109883a 	add	r4,r4,r4
    5a98:	1907883a 	add	r3,r3,r4
    5a9c:	38000426 	beq	r7,zero,5ab0 <memset+0x114>
    5aa0:	19cf883a 	add	r7,r3,r7
    5aa4:	19400005 	stb	r5,0(r3)
    5aa8:	18c00044 	addi	r3,r3,1
    5aac:	19fffd1e 	bne	r3,r7,5aa4 <__alt_data_end+0xfffa4024>
    5ab0:	f800283a 	ret
    5ab4:	2007883a 	mov	r3,r4
    5ab8:	300f883a 	mov	r7,r6
    5abc:	003fc806 	br	59e0 <__alt_data_end+0xfffa3f60>

00005ac0 <_Balloc>:
    5ac0:	20801317 	ldw	r2,76(r4)
    5ac4:	defffc04 	addi	sp,sp,-16
    5ac8:	dc400115 	stw	r17,4(sp)
    5acc:	dc000015 	stw	r16,0(sp)
    5ad0:	dfc00315 	stw	ra,12(sp)
    5ad4:	dc800215 	stw	r18,8(sp)
    5ad8:	2023883a 	mov	r17,r4
    5adc:	2821883a 	mov	r16,r5
    5ae0:	10000f26 	beq	r2,zero,5b20 <_Balloc+0x60>
    5ae4:	8407883a 	add	r3,r16,r16
    5ae8:	18c7883a 	add	r3,r3,r3
    5aec:	10c7883a 	add	r3,r2,r3
    5af0:	18800017 	ldw	r2,0(r3)
    5af4:	10001126 	beq	r2,zero,5b3c <_Balloc+0x7c>
    5af8:	11000017 	ldw	r4,0(r2)
    5afc:	19000015 	stw	r4,0(r3)
    5b00:	10000415 	stw	zero,16(r2)
    5b04:	10000315 	stw	zero,12(r2)
    5b08:	dfc00317 	ldw	ra,12(sp)
    5b0c:	dc800217 	ldw	r18,8(sp)
    5b10:	dc400117 	ldw	r17,4(sp)
    5b14:	dc000017 	ldw	r16,0(sp)
    5b18:	dec00404 	addi	sp,sp,16
    5b1c:	f800283a 	ret
    5b20:	01400104 	movi	r5,4
    5b24:	01800844 	movi	r6,33
    5b28:	00084000 	call	8400 <_calloc_r>
    5b2c:	88801315 	stw	r2,76(r17)
    5b30:	103fec1e 	bne	r2,zero,5ae4 <__alt_data_end+0xfffa4064>
    5b34:	0005883a 	mov	r2,zero
    5b38:	003ff306 	br	5b08 <__alt_data_end+0xfffa4088>
    5b3c:	01400044 	movi	r5,1
    5b40:	2c24983a 	sll	r18,r5,r16
    5b44:	8809883a 	mov	r4,r17
    5b48:	91800144 	addi	r6,r18,5
    5b4c:	318d883a 	add	r6,r6,r6
    5b50:	318d883a 	add	r6,r6,r6
    5b54:	00084000 	call	8400 <_calloc_r>
    5b58:	103ff626 	beq	r2,zero,5b34 <__alt_data_end+0xfffa40b4>
    5b5c:	14000115 	stw	r16,4(r2)
    5b60:	14800215 	stw	r18,8(r2)
    5b64:	003fe606 	br	5b00 <__alt_data_end+0xfffa4080>

00005b68 <_Bfree>:
    5b68:	28000826 	beq	r5,zero,5b8c <_Bfree+0x24>
    5b6c:	28c00117 	ldw	r3,4(r5)
    5b70:	20801317 	ldw	r2,76(r4)
    5b74:	18c7883a 	add	r3,r3,r3
    5b78:	18c7883a 	add	r3,r3,r3
    5b7c:	10c5883a 	add	r2,r2,r3
    5b80:	10c00017 	ldw	r3,0(r2)
    5b84:	28c00015 	stw	r3,0(r5)
    5b88:	11400015 	stw	r5,0(r2)
    5b8c:	f800283a 	ret

00005b90 <__multadd>:
    5b90:	defff704 	addi	sp,sp,-36
    5b94:	dc800215 	stw	r18,8(sp)
    5b98:	2c800417 	ldw	r18,16(r5)
    5b9c:	ddc00715 	stw	r23,28(sp)
    5ba0:	dd800615 	stw	r22,24(sp)
    5ba4:	dd000415 	stw	r20,16(sp)
    5ba8:	dcc00315 	stw	r19,12(sp)
    5bac:	dc400115 	stw	r17,4(sp)
    5bb0:	dc000015 	stw	r16,0(sp)
    5bb4:	dfc00815 	stw	ra,32(sp)
    5bb8:	dd400515 	stw	r21,20(sp)
    5bbc:	2827883a 	mov	r19,r5
    5bc0:	2029883a 	mov	r20,r4
    5bc4:	3023883a 	mov	r17,r6
    5bc8:	3821883a 	mov	r16,r7
    5bcc:	2d800504 	addi	r22,r5,20
    5bd0:	002f883a 	mov	r23,zero
    5bd4:	b5400017 	ldw	r21,0(r22)
    5bd8:	880b883a 	mov	r5,r17
    5bdc:	bdc00044 	addi	r23,r23,1
    5be0:	a93fffcc 	andi	r4,r21,65535
    5be4:	000a5c40 	call	a5c4 <__mulsi3>
    5be8:	1421883a 	add	r16,r2,r16
    5bec:	a808d43a 	srli	r4,r21,16
    5bf0:	802ad43a 	srli	r21,r16,16
    5bf4:	880b883a 	mov	r5,r17
    5bf8:	000a5c40 	call	a5c4 <__mulsi3>
    5bfc:	a88f883a 	add	r7,r21,r2
    5c00:	3804943a 	slli	r2,r7,16
    5c04:	80ffffcc 	andi	r3,r16,65535
    5c08:	b5800104 	addi	r22,r22,4
    5c0c:	10c7883a 	add	r3,r2,r3
    5c10:	b0ffff15 	stw	r3,-4(r22)
    5c14:	3820d43a 	srli	r16,r7,16
    5c18:	bcbfee16 	blt	r23,r18,5bd4 <__alt_data_end+0xfffa4154>
    5c1c:	80000926 	beq	r16,zero,5c44 <__multadd+0xb4>
    5c20:	98800217 	ldw	r2,8(r19)
    5c24:	9080130e 	bge	r18,r2,5c74 <__multadd+0xe4>
    5c28:	90800144 	addi	r2,r18,5
    5c2c:	1085883a 	add	r2,r2,r2
    5c30:	1085883a 	add	r2,r2,r2
    5c34:	9885883a 	add	r2,r19,r2
    5c38:	14000015 	stw	r16,0(r2)
    5c3c:	94800044 	addi	r18,r18,1
    5c40:	9c800415 	stw	r18,16(r19)
    5c44:	9805883a 	mov	r2,r19
    5c48:	dfc00817 	ldw	ra,32(sp)
    5c4c:	ddc00717 	ldw	r23,28(sp)
    5c50:	dd800617 	ldw	r22,24(sp)
    5c54:	dd400517 	ldw	r21,20(sp)
    5c58:	dd000417 	ldw	r20,16(sp)
    5c5c:	dcc00317 	ldw	r19,12(sp)
    5c60:	dc800217 	ldw	r18,8(sp)
    5c64:	dc400117 	ldw	r17,4(sp)
    5c68:	dc000017 	ldw	r16,0(sp)
    5c6c:	dec00904 	addi	sp,sp,36
    5c70:	f800283a 	ret
    5c74:	99400117 	ldw	r5,4(r19)
    5c78:	a009883a 	mov	r4,r20
    5c7c:	29400044 	addi	r5,r5,1
    5c80:	0005ac00 	call	5ac0 <_Balloc>
    5c84:	99800417 	ldw	r6,16(r19)
    5c88:	99400304 	addi	r5,r19,12
    5c8c:	11000304 	addi	r4,r2,12
    5c90:	31800084 	addi	r6,r6,2
    5c94:	318d883a 	add	r6,r6,r6
    5c98:	318d883a 	add	r6,r6,r6
    5c9c:	1023883a 	mov	r17,r2
    5ca0:	00058640 	call	5864 <memcpy>
    5ca4:	99000117 	ldw	r4,4(r19)
    5ca8:	a0c01317 	ldw	r3,76(r20)
    5cac:	2109883a 	add	r4,r4,r4
    5cb0:	2109883a 	add	r4,r4,r4
    5cb4:	1907883a 	add	r3,r3,r4
    5cb8:	18800017 	ldw	r2,0(r3)
    5cbc:	98800015 	stw	r2,0(r19)
    5cc0:	1cc00015 	stw	r19,0(r3)
    5cc4:	8827883a 	mov	r19,r17
    5cc8:	003fd706 	br	5c28 <__alt_data_end+0xfffa41a8>

00005ccc <__s2b>:
    5ccc:	defff904 	addi	sp,sp,-28
    5cd0:	dc400115 	stw	r17,4(sp)
    5cd4:	dc000015 	stw	r16,0(sp)
    5cd8:	2023883a 	mov	r17,r4
    5cdc:	2821883a 	mov	r16,r5
    5ce0:	39000204 	addi	r4,r7,8
    5ce4:	01400244 	movi	r5,9
    5ce8:	dcc00315 	stw	r19,12(sp)
    5cec:	dc800215 	stw	r18,8(sp)
    5cf0:	dfc00615 	stw	ra,24(sp)
    5cf4:	dd400515 	stw	r21,20(sp)
    5cf8:	dd000415 	stw	r20,16(sp)
    5cfc:	3825883a 	mov	r18,r7
    5d00:	3027883a 	mov	r19,r6
    5d04:	000a5040 	call	a504 <__divsi3>
    5d08:	00c00044 	movi	r3,1
    5d0c:	000b883a 	mov	r5,zero
    5d10:	1880030e 	bge	r3,r2,5d20 <__s2b+0x54>
    5d14:	18c7883a 	add	r3,r3,r3
    5d18:	29400044 	addi	r5,r5,1
    5d1c:	18bffd16 	blt	r3,r2,5d14 <__alt_data_end+0xfffa4294>
    5d20:	8809883a 	mov	r4,r17
    5d24:	0005ac00 	call	5ac0 <_Balloc>
    5d28:	d8c00717 	ldw	r3,28(sp)
    5d2c:	10c00515 	stw	r3,20(r2)
    5d30:	00c00044 	movi	r3,1
    5d34:	10c00415 	stw	r3,16(r2)
    5d38:	00c00244 	movi	r3,9
    5d3c:	1cc0210e 	bge	r3,r19,5dc4 <__s2b+0xf8>
    5d40:	80eb883a 	add	r21,r16,r3
    5d44:	a829883a 	mov	r20,r21
    5d48:	84e1883a 	add	r16,r16,r19
    5d4c:	a1c00007 	ldb	r7,0(r20)
    5d50:	8809883a 	mov	r4,r17
    5d54:	a5000044 	addi	r20,r20,1
    5d58:	100b883a 	mov	r5,r2
    5d5c:	01800284 	movi	r6,10
    5d60:	39fff404 	addi	r7,r7,-48
    5d64:	0005b900 	call	5b90 <__multadd>
    5d68:	a43ff81e 	bne	r20,r16,5d4c <__alt_data_end+0xfffa42cc>
    5d6c:	ace1883a 	add	r16,r21,r19
    5d70:	843ffe04 	addi	r16,r16,-8
    5d74:	9c800a0e 	bge	r19,r18,5da0 <__s2b+0xd4>
    5d78:	94e5c83a 	sub	r18,r18,r19
    5d7c:	84a5883a 	add	r18,r16,r18
    5d80:	81c00007 	ldb	r7,0(r16)
    5d84:	8809883a 	mov	r4,r17
    5d88:	84000044 	addi	r16,r16,1
    5d8c:	100b883a 	mov	r5,r2
    5d90:	01800284 	movi	r6,10
    5d94:	39fff404 	addi	r7,r7,-48
    5d98:	0005b900 	call	5b90 <__multadd>
    5d9c:	84bff81e 	bne	r16,r18,5d80 <__alt_data_end+0xfffa4300>
    5da0:	dfc00617 	ldw	ra,24(sp)
    5da4:	dd400517 	ldw	r21,20(sp)
    5da8:	dd000417 	ldw	r20,16(sp)
    5dac:	dcc00317 	ldw	r19,12(sp)
    5db0:	dc800217 	ldw	r18,8(sp)
    5db4:	dc400117 	ldw	r17,4(sp)
    5db8:	dc000017 	ldw	r16,0(sp)
    5dbc:	dec00704 	addi	sp,sp,28
    5dc0:	f800283a 	ret
    5dc4:	84000284 	addi	r16,r16,10
    5dc8:	1827883a 	mov	r19,r3
    5dcc:	003fe906 	br	5d74 <__alt_data_end+0xfffa42f4>

00005dd0 <__hi0bits>:
    5dd0:	20bfffec 	andhi	r2,r4,65535
    5dd4:	1000141e 	bne	r2,zero,5e28 <__hi0bits+0x58>
    5dd8:	2008943a 	slli	r4,r4,16
    5ddc:	00800404 	movi	r2,16
    5de0:	20ffc02c 	andhi	r3,r4,65280
    5de4:	1800021e 	bne	r3,zero,5df0 <__hi0bits+0x20>
    5de8:	2008923a 	slli	r4,r4,8
    5dec:	10800204 	addi	r2,r2,8
    5df0:	20fc002c 	andhi	r3,r4,61440
    5df4:	1800021e 	bne	r3,zero,5e00 <__hi0bits+0x30>
    5df8:	2008913a 	slli	r4,r4,4
    5dfc:	10800104 	addi	r2,r2,4
    5e00:	20f0002c 	andhi	r3,r4,49152
    5e04:	1800031e 	bne	r3,zero,5e14 <__hi0bits+0x44>
    5e08:	2109883a 	add	r4,r4,r4
    5e0c:	10800084 	addi	r2,r2,2
    5e10:	2109883a 	add	r4,r4,r4
    5e14:	20000316 	blt	r4,zero,5e24 <__hi0bits+0x54>
    5e18:	2110002c 	andhi	r4,r4,16384
    5e1c:	2000041e 	bne	r4,zero,5e30 <__hi0bits+0x60>
    5e20:	00800804 	movi	r2,32
    5e24:	f800283a 	ret
    5e28:	0005883a 	mov	r2,zero
    5e2c:	003fec06 	br	5de0 <__alt_data_end+0xfffa4360>
    5e30:	10800044 	addi	r2,r2,1
    5e34:	f800283a 	ret

00005e38 <__lo0bits>:
    5e38:	20c00017 	ldw	r3,0(r4)
    5e3c:	188001cc 	andi	r2,r3,7
    5e40:	10000826 	beq	r2,zero,5e64 <__lo0bits+0x2c>
    5e44:	1880004c 	andi	r2,r3,1
    5e48:	1000211e 	bne	r2,zero,5ed0 <__lo0bits+0x98>
    5e4c:	1880008c 	andi	r2,r3,2
    5e50:	1000211e 	bne	r2,zero,5ed8 <__lo0bits+0xa0>
    5e54:	1806d0ba 	srli	r3,r3,2
    5e58:	00800084 	movi	r2,2
    5e5c:	20c00015 	stw	r3,0(r4)
    5e60:	f800283a 	ret
    5e64:	18bfffcc 	andi	r2,r3,65535
    5e68:	10001326 	beq	r2,zero,5eb8 <__lo0bits+0x80>
    5e6c:	0005883a 	mov	r2,zero
    5e70:	19403fcc 	andi	r5,r3,255
    5e74:	2800021e 	bne	r5,zero,5e80 <__lo0bits+0x48>
    5e78:	1806d23a 	srli	r3,r3,8
    5e7c:	10800204 	addi	r2,r2,8
    5e80:	194003cc 	andi	r5,r3,15
    5e84:	2800021e 	bne	r5,zero,5e90 <__lo0bits+0x58>
    5e88:	1806d13a 	srli	r3,r3,4
    5e8c:	10800104 	addi	r2,r2,4
    5e90:	194000cc 	andi	r5,r3,3
    5e94:	2800021e 	bne	r5,zero,5ea0 <__lo0bits+0x68>
    5e98:	1806d0ba 	srli	r3,r3,2
    5e9c:	10800084 	addi	r2,r2,2
    5ea0:	1940004c 	andi	r5,r3,1
    5ea4:	2800081e 	bne	r5,zero,5ec8 <__lo0bits+0x90>
    5ea8:	1806d07a 	srli	r3,r3,1
    5eac:	1800051e 	bne	r3,zero,5ec4 <__lo0bits+0x8c>
    5eb0:	00800804 	movi	r2,32
    5eb4:	f800283a 	ret
    5eb8:	1806d43a 	srli	r3,r3,16
    5ebc:	00800404 	movi	r2,16
    5ec0:	003feb06 	br	5e70 <__alt_data_end+0xfffa43f0>
    5ec4:	10800044 	addi	r2,r2,1
    5ec8:	20c00015 	stw	r3,0(r4)
    5ecc:	f800283a 	ret
    5ed0:	0005883a 	mov	r2,zero
    5ed4:	f800283a 	ret
    5ed8:	1806d07a 	srli	r3,r3,1
    5edc:	00800044 	movi	r2,1
    5ee0:	20c00015 	stw	r3,0(r4)
    5ee4:	f800283a 	ret

00005ee8 <__i2b>:
    5ee8:	defffd04 	addi	sp,sp,-12
    5eec:	dc000015 	stw	r16,0(sp)
    5ef0:	04000044 	movi	r16,1
    5ef4:	dc400115 	stw	r17,4(sp)
    5ef8:	2823883a 	mov	r17,r5
    5efc:	800b883a 	mov	r5,r16
    5f00:	dfc00215 	stw	ra,8(sp)
    5f04:	0005ac00 	call	5ac0 <_Balloc>
    5f08:	14400515 	stw	r17,20(r2)
    5f0c:	14000415 	stw	r16,16(r2)
    5f10:	dfc00217 	ldw	ra,8(sp)
    5f14:	dc400117 	ldw	r17,4(sp)
    5f18:	dc000017 	ldw	r16,0(sp)
    5f1c:	dec00304 	addi	sp,sp,12
    5f20:	f800283a 	ret

00005f24 <__multiply>:
    5f24:	deffef04 	addi	sp,sp,-68
    5f28:	dc400815 	stw	r17,32(sp)
    5f2c:	dc000715 	stw	r16,28(sp)
    5f30:	2c400417 	ldw	r17,16(r5)
    5f34:	34000417 	ldw	r16,16(r6)
    5f38:	dd800d15 	stw	r22,52(sp)
    5f3c:	dc800915 	stw	r18,36(sp)
    5f40:	dfc01015 	stw	ra,64(sp)
    5f44:	df000f15 	stw	fp,60(sp)
    5f48:	ddc00e15 	stw	r23,56(sp)
    5f4c:	dd400c15 	stw	r21,48(sp)
    5f50:	dd000b15 	stw	r20,44(sp)
    5f54:	dcc00a15 	stw	r19,40(sp)
    5f58:	2825883a 	mov	r18,r5
    5f5c:	302d883a 	mov	r22,r6
    5f60:	8c009116 	blt	r17,r16,61a8 <__multiply+0x284>
    5f64:	8005883a 	mov	r2,r16
    5f68:	8821883a 	mov	r16,r17
    5f6c:	1023883a 	mov	r17,r2
    5f70:	90800217 	ldw	r2,8(r18)
    5f74:	8447883a 	add	r3,r16,r17
    5f78:	d8c00215 	stw	r3,8(sp)
    5f7c:	91400117 	ldw	r5,4(r18)
    5f80:	10c0010e 	bge	r2,r3,5f88 <__multiply+0x64>
    5f84:	29400044 	addi	r5,r5,1
    5f88:	0005ac00 	call	5ac0 <_Balloc>
    5f8c:	d8c00217 	ldw	r3,8(sp)
    5f90:	d8800615 	stw	r2,24(sp)
    5f94:	18eb883a 	add	r21,r3,r3
    5f98:	ad6b883a 	add	r21,r21,r21
    5f9c:	10c00504 	addi	r3,r2,20
    5fa0:	1d6b883a 	add	r21,r3,r21
    5fa4:	d8c00115 	stw	r3,4(sp)
    5fa8:	dd400315 	stw	r21,12(sp)
    5fac:	1805883a 	mov	r2,r3
    5fb0:	1d40042e 	bgeu	r3,r21,5fc4 <__multiply+0xa0>
    5fb4:	d8c00317 	ldw	r3,12(sp)
    5fb8:	10000015 	stw	zero,0(r2)
    5fbc:	10800104 	addi	r2,r2,4
    5fc0:	10fffc36 	bltu	r2,r3,5fb4 <__alt_data_end+0xfffa4534>
    5fc4:	8c63883a 	add	r17,r17,r17
    5fc8:	b5800504 	addi	r22,r22,20
    5fcc:	8c63883a 	add	r17,r17,r17
    5fd0:	94800504 	addi	r18,r18,20
    5fd4:	8421883a 	add	r16,r16,r16
    5fd8:	b463883a 	add	r17,r22,r17
    5fdc:	8421883a 	add	r16,r16,r16
    5fe0:	dd800015 	stw	r22,0(sp)
    5fe4:	dc800415 	stw	r18,16(sp)
    5fe8:	dc400515 	stw	r17,20(sp)
    5fec:	9429883a 	add	r20,r18,r16
    5ff0:	b4404f2e 	bgeu	r22,r17,6130 <__multiply+0x20c>
    5ff4:	d8c00017 	ldw	r3,0(sp)
    5ff8:	1c800017 	ldw	r18,0(r3)
    5ffc:	943fffcc 	andi	r16,r18,65535
    6000:	80001e26 	beq	r16,zero,607c <__multiply+0x158>
    6004:	dd800117 	ldw	r22,4(sp)
    6008:	dd400417 	ldw	r21,16(sp)
    600c:	0025883a 	mov	r18,zero
    6010:	adc00017 	ldw	r23,0(r21)
    6014:	b4c00017 	ldw	r19,0(r22)
    6018:	800b883a 	mov	r5,r16
    601c:	b93fffcc 	andi	r4,r23,65535
    6020:	000a5c40 	call	a5c4 <__mulsi3>
    6024:	9c7fffcc 	andi	r17,r19,65535
    6028:	8885883a 	add	r2,r17,r2
    602c:	b808d43a 	srli	r4,r23,16
    6030:	14a3883a 	add	r17,r2,r18
    6034:	9826d43a 	srli	r19,r19,16
    6038:	8824d43a 	srli	r18,r17,16
    603c:	800b883a 	mov	r5,r16
    6040:	000a5c40 	call	a5c4 <__mulsi3>
    6044:	9885883a 	add	r2,r19,r2
    6048:	14a7883a 	add	r19,r2,r18
    604c:	88ffffcc 	andi	r3,r17,65535
    6050:	9822943a 	slli	r17,r19,16
    6054:	ad400104 	addi	r21,r21,4
    6058:	b005883a 	mov	r2,r22
    605c:	88c6b03a 	or	r3,r17,r3
    6060:	b0c00015 	stw	r3,0(r22)
    6064:	9824d43a 	srli	r18,r19,16
    6068:	b5800104 	addi	r22,r22,4
    606c:	ad3fe836 	bltu	r21,r20,6010 <__alt_data_end+0xfffa4590>
    6070:	d8c00017 	ldw	r3,0(sp)
    6074:	14800115 	stw	r18,4(r2)
    6078:	1c800017 	ldw	r18,0(r3)
    607c:	9024d43a 	srli	r18,r18,16
    6080:	90002226 	beq	r18,zero,610c <__multiply+0x1e8>
    6084:	d8c00117 	ldw	r3,4(sp)
    6088:	dd800417 	ldw	r22,16(sp)
    608c:	002f883a 	mov	r23,zero
    6090:	1f000017 	ldw	fp,0(r3)
    6094:	1823883a 	mov	r17,r3
    6098:	182b883a 	mov	r21,r3
    609c:	e021883a 	mov	r16,fp
    60a0:	00000106 	br	60a8 <__multiply+0x184>
    60a4:	982b883a 	mov	r21,r19
    60a8:	b100000b 	ldhu	r4,0(r22)
    60ac:	8020d43a 	srli	r16,r16,16
    60b0:	900b883a 	mov	r5,r18
    60b4:	000a5c40 	call	a5c4 <__mulsi3>
    60b8:	1405883a 	add	r2,r2,r16
    60bc:	15ef883a 	add	r23,r2,r23
    60c0:	b804943a 	slli	r2,r23,16
    60c4:	e0ffffcc 	andi	r3,fp,65535
    60c8:	8c400104 	addi	r17,r17,4
    60cc:	10c6b03a 	or	r3,r2,r3
    60d0:	88ffff15 	stw	r3,-4(r17)
    60d4:	b5800104 	addi	r22,r22,4
    60d8:	b13fff17 	ldw	r4,-4(r22)
    60dc:	acc00104 	addi	r19,r21,4
    60e0:	900b883a 	mov	r5,r18
    60e4:	2008d43a 	srli	r4,r4,16
    60e8:	9c000017 	ldw	r16,0(r19)
    60ec:	000a5c40 	call	a5c4 <__mulsi3>
    60f0:	b806d43a 	srli	r3,r23,16
    60f4:	813fffcc 	andi	r4,r16,65535
    60f8:	1105883a 	add	r2,r2,r4
    60fc:	10f9883a 	add	fp,r2,r3
    6100:	e02ed43a 	srli	r23,fp,16
    6104:	b53fe736 	bltu	r22,r20,60a4 <__alt_data_end+0xfffa4624>
    6108:	af000115 	stw	fp,4(r21)
    610c:	d8c00017 	ldw	r3,0(sp)
    6110:	d9000517 	ldw	r4,20(sp)
    6114:	18c00104 	addi	r3,r3,4
    6118:	d8c00015 	stw	r3,0(sp)
    611c:	d8c00117 	ldw	r3,4(sp)
    6120:	18c00104 	addi	r3,r3,4
    6124:	d8c00115 	stw	r3,4(sp)
    6128:	d8c00017 	ldw	r3,0(sp)
    612c:	193fb136 	bltu	r3,r4,5ff4 <__alt_data_end+0xfffa4574>
    6130:	d8c00217 	ldw	r3,8(sp)
    6134:	00c00c0e 	bge	zero,r3,6168 <__multiply+0x244>
    6138:	d8c00317 	ldw	r3,12(sp)
    613c:	18bfff17 	ldw	r2,-4(r3)
    6140:	1d7fff04 	addi	r21,r3,-4
    6144:	10000326 	beq	r2,zero,6154 <__multiply+0x230>
    6148:	00000706 	br	6168 <__multiply+0x244>
    614c:	a8800017 	ldw	r2,0(r21)
    6150:	1000051e 	bne	r2,zero,6168 <__multiply+0x244>
    6154:	d8c00217 	ldw	r3,8(sp)
    6158:	ad7fff04 	addi	r21,r21,-4
    615c:	18ffffc4 	addi	r3,r3,-1
    6160:	d8c00215 	stw	r3,8(sp)
    6164:	183ff91e 	bne	r3,zero,614c <__alt_data_end+0xfffa46cc>
    6168:	d8c00617 	ldw	r3,24(sp)
    616c:	d9000217 	ldw	r4,8(sp)
    6170:	1805883a 	mov	r2,r3
    6174:	19000415 	stw	r4,16(r3)
    6178:	dfc01017 	ldw	ra,64(sp)
    617c:	df000f17 	ldw	fp,60(sp)
    6180:	ddc00e17 	ldw	r23,56(sp)
    6184:	dd800d17 	ldw	r22,52(sp)
    6188:	dd400c17 	ldw	r21,48(sp)
    618c:	dd000b17 	ldw	r20,44(sp)
    6190:	dcc00a17 	ldw	r19,40(sp)
    6194:	dc800917 	ldw	r18,36(sp)
    6198:	dc400817 	ldw	r17,32(sp)
    619c:	dc000717 	ldw	r16,28(sp)
    61a0:	dec01104 	addi	sp,sp,68
    61a4:	f800283a 	ret
    61a8:	3025883a 	mov	r18,r6
    61ac:	282d883a 	mov	r22,r5
    61b0:	003f6f06 	br	5f70 <__alt_data_end+0xfffa44f0>

000061b4 <__pow5mult>:
    61b4:	defffa04 	addi	sp,sp,-24
    61b8:	dcc00315 	stw	r19,12(sp)
    61bc:	dc800215 	stw	r18,8(sp)
    61c0:	dc000015 	stw	r16,0(sp)
    61c4:	dfc00515 	stw	ra,20(sp)
    61c8:	dd000415 	stw	r20,16(sp)
    61cc:	dc400115 	stw	r17,4(sp)
    61d0:	308000cc 	andi	r2,r6,3
    61d4:	3021883a 	mov	r16,r6
    61d8:	2027883a 	mov	r19,r4
    61dc:	2825883a 	mov	r18,r5
    61e0:	10002e1e 	bne	r2,zero,629c <__pow5mult+0xe8>
    61e4:	8021d0ba 	srai	r16,r16,2
    61e8:	80001a26 	beq	r16,zero,6254 <__pow5mult+0xa0>
    61ec:	9c401217 	ldw	r17,72(r19)
    61f0:	8800061e 	bne	r17,zero,620c <__pow5mult+0x58>
    61f4:	00003406 	br	62c8 <__pow5mult+0x114>
    61f8:	8021d07a 	srai	r16,r16,1
    61fc:	80001526 	beq	r16,zero,6254 <__pow5mult+0xa0>
    6200:	88800017 	ldw	r2,0(r17)
    6204:	10001c26 	beq	r2,zero,6278 <__pow5mult+0xc4>
    6208:	1023883a 	mov	r17,r2
    620c:	80c0004c 	andi	r3,r16,1
    6210:	183ff926 	beq	r3,zero,61f8 <__alt_data_end+0xfffa4778>
    6214:	900b883a 	mov	r5,r18
    6218:	880d883a 	mov	r6,r17
    621c:	9809883a 	mov	r4,r19
    6220:	0005f240 	call	5f24 <__multiply>
    6224:	90001b26 	beq	r18,zero,6294 <__pow5mult+0xe0>
    6228:	91c00117 	ldw	r7,4(r18)
    622c:	98c01317 	ldw	r3,76(r19)
    6230:	8021d07a 	srai	r16,r16,1
    6234:	39cf883a 	add	r7,r7,r7
    6238:	39cf883a 	add	r7,r7,r7
    623c:	19c7883a 	add	r3,r3,r7
    6240:	19000017 	ldw	r4,0(r3)
    6244:	91000015 	stw	r4,0(r18)
    6248:	1c800015 	stw	r18,0(r3)
    624c:	1025883a 	mov	r18,r2
    6250:	803feb1e 	bne	r16,zero,6200 <__alt_data_end+0xfffa4780>
    6254:	9005883a 	mov	r2,r18
    6258:	dfc00517 	ldw	ra,20(sp)
    625c:	dd000417 	ldw	r20,16(sp)
    6260:	dcc00317 	ldw	r19,12(sp)
    6264:	dc800217 	ldw	r18,8(sp)
    6268:	dc400117 	ldw	r17,4(sp)
    626c:	dc000017 	ldw	r16,0(sp)
    6270:	dec00604 	addi	sp,sp,24
    6274:	f800283a 	ret
    6278:	9809883a 	mov	r4,r19
    627c:	880b883a 	mov	r5,r17
    6280:	880d883a 	mov	r6,r17
    6284:	0005f240 	call	5f24 <__multiply>
    6288:	88800015 	stw	r2,0(r17)
    628c:	10000015 	stw	zero,0(r2)
    6290:	003fdd06 	br	6208 <__alt_data_end+0xfffa4788>
    6294:	1025883a 	mov	r18,r2
    6298:	003fd706 	br	61f8 <__alt_data_end+0xfffa4778>
    629c:	10bfffc4 	addi	r2,r2,-1
    62a0:	1085883a 	add	r2,r2,r2
    62a4:	00c00074 	movhi	r3,1
    62a8:	18fd7804 	addi	r3,r3,-2592
    62ac:	1085883a 	add	r2,r2,r2
    62b0:	1885883a 	add	r2,r3,r2
    62b4:	11800017 	ldw	r6,0(r2)
    62b8:	000f883a 	mov	r7,zero
    62bc:	0005b900 	call	5b90 <__multadd>
    62c0:	1025883a 	mov	r18,r2
    62c4:	003fc706 	br	61e4 <__alt_data_end+0xfffa4764>
    62c8:	05000044 	movi	r20,1
    62cc:	9809883a 	mov	r4,r19
    62d0:	a00b883a 	mov	r5,r20
    62d4:	0005ac00 	call	5ac0 <_Balloc>
    62d8:	1023883a 	mov	r17,r2
    62dc:	00809c44 	movi	r2,625
    62e0:	88800515 	stw	r2,20(r17)
    62e4:	8d000415 	stw	r20,16(r17)
    62e8:	9c401215 	stw	r17,72(r19)
    62ec:	88000015 	stw	zero,0(r17)
    62f0:	003fc606 	br	620c <__alt_data_end+0xfffa478c>

000062f4 <__lshift>:
    62f4:	defff904 	addi	sp,sp,-28
    62f8:	dd000415 	stw	r20,16(sp)
    62fc:	dcc00315 	stw	r19,12(sp)
    6300:	3029d17a 	srai	r20,r6,5
    6304:	2cc00417 	ldw	r19,16(r5)
    6308:	28800217 	ldw	r2,8(r5)
    630c:	dd400515 	stw	r21,20(sp)
    6310:	a4e7883a 	add	r19,r20,r19
    6314:	dc800215 	stw	r18,8(sp)
    6318:	dc400115 	stw	r17,4(sp)
    631c:	dc000015 	stw	r16,0(sp)
    6320:	dfc00615 	stw	ra,24(sp)
    6324:	9c000044 	addi	r16,r19,1
    6328:	2823883a 	mov	r17,r5
    632c:	302b883a 	mov	r21,r6
    6330:	2025883a 	mov	r18,r4
    6334:	29400117 	ldw	r5,4(r5)
    6338:	1400030e 	bge	r2,r16,6348 <__lshift+0x54>
    633c:	1085883a 	add	r2,r2,r2
    6340:	29400044 	addi	r5,r5,1
    6344:	143ffd16 	blt	r2,r16,633c <__alt_data_end+0xfffa48bc>
    6348:	9009883a 	mov	r4,r18
    634c:	0005ac00 	call	5ac0 <_Balloc>
    6350:	11c00504 	addi	r7,r2,20
    6354:	0500090e 	bge	zero,r20,637c <__lshift+0x88>
    6358:	3811883a 	mov	r8,r7
    635c:	0007883a 	mov	r3,zero
    6360:	40000015 	stw	zero,0(r8)
    6364:	18c00044 	addi	r3,r3,1
    6368:	42000104 	addi	r8,r8,4
    636c:	1d3ffc1e 	bne	r3,r20,6360 <__alt_data_end+0xfffa48e0>
    6370:	18c7883a 	add	r3,r3,r3
    6374:	18c7883a 	add	r3,r3,r3
    6378:	38cf883a 	add	r7,r7,r3
    637c:	89000417 	ldw	r4,16(r17)
    6380:	88c00504 	addi	r3,r17,20
    6384:	a98007cc 	andi	r6,r21,31
    6388:	2109883a 	add	r4,r4,r4
    638c:	2109883a 	add	r4,r4,r4
    6390:	1909883a 	add	r4,r3,r4
    6394:	30002326 	beq	r6,zero,6424 <__lshift+0x130>
    6398:	01400804 	movi	r5,32
    639c:	298bc83a 	sub	r5,r5,r6
    63a0:	0013883a 	mov	r9,zero
    63a4:	1a000017 	ldw	r8,0(r3)
    63a8:	3815883a 	mov	r10,r7
    63ac:	39c00104 	addi	r7,r7,4
    63b0:	4190983a 	sll	r8,r8,r6
    63b4:	18c00104 	addi	r3,r3,4
    63b8:	4a10b03a 	or	r8,r9,r8
    63bc:	3a3fff15 	stw	r8,-4(r7)
    63c0:	1a3fff17 	ldw	r8,-4(r3)
    63c4:	4152d83a 	srl	r9,r8,r5
    63c8:	193ff636 	bltu	r3,r4,63a4 <__alt_data_end+0xfffa4924>
    63cc:	52400115 	stw	r9,4(r10)
    63d0:	48000126 	beq	r9,zero,63d8 <__lshift+0xe4>
    63d4:	9c000084 	addi	r16,r19,2
    63d8:	89000117 	ldw	r4,4(r17)
    63dc:	90c01317 	ldw	r3,76(r18)
    63e0:	843fffc4 	addi	r16,r16,-1
    63e4:	2109883a 	add	r4,r4,r4
    63e8:	2109883a 	add	r4,r4,r4
    63ec:	1907883a 	add	r3,r3,r4
    63f0:	19000017 	ldw	r4,0(r3)
    63f4:	14000415 	stw	r16,16(r2)
    63f8:	89000015 	stw	r4,0(r17)
    63fc:	1c400015 	stw	r17,0(r3)
    6400:	dfc00617 	ldw	ra,24(sp)
    6404:	dd400517 	ldw	r21,20(sp)
    6408:	dd000417 	ldw	r20,16(sp)
    640c:	dcc00317 	ldw	r19,12(sp)
    6410:	dc800217 	ldw	r18,8(sp)
    6414:	dc400117 	ldw	r17,4(sp)
    6418:	dc000017 	ldw	r16,0(sp)
    641c:	dec00704 	addi	sp,sp,28
    6420:	f800283a 	ret
    6424:	19400017 	ldw	r5,0(r3)
    6428:	39c00104 	addi	r7,r7,4
    642c:	18c00104 	addi	r3,r3,4
    6430:	397fff15 	stw	r5,-4(r7)
    6434:	193ffb36 	bltu	r3,r4,6424 <__alt_data_end+0xfffa49a4>
    6438:	003fe706 	br	63d8 <__alt_data_end+0xfffa4958>

0000643c <__mcmp>:
    643c:	20800417 	ldw	r2,16(r4)
    6440:	28c00417 	ldw	r3,16(r5)
    6444:	10c5c83a 	sub	r2,r2,r3
    6448:	1000111e 	bne	r2,zero,6490 <__mcmp+0x54>
    644c:	18c7883a 	add	r3,r3,r3
    6450:	18c7883a 	add	r3,r3,r3
    6454:	21000504 	addi	r4,r4,20
    6458:	29400504 	addi	r5,r5,20
    645c:	20c5883a 	add	r2,r4,r3
    6460:	28cb883a 	add	r5,r5,r3
    6464:	00000106 	br	646c <__mcmp+0x30>
    6468:	20800a2e 	bgeu	r4,r2,6494 <__mcmp+0x58>
    646c:	10bfff04 	addi	r2,r2,-4
    6470:	297fff04 	addi	r5,r5,-4
    6474:	11800017 	ldw	r6,0(r2)
    6478:	28c00017 	ldw	r3,0(r5)
    647c:	30fffa26 	beq	r6,r3,6468 <__alt_data_end+0xfffa49e8>
    6480:	30c00236 	bltu	r6,r3,648c <__mcmp+0x50>
    6484:	00800044 	movi	r2,1
    6488:	f800283a 	ret
    648c:	00bfffc4 	movi	r2,-1
    6490:	f800283a 	ret
    6494:	0005883a 	mov	r2,zero
    6498:	f800283a 	ret

0000649c <__mdiff>:
    649c:	defffb04 	addi	sp,sp,-20
    64a0:	dc000015 	stw	r16,0(sp)
    64a4:	2821883a 	mov	r16,r5
    64a8:	dcc00315 	stw	r19,12(sp)
    64ac:	300b883a 	mov	r5,r6
    64b0:	2027883a 	mov	r19,r4
    64b4:	8009883a 	mov	r4,r16
    64b8:	dc800215 	stw	r18,8(sp)
    64bc:	dfc00415 	stw	ra,16(sp)
    64c0:	dc400115 	stw	r17,4(sp)
    64c4:	3025883a 	mov	r18,r6
    64c8:	000643c0 	call	643c <__mcmp>
    64cc:	10005226 	beq	r2,zero,6618 <__mdiff+0x17c>
    64d0:	10004c16 	blt	r2,zero,6604 <__mdiff+0x168>
    64d4:	0023883a 	mov	r17,zero
    64d8:	81400117 	ldw	r5,4(r16)
    64dc:	9809883a 	mov	r4,r19
    64e0:	0005ac00 	call	5ac0 <_Balloc>
    64e4:	83400417 	ldw	r13,16(r16)
    64e8:	93800417 	ldw	r14,16(r18)
    64ec:	81000504 	addi	r4,r16,20
    64f0:	6b59883a 	add	r12,r13,r13
    64f4:	739d883a 	add	r14,r14,r14
    64f8:	6319883a 	add	r12,r12,r12
    64fc:	91800504 	addi	r6,r18,20
    6500:	739d883a 	add	r14,r14,r14
    6504:	14400315 	stw	r17,12(r2)
    6508:	2319883a 	add	r12,r4,r12
    650c:	339d883a 	add	r14,r6,r14
    6510:	12400504 	addi	r9,r2,20
    6514:	0007883a 	mov	r3,zero
    6518:	22000017 	ldw	r8,0(r4)
    651c:	32800017 	ldw	r10,0(r6)
    6520:	4ac00104 	addi	r11,r9,4
    6524:	41ffffcc 	andi	r7,r8,65535
    6528:	38c7883a 	add	r3,r7,r3
    652c:	51ffffcc 	andi	r7,r10,65535
    6530:	19cfc83a 	sub	r7,r3,r7
    6534:	4010d43a 	srli	r8,r8,16
    6538:	5014d43a 	srli	r10,r10,16
    653c:	3807d43a 	srai	r3,r7,16
    6540:	39ffffcc 	andi	r7,r7,65535
    6544:	4291c83a 	sub	r8,r8,r10
    6548:	40c7883a 	add	r3,r8,r3
    654c:	1810943a 	slli	r8,r3,16
    6550:	31800104 	addi	r6,r6,4
    6554:	21000104 	addi	r4,r4,4
    6558:	41ceb03a 	or	r7,r8,r7
    655c:	49c00015 	stw	r7,0(r9)
    6560:	1807d43a 	srai	r3,r3,16
    6564:	580b883a 	mov	r5,r11
    6568:	5813883a 	mov	r9,r11
    656c:	33bfea36 	bltu	r6,r14,6518 <__alt_data_end+0xfffa4a98>
    6570:	2011883a 	mov	r8,r4
    6574:	2300152e 	bgeu	r4,r12,65cc <__mdiff+0x130>
    6578:	21400017 	ldw	r5,0(r4)
    657c:	4a400104 	addi	r9,r9,4
    6580:	21000104 	addi	r4,r4,4
    6584:	29ffffcc 	andi	r7,r5,65535
    6588:	38c7883a 	add	r3,r7,r3
    658c:	280ad43a 	srli	r5,r5,16
    6590:	180dd43a 	srai	r6,r3,16
    6594:	19ffffcc 	andi	r7,r3,65535
    6598:	3147883a 	add	r3,r6,r5
    659c:	180a943a 	slli	r5,r3,16
    65a0:	1807d43a 	srai	r3,r3,16
    65a4:	29ceb03a 	or	r7,r5,r7
    65a8:	49ffff15 	stw	r7,-4(r9)
    65ac:	233ff236 	bltu	r4,r12,6578 <__alt_data_end+0xfffa4af8>
    65b0:	0206303a 	nor	r3,zero,r8
    65b4:	1b07883a 	add	r3,r3,r12
    65b8:	1806d0ba 	srli	r3,r3,2
    65bc:	18c00044 	addi	r3,r3,1
    65c0:	18c7883a 	add	r3,r3,r3
    65c4:	18c7883a 	add	r3,r3,r3
    65c8:	58cb883a 	add	r5,r11,r3
    65cc:	28ffff04 	addi	r3,r5,-4
    65d0:	3800041e 	bne	r7,zero,65e4 <__mdiff+0x148>
    65d4:	18ffff04 	addi	r3,r3,-4
    65d8:	19000017 	ldw	r4,0(r3)
    65dc:	6b7fffc4 	addi	r13,r13,-1
    65e0:	203ffc26 	beq	r4,zero,65d4 <__alt_data_end+0xfffa4b54>
    65e4:	13400415 	stw	r13,16(r2)
    65e8:	dfc00417 	ldw	ra,16(sp)
    65ec:	dcc00317 	ldw	r19,12(sp)
    65f0:	dc800217 	ldw	r18,8(sp)
    65f4:	dc400117 	ldw	r17,4(sp)
    65f8:	dc000017 	ldw	r16,0(sp)
    65fc:	dec00504 	addi	sp,sp,20
    6600:	f800283a 	ret
    6604:	8005883a 	mov	r2,r16
    6608:	04400044 	movi	r17,1
    660c:	9021883a 	mov	r16,r18
    6610:	1025883a 	mov	r18,r2
    6614:	003fb006 	br	64d8 <__alt_data_end+0xfffa4a58>
    6618:	9809883a 	mov	r4,r19
    661c:	000b883a 	mov	r5,zero
    6620:	0005ac00 	call	5ac0 <_Balloc>
    6624:	00c00044 	movi	r3,1
    6628:	10c00415 	stw	r3,16(r2)
    662c:	10000515 	stw	zero,20(r2)
    6630:	003fed06 	br	65e8 <__alt_data_end+0xfffa4b68>

00006634 <__ulp>:
    6634:	295ffc2c 	andhi	r5,r5,32752
    6638:	00bf3034 	movhi	r2,64704
    663c:	2887883a 	add	r3,r5,r2
    6640:	00c0020e 	bge	zero,r3,664c <__ulp+0x18>
    6644:	0005883a 	mov	r2,zero
    6648:	f800283a 	ret
    664c:	00c7c83a 	sub	r3,zero,r3
    6650:	180bd53a 	srai	r5,r3,20
    6654:	008004c4 	movi	r2,19
    6658:	11400a0e 	bge	r2,r5,6684 <__ulp+0x50>
    665c:	00800c84 	movi	r2,50
    6660:	0007883a 	mov	r3,zero
    6664:	11400516 	blt	r2,r5,667c <__ulp+0x48>
    6668:	00800cc4 	movi	r2,51
    666c:	114bc83a 	sub	r5,r2,r5
    6670:	00800044 	movi	r2,1
    6674:	1144983a 	sll	r2,r2,r5
    6678:	f800283a 	ret
    667c:	00800044 	movi	r2,1
    6680:	f800283a 	ret
    6684:	00800234 	movhi	r2,8
    6688:	1147d83a 	sra	r3,r2,r5
    668c:	0005883a 	mov	r2,zero
    6690:	f800283a 	ret

00006694 <__b2d>:
    6694:	defffa04 	addi	sp,sp,-24
    6698:	dc000015 	stw	r16,0(sp)
    669c:	24000417 	ldw	r16,16(r4)
    66a0:	dc400115 	stw	r17,4(sp)
    66a4:	24400504 	addi	r17,r4,20
    66a8:	8421883a 	add	r16,r16,r16
    66ac:	8421883a 	add	r16,r16,r16
    66b0:	8c21883a 	add	r16,r17,r16
    66b4:	dc800215 	stw	r18,8(sp)
    66b8:	84bfff17 	ldw	r18,-4(r16)
    66bc:	dd000415 	stw	r20,16(sp)
    66c0:	dcc00315 	stw	r19,12(sp)
    66c4:	9009883a 	mov	r4,r18
    66c8:	2829883a 	mov	r20,r5
    66cc:	dfc00515 	stw	ra,20(sp)
    66d0:	0005dd00 	call	5dd0 <__hi0bits>
    66d4:	00c00804 	movi	r3,32
    66d8:	1887c83a 	sub	r3,r3,r2
    66dc:	a0c00015 	stw	r3,0(r20)
    66e0:	00c00284 	movi	r3,10
    66e4:	84ffff04 	addi	r19,r16,-4
    66e8:	18801216 	blt	r3,r2,6734 <__b2d+0xa0>
    66ec:	014002c4 	movi	r5,11
    66f0:	2889c83a 	sub	r4,r5,r2
    66f4:	9106d83a 	srl	r3,r18,r4
    66f8:	18cffc34 	orhi	r3,r3,16368
    66fc:	8cc0282e 	bgeu	r17,r19,67a0 <__b2d+0x10c>
    6700:	817ffe17 	ldw	r5,-8(r16)
    6704:	290ad83a 	srl	r5,r5,r4
    6708:	10800544 	addi	r2,r2,21
    670c:	9084983a 	sll	r2,r18,r2
    6710:	2884b03a 	or	r2,r5,r2
    6714:	dfc00517 	ldw	ra,20(sp)
    6718:	dd000417 	ldw	r20,16(sp)
    671c:	dcc00317 	ldw	r19,12(sp)
    6720:	dc800217 	ldw	r18,8(sp)
    6724:	dc400117 	ldw	r17,4(sp)
    6728:	dc000017 	ldw	r16,0(sp)
    672c:	dec00604 	addi	sp,sp,24
    6730:	f800283a 	ret
    6734:	113ffd44 	addi	r4,r2,-11
    6738:	8cc00f2e 	bgeu	r17,r19,6778 <__b2d+0xe4>
    673c:	81bffe04 	addi	r6,r16,-8
    6740:	817ffe17 	ldw	r5,-8(r16)
    6744:	20001326 	beq	r4,zero,6794 <__b2d+0x100>
    6748:	00c00ac4 	movi	r3,43
    674c:	1885c83a 	sub	r2,r3,r2
    6750:	2886d83a 	srl	r3,r5,r2
    6754:	9124983a 	sll	r18,r18,r4
    6758:	90e4b03a 	or	r18,r18,r3
    675c:	90cffc34 	orhi	r3,r18,16368
    6760:	8980112e 	bgeu	r17,r6,67a8 <__b2d+0x114>
    6764:	81bffd17 	ldw	r6,-12(r16)
    6768:	308cd83a 	srl	r6,r6,r2
    676c:	2904983a 	sll	r2,r5,r4
    6770:	1184b03a 	or	r2,r2,r6
    6774:	003fe706 	br	6714 <__alt_data_end+0xfffa4c94>
    6778:	20000526 	beq	r4,zero,6790 <__b2d+0xfc>
    677c:	9124983a 	sll	r18,r18,r4
    6780:	000d883a 	mov	r6,zero
    6784:	000b883a 	mov	r5,zero
    6788:	90cffc34 	orhi	r3,r18,16368
    678c:	003ff706 	br	676c <__alt_data_end+0xfffa4cec>
    6790:	000b883a 	mov	r5,zero
    6794:	90cffc34 	orhi	r3,r18,16368
    6798:	2805883a 	mov	r2,r5
    679c:	003fdd06 	br	6714 <__alt_data_end+0xfffa4c94>
    67a0:	000b883a 	mov	r5,zero
    67a4:	003fd806 	br	6708 <__alt_data_end+0xfffa4c88>
    67a8:	000d883a 	mov	r6,zero
    67ac:	003fef06 	br	676c <__alt_data_end+0xfffa4cec>

000067b0 <__d2b>:
    67b0:	defff704 	addi	sp,sp,-36
    67b4:	dc000215 	stw	r16,8(sp)
    67b8:	3021883a 	mov	r16,r6
    67bc:	dc400315 	stw	r17,12(sp)
    67c0:	8022907a 	slli	r17,r16,1
    67c4:	dd400715 	stw	r21,28(sp)
    67c8:	282b883a 	mov	r21,r5
    67cc:	01400044 	movi	r5,1
    67d0:	dd000615 	stw	r20,24(sp)
    67d4:	dcc00515 	stw	r19,20(sp)
    67d8:	dc800415 	stw	r18,16(sp)
    67dc:	dfc00815 	stw	ra,32(sp)
    67e0:	3829883a 	mov	r20,r7
    67e4:	dc800917 	ldw	r18,36(sp)
    67e8:	8822d57a 	srli	r17,r17,21
    67ec:	0005ac00 	call	5ac0 <_Balloc>
    67f0:	1027883a 	mov	r19,r2
    67f4:	00800434 	movhi	r2,16
    67f8:	10bfffc4 	addi	r2,r2,-1
    67fc:	808c703a 	and	r6,r16,r2
    6800:	88000126 	beq	r17,zero,6808 <__d2b+0x58>
    6804:	31800434 	orhi	r6,r6,16
    6808:	d9800015 	stw	r6,0(sp)
    680c:	a8001f26 	beq	r21,zero,688c <__d2b+0xdc>
    6810:	d9000104 	addi	r4,sp,4
    6814:	dd400115 	stw	r21,4(sp)
    6818:	0005e380 	call	5e38 <__lo0bits>
    681c:	d8c00017 	ldw	r3,0(sp)
    6820:	1000291e 	bne	r2,zero,68c8 <__d2b+0x118>
    6824:	d9000117 	ldw	r4,4(sp)
    6828:	99000515 	stw	r4,20(r19)
    682c:	1820c03a 	cmpne	r16,r3,zero
    6830:	84000044 	addi	r16,r16,1
    6834:	98c00615 	stw	r3,24(r19)
    6838:	9c000415 	stw	r16,16(r19)
    683c:	88001b1e 	bne	r17,zero,68ac <__d2b+0xfc>
    6840:	800690ba 	slli	r3,r16,2
    6844:	10bef384 	addi	r2,r2,-1074
    6848:	a0800015 	stw	r2,0(r20)
    684c:	98c5883a 	add	r2,r19,r3
    6850:	11000417 	ldw	r4,16(r2)
    6854:	8020917a 	slli	r16,r16,5
    6858:	0005dd00 	call	5dd0 <__hi0bits>
    685c:	8085c83a 	sub	r2,r16,r2
    6860:	90800015 	stw	r2,0(r18)
    6864:	9805883a 	mov	r2,r19
    6868:	dfc00817 	ldw	ra,32(sp)
    686c:	dd400717 	ldw	r21,28(sp)
    6870:	dd000617 	ldw	r20,24(sp)
    6874:	dcc00517 	ldw	r19,20(sp)
    6878:	dc800417 	ldw	r18,16(sp)
    687c:	dc400317 	ldw	r17,12(sp)
    6880:	dc000217 	ldw	r16,8(sp)
    6884:	dec00904 	addi	sp,sp,36
    6888:	f800283a 	ret
    688c:	d809883a 	mov	r4,sp
    6890:	0005e380 	call	5e38 <__lo0bits>
    6894:	d8c00017 	ldw	r3,0(sp)
    6898:	04000044 	movi	r16,1
    689c:	9c000415 	stw	r16,16(r19)
    68a0:	98c00515 	stw	r3,20(r19)
    68a4:	10800804 	addi	r2,r2,32
    68a8:	883fe526 	beq	r17,zero,6840 <__alt_data_end+0xfffa4dc0>
    68ac:	8c7ef344 	addi	r17,r17,-1075
    68b0:	88a3883a 	add	r17,r17,r2
    68b4:	00c00d44 	movi	r3,53
    68b8:	a4400015 	stw	r17,0(r20)
    68bc:	1885c83a 	sub	r2,r3,r2
    68c0:	90800015 	stw	r2,0(r18)
    68c4:	003fe706 	br	6864 <__alt_data_end+0xfffa4de4>
    68c8:	01000804 	movi	r4,32
    68cc:	2089c83a 	sub	r4,r4,r2
    68d0:	1908983a 	sll	r4,r3,r4
    68d4:	d9400117 	ldw	r5,4(sp)
    68d8:	1886d83a 	srl	r3,r3,r2
    68dc:	2148b03a 	or	r4,r4,r5
    68e0:	99000515 	stw	r4,20(r19)
    68e4:	d8c00015 	stw	r3,0(sp)
    68e8:	003fd006 	br	682c <__alt_data_end+0xfffa4dac>

000068ec <__ratio>:
    68ec:	defff904 	addi	sp,sp,-28
    68f0:	dc400315 	stw	r17,12(sp)
    68f4:	2823883a 	mov	r17,r5
    68f8:	d9400104 	addi	r5,sp,4
    68fc:	dfc00615 	stw	ra,24(sp)
    6900:	dcc00515 	stw	r19,20(sp)
    6904:	dc800415 	stw	r18,16(sp)
    6908:	2027883a 	mov	r19,r4
    690c:	dc000215 	stw	r16,8(sp)
    6910:	00066940 	call	6694 <__b2d>
    6914:	8809883a 	mov	r4,r17
    6918:	d80b883a 	mov	r5,sp
    691c:	1025883a 	mov	r18,r2
    6920:	1821883a 	mov	r16,r3
    6924:	00066940 	call	6694 <__b2d>
    6928:	8a400417 	ldw	r9,16(r17)
    692c:	9a000417 	ldw	r8,16(r19)
    6930:	100d883a 	mov	r6,r2
    6934:	d8800017 	ldw	r2,0(sp)
    6938:	4251c83a 	sub	r8,r8,r9
    693c:	4012917a 	slli	r9,r8,5
    6940:	da000117 	ldw	r8,4(sp)
    6944:	4091c83a 	sub	r8,r8,r2
    6948:	4251883a 	add	r8,r8,r9
    694c:	02000d0e 	bge	zero,r8,6984 <__ratio+0x98>
    6950:	4010953a 	slli	r8,r8,20
    6954:	4421883a 	add	r16,r8,r16
    6958:	9009883a 	mov	r4,r18
    695c:	800b883a 	mov	r5,r16
    6960:	180f883a 	mov	r7,r3
    6964:	000ae880 	call	ae88 <__divdf3>
    6968:	dfc00617 	ldw	ra,24(sp)
    696c:	dcc00517 	ldw	r19,20(sp)
    6970:	dc800417 	ldw	r18,16(sp)
    6974:	dc400317 	ldw	r17,12(sp)
    6978:	dc000217 	ldw	r16,8(sp)
    697c:	dec00704 	addi	sp,sp,28
    6980:	f800283a 	ret
    6984:	4010953a 	slli	r8,r8,20
    6988:	1a07c83a 	sub	r3,r3,r8
    698c:	003ff206 	br	6958 <__alt_data_end+0xfffa4ed8>

00006990 <_mprec_log10>:
    6990:	defffe04 	addi	sp,sp,-8
    6994:	dc000015 	stw	r16,0(sp)
    6998:	dfc00115 	stw	ra,4(sp)
    699c:	008005c4 	movi	r2,23
    69a0:	2021883a 	mov	r16,r4
    69a4:	11000d0e 	bge	r2,r4,69dc <_mprec_log10+0x4c>
    69a8:	0005883a 	mov	r2,zero
    69ac:	00cffc34 	movhi	r3,16368
    69b0:	843fffc4 	addi	r16,r16,-1
    69b4:	1009883a 	mov	r4,r2
    69b8:	180b883a 	mov	r5,r3
    69bc:	000d883a 	mov	r6,zero
    69c0:	01d00934 	movhi	r7,16420
    69c4:	000ba4c0 	call	ba4c <__muldf3>
    69c8:	803ff91e 	bne	r16,zero,69b0 <__alt_data_end+0xfffa4f30>
    69cc:	dfc00117 	ldw	ra,4(sp)
    69d0:	dc000017 	ldw	r16,0(sp)
    69d4:	dec00204 	addi	sp,sp,8
    69d8:	f800283a 	ret
    69dc:	202090fa 	slli	r16,r4,3
    69e0:	00800074 	movhi	r2,1
    69e4:	10bd8f04 	addi	r2,r2,-2500
    69e8:	1421883a 	add	r16,r2,r16
    69ec:	80800017 	ldw	r2,0(r16)
    69f0:	80c00117 	ldw	r3,4(r16)
    69f4:	dfc00117 	ldw	ra,4(sp)
    69f8:	dc000017 	ldw	r16,0(sp)
    69fc:	dec00204 	addi	sp,sp,8
    6a00:	f800283a 	ret

00006a04 <__copybits>:
    6a04:	297fffc4 	addi	r5,r5,-1
    6a08:	280fd17a 	srai	r7,r5,5
    6a0c:	30c00417 	ldw	r3,16(r6)
    6a10:	30800504 	addi	r2,r6,20
    6a14:	39c00044 	addi	r7,r7,1
    6a18:	18c7883a 	add	r3,r3,r3
    6a1c:	39cf883a 	add	r7,r7,r7
    6a20:	18c7883a 	add	r3,r3,r3
    6a24:	39cf883a 	add	r7,r7,r7
    6a28:	10c7883a 	add	r3,r2,r3
    6a2c:	21cf883a 	add	r7,r4,r7
    6a30:	10c00d2e 	bgeu	r2,r3,6a68 <__copybits+0x64>
    6a34:	200b883a 	mov	r5,r4
    6a38:	12000017 	ldw	r8,0(r2)
    6a3c:	29400104 	addi	r5,r5,4
    6a40:	10800104 	addi	r2,r2,4
    6a44:	2a3fff15 	stw	r8,-4(r5)
    6a48:	10fffb36 	bltu	r2,r3,6a38 <__alt_data_end+0xfffa4fb8>
    6a4c:	1985c83a 	sub	r2,r3,r6
    6a50:	10bffac4 	addi	r2,r2,-21
    6a54:	1004d0ba 	srli	r2,r2,2
    6a58:	10800044 	addi	r2,r2,1
    6a5c:	1085883a 	add	r2,r2,r2
    6a60:	1085883a 	add	r2,r2,r2
    6a64:	2089883a 	add	r4,r4,r2
    6a68:	21c0032e 	bgeu	r4,r7,6a78 <__copybits+0x74>
    6a6c:	20000015 	stw	zero,0(r4)
    6a70:	21000104 	addi	r4,r4,4
    6a74:	21fffd36 	bltu	r4,r7,6a6c <__alt_data_end+0xfffa4fec>
    6a78:	f800283a 	ret

00006a7c <__any_on>:
    6a7c:	20c00417 	ldw	r3,16(r4)
    6a80:	2805d17a 	srai	r2,r5,5
    6a84:	21000504 	addi	r4,r4,20
    6a88:	18800d0e 	bge	r3,r2,6ac0 <__any_on+0x44>
    6a8c:	18c7883a 	add	r3,r3,r3
    6a90:	18c7883a 	add	r3,r3,r3
    6a94:	20c7883a 	add	r3,r4,r3
    6a98:	20c0192e 	bgeu	r4,r3,6b00 <__any_on+0x84>
    6a9c:	18bfff17 	ldw	r2,-4(r3)
    6aa0:	18ffff04 	addi	r3,r3,-4
    6aa4:	1000041e 	bne	r2,zero,6ab8 <__any_on+0x3c>
    6aa8:	20c0142e 	bgeu	r4,r3,6afc <__any_on+0x80>
    6aac:	18ffff04 	addi	r3,r3,-4
    6ab0:	19400017 	ldw	r5,0(r3)
    6ab4:	283ffc26 	beq	r5,zero,6aa8 <__alt_data_end+0xfffa5028>
    6ab8:	00800044 	movi	r2,1
    6abc:	f800283a 	ret
    6ac0:	10c00a0e 	bge	r2,r3,6aec <__any_on+0x70>
    6ac4:	1085883a 	add	r2,r2,r2
    6ac8:	1085883a 	add	r2,r2,r2
    6acc:	294007cc 	andi	r5,r5,31
    6ad0:	2087883a 	add	r3,r4,r2
    6ad4:	283ff026 	beq	r5,zero,6a98 <__alt_data_end+0xfffa5018>
    6ad8:	19800017 	ldw	r6,0(r3)
    6adc:	3144d83a 	srl	r2,r6,r5
    6ae0:	114a983a 	sll	r5,r2,r5
    6ae4:	29bff41e 	bne	r5,r6,6ab8 <__alt_data_end+0xfffa5038>
    6ae8:	003feb06 	br	6a98 <__alt_data_end+0xfffa5018>
    6aec:	1085883a 	add	r2,r2,r2
    6af0:	1085883a 	add	r2,r2,r2
    6af4:	2087883a 	add	r3,r4,r2
    6af8:	003fe706 	br	6a98 <__alt_data_end+0xfffa5018>
    6afc:	f800283a 	ret
    6b00:	0005883a 	mov	r2,zero
    6b04:	f800283a 	ret

00006b08 <__fpclassifyd>:
    6b08:	00a00034 	movhi	r2,32768
    6b0c:	10bfffc4 	addi	r2,r2,-1
    6b10:	2884703a 	and	r2,r5,r2
    6b14:	10000726 	beq	r2,zero,6b34 <__fpclassifyd+0x2c>
    6b18:	00fffc34 	movhi	r3,65520
    6b1c:	019ff834 	movhi	r6,32736
    6b20:	28c7883a 	add	r3,r5,r3
    6b24:	31bfffc4 	addi	r6,r6,-1
    6b28:	30c00536 	bltu	r6,r3,6b40 <__fpclassifyd+0x38>
    6b2c:	00800104 	movi	r2,4
    6b30:	f800283a 	ret
    6b34:	2000021e 	bne	r4,zero,6b40 <__fpclassifyd+0x38>
    6b38:	00800084 	movi	r2,2
    6b3c:	f800283a 	ret
    6b40:	00dffc34 	movhi	r3,32752
    6b44:	019ff834 	movhi	r6,32736
    6b48:	28cb883a 	add	r5,r5,r3
    6b4c:	31bfffc4 	addi	r6,r6,-1
    6b50:	317ff62e 	bgeu	r6,r5,6b2c <__alt_data_end+0xfffa50ac>
    6b54:	01400434 	movhi	r5,16
    6b58:	297fffc4 	addi	r5,r5,-1
    6b5c:	28800236 	bltu	r5,r2,6b68 <__fpclassifyd+0x60>
    6b60:	008000c4 	movi	r2,3
    6b64:	f800283a 	ret
    6b68:	10c00226 	beq	r2,r3,6b74 <__fpclassifyd+0x6c>
    6b6c:	0005883a 	mov	r2,zero
    6b70:	f800283a 	ret
    6b74:	2005003a 	cmpeq	r2,r4,zero
    6b78:	f800283a 	ret

00006b7c <__sread>:
    6b7c:	defffe04 	addi	sp,sp,-8
    6b80:	dc000015 	stw	r16,0(sp)
    6b84:	2821883a 	mov	r16,r5
    6b88:	2940038f 	ldh	r5,14(r5)
    6b8c:	dfc00115 	stw	ra,4(sp)
    6b90:	0008ed00 	call	8ed0 <_read_r>
    6b94:	10000716 	blt	r2,zero,6bb4 <__sread+0x38>
    6b98:	80c01417 	ldw	r3,80(r16)
    6b9c:	1887883a 	add	r3,r3,r2
    6ba0:	80c01415 	stw	r3,80(r16)
    6ba4:	dfc00117 	ldw	ra,4(sp)
    6ba8:	dc000017 	ldw	r16,0(sp)
    6bac:	dec00204 	addi	sp,sp,8
    6bb0:	f800283a 	ret
    6bb4:	80c0030b 	ldhu	r3,12(r16)
    6bb8:	18fbffcc 	andi	r3,r3,61439
    6bbc:	80c0030d 	sth	r3,12(r16)
    6bc0:	dfc00117 	ldw	ra,4(sp)
    6bc4:	dc000017 	ldw	r16,0(sp)
    6bc8:	dec00204 	addi	sp,sp,8
    6bcc:	f800283a 	ret

00006bd0 <__seofread>:
    6bd0:	0005883a 	mov	r2,zero
    6bd4:	f800283a 	ret

00006bd8 <__swrite>:
    6bd8:	2880030b 	ldhu	r2,12(r5)
    6bdc:	defffb04 	addi	sp,sp,-20
    6be0:	dcc00315 	stw	r19,12(sp)
    6be4:	dc800215 	stw	r18,8(sp)
    6be8:	dc400115 	stw	r17,4(sp)
    6bec:	dc000015 	stw	r16,0(sp)
    6bf0:	dfc00415 	stw	ra,16(sp)
    6bf4:	10c0400c 	andi	r3,r2,256
    6bf8:	2821883a 	mov	r16,r5
    6bfc:	2027883a 	mov	r19,r4
    6c00:	3025883a 	mov	r18,r6
    6c04:	3823883a 	mov	r17,r7
    6c08:	18000526 	beq	r3,zero,6c20 <__swrite+0x48>
    6c0c:	2940038f 	ldh	r5,14(r5)
    6c10:	000d883a 	mov	r6,zero
    6c14:	01c00084 	movi	r7,2
    6c18:	0008d180 	call	8d18 <_lseek_r>
    6c1c:	8080030b 	ldhu	r2,12(r16)
    6c20:	8140038f 	ldh	r5,14(r16)
    6c24:	10bbffcc 	andi	r2,r2,61439
    6c28:	9809883a 	mov	r4,r19
    6c2c:	900d883a 	mov	r6,r18
    6c30:	880f883a 	mov	r7,r17
    6c34:	8080030d 	sth	r2,12(r16)
    6c38:	dfc00417 	ldw	ra,16(sp)
    6c3c:	dcc00317 	ldw	r19,12(sp)
    6c40:	dc800217 	ldw	r18,8(sp)
    6c44:	dc400117 	ldw	r17,4(sp)
    6c48:	dc000017 	ldw	r16,0(sp)
    6c4c:	dec00504 	addi	sp,sp,20
    6c50:	00083501 	jmpi	8350 <_write_r>

00006c54 <__sseek>:
    6c54:	defffe04 	addi	sp,sp,-8
    6c58:	dc000015 	stw	r16,0(sp)
    6c5c:	2821883a 	mov	r16,r5
    6c60:	2940038f 	ldh	r5,14(r5)
    6c64:	dfc00115 	stw	ra,4(sp)
    6c68:	0008d180 	call	8d18 <_lseek_r>
    6c6c:	00ffffc4 	movi	r3,-1
    6c70:	10c00826 	beq	r2,r3,6c94 <__sseek+0x40>
    6c74:	80c0030b 	ldhu	r3,12(r16)
    6c78:	80801415 	stw	r2,80(r16)
    6c7c:	18c40014 	ori	r3,r3,4096
    6c80:	80c0030d 	sth	r3,12(r16)
    6c84:	dfc00117 	ldw	ra,4(sp)
    6c88:	dc000017 	ldw	r16,0(sp)
    6c8c:	dec00204 	addi	sp,sp,8
    6c90:	f800283a 	ret
    6c94:	80c0030b 	ldhu	r3,12(r16)
    6c98:	18fbffcc 	andi	r3,r3,61439
    6c9c:	80c0030d 	sth	r3,12(r16)
    6ca0:	dfc00117 	ldw	ra,4(sp)
    6ca4:	dc000017 	ldw	r16,0(sp)
    6ca8:	dec00204 	addi	sp,sp,8
    6cac:	f800283a 	ret

00006cb0 <__sclose>:
    6cb0:	2940038f 	ldh	r5,14(r5)
    6cb4:	00083ac1 	jmpi	83ac <_close_r>

00006cb8 <strcmp>:
    6cb8:	2144b03a 	or	r2,r4,r5
    6cbc:	108000cc 	andi	r2,r2,3
    6cc0:	1000171e 	bne	r2,zero,6d20 <strcmp+0x68>
    6cc4:	20800017 	ldw	r2,0(r4)
    6cc8:	28c00017 	ldw	r3,0(r5)
    6ccc:	10c0141e 	bne	r2,r3,6d20 <strcmp+0x68>
    6cd0:	027fbff4 	movhi	r9,65279
    6cd4:	4a7fbfc4 	addi	r9,r9,-257
    6cd8:	0086303a 	nor	r3,zero,r2
    6cdc:	02202074 	movhi	r8,32897
    6ce0:	1245883a 	add	r2,r2,r9
    6ce4:	42202004 	addi	r8,r8,-32640
    6ce8:	10c4703a 	and	r2,r2,r3
    6cec:	1204703a 	and	r2,r2,r8
    6cf0:	10000226 	beq	r2,zero,6cfc <strcmp+0x44>
    6cf4:	00001706 	br	6d54 <strcmp+0x9c>
    6cf8:	1000161e 	bne	r2,zero,6d54 <strcmp+0x9c>
    6cfc:	21000104 	addi	r4,r4,4
    6d00:	20c00017 	ldw	r3,0(r4)
    6d04:	29400104 	addi	r5,r5,4
    6d08:	29800017 	ldw	r6,0(r5)
    6d0c:	1a4f883a 	add	r7,r3,r9
    6d10:	00c4303a 	nor	r2,zero,r3
    6d14:	3884703a 	and	r2,r7,r2
    6d18:	1204703a 	and	r2,r2,r8
    6d1c:	19bff626 	beq	r3,r6,6cf8 <__alt_data_end+0xfffa5278>
    6d20:	20800007 	ldb	r2,0(r4)
    6d24:	1000051e 	bne	r2,zero,6d3c <strcmp+0x84>
    6d28:	00000606 	br	6d44 <strcmp+0x8c>
    6d2c:	21000044 	addi	r4,r4,1
    6d30:	20800007 	ldb	r2,0(r4)
    6d34:	29400044 	addi	r5,r5,1
    6d38:	10000226 	beq	r2,zero,6d44 <strcmp+0x8c>
    6d3c:	28c00007 	ldb	r3,0(r5)
    6d40:	10fffa26 	beq	r2,r3,6d2c <__alt_data_end+0xfffa52ac>
    6d44:	20800003 	ldbu	r2,0(r4)
    6d48:	28c00003 	ldbu	r3,0(r5)
    6d4c:	10c5c83a 	sub	r2,r2,r3
    6d50:	f800283a 	ret
    6d54:	0005883a 	mov	r2,zero
    6d58:	f800283a 	ret

00006d5c <strlen>:
    6d5c:	208000cc 	andi	r2,r4,3
    6d60:	10002026 	beq	r2,zero,6de4 <strlen+0x88>
    6d64:	20800007 	ldb	r2,0(r4)
    6d68:	10002026 	beq	r2,zero,6dec <strlen+0x90>
    6d6c:	2005883a 	mov	r2,r4
    6d70:	00000206 	br	6d7c <strlen+0x20>
    6d74:	10c00007 	ldb	r3,0(r2)
    6d78:	18001826 	beq	r3,zero,6ddc <strlen+0x80>
    6d7c:	10800044 	addi	r2,r2,1
    6d80:	10c000cc 	andi	r3,r2,3
    6d84:	183ffb1e 	bne	r3,zero,6d74 <__alt_data_end+0xfffa52f4>
    6d88:	10c00017 	ldw	r3,0(r2)
    6d8c:	01ffbff4 	movhi	r7,65279
    6d90:	39ffbfc4 	addi	r7,r7,-257
    6d94:	00ca303a 	nor	r5,zero,r3
    6d98:	01a02074 	movhi	r6,32897
    6d9c:	19c7883a 	add	r3,r3,r7
    6da0:	31a02004 	addi	r6,r6,-32640
    6da4:	1946703a 	and	r3,r3,r5
    6da8:	1986703a 	and	r3,r3,r6
    6dac:	1800091e 	bne	r3,zero,6dd4 <strlen+0x78>
    6db0:	10800104 	addi	r2,r2,4
    6db4:	10c00017 	ldw	r3,0(r2)
    6db8:	19cb883a 	add	r5,r3,r7
    6dbc:	00c6303a 	nor	r3,zero,r3
    6dc0:	28c6703a 	and	r3,r5,r3
    6dc4:	1986703a 	and	r3,r3,r6
    6dc8:	183ff926 	beq	r3,zero,6db0 <__alt_data_end+0xfffa5330>
    6dcc:	00000106 	br	6dd4 <strlen+0x78>
    6dd0:	10800044 	addi	r2,r2,1
    6dd4:	10c00007 	ldb	r3,0(r2)
    6dd8:	183ffd1e 	bne	r3,zero,6dd0 <__alt_data_end+0xfffa5350>
    6ddc:	1105c83a 	sub	r2,r2,r4
    6de0:	f800283a 	ret
    6de4:	2005883a 	mov	r2,r4
    6de8:	003fe706 	br	6d88 <__alt_data_end+0xfffa5308>
    6dec:	0005883a 	mov	r2,zero
    6df0:	f800283a 	ret

00006df4 <__sprint_r.part.0>:
    6df4:	28801917 	ldw	r2,100(r5)
    6df8:	defff604 	addi	sp,sp,-40
    6dfc:	dd400515 	stw	r21,20(sp)
    6e00:	dcc00315 	stw	r19,12(sp)
    6e04:	dfc00915 	stw	ra,36(sp)
    6e08:	df000815 	stw	fp,32(sp)
    6e0c:	ddc00715 	stw	r23,28(sp)
    6e10:	dd800615 	stw	r22,24(sp)
    6e14:	dd000415 	stw	r20,16(sp)
    6e18:	dc800215 	stw	r18,8(sp)
    6e1c:	dc400115 	stw	r17,4(sp)
    6e20:	dc000015 	stw	r16,0(sp)
    6e24:	1088000c 	andi	r2,r2,8192
    6e28:	2827883a 	mov	r19,r5
    6e2c:	302b883a 	mov	r21,r6
    6e30:	10002d26 	beq	r2,zero,6ee8 <__sprint_r.part.0+0xf4>
    6e34:	30800217 	ldw	r2,8(r6)
    6e38:	35800017 	ldw	r22,0(r6)
    6e3c:	10002826 	beq	r2,zero,6ee0 <__sprint_r.part.0+0xec>
    6e40:	2029883a 	mov	r20,r4
    6e44:	b5c00104 	addi	r23,r22,4
    6e48:	04bfffc4 	movi	r18,-1
    6e4c:	bc400017 	ldw	r17,0(r23)
    6e50:	b4000017 	ldw	r16,0(r22)
    6e54:	0039883a 	mov	fp,zero
    6e58:	8822d0ba 	srli	r17,r17,2
    6e5c:	04400316 	blt	zero,r17,6e6c <__sprint_r.part.0+0x78>
    6e60:	00001706 	br	6ec0 <__sprint_r.part.0+0xcc>
    6e64:	84000104 	addi	r16,r16,4
    6e68:	8f001526 	beq	r17,fp,6ec0 <__sprint_r.part.0+0xcc>
    6e6c:	81400017 	ldw	r5,0(r16)
    6e70:	a009883a 	mov	r4,r20
    6e74:	980d883a 	mov	r6,r19
    6e78:	00085ec0 	call	85ec <_fputwc_r>
    6e7c:	e7000044 	addi	fp,fp,1
    6e80:	14bff81e 	bne	r2,r18,6e64 <__alt_data_end+0xfffa53e4>
    6e84:	9005883a 	mov	r2,r18
    6e88:	a8000215 	stw	zero,8(r21)
    6e8c:	a8000115 	stw	zero,4(r21)
    6e90:	dfc00917 	ldw	ra,36(sp)
    6e94:	df000817 	ldw	fp,32(sp)
    6e98:	ddc00717 	ldw	r23,28(sp)
    6e9c:	dd800617 	ldw	r22,24(sp)
    6ea0:	dd400517 	ldw	r21,20(sp)
    6ea4:	dd000417 	ldw	r20,16(sp)
    6ea8:	dcc00317 	ldw	r19,12(sp)
    6eac:	dc800217 	ldw	r18,8(sp)
    6eb0:	dc400117 	ldw	r17,4(sp)
    6eb4:	dc000017 	ldw	r16,0(sp)
    6eb8:	dec00a04 	addi	sp,sp,40
    6ebc:	f800283a 	ret
    6ec0:	a8c00217 	ldw	r3,8(r21)
    6ec4:	8c63883a 	add	r17,r17,r17
    6ec8:	8c63883a 	add	r17,r17,r17
    6ecc:	1c45c83a 	sub	r2,r3,r17
    6ed0:	a8800215 	stw	r2,8(r21)
    6ed4:	b5800204 	addi	r22,r22,8
    6ed8:	bdc00204 	addi	r23,r23,8
    6edc:	103fdb1e 	bne	r2,zero,6e4c <__alt_data_end+0xfffa53cc>
    6ee0:	0005883a 	mov	r2,zero
    6ee4:	003fe806 	br	6e88 <__alt_data_end+0xfffa5408>
    6ee8:	00088200 	call	8820 <__sfvwrite_r>
    6eec:	003fe606 	br	6e88 <__alt_data_end+0xfffa5408>

00006ef0 <__sprint_r>:
    6ef0:	30c00217 	ldw	r3,8(r6)
    6ef4:	18000126 	beq	r3,zero,6efc <__sprint_r+0xc>
    6ef8:	0006df41 	jmpi	6df4 <__sprint_r.part.0>
    6efc:	30000115 	stw	zero,4(r6)
    6f00:	0005883a 	mov	r2,zero
    6f04:	f800283a 	ret

00006f08 <___vfiprintf_internal_r>:
    6f08:	defeca04 	addi	sp,sp,-1240
    6f0c:	dcc12f15 	stw	r19,1212(sp)
    6f10:	dfc13515 	stw	ra,1236(sp)
    6f14:	df013415 	stw	fp,1232(sp)
    6f18:	ddc13315 	stw	r23,1228(sp)
    6f1c:	dd813215 	stw	r22,1224(sp)
    6f20:	dd413115 	stw	r21,1220(sp)
    6f24:	dd013015 	stw	r20,1216(sp)
    6f28:	dc812e15 	stw	r18,1208(sp)
    6f2c:	dc412d15 	stw	r17,1204(sp)
    6f30:	dc012c15 	stw	r16,1200(sp)
    6f34:	d9012115 	stw	r4,1156(sp)
    6f38:	d9412015 	stw	r5,1152(sp)
    6f3c:	d9c12315 	stw	r7,1164(sp)
    6f40:	3027883a 	mov	r19,r6
    6f44:	20000226 	beq	r4,zero,6f50 <___vfiprintf_internal_r+0x48>
    6f48:	20800e17 	ldw	r2,56(r4)
    6f4c:	1000f726 	beq	r2,zero,732c <___vfiprintf_internal_r+0x424>
    6f50:	d8812017 	ldw	r2,1152(sp)
    6f54:	10c0030b 	ldhu	r3,12(r2)
    6f58:	1908000c 	andi	r4,r3,8192
    6f5c:	1805883a 	mov	r2,r3
    6f60:	2000081e 	bne	r4,zero,6f84 <___vfiprintf_internal_r+0x7c>
    6f64:	d9412017 	ldw	r5,1152(sp)
    6f68:	18880014 	ori	r2,r3,8192
    6f6c:	00f7ffc4 	movi	r3,-8193
    6f70:	29001917 	ldw	r4,100(r5)
    6f74:	2880030d 	sth	r2,12(r5)
    6f78:	20c8703a 	and	r4,r4,r3
    6f7c:	29001915 	stw	r4,100(r5)
    6f80:	1007883a 	mov	r3,r2
    6f84:	1100020c 	andi	r4,r2,8
    6f88:	2000a726 	beq	r4,zero,7228 <___vfiprintf_internal_r+0x320>
    6f8c:	d9412017 	ldw	r5,1152(sp)
    6f90:	29000417 	ldw	r4,16(r5)
    6f94:	2000a426 	beq	r4,zero,7228 <___vfiprintf_internal_r+0x320>
    6f98:	1080068c 	andi	r2,r2,26
    6f9c:	01000284 	movi	r4,10
    6fa0:	1100ab26 	beq	r2,r4,7250 <___vfiprintf_internal_r+0x348>
    6fa4:	d9010a04 	addi	r4,sp,1064
    6fa8:	d94109c4 	addi	r5,sp,1063
    6fac:	07000074 	movhi	fp,1
    6fb0:	04400074 	movhi	r17,1
    6fb4:	2145c83a 	sub	r2,r4,r5
    6fb8:	e73dc504 	addi	fp,fp,-2284
    6fbc:	8c7dc104 	addi	r17,r17,-2300
    6fc0:	d9011e15 	stw	r4,1144(sp)
    6fc4:	d9411f15 	stw	r5,1148(sp)
    6fc8:	dec11a15 	stw	sp,1128(sp)
    6fcc:	d8011c15 	stw	zero,1136(sp)
    6fd0:	d8011b15 	stw	zero,1132(sp)
    6fd4:	d8012715 	stw	zero,1180(sp)
    6fd8:	d8012515 	stw	zero,1172(sp)
    6fdc:	d811883a 	mov	r8,sp
    6fe0:	d8812815 	stw	r2,1184(sp)
    6fe4:	982f883a 	mov	r23,r19
    6fe8:	b8800007 	ldb	r2,0(r23)
    6fec:	1003b026 	beq	r2,zero,7eb0 <___vfiprintf_internal_r+0xfa8>
    6ff0:	01000944 	movi	r4,37
    6ff4:	1103ae26 	beq	r2,r4,7eb0 <___vfiprintf_internal_r+0xfa8>
    6ff8:	b805883a 	mov	r2,r23
    6ffc:	00000106 	br	7004 <___vfiprintf_internal_r+0xfc>
    7000:	19000326 	beq	r3,r4,7010 <___vfiprintf_internal_r+0x108>
    7004:	10800044 	addi	r2,r2,1
    7008:	10c00007 	ldb	r3,0(r2)
    700c:	183ffc1e 	bne	r3,zero,7000 <__alt_data_end+0xfffa5580>
    7010:	15e1c83a 	sub	r16,r2,r23
    7014:	1029883a 	mov	r20,r2
    7018:	80001026 	beq	r16,zero,705c <___vfiprintf_internal_r+0x154>
    701c:	d8c11c17 	ldw	r3,1136(sp)
    7020:	d8811b17 	ldw	r2,1132(sp)
    7024:	45c00015 	stw	r23,0(r8)
    7028:	80c7883a 	add	r3,r16,r3
    702c:	10800044 	addi	r2,r2,1
    7030:	44000115 	stw	r16,4(r8)
    7034:	d8c11c15 	stw	r3,1136(sp)
    7038:	d8811b15 	stw	r2,1132(sp)
    703c:	010001c4 	movi	r4,7
    7040:	2080740e 	bge	r4,r2,7214 <___vfiprintf_internal_r+0x30c>
    7044:	1803a71e 	bne	r3,zero,7ee4 <___vfiprintf_internal_r+0xfdc>
    7048:	d8c12517 	ldw	r3,1172(sp)
    704c:	d8011b15 	stw	zero,1132(sp)
    7050:	d811883a 	mov	r8,sp
    7054:	1c07883a 	add	r3,r3,r16
    7058:	d8c12515 	stw	r3,1172(sp)
    705c:	a0800007 	ldb	r2,0(r20)
    7060:	1002bf26 	beq	r2,zero,7b60 <___vfiprintf_internal_r+0xc58>
    7064:	a5c00044 	addi	r23,r20,1
    7068:	a1800047 	ldb	r6,1(r20)
    706c:	d8011d85 	stb	zero,1142(sp)
    7070:	d8012205 	stb	zero,1160(sp)
    7074:	043fffc4 	movi	r16,-1
    7078:	d8012415 	stw	zero,1168(sp)
    707c:	0025883a 	mov	r18,zero
    7080:	05001604 	movi	r20,88
    7084:	05400244 	movi	r21,9
    7088:	4027883a 	mov	r19,r8
    708c:	bdc00044 	addi	r23,r23,1
    7090:	30bff804 	addi	r2,r6,-32
    7094:	a0825636 	bltu	r20,r2,79f0 <___vfiprintf_internal_r+0xae8>
    7098:	100490ba 	slli	r2,r2,2
    709c:	01000034 	movhi	r4,0
    70a0:	211c2c04 	addi	r4,r4,28848
    70a4:	1105883a 	add	r2,r2,r4
    70a8:	10800017 	ldw	r2,0(r2)
    70ac:	1000683a 	jmp	r2
    70b0:	00007980 	call	798 <_malloc_r+0x248>
    70b4:	000079f0 	cmpltui	zero,zero,487
    70b8:	000079f0 	cmpltui	zero,zero,487
    70bc:	000079e4 	muli	zero,zero,487
    70c0:	000079f0 	cmpltui	zero,zero,487
    70c4:	000079f0 	cmpltui	zero,zero,487
    70c8:	000079f0 	cmpltui	zero,zero,487
    70cc:	000079f0 	cmpltui	zero,zero,487
    70d0:	000079f0 	cmpltui	zero,zero,487
    70d4:	000079f0 	cmpltui	zero,zero,487
    70d8:	00007770 	cmpltui	zero,zero,477
    70dc:	00007998 	cmpnei	zero,zero,486
    70e0:	000079f0 	cmpltui	zero,zero,487
    70e4:	00007344 	movi	zero,461
    70e8:	00007794 	movui	zero,478
    70ec:	000079f0 	cmpltui	zero,zero,487
    70f0:	00007350 	cmplti	zero,zero,461
    70f4:	0000735c 	xori	zero,zero,461
    70f8:	0000735c 	xori	zero,zero,461
    70fc:	0000735c 	xori	zero,zero,461
    7100:	0000735c 	xori	zero,zero,461
    7104:	0000735c 	xori	zero,zero,461
    7108:	0000735c 	xori	zero,zero,461
    710c:	0000735c 	xori	zero,zero,461
    7110:	0000735c 	xori	zero,zero,461
    7114:	0000735c 	xori	zero,zero,461
    7118:	000079f0 	cmpltui	zero,zero,487
    711c:	000079f0 	cmpltui	zero,zero,487
    7120:	000079f0 	cmpltui	zero,zero,487
    7124:	000079f0 	cmpltui	zero,zero,487
    7128:	000079f0 	cmpltui	zero,zero,487
    712c:	000079f0 	cmpltui	zero,zero,487
    7130:	000079f0 	cmpltui	zero,zero,487
    7134:	000079f0 	cmpltui	zero,zero,487
    7138:	000079f0 	cmpltui	zero,zero,487
    713c:	000079f0 	cmpltui	zero,zero,487
    7140:	0000739c 	xori	zero,zero,462
    7144:	000079f0 	cmpltui	zero,zero,487
    7148:	000079f0 	cmpltui	zero,zero,487
    714c:	000079f0 	cmpltui	zero,zero,487
    7150:	000079f0 	cmpltui	zero,zero,487
    7154:	000079f0 	cmpltui	zero,zero,487
    7158:	000079f0 	cmpltui	zero,zero,487
    715c:	000079f0 	cmpltui	zero,zero,487
    7160:	000079f0 	cmpltui	zero,zero,487
    7164:	000079f0 	cmpltui	zero,zero,487
    7168:	000079f0 	cmpltui	zero,zero,487
    716c:	0000768c 	andi	zero,zero,474
    7170:	000079f0 	cmpltui	zero,zero,487
    7174:	000079f0 	cmpltui	zero,zero,487
    7178:	000079f0 	cmpltui	zero,zero,487
    717c:	000079f0 	cmpltui	zero,zero,487
    7180:	000079f0 	cmpltui	zero,zero,487
    7184:	000076cc 	andi	zero,zero,475
    7188:	000079f0 	cmpltui	zero,zero,487
    718c:	000079f0 	cmpltui	zero,zero,487
    7190:	00007710 	cmplti	zero,zero,476
    7194:	000079f0 	cmpltui	zero,zero,487
    7198:	000079f0 	cmpltui	zero,zero,487
    719c:	000079f0 	cmpltui	zero,zero,487
    71a0:	000079f0 	cmpltui	zero,zero,487
    71a4:	000079f0 	cmpltui	zero,zero,487
    71a8:	000079f0 	cmpltui	zero,zero,487
    71ac:	000079f0 	cmpltui	zero,zero,487
    71b0:	000079f0 	cmpltui	zero,zero,487
    71b4:	000079f0 	cmpltui	zero,zero,487
    71b8:	000079f0 	cmpltui	zero,zero,487
    71bc:	00007658 	cmpnei	zero,zero,473
    71c0:	000079a8 	cmpgeui	zero,zero,486
    71c4:	000079f0 	cmpltui	zero,zero,487
    71c8:	000079f0 	cmpltui	zero,zero,487
    71cc:	000079f0 	cmpltui	zero,zero,487
    71d0:	000077e4 	muli	zero,zero,479
    71d4:	000079a8 	cmpgeui	zero,zero,486
    71d8:	000079f0 	cmpltui	zero,zero,487
    71dc:	000079f0 	cmpltui	zero,zero,487
    71e0:	000076fc 	xorhi	zero,zero,475
    71e4:	000079f0 	cmpltui	zero,zero,487
    71e8:	00007948 	cmpgei	zero,zero,485
    71ec:	000078d0 	cmplti	zero,zero,483
    71f0:	00007904 	movi	zero,484
    71f4:	000077f0 	cmpltui	zero,zero,479
    71f8:	000079f0 	cmpltui	zero,zero,487
    71fc:	000077fc 	xorhi	zero,zero,479
    7200:	000079f0 	cmpltui	zero,zero,487
    7204:	00007858 	cmpnei	zero,zero,481
    7208:	000079f0 	cmpltui	zero,zero,487
    720c:	000079f0 	cmpltui	zero,zero,487
    7210:	0000788c 	andi	zero,zero,482
    7214:	42000204 	addi	r8,r8,8
    7218:	d8c12517 	ldw	r3,1172(sp)
    721c:	1c07883a 	add	r3,r3,r16
    7220:	d8c12515 	stw	r3,1172(sp)
    7224:	003f8d06 	br	705c <__alt_data_end+0xfffa55dc>
    7228:	d9012117 	ldw	r4,1156(sp)
    722c:	d9412017 	ldw	r5,1152(sp)
    7230:	0002ed40 	call	2ed4 <__swsetup_r>
    7234:	1000301e 	bne	r2,zero,72f8 <___vfiprintf_internal_r+0x3f0>
    7238:	d8812017 	ldw	r2,1152(sp)
    723c:	01000284 	movi	r4,10
    7240:	10c0030b 	ldhu	r3,12(r2)
    7244:	1805883a 	mov	r2,r3
    7248:	1080068c 	andi	r2,r2,26
    724c:	113f551e 	bne	r2,r4,6fa4 <__alt_data_end+0xfffa5524>
    7250:	d9012017 	ldw	r4,1152(sp)
    7254:	2080038b 	ldhu	r2,14(r4)
    7258:	113fffcc 	andi	r4,r2,65535
    725c:	2120001c 	xori	r4,r4,32768
    7260:	21200004 	addi	r4,r4,-32768
    7264:	203f4f16 	blt	r4,zero,6fa4 <__alt_data_end+0xfffa5524>
    7268:	d9412017 	ldw	r5,1152(sp)
    726c:	d9012117 	ldw	r4,1156(sp)
    7270:	d9c12317 	ldw	r7,1164(sp)
    7274:	2b001917 	ldw	r12,100(r5)
    7278:	2ac00717 	ldw	r11,28(r5)
    727c:	2a800917 	ldw	r10,36(r5)
    7280:	02010004 	movi	r8,1024
    7284:	18ffff4c 	andi	r3,r3,65533
    7288:	da0b883a 	add	r5,sp,r8
    728c:	980d883a 	mov	r6,r19
    7290:	d8c1030d 	sth	r3,1036(sp)
    7294:	db011915 	stw	r12,1124(sp)
    7298:	d881038d 	sth	r2,1038(sp)
    729c:	dac10715 	stw	r11,1052(sp)
    72a0:	da810915 	stw	r10,1060(sp)
    72a4:	dec10015 	stw	sp,1024(sp)
    72a8:	dec10415 	stw	sp,1040(sp)
    72ac:	da010215 	stw	r8,1032(sp)
    72b0:	da010515 	stw	r8,1044(sp)
    72b4:	d8010615 	stw	zero,1048(sp)
    72b8:	0006f080 	call	6f08 <___vfiprintf_internal_r>
    72bc:	1021883a 	mov	r16,r2
    72c0:	10000416 	blt	r2,zero,72d4 <___vfiprintf_internal_r+0x3cc>
    72c4:	d9012117 	ldw	r4,1156(sp)
    72c8:	d9410004 	addi	r5,sp,1024
    72cc:	00049540 	call	4954 <_fflush_r>
    72d0:	10040f1e 	bne	r2,zero,8310 <___vfiprintf_internal_r+0x1408>
    72d4:	d881030b 	ldhu	r2,1036(sp)
    72d8:	1080100c 	andi	r2,r2,64
    72dc:	10000426 	beq	r2,zero,72f0 <___vfiprintf_internal_r+0x3e8>
    72e0:	d8c12017 	ldw	r3,1152(sp)
    72e4:	1880030b 	ldhu	r2,12(r3)
    72e8:	10801014 	ori	r2,r2,64
    72ec:	1880030d 	sth	r2,12(r3)
    72f0:	8005883a 	mov	r2,r16
    72f4:	00000106 	br	72fc <___vfiprintf_internal_r+0x3f4>
    72f8:	00bfffc4 	movi	r2,-1
    72fc:	dfc13517 	ldw	ra,1236(sp)
    7300:	df013417 	ldw	fp,1232(sp)
    7304:	ddc13317 	ldw	r23,1228(sp)
    7308:	dd813217 	ldw	r22,1224(sp)
    730c:	dd413117 	ldw	r21,1220(sp)
    7310:	dd013017 	ldw	r20,1216(sp)
    7314:	dcc12f17 	ldw	r19,1212(sp)
    7318:	dc812e17 	ldw	r18,1208(sp)
    731c:	dc412d17 	ldw	r17,1204(sp)
    7320:	dc012c17 	ldw	r16,1200(sp)
    7324:	dec13604 	addi	sp,sp,1240
    7328:	f800283a 	ret
    732c:	0004f100 	call	4f10 <__sinit>
    7330:	003f0706 	br	6f50 <__alt_data_end+0xfffa54d0>
    7334:	d8c12417 	ldw	r3,1168(sp)
    7338:	d8812315 	stw	r2,1164(sp)
    733c:	00c7c83a 	sub	r3,zero,r3
    7340:	d8c12415 	stw	r3,1168(sp)
    7344:	94800114 	ori	r18,r18,4
    7348:	b9800007 	ldb	r6,0(r23)
    734c:	003f4f06 	br	708c <__alt_data_end+0xfffa560c>
    7350:	94802014 	ori	r18,r18,128
    7354:	b9800007 	ldb	r6,0(r23)
    7358:	003f4c06 	br	708c <__alt_data_end+0xfffa560c>
    735c:	dc012615 	stw	r16,1176(sp)
    7360:	d8012415 	stw	zero,1168(sp)
    7364:	35bff404 	addi	r22,r6,-48
    7368:	0009883a 	mov	r4,zero
    736c:	b821883a 	mov	r16,r23
    7370:	01400284 	movi	r5,10
    7374:	000a5c40 	call	a5c4 <__mulsi3>
    7378:	81800007 	ldb	r6,0(r16)
    737c:	1589883a 	add	r4,r2,r22
    7380:	bdc00044 	addi	r23,r23,1
    7384:	35bff404 	addi	r22,r6,-48
    7388:	b821883a 	mov	r16,r23
    738c:	adbff82e 	bgeu	r21,r22,7370 <__alt_data_end+0xfffa58f0>
    7390:	d9012415 	stw	r4,1168(sp)
    7394:	dc012617 	ldw	r16,1176(sp)
    7398:	003f3d06 	br	7090 <__alt_data_end+0xfffa5610>
    739c:	d8c12203 	ldbu	r3,1160(sp)
    73a0:	94800414 	ori	r18,r18,16
    73a4:	9080080c 	andi	r2,r18,32
    73a8:	d8c11d85 	stb	r3,1142(sp)
    73ac:	9811883a 	mov	r8,r19
    73b0:	d8c12317 	ldw	r3,1164(sp)
    73b4:	10018226 	beq	r2,zero,79c0 <___vfiprintf_internal_r+0xab8>
    73b8:	d9012317 	ldw	r4,1164(sp)
    73bc:	18800117 	ldw	r2,4(r3)
    73c0:	1cc00017 	ldw	r19,0(r3)
    73c4:	21000204 	addi	r4,r4,8
    73c8:	d9012315 	stw	r4,1164(sp)
    73cc:	102b883a 	mov	r21,r2
    73d0:	10030016 	blt	r2,zero,7fd4 <___vfiprintf_internal_r+0x10cc>
    73d4:	dd811d83 	ldbu	r22,1142(sp)
    73d8:	8029883a 	mov	r20,r16
    73dc:	00800044 	movi	r2,1
    73e0:	9d46b03a 	or	r3,r19,r21
    73e4:	80000216 	blt	r16,zero,73f0 <___vfiprintf_internal_r+0x4e8>
    73e8:	013fdfc4 	movi	r4,-129
    73ec:	9124703a 	and	r18,r18,r4
    73f0:	1801b41e 	bne	r3,zero,7ac4 <___vfiprintf_internal_r+0xbbc>
    73f4:	80028126 	beq	r16,zero,7dfc <___vfiprintf_internal_r+0xef4>
    73f8:	10803fcc 	andi	r2,r2,255
    73fc:	00c00044 	movi	r3,1
    7400:	10c1d126 	beq	r2,r3,7b48 <___vfiprintf_internal_r+0xc40>
    7404:	00c00084 	movi	r3,2
    7408:	10c28626 	beq	r2,r3,7e24 <___vfiprintf_internal_r+0xf1c>
    740c:	d8c10a04 	addi	r3,sp,1064
    7410:	9808d0fa 	srli	r4,r19,3
    7414:	a80a977a 	slli	r5,r21,29
    7418:	a82ad0fa 	srli	r21,r21,3
    741c:	9cc001cc 	andi	r19,r19,7
    7420:	98800c04 	addi	r2,r19,48
    7424:	18ffffc4 	addi	r3,r3,-1
    7428:	2926b03a 	or	r19,r5,r4
    742c:	18800005 	stb	r2,0(r3)
    7430:	9d48b03a 	or	r4,r19,r21
    7434:	203ff61e 	bne	r4,zero,7410 <__alt_data_end+0xfffa5990>
    7438:	9100004c 	andi	r4,r18,1
    743c:	d8c12215 	stw	r3,1160(sp)
    7440:	2002b31e 	bne	r4,zero,7f10 <___vfiprintf_internal_r+0x1008>
    7444:	d9411e17 	ldw	r5,1144(sp)
    7448:	28e9c83a 	sub	r20,r5,r3
    744c:	a02b883a 	mov	r21,r20
    7450:	a400010e 	bge	r20,r16,7458 <___vfiprintf_internal_r+0x550>
    7454:	802b883a 	mov	r21,r16
    7458:	b5803fcc 	andi	r22,r22,255
    745c:	b580201c 	xori	r22,r22,128
    7460:	b5bfe004 	addi	r22,r22,-128
    7464:	b0000126 	beq	r22,zero,746c <___vfiprintf_internal_r+0x564>
    7468:	ad400044 	addi	r21,r21,1
    746c:	9280008c 	andi	r10,r18,2
    7470:	50000126 	beq	r10,zero,7478 <___vfiprintf_internal_r+0x570>
    7474:	ad400084 	addi	r21,r21,2
    7478:	9580210c 	andi	r22,r18,132
    747c:	b001751e 	bne	r22,zero,7a54 <___vfiprintf_internal_r+0xb4c>
    7480:	d9012417 	ldw	r4,1168(sp)
    7484:	2567c83a 	sub	r19,r4,r21
    7488:	04c1720e 	bge	zero,r19,7a54 <___vfiprintf_internal_r+0xb4c>
    748c:	01c00404 	movi	r7,16
    7490:	d8c11c17 	ldw	r3,1136(sp)
    7494:	3cc36b0e 	bge	r7,r19,8244 <___vfiprintf_internal_r+0x133c>
    7498:	00800074 	movhi	r2,1
    749c:	10bdc504 	addi	r2,r2,-2284
    74a0:	dc012915 	stw	r16,1188(sp)
    74a4:	d9011b17 	ldw	r4,1132(sp)
    74a8:	9821883a 	mov	r16,r19
    74ac:	d8812615 	stw	r2,1176(sp)
    74b0:	030001c4 	movi	r12,7
    74b4:	5027883a 	mov	r19,r10
    74b8:	00000506 	br	74d0 <___vfiprintf_internal_r+0x5c8>
    74bc:	21400084 	addi	r5,r4,2
    74c0:	42000204 	addi	r8,r8,8
    74c4:	1009883a 	mov	r4,r2
    74c8:	843ffc04 	addi	r16,r16,-16
    74cc:	3c000d0e 	bge	r7,r16,7504 <___vfiprintf_internal_r+0x5fc>
    74d0:	18c00404 	addi	r3,r3,16
    74d4:	20800044 	addi	r2,r4,1
    74d8:	47000015 	stw	fp,0(r8)
    74dc:	41c00115 	stw	r7,4(r8)
    74e0:	d8c11c15 	stw	r3,1136(sp)
    74e4:	d8811b15 	stw	r2,1132(sp)
    74e8:	60bff40e 	bge	r12,r2,74bc <__alt_data_end+0xfffa5a3c>
    74ec:	18014b1e 	bne	r3,zero,7a1c <___vfiprintf_internal_r+0xb14>
    74f0:	843ffc04 	addi	r16,r16,-16
    74f4:	0009883a 	mov	r4,zero
    74f8:	01400044 	movi	r5,1
    74fc:	d811883a 	mov	r8,sp
    7500:	3c3ff316 	blt	r7,r16,74d0 <__alt_data_end+0xfffa5a50>
    7504:	9815883a 	mov	r10,r19
    7508:	8027883a 	mov	r19,r16
    750c:	dc012917 	ldw	r16,1188(sp)
    7510:	d9012617 	ldw	r4,1176(sp)
    7514:	98c7883a 	add	r3,r19,r3
    7518:	44c00115 	stw	r19,4(r8)
    751c:	41000015 	stw	r4,0(r8)
    7520:	d8c11c15 	stw	r3,1136(sp)
    7524:	d9411b15 	stw	r5,1132(sp)
    7528:	008001c4 	movi	r2,7
    752c:	11425116 	blt	r2,r5,7e74 <___vfiprintf_internal_r+0xf6c>
    7530:	d9011d87 	ldb	r4,1142(sp)
    7534:	42000204 	addi	r8,r8,8
    7538:	28800044 	addi	r2,r5,1
    753c:	20014a1e 	bne	r4,zero,7a68 <___vfiprintf_internal_r+0xb60>
    7540:	50000c26 	beq	r10,zero,7574 <___vfiprintf_internal_r+0x66c>
    7544:	d9011d04 	addi	r4,sp,1140
    7548:	18c00084 	addi	r3,r3,2
    754c:	41000015 	stw	r4,0(r8)
    7550:	01000084 	movi	r4,2
    7554:	41000115 	stw	r4,4(r8)
    7558:	d8c11c15 	stw	r3,1136(sp)
    755c:	d8811b15 	stw	r2,1132(sp)
    7560:	010001c4 	movi	r4,7
    7564:	20822016 	blt	r4,r2,7de8 <___vfiprintf_internal_r+0xee0>
    7568:	100b883a 	mov	r5,r2
    756c:	42000204 	addi	r8,r8,8
    7570:	10800044 	addi	r2,r2,1
    7574:	01002004 	movi	r4,128
    7578:	b101de26 	beq	r22,r4,7cf4 <___vfiprintf_internal_r+0xdec>
    757c:	8521c83a 	sub	r16,r16,r20
    7580:	0400230e 	bge	zero,r16,7610 <___vfiprintf_internal_r+0x708>
    7584:	04c00404 	movi	r19,16
    7588:	9c030d0e 	bge	r19,r16,81c0 <___vfiprintf_internal_r+0x12b8>
    758c:	00800074 	movhi	r2,1
    7590:	10bdc104 	addi	r2,r2,-2300
    7594:	d8812615 	stw	r2,1176(sp)
    7598:	058001c4 	movi	r22,7
    759c:	00000506 	br	75b4 <___vfiprintf_internal_r+0x6ac>
    75a0:	28800084 	addi	r2,r5,2
    75a4:	42000204 	addi	r8,r8,8
    75a8:	200b883a 	mov	r5,r4
    75ac:	843ffc04 	addi	r16,r16,-16
    75b0:	9c000d0e 	bge	r19,r16,75e8 <___vfiprintf_internal_r+0x6e0>
    75b4:	18c00404 	addi	r3,r3,16
    75b8:	29000044 	addi	r4,r5,1
    75bc:	44400015 	stw	r17,0(r8)
    75c0:	44c00115 	stw	r19,4(r8)
    75c4:	d8c11c15 	stw	r3,1136(sp)
    75c8:	d9011b15 	stw	r4,1132(sp)
    75cc:	b13ff40e 	bge	r22,r4,75a0 <__alt_data_end+0xfffa5b20>
    75d0:	1801321e 	bne	r3,zero,7a9c <___vfiprintf_internal_r+0xb94>
    75d4:	843ffc04 	addi	r16,r16,-16
    75d8:	000b883a 	mov	r5,zero
    75dc:	00800044 	movi	r2,1
    75e0:	d811883a 	mov	r8,sp
    75e4:	9c3ff316 	blt	r19,r16,75b4 <__alt_data_end+0xfffa5b34>
    75e8:	d9012617 	ldw	r4,1176(sp)
    75ec:	1c07883a 	add	r3,r3,r16
    75f0:	44000115 	stw	r16,4(r8)
    75f4:	41000015 	stw	r4,0(r8)
    75f8:	d8c11c15 	stw	r3,1136(sp)
    75fc:	d8811b15 	stw	r2,1132(sp)
    7600:	010001c4 	movi	r4,7
    7604:	20816216 	blt	r4,r2,7b90 <___vfiprintf_internal_r+0xc88>
    7608:	42000204 	addi	r8,r8,8
    760c:	10800044 	addi	r2,r2,1
    7610:	d9012217 	ldw	r4,1160(sp)
    7614:	1d07883a 	add	r3,r3,r20
    7618:	45000115 	stw	r20,4(r8)
    761c:	41000015 	stw	r4,0(r8)
    7620:	d8c11c15 	stw	r3,1136(sp)
    7624:	d8811b15 	stw	r2,1132(sp)
    7628:	010001c4 	movi	r4,7
    762c:	2081610e 	bge	r4,r2,7bb4 <___vfiprintf_internal_r+0xcac>
    7630:	1802211e 	bne	r3,zero,7eb8 <___vfiprintf_internal_r+0xfb0>
    7634:	d8011b15 	stw	zero,1132(sp)
    7638:	9480010c 	andi	r18,r18,4
    763c:	9002171e 	bne	r18,zero,7e9c <___vfiprintf_internal_r+0xf94>
    7640:	d9412417 	ldw	r5,1168(sp)
    7644:	a9433716 	blt	r21,r5,8324 <___vfiprintf_internal_r+0x141c>
    7648:	d8812517 	ldw	r2,1172(sp)
    764c:	1545883a 	add	r2,r2,r21
    7650:	d8812515 	stw	r2,1172(sp)
    7654:	00019a06 	br	7cc0 <___vfiprintf_internal_r+0xdb8>
    7658:	d8c12317 	ldw	r3,1164(sp)
    765c:	05400044 	movi	r21,1
    7660:	9811883a 	mov	r8,r19
    7664:	18800017 	ldw	r2,0(r3)
    7668:	18c00104 	addi	r3,r3,4
    766c:	d8c12315 	stw	r3,1164(sp)
    7670:	d8c10004 	addi	r3,sp,1024
    7674:	d8011d85 	stb	zero,1142(sp)
    7678:	d8810005 	stb	r2,1024(sp)
    767c:	a829883a 	mov	r20,r21
    7680:	d8c12215 	stw	r3,1160(sp)
    7684:	0021883a 	mov	r16,zero
    7688:	003f7806 	br	746c <__alt_data_end+0xfffa59ec>
    768c:	94800414 	ori	r18,r18,16
    7690:	9080080c 	andi	r2,r18,32
    7694:	9811883a 	mov	r8,r19
    7698:	10009026 	beq	r2,zero,78dc <___vfiprintf_internal_r+0x9d4>
    769c:	d8812317 	ldw	r2,1164(sp)
    76a0:	d8c12317 	ldw	r3,1164(sp)
    76a4:	14c00017 	ldw	r19,0(r2)
    76a8:	15400117 	ldw	r21,4(r2)
    76ac:	18c00204 	addi	r3,r3,8
    76b0:	d8c12315 	stw	r3,1164(sp)
    76b4:	0005883a 	mov	r2,zero
    76b8:	9d46b03a 	or	r3,r19,r21
    76bc:	d8011d85 	stb	zero,1142(sp)
    76c0:	8029883a 	mov	r20,r16
    76c4:	002d883a 	mov	r22,zero
    76c8:	003f4606 	br	73e4 <__alt_data_end+0xfffa5964>
    76cc:	94800414 	ori	r18,r18,16
    76d0:	9080080c 	andi	r2,r18,32
    76d4:	9811883a 	mov	r8,r19
    76d8:	10006226 	beq	r2,zero,7864 <___vfiprintf_internal_r+0x95c>
    76dc:	d9012317 	ldw	r4,1164(sp)
    76e0:	00800044 	movi	r2,1
    76e4:	24c00017 	ldw	r19,0(r4)
    76e8:	25400117 	ldw	r21,4(r4)
    76ec:	21000204 	addi	r4,r4,8
    76f0:	d9012315 	stw	r4,1164(sp)
    76f4:	9d46b03a 	or	r3,r19,r21
    76f8:	003ff006 	br	76bc <__alt_data_end+0xfffa5c3c>
    76fc:	b9800007 	ldb	r6,0(r23)
    7700:	00801b04 	movi	r2,108
    7704:	3082b226 	beq	r6,r2,81d0 <___vfiprintf_internal_r+0x12c8>
    7708:	94800414 	ori	r18,r18,16
    770c:	003e5f06 	br	708c <__alt_data_end+0xfffa560c>
    7710:	d8c12203 	ldbu	r3,1160(sp)
    7714:	01000074 	movhi	r4,1
    7718:	213d5b04 	addi	r4,r4,-2708
    771c:	d8c11d85 	stb	r3,1142(sp)
    7720:	d9012715 	stw	r4,1180(sp)
    7724:	90c0080c 	andi	r3,r18,32
    7728:	9811883a 	mov	r8,r19
    772c:	d8812317 	ldw	r2,1164(sp)
    7730:	18005f26 	beq	r3,zero,78b0 <___vfiprintf_internal_r+0x9a8>
    7734:	d9012317 	ldw	r4,1164(sp)
    7738:	14c00017 	ldw	r19,0(r2)
    773c:	15400117 	ldw	r21,4(r2)
    7740:	21000204 	addi	r4,r4,8
    7744:	d9012315 	stw	r4,1164(sp)
    7748:	9080004c 	andi	r2,r18,1
    774c:	1001e226 	beq	r2,zero,7ed8 <___vfiprintf_internal_r+0xfd0>
    7750:	9d46b03a 	or	r3,r19,r21
    7754:	18024e26 	beq	r3,zero,8090 <___vfiprintf_internal_r+0x1188>
    7758:	00800c04 	movi	r2,48
    775c:	d8811d05 	stb	r2,1140(sp)
    7760:	d9811d45 	stb	r6,1141(sp)
    7764:	94800094 	ori	r18,r18,2
    7768:	00800084 	movi	r2,2
    776c:	003fd306 	br	76bc <__alt_data_end+0xfffa5c3c>
    7770:	d9012317 	ldw	r4,1164(sp)
    7774:	d9412317 	ldw	r5,1164(sp)
    7778:	21000017 	ldw	r4,0(r4)
    777c:	28800104 	addi	r2,r5,4
    7780:	d9012415 	stw	r4,1168(sp)
    7784:	203eeb16 	blt	r4,zero,7334 <__alt_data_end+0xfffa58b4>
    7788:	d8812315 	stw	r2,1164(sp)
    778c:	b9800007 	ldb	r6,0(r23)
    7790:	003e3e06 	br	708c <__alt_data_end+0xfffa560c>
    7794:	b9800007 	ldb	r6,0(r23)
    7798:	01000a84 	movi	r4,42
    779c:	b8800044 	addi	r2,r23,1
    77a0:	3102d226 	beq	r6,r4,82ec <___vfiprintf_internal_r+0x13e4>
    77a4:	35bff404 	addi	r22,r6,-48
    77a8:	102f883a 	mov	r23,r2
    77ac:	0021883a 	mov	r16,zero
    77b0:	adbe3736 	bltu	r21,r22,7090 <__alt_data_end+0xfffa5610>
    77b4:	0009883a 	mov	r4,zero
    77b8:	01400284 	movi	r5,10
    77bc:	000a5c40 	call	a5c4 <__mulsi3>
    77c0:	b9800007 	ldb	r6,0(r23)
    77c4:	b089883a 	add	r4,r22,r2
    77c8:	bdc00044 	addi	r23,r23,1
    77cc:	35bff404 	addi	r22,r6,-48
    77d0:	adbff92e 	bgeu	r21,r22,77b8 <__alt_data_end+0xfffa5d38>
    77d4:	2021883a 	mov	r16,r4
    77d8:	203e2d0e 	bge	r4,zero,7090 <__alt_data_end+0xfffa5610>
    77dc:	043fffc4 	movi	r16,-1
    77e0:	003e2b06 	br	7090 <__alt_data_end+0xfffa5610>
    77e4:	94801014 	ori	r18,r18,64
    77e8:	b9800007 	ldb	r6,0(r23)
    77ec:	003e2706 	br	708c <__alt_data_end+0xfffa560c>
    77f0:	94800814 	ori	r18,r18,32
    77f4:	b9800007 	ldb	r6,0(r23)
    77f8:	003e2406 	br	708c <__alt_data_end+0xfffa560c>
    77fc:	d9412317 	ldw	r5,1164(sp)
    7800:	d8812317 	ldw	r2,1164(sp)
    7804:	d8011d85 	stb	zero,1142(sp)
    7808:	29400017 	ldw	r5,0(r5)
    780c:	9811883a 	mov	r8,r19
    7810:	14c00104 	addi	r19,r2,4
    7814:	d9412215 	stw	r5,1160(sp)
    7818:	28029026 	beq	r5,zero,825c <___vfiprintf_internal_r+0x1354>
    781c:	d9012217 	ldw	r4,1160(sp)
    7820:	80027616 	blt	r16,zero,81fc <___vfiprintf_internal_r+0x12f4>
    7824:	000b883a 	mov	r5,zero
    7828:	800d883a 	mov	r6,r16
    782c:	da012a15 	stw	r8,1192(sp)
    7830:	000577c0 	call	577c <memchr>
    7834:	da012a17 	ldw	r8,1192(sp)
    7838:	1002a026 	beq	r2,zero,82bc <___vfiprintf_internal_r+0x13b4>
    783c:	d8c12217 	ldw	r3,1160(sp)
    7840:	10e9c83a 	sub	r20,r2,r3
    7844:	85023816 	blt	r16,r20,8128 <___vfiprintf_internal_r+0x1220>
    7848:	dd811d83 	ldbu	r22,1142(sp)
    784c:	dcc12315 	stw	r19,1164(sp)
    7850:	0021883a 	mov	r16,zero
    7854:	003efd06 	br	744c <__alt_data_end+0xfffa59cc>
    7858:	9080080c 	andi	r2,r18,32
    785c:	9811883a 	mov	r8,r19
    7860:	103f9e1e 	bne	r2,zero,76dc <__alt_data_end+0xfffa5c5c>
    7864:	9080040c 	andi	r2,r18,16
    7868:	10021726 	beq	r2,zero,80c8 <___vfiprintf_internal_r+0x11c0>
    786c:	d9412317 	ldw	r5,1164(sp)
    7870:	002b883a 	mov	r21,zero
    7874:	00800044 	movi	r2,1
    7878:	2cc00017 	ldw	r19,0(r5)
    787c:	29400104 	addi	r5,r5,4
    7880:	d9412315 	stw	r5,1164(sp)
    7884:	9807883a 	mov	r3,r19
    7888:	003f8c06 	br	76bc <__alt_data_end+0xfffa5c3c>
    788c:	d8c12203 	ldbu	r3,1160(sp)
    7890:	01000074 	movhi	r4,1
    7894:	213d6004 	addi	r4,r4,-2688
    7898:	d8c11d85 	stb	r3,1142(sp)
    789c:	d9012715 	stw	r4,1180(sp)
    78a0:	90c0080c 	andi	r3,r18,32
    78a4:	9811883a 	mov	r8,r19
    78a8:	d8812317 	ldw	r2,1164(sp)
    78ac:	183fa11e 	bne	r3,zero,7734 <__alt_data_end+0xfffa5cb4>
    78b0:	90c0040c 	andi	r3,r18,16
    78b4:	1801e526 	beq	r3,zero,804c <___vfiprintf_internal_r+0x1144>
    78b8:	d9412317 	ldw	r5,1164(sp)
    78bc:	14c00017 	ldw	r19,0(r2)
    78c0:	002b883a 	mov	r21,zero
    78c4:	29400104 	addi	r5,r5,4
    78c8:	d9412315 	stw	r5,1164(sp)
    78cc:	003f9e06 	br	7748 <__alt_data_end+0xfffa5cc8>
    78d0:	9080080c 	andi	r2,r18,32
    78d4:	9811883a 	mov	r8,r19
    78d8:	103f701e 	bne	r2,zero,769c <__alt_data_end+0xfffa5c1c>
    78dc:	9080040c 	andi	r2,r18,16
    78e0:	1001ef26 	beq	r2,zero,80a0 <___vfiprintf_internal_r+0x1198>
    78e4:	d9012317 	ldw	r4,1164(sp)
    78e8:	002b883a 	mov	r21,zero
    78ec:	0005883a 	mov	r2,zero
    78f0:	24c00017 	ldw	r19,0(r4)
    78f4:	21000104 	addi	r4,r4,4
    78f8:	d9012315 	stw	r4,1164(sp)
    78fc:	9807883a 	mov	r3,r19
    7900:	003f6e06 	br	76bc <__alt_data_end+0xfffa5c3c>
    7904:	d8c12317 	ldw	r3,1164(sp)
    7908:	9811883a 	mov	r8,r19
    790c:	00800c04 	movi	r2,48
    7910:	1cc00017 	ldw	r19,0(r3)
    7914:	01000074 	movhi	r4,1
    7918:	18c00104 	addi	r3,r3,4
    791c:	d8811d05 	stb	r2,1140(sp)
    7920:	213d6004 	addi	r4,r4,-2688
    7924:	00801e04 	movi	r2,120
    7928:	d8811d45 	stb	r2,1141(sp)
    792c:	d8c12315 	stw	r3,1164(sp)
    7930:	002b883a 	mov	r21,zero
    7934:	94800094 	ori	r18,r18,2
    7938:	d9012715 	stw	r4,1180(sp)
    793c:	00800084 	movi	r2,2
    7940:	9807883a 	mov	r3,r19
    7944:	003f5d06 	br	76bc <__alt_data_end+0xfffa5c3c>
    7948:	d8c12203 	ldbu	r3,1160(sp)
    794c:	9080080c 	andi	r2,r18,32
    7950:	9811883a 	mov	r8,r19
    7954:	d8c11d85 	stb	r3,1142(sp)
    7958:	1001b126 	beq	r2,zero,8020 <___vfiprintf_internal_r+0x1118>
    795c:	d9012317 	ldw	r4,1164(sp)
    7960:	d9412517 	ldw	r5,1172(sp)
    7964:	20800017 	ldw	r2,0(r4)
    7968:	2807d7fa 	srai	r3,r5,31
    796c:	21000104 	addi	r4,r4,4
    7970:	d9012315 	stw	r4,1164(sp)
    7974:	11400015 	stw	r5,0(r2)
    7978:	10c00115 	stw	r3,4(r2)
    797c:	003d9a06 	br	6fe8 <__alt_data_end+0xfffa5568>
    7980:	d8812207 	ldb	r2,1160(sp)
    7984:	1001c41e 	bne	r2,zero,8098 <___vfiprintf_internal_r+0x1190>
    7988:	00c00804 	movi	r3,32
    798c:	d8c12205 	stb	r3,1160(sp)
    7990:	b9800007 	ldb	r6,0(r23)
    7994:	003dbd06 	br	708c <__alt_data_end+0xfffa560c>
    7998:	00c00ac4 	movi	r3,43
    799c:	d8c12205 	stb	r3,1160(sp)
    79a0:	b9800007 	ldb	r6,0(r23)
    79a4:	003db906 	br	708c <__alt_data_end+0xfffa560c>
    79a8:	d8c12203 	ldbu	r3,1160(sp)
    79ac:	9080080c 	andi	r2,r18,32
    79b0:	9811883a 	mov	r8,r19
    79b4:	d8c11d85 	stb	r3,1142(sp)
    79b8:	d8c12317 	ldw	r3,1164(sp)
    79bc:	103e7e1e 	bne	r2,zero,73b8 <__alt_data_end+0xfffa5938>
    79c0:	9080040c 	andi	r2,r18,16
    79c4:	1001a926 	beq	r2,zero,806c <___vfiprintf_internal_r+0x1164>
    79c8:	1cc00017 	ldw	r19,0(r3)
    79cc:	d9412317 	ldw	r5,1164(sp)
    79d0:	982bd7fa 	srai	r21,r19,31
    79d4:	29400104 	addi	r5,r5,4
    79d8:	d9412315 	stw	r5,1164(sp)
    79dc:	a805883a 	mov	r2,r21
    79e0:	003e7b06 	br	73d0 <__alt_data_end+0xfffa5950>
    79e4:	94800054 	ori	r18,r18,1
    79e8:	b9800007 	ldb	r6,0(r23)
    79ec:	003da706 	br	708c <__alt_data_end+0xfffa560c>
    79f0:	d8c12203 	ldbu	r3,1160(sp)
    79f4:	9811883a 	mov	r8,r19
    79f8:	d8c11d85 	stb	r3,1142(sp)
    79fc:	30005826 	beq	r6,zero,7b60 <___vfiprintf_internal_r+0xc58>
    7a00:	05400044 	movi	r21,1
    7a04:	d8c10004 	addi	r3,sp,1024
    7a08:	d9810005 	stb	r6,1024(sp)
    7a0c:	d8011d85 	stb	zero,1142(sp)
    7a10:	a829883a 	mov	r20,r21
    7a14:	d8c12215 	stw	r3,1160(sp)
    7a18:	003f1a06 	br	7684 <__alt_data_end+0xfffa5c04>
    7a1c:	d9012117 	ldw	r4,1156(sp)
    7a20:	d9412017 	ldw	r5,1152(sp)
    7a24:	d9811a04 	addi	r6,sp,1128
    7a28:	d9c12a15 	stw	r7,1192(sp)
    7a2c:	db012b15 	stw	r12,1196(sp)
    7a30:	0006df40 	call	6df4 <__sprint_r.part.0>
    7a34:	d9c12a17 	ldw	r7,1192(sp)
    7a38:	db012b17 	ldw	r12,1196(sp)
    7a3c:	10004e1e 	bne	r2,zero,7b78 <___vfiprintf_internal_r+0xc70>
    7a40:	d9011b17 	ldw	r4,1132(sp)
    7a44:	d8c11c17 	ldw	r3,1136(sp)
    7a48:	d811883a 	mov	r8,sp
    7a4c:	21400044 	addi	r5,r4,1
    7a50:	003e9d06 	br	74c8 <__alt_data_end+0xfffa5a48>
    7a54:	d9411b17 	ldw	r5,1132(sp)
    7a58:	d8c11c17 	ldw	r3,1136(sp)
    7a5c:	28800044 	addi	r2,r5,1
    7a60:	d9011d87 	ldb	r4,1142(sp)
    7a64:	203eb626 	beq	r4,zero,7540 <__alt_data_end+0xfffa5ac0>
    7a68:	01000044 	movi	r4,1
    7a6c:	d9411d84 	addi	r5,sp,1142
    7a70:	1907883a 	add	r3,r3,r4
    7a74:	41400015 	stw	r5,0(r8)
    7a78:	41000115 	stw	r4,4(r8)
    7a7c:	d8c11c15 	stw	r3,1136(sp)
    7a80:	d8811b15 	stw	r2,1132(sp)
    7a84:	014001c4 	movi	r5,7
    7a88:	2880ce16 	blt	r5,r2,7dc4 <___vfiprintf_internal_r+0xebc>
    7a8c:	100b883a 	mov	r5,r2
    7a90:	42000204 	addi	r8,r8,8
    7a94:	10800044 	addi	r2,r2,1
    7a98:	003ea906 	br	7540 <__alt_data_end+0xfffa5ac0>
    7a9c:	d9012117 	ldw	r4,1156(sp)
    7aa0:	d9412017 	ldw	r5,1152(sp)
    7aa4:	d9811a04 	addi	r6,sp,1128
    7aa8:	0006df40 	call	6df4 <__sprint_r.part.0>
    7aac:	1000321e 	bne	r2,zero,7b78 <___vfiprintf_internal_r+0xc70>
    7ab0:	d9411b17 	ldw	r5,1132(sp)
    7ab4:	d8c11c17 	ldw	r3,1136(sp)
    7ab8:	d811883a 	mov	r8,sp
    7abc:	28800044 	addi	r2,r5,1
    7ac0:	003eba06 	br	75ac <__alt_data_end+0xfffa5b2c>
    7ac4:	10803fcc 	andi	r2,r2,255
    7ac8:	00c00044 	movi	r3,1
    7acc:	10fe4d1e 	bne	r2,r3,7404 <__alt_data_end+0xfffa5984>
    7ad0:	a800021e 	bne	r21,zero,7adc <___vfiprintf_internal_r+0xbd4>
    7ad4:	00800244 	movi	r2,9
    7ad8:	14c01b2e 	bgeu	r2,r19,7b48 <___vfiprintf_internal_r+0xc40>
    7adc:	dc012215 	stw	r16,1160(sp)
    7ae0:	dd010a04 	addi	r20,sp,1064
    7ae4:	a821883a 	mov	r16,r21
    7ae8:	402b883a 	mov	r21,r8
    7aec:	9809883a 	mov	r4,r19
    7af0:	800b883a 	mov	r5,r16
    7af4:	01800284 	movi	r6,10
    7af8:	000f883a 	mov	r7,zero
    7afc:	0009e7c0 	call	9e7c <__umoddi3>
    7b00:	10800c04 	addi	r2,r2,48
    7b04:	a53fffc4 	addi	r20,r20,-1
    7b08:	9809883a 	mov	r4,r19
    7b0c:	800b883a 	mov	r5,r16
    7b10:	01800284 	movi	r6,10
    7b14:	000f883a 	mov	r7,zero
    7b18:	a0800005 	stb	r2,0(r20)
    7b1c:	000983c0 	call	983c <__udivdi3>
    7b20:	1027883a 	mov	r19,r2
    7b24:	10c4b03a 	or	r2,r2,r3
    7b28:	1821883a 	mov	r16,r3
    7b2c:	103fef1e 	bne	r2,zero,7aec <__alt_data_end+0xfffa606c>
    7b30:	d9011e17 	ldw	r4,1144(sp)
    7b34:	dc012217 	ldw	r16,1160(sp)
    7b38:	a811883a 	mov	r8,r21
    7b3c:	dd012215 	stw	r20,1160(sp)
    7b40:	2529c83a 	sub	r20,r4,r20
    7b44:	003e4106 	br	744c <__alt_data_end+0xfffa59cc>
    7b48:	9cc00c04 	addi	r19,r19,48
    7b4c:	d8c109c4 	addi	r3,sp,1063
    7b50:	dcc109c5 	stb	r19,1063(sp)
    7b54:	dd012817 	ldw	r20,1184(sp)
    7b58:	d8c12215 	stw	r3,1160(sp)
    7b5c:	003e3b06 	br	744c <__alt_data_end+0xfffa59cc>
    7b60:	d8811c17 	ldw	r2,1136(sp)
    7b64:	10000426 	beq	r2,zero,7b78 <___vfiprintf_internal_r+0xc70>
    7b68:	d9012117 	ldw	r4,1156(sp)
    7b6c:	d9412017 	ldw	r5,1152(sp)
    7b70:	d9811a04 	addi	r6,sp,1128
    7b74:	0006df40 	call	6df4 <__sprint_r.part.0>
    7b78:	d9412017 	ldw	r5,1152(sp)
    7b7c:	2880030b 	ldhu	r2,12(r5)
    7b80:	1080100c 	andi	r2,r2,64
    7b84:	103ddc1e 	bne	r2,zero,72f8 <__alt_data_end+0xfffa5878>
    7b88:	d8812517 	ldw	r2,1172(sp)
    7b8c:	003ddb06 	br	72fc <__alt_data_end+0xfffa587c>
    7b90:	1801061e 	bne	r3,zero,7fac <___vfiprintf_internal_r+0x10a4>
    7b94:	d8c12217 	ldw	r3,1160(sp)
    7b98:	00800044 	movi	r2,1
    7b9c:	dd000115 	stw	r20,4(sp)
    7ba0:	d8c00015 	stw	r3,0(sp)
    7ba4:	dd011c15 	stw	r20,1136(sp)
    7ba8:	d8811b15 	stw	r2,1132(sp)
    7bac:	a007883a 	mov	r3,r20
    7bb0:	d811883a 	mov	r8,sp
    7bb4:	42000204 	addi	r8,r8,8
    7bb8:	9480010c 	andi	r18,r18,4
    7bbc:	90003426 	beq	r18,zero,7c90 <___vfiprintf_internal_r+0xd88>
    7bc0:	d9412417 	ldw	r5,1168(sp)
    7bc4:	2d65c83a 	sub	r18,r5,r21
    7bc8:	0480310e 	bge	zero,r18,7c90 <___vfiprintf_internal_r+0xd88>
    7bcc:	04000404 	movi	r16,16
    7bd0:	8481ad0e 	bge	r16,r18,8288 <___vfiprintf_internal_r+0x1380>
    7bd4:	01400074 	movhi	r5,1
    7bd8:	297dc504 	addi	r5,r5,-2284
    7bdc:	d9011b17 	ldw	r4,1132(sp)
    7be0:	d9412615 	stw	r5,1176(sp)
    7be4:	04c001c4 	movi	r19,7
    7be8:	dd012117 	ldw	r20,1156(sp)
    7bec:	dd812017 	ldw	r22,1152(sp)
    7bf0:	00000506 	br	7c08 <___vfiprintf_internal_r+0xd00>
    7bf4:	21400084 	addi	r5,r4,2
    7bf8:	42000204 	addi	r8,r8,8
    7bfc:	1009883a 	mov	r4,r2
    7c00:	94bffc04 	addi	r18,r18,-16
    7c04:	84800d0e 	bge	r16,r18,7c3c <___vfiprintf_internal_r+0xd34>
    7c08:	18c00404 	addi	r3,r3,16
    7c0c:	20800044 	addi	r2,r4,1
    7c10:	47000015 	stw	fp,0(r8)
    7c14:	44000115 	stw	r16,4(r8)
    7c18:	d8c11c15 	stw	r3,1136(sp)
    7c1c:	d8811b15 	stw	r2,1132(sp)
    7c20:	98bff40e 	bge	r19,r2,7bf4 <__alt_data_end+0xfffa6174>
    7c24:	1800291e 	bne	r3,zero,7ccc <___vfiprintf_internal_r+0xdc4>
    7c28:	94bffc04 	addi	r18,r18,-16
    7c2c:	0009883a 	mov	r4,zero
    7c30:	01400044 	movi	r5,1
    7c34:	d811883a 	mov	r8,sp
    7c38:	84bff316 	blt	r16,r18,7c08 <__alt_data_end+0xfffa6188>
    7c3c:	d8812617 	ldw	r2,1176(sp)
    7c40:	1c87883a 	add	r3,r3,r18
    7c44:	44800115 	stw	r18,4(r8)
    7c48:	40800015 	stw	r2,0(r8)
    7c4c:	d8c11c15 	stw	r3,1136(sp)
    7c50:	d9411b15 	stw	r5,1132(sp)
    7c54:	008001c4 	movi	r2,7
    7c58:	11400d0e 	bge	r2,r5,7c90 <___vfiprintf_internal_r+0xd88>
    7c5c:	1800061e 	bne	r3,zero,7c78 <___vfiprintf_internal_r+0xd70>
    7c60:	d8c12417 	ldw	r3,1168(sp)
    7c64:	a8c12e16 	blt	r21,r3,8120 <___vfiprintf_internal_r+0x1218>
    7c68:	d9012517 	ldw	r4,1172(sp)
    7c6c:	2549883a 	add	r4,r4,r21
    7c70:	d9012515 	stw	r4,1172(sp)
    7c74:	00001206 	br	7cc0 <___vfiprintf_internal_r+0xdb8>
    7c78:	d9012117 	ldw	r4,1156(sp)
    7c7c:	d9412017 	ldw	r5,1152(sp)
    7c80:	d9811a04 	addi	r6,sp,1128
    7c84:	0006df40 	call	6df4 <__sprint_r.part.0>
    7c88:	103fbb1e 	bne	r2,zero,7b78 <__alt_data_end+0xfffa60f8>
    7c8c:	d8c11c17 	ldw	r3,1136(sp)
    7c90:	d8812417 	ldw	r2,1168(sp)
    7c94:	a880010e 	bge	r21,r2,7c9c <___vfiprintf_internal_r+0xd94>
    7c98:	102b883a 	mov	r21,r2
    7c9c:	d9012517 	ldw	r4,1172(sp)
    7ca0:	2549883a 	add	r4,r4,r21
    7ca4:	d9012515 	stw	r4,1172(sp)
    7ca8:	18000526 	beq	r3,zero,7cc0 <___vfiprintf_internal_r+0xdb8>
    7cac:	d9012117 	ldw	r4,1156(sp)
    7cb0:	d9412017 	ldw	r5,1152(sp)
    7cb4:	d9811a04 	addi	r6,sp,1128
    7cb8:	0006df40 	call	6df4 <__sprint_r.part.0>
    7cbc:	103fae1e 	bne	r2,zero,7b78 <__alt_data_end+0xfffa60f8>
    7cc0:	d8011b15 	stw	zero,1132(sp)
    7cc4:	d811883a 	mov	r8,sp
    7cc8:	003cc706 	br	6fe8 <__alt_data_end+0xfffa5568>
    7ccc:	a009883a 	mov	r4,r20
    7cd0:	b00b883a 	mov	r5,r22
    7cd4:	d9811a04 	addi	r6,sp,1128
    7cd8:	0006df40 	call	6df4 <__sprint_r.part.0>
    7cdc:	103fa61e 	bne	r2,zero,7b78 <__alt_data_end+0xfffa60f8>
    7ce0:	d9011b17 	ldw	r4,1132(sp)
    7ce4:	d8c11c17 	ldw	r3,1136(sp)
    7ce8:	d811883a 	mov	r8,sp
    7cec:	21400044 	addi	r5,r4,1
    7cf0:	003fc306 	br	7c00 <__alt_data_end+0xfffa6180>
    7cf4:	d9012417 	ldw	r4,1168(sp)
    7cf8:	256dc83a 	sub	r22,r4,r21
    7cfc:	05be1f0e 	bge	zero,r22,757c <__alt_data_end+0xfffa5afc>
    7d00:	04c00404 	movi	r19,16
    7d04:	9d81720e 	bge	r19,r22,82d0 <___vfiprintf_internal_r+0x13c8>
    7d08:	00800074 	movhi	r2,1
    7d0c:	10bdc104 	addi	r2,r2,-2300
    7d10:	d8812615 	stw	r2,1176(sp)
    7d14:	028001c4 	movi	r10,7
    7d18:	00000506 	br	7d30 <___vfiprintf_internal_r+0xe28>
    7d1c:	29000084 	addi	r4,r5,2
    7d20:	42000204 	addi	r8,r8,8
    7d24:	100b883a 	mov	r5,r2
    7d28:	b5bffc04 	addi	r22,r22,-16
    7d2c:	9d800d0e 	bge	r19,r22,7d64 <___vfiprintf_internal_r+0xe5c>
    7d30:	18c00404 	addi	r3,r3,16
    7d34:	28800044 	addi	r2,r5,1
    7d38:	44400015 	stw	r17,0(r8)
    7d3c:	44c00115 	stw	r19,4(r8)
    7d40:	d8c11c15 	stw	r3,1136(sp)
    7d44:	d8811b15 	stw	r2,1132(sp)
    7d48:	50bff40e 	bge	r10,r2,7d1c <__alt_data_end+0xfffa629c>
    7d4c:	1800111e 	bne	r3,zero,7d94 <___vfiprintf_internal_r+0xe8c>
    7d50:	b5bffc04 	addi	r22,r22,-16
    7d54:	000b883a 	mov	r5,zero
    7d58:	01000044 	movi	r4,1
    7d5c:	d811883a 	mov	r8,sp
    7d60:	9dbff316 	blt	r19,r22,7d30 <__alt_data_end+0xfffa62b0>
    7d64:	d9412617 	ldw	r5,1176(sp)
    7d68:	1d87883a 	add	r3,r3,r22
    7d6c:	45800115 	stw	r22,4(r8)
    7d70:	41400015 	stw	r5,0(r8)
    7d74:	d8c11c15 	stw	r3,1136(sp)
    7d78:	d9011b15 	stw	r4,1132(sp)
    7d7c:	008001c4 	movi	r2,7
    7d80:	11008516 	blt	r2,r4,7f98 <___vfiprintf_internal_r+0x1090>
    7d84:	42000204 	addi	r8,r8,8
    7d88:	20800044 	addi	r2,r4,1
    7d8c:	200b883a 	mov	r5,r4
    7d90:	003dfa06 	br	757c <__alt_data_end+0xfffa5afc>
    7d94:	d9012117 	ldw	r4,1156(sp)
    7d98:	d9412017 	ldw	r5,1152(sp)
    7d9c:	d9811a04 	addi	r6,sp,1128
    7da0:	da812a15 	stw	r10,1192(sp)
    7da4:	0006df40 	call	6df4 <__sprint_r.part.0>
    7da8:	da812a17 	ldw	r10,1192(sp)
    7dac:	103f721e 	bne	r2,zero,7b78 <__alt_data_end+0xfffa60f8>
    7db0:	d9411b17 	ldw	r5,1132(sp)
    7db4:	d8c11c17 	ldw	r3,1136(sp)
    7db8:	d811883a 	mov	r8,sp
    7dbc:	29000044 	addi	r4,r5,1
    7dc0:	003fd906 	br	7d28 <__alt_data_end+0xfffa62a8>
    7dc4:	1800681e 	bne	r3,zero,7f68 <___vfiprintf_internal_r+0x1060>
    7dc8:	50004d26 	beq	r10,zero,7f00 <___vfiprintf_internal_r+0xff8>
    7dcc:	d8811d04 	addi	r2,sp,1140
    7dd0:	00c00084 	movi	r3,2
    7dd4:	d8800015 	stw	r2,0(sp)
    7dd8:	d8c00115 	stw	r3,4(sp)
    7ddc:	2005883a 	mov	r2,r4
    7de0:	d811883a 	mov	r8,sp
    7de4:	003de006 	br	7568 <__alt_data_end+0xfffa5ae8>
    7de8:	1800551e 	bne	r3,zero,7f40 <___vfiprintf_internal_r+0x1038>
    7dec:	000b883a 	mov	r5,zero
    7df0:	00800044 	movi	r2,1
    7df4:	d811883a 	mov	r8,sp
    7df8:	003dde06 	br	7574 <__alt_data_end+0xfffa5af4>
    7dfc:	10803fcc 	andi	r2,r2,255
    7e00:	1000191e 	bne	r2,zero,7e68 <___vfiprintf_internal_r+0xf60>
    7e04:	9080004c 	andi	r2,r18,1
    7e08:	10001726 	beq	r2,zero,7e68 <___vfiprintf_internal_r+0xf60>
    7e0c:	00800c04 	movi	r2,48
    7e10:	d8c109c4 	addi	r3,sp,1063
    7e14:	d88109c5 	stb	r2,1063(sp)
    7e18:	dd012817 	ldw	r20,1184(sp)
    7e1c:	d8c12215 	stw	r3,1160(sp)
    7e20:	003d8a06 	br	744c <__alt_data_end+0xfffa59cc>
    7e24:	d9012717 	ldw	r4,1180(sp)
    7e28:	dd010a04 	addi	r20,sp,1064
    7e2c:	988003cc 	andi	r2,r19,15
    7e30:	a806973a 	slli	r3,r21,28
    7e34:	2085883a 	add	r2,r4,r2
    7e38:	9826d13a 	srli	r19,r19,4
    7e3c:	10800003 	ldbu	r2,0(r2)
    7e40:	a82ad13a 	srli	r21,r21,4
    7e44:	a53fffc4 	addi	r20,r20,-1
    7e48:	1ce6b03a 	or	r19,r3,r19
    7e4c:	a0800005 	stb	r2,0(r20)
    7e50:	9d44b03a 	or	r2,r19,r21
    7e54:	103ff51e 	bne	r2,zero,7e2c <__alt_data_end+0xfffa63ac>
    7e58:	d9411e17 	ldw	r5,1144(sp)
    7e5c:	dd012215 	stw	r20,1160(sp)
    7e60:	2d29c83a 	sub	r20,r5,r20
    7e64:	003d7906 	br	744c <__alt_data_end+0xfffa59cc>
    7e68:	d8c10a04 	addi	r3,sp,1064
    7e6c:	d8c12215 	stw	r3,1160(sp)
    7e70:	003d7606 	br	744c <__alt_data_end+0xfffa59cc>
    7e74:	18009e1e 	bne	r3,zero,80f0 <___vfiprintf_internal_r+0x11e8>
    7e78:	d8811d87 	ldb	r2,1142(sp)
    7e7c:	10005f26 	beq	r2,zero,7ffc <___vfiprintf_internal_r+0x10f4>
    7e80:	00c00044 	movi	r3,1
    7e84:	d9011d84 	addi	r4,sp,1142
    7e88:	1805883a 	mov	r2,r3
    7e8c:	d9000015 	stw	r4,0(sp)
    7e90:	d8c00115 	stw	r3,4(sp)
    7e94:	d811883a 	mov	r8,sp
    7e98:	003efc06 	br	7a8c <__alt_data_end+0xfffa600c>
    7e9c:	d9412417 	ldw	r5,1168(sp)
    7ea0:	d811883a 	mov	r8,sp
    7ea4:	2d65c83a 	sub	r18,r5,r21
    7ea8:	04bf4816 	blt	zero,r18,7bcc <__alt_data_end+0xfffa614c>
    7eac:	003f6c06 	br	7c60 <__alt_data_end+0xfffa61e0>
    7eb0:	b829883a 	mov	r20,r23
    7eb4:	003c6906 	br	705c <__alt_data_end+0xfffa55dc>
    7eb8:	d9012117 	ldw	r4,1156(sp)
    7ebc:	d9412017 	ldw	r5,1152(sp)
    7ec0:	d9811a04 	addi	r6,sp,1128
    7ec4:	0006df40 	call	6df4 <__sprint_r.part.0>
    7ec8:	103f2b1e 	bne	r2,zero,7b78 <__alt_data_end+0xfffa60f8>
    7ecc:	d8c11c17 	ldw	r3,1136(sp)
    7ed0:	d811883a 	mov	r8,sp
    7ed4:	003f3806 	br	7bb8 <__alt_data_end+0xfffa6138>
    7ed8:	00800084 	movi	r2,2
    7edc:	9d46b03a 	or	r3,r19,r21
    7ee0:	003df606 	br	76bc <__alt_data_end+0xfffa5c3c>
    7ee4:	d9012117 	ldw	r4,1156(sp)
    7ee8:	d9412017 	ldw	r5,1152(sp)
    7eec:	d9811a04 	addi	r6,sp,1128
    7ef0:	0006df40 	call	6df4 <__sprint_r.part.0>
    7ef4:	103f201e 	bne	r2,zero,7b78 <__alt_data_end+0xfffa60f8>
    7ef8:	d811883a 	mov	r8,sp
    7efc:	003cc606 	br	7218 <__alt_data_end+0xfffa5798>
    7f00:	000b883a 	mov	r5,zero
    7f04:	2005883a 	mov	r2,r4
    7f08:	d811883a 	mov	r8,sp
    7f0c:	003d9906 	br	7574 <__alt_data_end+0xfffa5af4>
    7f10:	10803fcc 	andi	r2,r2,255
    7f14:	1080201c 	xori	r2,r2,128
    7f18:	10bfe004 	addi	r2,r2,-128
    7f1c:	01000c04 	movi	r4,48
    7f20:	1100b226 	beq	r2,r4,81ec <___vfiprintf_internal_r+0x12e4>
    7f24:	d9412217 	ldw	r5,1160(sp)
    7f28:	d8811e17 	ldw	r2,1144(sp)
    7f2c:	193fffc5 	stb	r4,-1(r3)
    7f30:	297fffc4 	addi	r5,r5,-1
    7f34:	d9412215 	stw	r5,1160(sp)
    7f38:	1169c83a 	sub	r20,r2,r5
    7f3c:	003d4306 	br	744c <__alt_data_end+0xfffa59cc>
    7f40:	d9012117 	ldw	r4,1156(sp)
    7f44:	d9412017 	ldw	r5,1152(sp)
    7f48:	d9811a04 	addi	r6,sp,1128
    7f4c:	0006df40 	call	6df4 <__sprint_r.part.0>
    7f50:	103f091e 	bne	r2,zero,7b78 <__alt_data_end+0xfffa60f8>
    7f54:	d9411b17 	ldw	r5,1132(sp)
    7f58:	d8c11c17 	ldw	r3,1136(sp)
    7f5c:	d811883a 	mov	r8,sp
    7f60:	28800044 	addi	r2,r5,1
    7f64:	003d8306 	br	7574 <__alt_data_end+0xfffa5af4>
    7f68:	d9012117 	ldw	r4,1156(sp)
    7f6c:	d9412017 	ldw	r5,1152(sp)
    7f70:	d9811a04 	addi	r6,sp,1128
    7f74:	da812a15 	stw	r10,1192(sp)
    7f78:	0006df40 	call	6df4 <__sprint_r.part.0>
    7f7c:	da812a17 	ldw	r10,1192(sp)
    7f80:	103efd1e 	bne	r2,zero,7b78 <__alt_data_end+0xfffa60f8>
    7f84:	d9411b17 	ldw	r5,1132(sp)
    7f88:	d8c11c17 	ldw	r3,1136(sp)
    7f8c:	d811883a 	mov	r8,sp
    7f90:	28800044 	addi	r2,r5,1
    7f94:	003d6a06 	br	7540 <__alt_data_end+0xfffa5ac0>
    7f98:	1800a01e 	bne	r3,zero,821c <___vfiprintf_internal_r+0x1314>
    7f9c:	000b883a 	mov	r5,zero
    7fa0:	00800044 	movi	r2,1
    7fa4:	d811883a 	mov	r8,sp
    7fa8:	003d7406 	br	757c <__alt_data_end+0xfffa5afc>
    7fac:	d9012117 	ldw	r4,1156(sp)
    7fb0:	d9412017 	ldw	r5,1152(sp)
    7fb4:	d9811a04 	addi	r6,sp,1128
    7fb8:	0006df40 	call	6df4 <__sprint_r.part.0>
    7fbc:	103eee1e 	bne	r2,zero,7b78 <__alt_data_end+0xfffa60f8>
    7fc0:	d8811b17 	ldw	r2,1132(sp)
    7fc4:	d8c11c17 	ldw	r3,1136(sp)
    7fc8:	d811883a 	mov	r8,sp
    7fcc:	10800044 	addi	r2,r2,1
    7fd0:	003d8f06 	br	7610 <__alt_data_end+0xfffa5b90>
    7fd4:	04e7c83a 	sub	r19,zero,r19
    7fd8:	9804c03a 	cmpne	r2,r19,zero
    7fdc:	056bc83a 	sub	r21,zero,r21
    7fe0:	a8abc83a 	sub	r21,r21,r2
    7fe4:	05800b44 	movi	r22,45
    7fe8:	dd811d85 	stb	r22,1142(sp)
    7fec:	8029883a 	mov	r20,r16
    7ff0:	00800044 	movi	r2,1
    7ff4:	9d46b03a 	or	r3,r19,r21
    7ff8:	003cfa06 	br	73e4 <__alt_data_end+0xfffa5964>
    7ffc:	000b883a 	mov	r5,zero
    8000:	00800044 	movi	r2,1
    8004:	d811883a 	mov	r8,sp
    8008:	503d5a26 	beq	r10,zero,7574 <__alt_data_end+0xfffa5af4>
    800c:	00c00084 	movi	r3,2
    8010:	d9011d04 	addi	r4,sp,1140
    8014:	d9000015 	stw	r4,0(sp)
    8018:	d8c00115 	stw	r3,4(sp)
    801c:	003d5206 	br	7568 <__alt_data_end+0xfffa5ae8>
    8020:	9080040c 	andi	r2,r18,16
    8024:	1000421e 	bne	r2,zero,8130 <___vfiprintf_internal_r+0x1228>
    8028:	9480100c 	andi	r18,r18,64
    802c:	90009c26 	beq	r18,zero,82a0 <___vfiprintf_internal_r+0x1398>
    8030:	d9412317 	ldw	r5,1164(sp)
    8034:	d8c12517 	ldw	r3,1172(sp)
    8038:	28800017 	ldw	r2,0(r5)
    803c:	29400104 	addi	r5,r5,4
    8040:	d9412315 	stw	r5,1164(sp)
    8044:	10c0000d 	sth	r3,0(r2)
    8048:	003be706 	br	6fe8 <__alt_data_end+0xfffa5568>
    804c:	90c0100c 	andi	r3,r18,64
    8050:	18003e26 	beq	r3,zero,814c <___vfiprintf_internal_r+0x1244>
    8054:	d8c12317 	ldw	r3,1164(sp)
    8058:	14c0000b 	ldhu	r19,0(r2)
    805c:	002b883a 	mov	r21,zero
    8060:	18c00104 	addi	r3,r3,4
    8064:	d8c12315 	stw	r3,1164(sp)
    8068:	003db706 	br	7748 <__alt_data_end+0xfffa5cc8>
    806c:	9080100c 	andi	r2,r18,64
    8070:	10004c26 	beq	r2,zero,81a4 <___vfiprintf_internal_r+0x129c>
    8074:	1cc0000f 	ldh	r19,0(r3)
    8078:	d8812317 	ldw	r2,1164(sp)
    807c:	982bd7fa 	srai	r21,r19,31
    8080:	10800104 	addi	r2,r2,4
    8084:	d8812315 	stw	r2,1164(sp)
    8088:	a805883a 	mov	r2,r21
    808c:	003cd006 	br	73d0 <__alt_data_end+0xfffa5950>
    8090:	00800084 	movi	r2,2
    8094:	003d8906 	br	76bc <__alt_data_end+0xfffa5c3c>
    8098:	b9800007 	ldb	r6,0(r23)
    809c:	003bfb06 	br	708c <__alt_data_end+0xfffa560c>
    80a0:	9080100c 	andi	r2,r18,64
    80a4:	10003726 	beq	r2,zero,8184 <___vfiprintf_internal_r+0x127c>
    80a8:	d9412317 	ldw	r5,1164(sp)
    80ac:	002b883a 	mov	r21,zero
    80b0:	0005883a 	mov	r2,zero
    80b4:	2cc0000b 	ldhu	r19,0(r5)
    80b8:	29400104 	addi	r5,r5,4
    80bc:	d9412315 	stw	r5,1164(sp)
    80c0:	9807883a 	mov	r3,r19
    80c4:	003d7d06 	br	76bc <__alt_data_end+0xfffa5c3c>
    80c8:	9080100c 	andi	r2,r18,64
    80cc:	10002526 	beq	r2,zero,8164 <___vfiprintf_internal_r+0x125c>
    80d0:	d8812317 	ldw	r2,1164(sp)
    80d4:	002b883a 	mov	r21,zero
    80d8:	14c0000b 	ldhu	r19,0(r2)
    80dc:	10800104 	addi	r2,r2,4
    80e0:	d8812315 	stw	r2,1164(sp)
    80e4:	9807883a 	mov	r3,r19
    80e8:	00800044 	movi	r2,1
    80ec:	003d7306 	br	76bc <__alt_data_end+0xfffa5c3c>
    80f0:	d9012117 	ldw	r4,1156(sp)
    80f4:	d9412017 	ldw	r5,1152(sp)
    80f8:	d9811a04 	addi	r6,sp,1128
    80fc:	da812a15 	stw	r10,1192(sp)
    8100:	0006df40 	call	6df4 <__sprint_r.part.0>
    8104:	da812a17 	ldw	r10,1192(sp)
    8108:	103e9b1e 	bne	r2,zero,7b78 <__alt_data_end+0xfffa60f8>
    810c:	d9411b17 	ldw	r5,1132(sp)
    8110:	d8c11c17 	ldw	r3,1136(sp)
    8114:	d811883a 	mov	r8,sp
    8118:	28800044 	addi	r2,r5,1
    811c:	003e5006 	br	7a60 <__alt_data_end+0xfffa5fe0>
    8120:	182b883a 	mov	r21,r3
    8124:	003ed006 	br	7c68 <__alt_data_end+0xfffa61e8>
    8128:	8029883a 	mov	r20,r16
    812c:	003dc606 	br	7848 <__alt_data_end+0xfffa5dc8>
    8130:	d8c12317 	ldw	r3,1164(sp)
    8134:	d9012517 	ldw	r4,1172(sp)
    8138:	18800017 	ldw	r2,0(r3)
    813c:	18c00104 	addi	r3,r3,4
    8140:	d8c12315 	stw	r3,1164(sp)
    8144:	11000015 	stw	r4,0(r2)
    8148:	003ba706 	br	6fe8 <__alt_data_end+0xfffa5568>
    814c:	d9012317 	ldw	r4,1164(sp)
    8150:	14c00017 	ldw	r19,0(r2)
    8154:	002b883a 	mov	r21,zero
    8158:	21000104 	addi	r4,r4,4
    815c:	d9012315 	stw	r4,1164(sp)
    8160:	003d7906 	br	7748 <__alt_data_end+0xfffa5cc8>
    8164:	d8c12317 	ldw	r3,1164(sp)
    8168:	002b883a 	mov	r21,zero
    816c:	00800044 	movi	r2,1
    8170:	1cc00017 	ldw	r19,0(r3)
    8174:	18c00104 	addi	r3,r3,4
    8178:	d8c12315 	stw	r3,1164(sp)
    817c:	9807883a 	mov	r3,r19
    8180:	003d4e06 	br	76bc <__alt_data_end+0xfffa5c3c>
    8184:	d8812317 	ldw	r2,1164(sp)
    8188:	002b883a 	mov	r21,zero
    818c:	14c00017 	ldw	r19,0(r2)
    8190:	10800104 	addi	r2,r2,4
    8194:	d8812315 	stw	r2,1164(sp)
    8198:	9807883a 	mov	r3,r19
    819c:	0005883a 	mov	r2,zero
    81a0:	003d4606 	br	76bc <__alt_data_end+0xfffa5c3c>
    81a4:	1cc00017 	ldw	r19,0(r3)
    81a8:	d8c12317 	ldw	r3,1164(sp)
    81ac:	982bd7fa 	srai	r21,r19,31
    81b0:	18c00104 	addi	r3,r3,4
    81b4:	d8c12315 	stw	r3,1164(sp)
    81b8:	a805883a 	mov	r2,r21
    81bc:	003c8406 	br	73d0 <__alt_data_end+0xfffa5950>
    81c0:	01000074 	movhi	r4,1
    81c4:	213dc104 	addi	r4,r4,-2300
    81c8:	d9012615 	stw	r4,1176(sp)
    81cc:	003d0606 	br	75e8 <__alt_data_end+0xfffa5b68>
    81d0:	b9800043 	ldbu	r6,1(r23)
    81d4:	94800814 	ori	r18,r18,32
    81d8:	bdc00044 	addi	r23,r23,1
    81dc:	31803fcc 	andi	r6,r6,255
    81e0:	3180201c 	xori	r6,r6,128
    81e4:	31bfe004 	addi	r6,r6,-128
    81e8:	003ba806 	br	708c <__alt_data_end+0xfffa560c>
    81ec:	d8811e17 	ldw	r2,1144(sp)
    81f0:	d8c12217 	ldw	r3,1160(sp)
    81f4:	10e9c83a 	sub	r20,r2,r3
    81f8:	003c9406 	br	744c <__alt_data_end+0xfffa59cc>
    81fc:	da012a15 	stw	r8,1192(sp)
    8200:	0006d5c0 	call	6d5c <strlen>
    8204:	1029883a 	mov	r20,r2
    8208:	dd811d83 	ldbu	r22,1142(sp)
    820c:	dcc12315 	stw	r19,1164(sp)
    8210:	0021883a 	mov	r16,zero
    8214:	da012a17 	ldw	r8,1192(sp)
    8218:	003c8c06 	br	744c <__alt_data_end+0xfffa59cc>
    821c:	d9012117 	ldw	r4,1156(sp)
    8220:	d9412017 	ldw	r5,1152(sp)
    8224:	d9811a04 	addi	r6,sp,1128
    8228:	0006df40 	call	6df4 <__sprint_r.part.0>
    822c:	103e521e 	bne	r2,zero,7b78 <__alt_data_end+0xfffa60f8>
    8230:	d9411b17 	ldw	r5,1132(sp)
    8234:	d8c11c17 	ldw	r3,1136(sp)
    8238:	d811883a 	mov	r8,sp
    823c:	28800044 	addi	r2,r5,1
    8240:	003cce06 	br	757c <__alt_data_end+0xfffa5afc>
    8244:	01400074 	movhi	r5,1
    8248:	297dc504 	addi	r5,r5,-2284
    824c:	d9412615 	stw	r5,1176(sp)
    8250:	d9411b17 	ldw	r5,1132(sp)
    8254:	29400044 	addi	r5,r5,1
    8258:	003cad06 	br	7510 <__alt_data_end+0xfffa5a90>
    825c:	00800184 	movi	r2,6
    8260:	1400012e 	bgeu	r2,r16,8268 <___vfiprintf_internal_r+0x1360>
    8264:	1021883a 	mov	r16,r2
    8268:	8029883a 	mov	r20,r16
    826c:	802b883a 	mov	r21,r16
    8270:	80001c16 	blt	r16,zero,82e4 <___vfiprintf_internal_r+0x13dc>
    8274:	00c00074 	movhi	r3,1
    8278:	18fd6504 	addi	r3,r3,-2668
    827c:	dcc12315 	stw	r19,1164(sp)
    8280:	d8c12215 	stw	r3,1160(sp)
    8284:	003cff06 	br	7684 <__alt_data_end+0xfffa5c04>
    8288:	d9411b17 	ldw	r5,1132(sp)
    828c:	00800074 	movhi	r2,1
    8290:	10bdc504 	addi	r2,r2,-2284
    8294:	d8812615 	stw	r2,1176(sp)
    8298:	29400044 	addi	r5,r5,1
    829c:	003e6706 	br	7c3c <__alt_data_end+0xfffa61bc>
    82a0:	d9012317 	ldw	r4,1164(sp)
    82a4:	d9412517 	ldw	r5,1172(sp)
    82a8:	20800017 	ldw	r2,0(r4)
    82ac:	21000104 	addi	r4,r4,4
    82b0:	d9012315 	stw	r4,1164(sp)
    82b4:	11400015 	stw	r5,0(r2)
    82b8:	003b4b06 	br	6fe8 <__alt_data_end+0xfffa5568>
    82bc:	8029883a 	mov	r20,r16
    82c0:	dd811d83 	ldbu	r22,1142(sp)
    82c4:	dcc12315 	stw	r19,1164(sp)
    82c8:	0021883a 	mov	r16,zero
    82cc:	003c5f06 	br	744c <__alt_data_end+0xfffa59cc>
    82d0:	01000074 	movhi	r4,1
    82d4:	213dc104 	addi	r4,r4,-2300
    82d8:	d9012615 	stw	r4,1176(sp)
    82dc:	1009883a 	mov	r4,r2
    82e0:	003ea006 	br	7d64 <__alt_data_end+0xfffa62e4>
    82e4:	002b883a 	mov	r21,zero
    82e8:	003fe206 	br	8274 <__alt_data_end+0xfffa67f4>
    82ec:	d9412317 	ldw	r5,1164(sp)
    82f0:	b807883a 	mov	r3,r23
    82f4:	102f883a 	mov	r23,r2
    82f8:	2c000017 	ldw	r16,0(r5)
    82fc:	29000104 	addi	r4,r5,4
    8300:	d9012315 	stw	r4,1164(sp)
    8304:	80000416 	blt	r16,zero,8318 <___vfiprintf_internal_r+0x1410>
    8308:	19800047 	ldb	r6,1(r3)
    830c:	003b5f06 	br	708c <__alt_data_end+0xfffa560c>
    8310:	043fffc4 	movi	r16,-1
    8314:	003bef06 	br	72d4 <__alt_data_end+0xfffa5854>
    8318:	043fffc4 	movi	r16,-1
    831c:	19800047 	ldb	r6,1(r3)
    8320:	003b5a06 	br	708c <__alt_data_end+0xfffa560c>
    8324:	282b883a 	mov	r21,r5
    8328:	003cc706 	br	7648 <__alt_data_end+0xfffa5bc8>

0000832c <__vfiprintf_internal>:
    832c:	2007883a 	mov	r3,r4
    8330:	01000074 	movhi	r4,1
    8334:	2104c404 	addi	r4,r4,4880
    8338:	21000017 	ldw	r4,0(r4)
    833c:	2805883a 	mov	r2,r5
    8340:	300f883a 	mov	r7,r6
    8344:	180b883a 	mov	r5,r3
    8348:	100d883a 	mov	r6,r2
    834c:	0006f081 	jmpi	6f08 <___vfiprintf_internal_r>

00008350 <_write_r>:
    8350:	defffd04 	addi	sp,sp,-12
    8354:	dc000015 	stw	r16,0(sp)
    8358:	04000074 	movhi	r16,1
    835c:	dc400115 	stw	r17,4(sp)
    8360:	840b8f04 	addi	r16,r16,11836
    8364:	2023883a 	mov	r17,r4
    8368:	2809883a 	mov	r4,r5
    836c:	300b883a 	mov	r5,r6
    8370:	380d883a 	mov	r6,r7
    8374:	dfc00215 	stw	ra,8(sp)
    8378:	80000015 	stw	zero,0(r16)
    837c:	000d6dc0 	call	d6dc <write>
    8380:	00ffffc4 	movi	r3,-1
    8384:	10c00526 	beq	r2,r3,839c <_write_r+0x4c>
    8388:	dfc00217 	ldw	ra,8(sp)
    838c:	dc400117 	ldw	r17,4(sp)
    8390:	dc000017 	ldw	r16,0(sp)
    8394:	dec00304 	addi	sp,sp,12
    8398:	f800283a 	ret
    839c:	80c00017 	ldw	r3,0(r16)
    83a0:	183ff926 	beq	r3,zero,8388 <__alt_data_end+0xfffa6908>
    83a4:	88c00015 	stw	r3,0(r17)
    83a8:	003ff706 	br	8388 <__alt_data_end+0xfffa6908>

000083ac <_close_r>:
    83ac:	defffd04 	addi	sp,sp,-12
    83b0:	dc000015 	stw	r16,0(sp)
    83b4:	04000074 	movhi	r16,1
    83b8:	dc400115 	stw	r17,4(sp)
    83bc:	840b8f04 	addi	r16,r16,11836
    83c0:	2023883a 	mov	r17,r4
    83c4:	2809883a 	mov	r4,r5
    83c8:	dfc00215 	stw	ra,8(sp)
    83cc:	80000015 	stw	zero,0(r16)
    83d0:	000ce380 	call	ce38 <close>
    83d4:	00ffffc4 	movi	r3,-1
    83d8:	10c00526 	beq	r2,r3,83f0 <_close_r+0x44>
    83dc:	dfc00217 	ldw	ra,8(sp)
    83e0:	dc400117 	ldw	r17,4(sp)
    83e4:	dc000017 	ldw	r16,0(sp)
    83e8:	dec00304 	addi	sp,sp,12
    83ec:	f800283a 	ret
    83f0:	80c00017 	ldw	r3,0(r16)
    83f4:	183ff926 	beq	r3,zero,83dc <__alt_data_end+0xfffa695c>
    83f8:	88c00015 	stw	r3,0(r17)
    83fc:	003ff706 	br	83dc <__alt_data_end+0xfffa695c>

00008400 <_calloc_r>:
    8400:	defffe04 	addi	sp,sp,-8
    8404:	dc000015 	stw	r16,0(sp)
    8408:	2021883a 	mov	r16,r4
    840c:	2809883a 	mov	r4,r5
    8410:	300b883a 	mov	r5,r6
    8414:	dfc00115 	stw	ra,4(sp)
    8418:	000a5c40 	call	a5c4 <__mulsi3>
    841c:	8009883a 	mov	r4,r16
    8420:	100b883a 	mov	r5,r2
    8424:	00005500 	call	550 <_malloc_r>
    8428:	1021883a 	mov	r16,r2
    842c:	10002826 	beq	r2,zero,84d0 <_calloc_r+0xd0>
    8430:	11bfff17 	ldw	r6,-4(r2)
    8434:	00bfff04 	movi	r2,-4
    8438:	00c00904 	movi	r3,36
    843c:	308c703a 	and	r6,r6,r2
    8440:	308d883a 	add	r6,r6,r2
    8444:	19801436 	bltu	r3,r6,8498 <_calloc_r+0x98>
    8448:	008004c4 	movi	r2,19
    844c:	11800936 	bltu	r2,r6,8474 <_calloc_r+0x74>
    8450:	8005883a 	mov	r2,r16
    8454:	10000015 	stw	zero,0(r2)
    8458:	10000115 	stw	zero,4(r2)
    845c:	10000215 	stw	zero,8(r2)
    8460:	8005883a 	mov	r2,r16
    8464:	dfc00117 	ldw	ra,4(sp)
    8468:	dc000017 	ldw	r16,0(sp)
    846c:	dec00204 	addi	sp,sp,8
    8470:	f800283a 	ret
    8474:	80000015 	stw	zero,0(r16)
    8478:	80000115 	stw	zero,4(r16)
    847c:	008006c4 	movi	r2,27
    8480:	11800d2e 	bgeu	r2,r6,84b8 <_calloc_r+0xb8>
    8484:	80000215 	stw	zero,8(r16)
    8488:	80000315 	stw	zero,12(r16)
    848c:	30c00c26 	beq	r6,r3,84c0 <_calloc_r+0xc0>
    8490:	80800404 	addi	r2,r16,16
    8494:	003fef06 	br	8454 <__alt_data_end+0xfffa69d4>
    8498:	8009883a 	mov	r4,r16
    849c:	000b883a 	mov	r5,zero
    84a0:	000599c0 	call	599c <memset>
    84a4:	8005883a 	mov	r2,r16
    84a8:	dfc00117 	ldw	ra,4(sp)
    84ac:	dc000017 	ldw	r16,0(sp)
    84b0:	dec00204 	addi	sp,sp,8
    84b4:	f800283a 	ret
    84b8:	80800204 	addi	r2,r16,8
    84bc:	003fe506 	br	8454 <__alt_data_end+0xfffa69d4>
    84c0:	80000415 	stw	zero,16(r16)
    84c4:	80800604 	addi	r2,r16,24
    84c8:	80000515 	stw	zero,20(r16)
    84cc:	003fe106 	br	8454 <__alt_data_end+0xfffa69d4>
    84d0:	0005883a 	mov	r2,zero
    84d4:	003fe306 	br	8464 <__alt_data_end+0xfffa69e4>

000084d8 <_fclose_r>:
    84d8:	28003226 	beq	r5,zero,85a4 <_fclose_r+0xcc>
    84dc:	defffc04 	addi	sp,sp,-16
    84e0:	dc400115 	stw	r17,4(sp)
    84e4:	2023883a 	mov	r17,r4
    84e8:	dc000015 	stw	r16,0(sp)
    84ec:	dfc00315 	stw	ra,12(sp)
    84f0:	dc800215 	stw	r18,8(sp)
    84f4:	2821883a 	mov	r16,r5
    84f8:	0004f200 	call	4f20 <__sfp_lock_acquire>
    84fc:	88000226 	beq	r17,zero,8508 <_fclose_r+0x30>
    8500:	88800e17 	ldw	r2,56(r17)
    8504:	10002926 	beq	r2,zero,85ac <_fclose_r+0xd4>
    8508:	8080030f 	ldh	r2,12(r16)
    850c:	10002226 	beq	r2,zero,8598 <_fclose_r+0xc0>
    8510:	8809883a 	mov	r4,r17
    8514:	800b883a 	mov	r5,r16
    8518:	00049540 	call	4954 <_fflush_r>
    851c:	1025883a 	mov	r18,r2
    8520:	80800b17 	ldw	r2,44(r16)
    8524:	10000426 	beq	r2,zero,8538 <_fclose_r+0x60>
    8528:	81400717 	ldw	r5,28(r16)
    852c:	8809883a 	mov	r4,r17
    8530:	103ee83a 	callr	r2
    8534:	10002616 	blt	r2,zero,85d0 <_fclose_r+0xf8>
    8538:	8080030b 	ldhu	r2,12(r16)
    853c:	1080200c 	andi	r2,r2,128
    8540:	10001f1e 	bne	r2,zero,85c0 <_fclose_r+0xe8>
    8544:	81400c17 	ldw	r5,48(r16)
    8548:	28000526 	beq	r5,zero,8560 <_fclose_r+0x88>
    854c:	80801004 	addi	r2,r16,64
    8550:	28800226 	beq	r5,r2,855c <_fclose_r+0x84>
    8554:	8809883a 	mov	r4,r17
    8558:	00050840 	call	5084 <_free_r>
    855c:	80000c15 	stw	zero,48(r16)
    8560:	81401117 	ldw	r5,68(r16)
    8564:	28000326 	beq	r5,zero,8574 <_fclose_r+0x9c>
    8568:	8809883a 	mov	r4,r17
    856c:	00050840 	call	5084 <_free_r>
    8570:	80001115 	stw	zero,68(r16)
    8574:	8000030d 	sth	zero,12(r16)
    8578:	0004f240 	call	4f24 <__sfp_lock_release>
    857c:	9005883a 	mov	r2,r18
    8580:	dfc00317 	ldw	ra,12(sp)
    8584:	dc800217 	ldw	r18,8(sp)
    8588:	dc400117 	ldw	r17,4(sp)
    858c:	dc000017 	ldw	r16,0(sp)
    8590:	dec00404 	addi	sp,sp,16
    8594:	f800283a 	ret
    8598:	0004f240 	call	4f24 <__sfp_lock_release>
    859c:	0005883a 	mov	r2,zero
    85a0:	003ff706 	br	8580 <__alt_data_end+0xfffa6b00>
    85a4:	0005883a 	mov	r2,zero
    85a8:	f800283a 	ret
    85ac:	8809883a 	mov	r4,r17
    85b0:	0004f100 	call	4f10 <__sinit>
    85b4:	8080030f 	ldh	r2,12(r16)
    85b8:	103fd51e 	bne	r2,zero,8510 <__alt_data_end+0xfffa6a90>
    85bc:	003ff606 	br	8598 <__alt_data_end+0xfffa6b18>
    85c0:	81400417 	ldw	r5,16(r16)
    85c4:	8809883a 	mov	r4,r17
    85c8:	00050840 	call	5084 <_free_r>
    85cc:	003fdd06 	br	8544 <__alt_data_end+0xfffa6ac4>
    85d0:	04bfffc4 	movi	r18,-1
    85d4:	003fd806 	br	8538 <__alt_data_end+0xfffa6ab8>

000085d8 <fclose>:
    85d8:	00800074 	movhi	r2,1
    85dc:	1084c404 	addi	r2,r2,4880
    85e0:	200b883a 	mov	r5,r4
    85e4:	11000017 	ldw	r4,0(r2)
    85e8:	00084d81 	jmpi	84d8 <_fclose_r>

000085ec <_fputwc_r>:
    85ec:	3080030b 	ldhu	r2,12(r6)
    85f0:	defff804 	addi	sp,sp,-32
    85f4:	dcc00415 	stw	r19,16(sp)
    85f8:	dc800315 	stw	r18,12(sp)
    85fc:	dc000115 	stw	r16,4(sp)
    8600:	dfc00715 	stw	ra,28(sp)
    8604:	dd400615 	stw	r21,24(sp)
    8608:	dd000515 	stw	r20,20(sp)
    860c:	dc400215 	stw	r17,8(sp)
    8610:	10c8000c 	andi	r3,r2,8192
    8614:	3021883a 	mov	r16,r6
    8618:	2027883a 	mov	r19,r4
    861c:	2825883a 	mov	r18,r5
    8620:	1800051e 	bne	r3,zero,8638 <_fputwc_r+0x4c>
    8624:	30c01917 	ldw	r3,100(r6)
    8628:	10880014 	ori	r2,r2,8192
    862c:	3080030d 	sth	r2,12(r6)
    8630:	18880014 	ori	r2,r3,8192
    8634:	30801915 	stw	r2,100(r6)
    8638:	000556c0 	call	556c <__locale_mb_cur_max>
    863c:	00c00044 	movi	r3,1
    8640:	10c03e26 	beq	r2,r3,873c <_fputwc_r+0x150>
    8644:	9809883a 	mov	r4,r19
    8648:	d80b883a 	mov	r5,sp
    864c:	900d883a 	mov	r6,r18
    8650:	81c01704 	addi	r7,r16,92
    8654:	000963c0 	call	963c <_wcrtomb_r>
    8658:	1029883a 	mov	r20,r2
    865c:	00bfffc4 	movi	r2,-1
    8660:	a0802026 	beq	r20,r2,86e4 <_fputwc_r+0xf8>
    8664:	d9400003 	ldbu	r5,0(sp)
    8668:	a0001c26 	beq	r20,zero,86dc <_fputwc_r+0xf0>
    866c:	0023883a 	mov	r17,zero
    8670:	05400284 	movi	r21,10
    8674:	00000906 	br	869c <_fputwc_r+0xb0>
    8678:	80800017 	ldw	r2,0(r16)
    867c:	11400005 	stb	r5,0(r2)
    8680:	80c00017 	ldw	r3,0(r16)
    8684:	18c00044 	addi	r3,r3,1
    8688:	80c00015 	stw	r3,0(r16)
    868c:	8c400044 	addi	r17,r17,1
    8690:	dc45883a 	add	r2,sp,r17
    8694:	8d00112e 	bgeu	r17,r20,86dc <_fputwc_r+0xf0>
    8698:	11400003 	ldbu	r5,0(r2)
    869c:	80c00217 	ldw	r3,8(r16)
    86a0:	18ffffc4 	addi	r3,r3,-1
    86a4:	80c00215 	stw	r3,8(r16)
    86a8:	183ff30e 	bge	r3,zero,8678 <__alt_data_end+0xfffa6bf8>
    86ac:	80800617 	ldw	r2,24(r16)
    86b0:	18801916 	blt	r3,r2,8718 <_fputwc_r+0x12c>
    86b4:	80800017 	ldw	r2,0(r16)
    86b8:	11400005 	stb	r5,0(r2)
    86bc:	80800017 	ldw	r2,0(r16)
    86c0:	10c00003 	ldbu	r3,0(r2)
    86c4:	10800044 	addi	r2,r2,1
    86c8:	1d402326 	beq	r3,r21,8758 <_fputwc_r+0x16c>
    86cc:	80800015 	stw	r2,0(r16)
    86d0:	8c400044 	addi	r17,r17,1
    86d4:	dc45883a 	add	r2,sp,r17
    86d8:	8d3fef36 	bltu	r17,r20,8698 <__alt_data_end+0xfffa6c18>
    86dc:	9005883a 	mov	r2,r18
    86e0:	00000406 	br	86f4 <_fputwc_r+0x108>
    86e4:	80c0030b 	ldhu	r3,12(r16)
    86e8:	a005883a 	mov	r2,r20
    86ec:	18c01014 	ori	r3,r3,64
    86f0:	80c0030d 	sth	r3,12(r16)
    86f4:	dfc00717 	ldw	ra,28(sp)
    86f8:	dd400617 	ldw	r21,24(sp)
    86fc:	dd000517 	ldw	r20,20(sp)
    8700:	dcc00417 	ldw	r19,16(sp)
    8704:	dc800317 	ldw	r18,12(sp)
    8708:	dc400217 	ldw	r17,8(sp)
    870c:	dc000117 	ldw	r16,4(sp)
    8710:	dec00804 	addi	sp,sp,32
    8714:	f800283a 	ret
    8718:	9809883a 	mov	r4,r19
    871c:	29403fcc 	andi	r5,r5,255
    8720:	800d883a 	mov	r6,r16
    8724:	00094cc0 	call	94cc <__swbuf_r>
    8728:	10bfffe0 	cmpeqi	r2,r2,-1
    872c:	10803fcc 	andi	r2,r2,255
    8730:	103fd626 	beq	r2,zero,868c <__alt_data_end+0xfffa6c0c>
    8734:	00bfffc4 	movi	r2,-1
    8738:	003fee06 	br	86f4 <__alt_data_end+0xfffa6c74>
    873c:	90ffffc4 	addi	r3,r18,-1
    8740:	01003f84 	movi	r4,254
    8744:	20ffbf36 	bltu	r4,r3,8644 <__alt_data_end+0xfffa6bc4>
    8748:	900b883a 	mov	r5,r18
    874c:	dc800005 	stb	r18,0(sp)
    8750:	1029883a 	mov	r20,r2
    8754:	003fc506 	br	866c <__alt_data_end+0xfffa6bec>
    8758:	9809883a 	mov	r4,r19
    875c:	a80b883a 	mov	r5,r21
    8760:	800d883a 	mov	r6,r16
    8764:	00094cc0 	call	94cc <__swbuf_r>
    8768:	10bfffe0 	cmpeqi	r2,r2,-1
    876c:	003fef06 	br	872c <__alt_data_end+0xfffa6cac>

00008770 <fputwc>:
    8770:	defffc04 	addi	sp,sp,-16
    8774:	dc000115 	stw	r16,4(sp)
    8778:	04000074 	movhi	r16,1
    877c:	8404c404 	addi	r16,r16,4880
    8780:	dc400215 	stw	r17,8(sp)
    8784:	2023883a 	mov	r17,r4
    8788:	81000017 	ldw	r4,0(r16)
    878c:	dfc00315 	stw	ra,12(sp)
    8790:	280d883a 	mov	r6,r5
    8794:	20000626 	beq	r4,zero,87b0 <fputwc+0x40>
    8798:	20800e17 	ldw	r2,56(r4)
    879c:	1000041e 	bne	r2,zero,87b0 <fputwc+0x40>
    87a0:	d9400015 	stw	r5,0(sp)
    87a4:	0004f100 	call	4f10 <__sinit>
    87a8:	81000017 	ldw	r4,0(r16)
    87ac:	d9800017 	ldw	r6,0(sp)
    87b0:	880b883a 	mov	r5,r17
    87b4:	dfc00317 	ldw	ra,12(sp)
    87b8:	dc400217 	ldw	r17,8(sp)
    87bc:	dc000117 	ldw	r16,4(sp)
    87c0:	dec00404 	addi	sp,sp,16
    87c4:	00085ec1 	jmpi	85ec <_fputwc_r>

000087c8 <_fstat_r>:
    87c8:	defffd04 	addi	sp,sp,-12
    87cc:	dc000015 	stw	r16,0(sp)
    87d0:	04000074 	movhi	r16,1
    87d4:	dc400115 	stw	r17,4(sp)
    87d8:	840b8f04 	addi	r16,r16,11836
    87dc:	2023883a 	mov	r17,r4
    87e0:	2809883a 	mov	r4,r5
    87e4:	300b883a 	mov	r5,r6
    87e8:	dfc00215 	stw	ra,8(sp)
    87ec:	80000015 	stw	zero,0(r16)
    87f0:	000cf8c0 	call	cf8c <fstat>
    87f4:	00ffffc4 	movi	r3,-1
    87f8:	10c00526 	beq	r2,r3,8810 <_fstat_r+0x48>
    87fc:	dfc00217 	ldw	ra,8(sp)
    8800:	dc400117 	ldw	r17,4(sp)
    8804:	dc000017 	ldw	r16,0(sp)
    8808:	dec00304 	addi	sp,sp,12
    880c:	f800283a 	ret
    8810:	80c00017 	ldw	r3,0(r16)
    8814:	183ff926 	beq	r3,zero,87fc <__alt_data_end+0xfffa6d7c>
    8818:	88c00015 	stw	r3,0(r17)
    881c:	003ff706 	br	87fc <__alt_data_end+0xfffa6d7c>

00008820 <__sfvwrite_r>:
    8820:	30800217 	ldw	r2,8(r6)
    8824:	10004526 	beq	r2,zero,893c <__sfvwrite_r+0x11c>
    8828:	28c0030b 	ldhu	r3,12(r5)
    882c:	defff404 	addi	sp,sp,-48
    8830:	dd400715 	stw	r21,28(sp)
    8834:	dcc00515 	stw	r19,20(sp)
    8838:	dc000215 	stw	r16,8(sp)
    883c:	dfc00b15 	stw	ra,44(sp)
    8840:	df000a15 	stw	fp,40(sp)
    8844:	ddc00915 	stw	r23,36(sp)
    8848:	dd800815 	stw	r22,32(sp)
    884c:	dd000615 	stw	r20,24(sp)
    8850:	dc800415 	stw	r18,16(sp)
    8854:	dc400315 	stw	r17,12(sp)
    8858:	1880020c 	andi	r2,r3,8
    885c:	2821883a 	mov	r16,r5
    8860:	202b883a 	mov	r21,r4
    8864:	3027883a 	mov	r19,r6
    8868:	10002526 	beq	r2,zero,8900 <__sfvwrite_r+0xe0>
    886c:	28800417 	ldw	r2,16(r5)
    8870:	10002326 	beq	r2,zero,8900 <__sfvwrite_r+0xe0>
    8874:	1880008c 	andi	r2,r3,2
    8878:	9c400017 	ldw	r17,0(r19)
    887c:	10003126 	beq	r2,zero,8944 <__sfvwrite_r+0x124>
    8880:	0029883a 	mov	r20,zero
    8884:	0025883a 	mov	r18,zero
    8888:	05810004 	movi	r22,1024
    888c:	a00d883a 	mov	r6,r20
    8890:	a809883a 	mov	r4,r21
    8894:	90002526 	beq	r18,zero,892c <__sfvwrite_r+0x10c>
    8898:	900f883a 	mov	r7,r18
    889c:	81400717 	ldw	r5,28(r16)
    88a0:	b480012e 	bgeu	r22,r18,88a8 <__sfvwrite_r+0x88>
    88a4:	01c10004 	movi	r7,1024
    88a8:	80800917 	ldw	r2,36(r16)
    88ac:	103ee83a 	callr	r2
    88b0:	0080510e 	bge	zero,r2,89f8 <__sfvwrite_r+0x1d8>
    88b4:	98c00217 	ldw	r3,8(r19)
    88b8:	a0a9883a 	add	r20,r20,r2
    88bc:	90a5c83a 	sub	r18,r18,r2
    88c0:	1885c83a 	sub	r2,r3,r2
    88c4:	98800215 	stw	r2,8(r19)
    88c8:	103ff01e 	bne	r2,zero,888c <__alt_data_end+0xfffa6e0c>
    88cc:	0005883a 	mov	r2,zero
    88d0:	dfc00b17 	ldw	ra,44(sp)
    88d4:	df000a17 	ldw	fp,40(sp)
    88d8:	ddc00917 	ldw	r23,36(sp)
    88dc:	dd800817 	ldw	r22,32(sp)
    88e0:	dd400717 	ldw	r21,28(sp)
    88e4:	dd000617 	ldw	r20,24(sp)
    88e8:	dcc00517 	ldw	r19,20(sp)
    88ec:	dc800417 	ldw	r18,16(sp)
    88f0:	dc400317 	ldw	r17,12(sp)
    88f4:	dc000217 	ldw	r16,8(sp)
    88f8:	dec00c04 	addi	sp,sp,48
    88fc:	f800283a 	ret
    8900:	a809883a 	mov	r4,r21
    8904:	800b883a 	mov	r5,r16
    8908:	0002ed40 	call	2ed4 <__swsetup_r>
    890c:	80c0030b 	ldhu	r3,12(r16)
    8910:	103fd826 	beq	r2,zero,8874 <__alt_data_end+0xfffa6df4>
    8914:	18c01014 	ori	r3,r3,64
    8918:	80c0030d 	sth	r3,12(r16)
    891c:	00c00244 	movi	r3,9
    8920:	00bfffc4 	movi	r2,-1
    8924:	a8c00015 	stw	r3,0(r21)
    8928:	003fe906 	br	88d0 <__alt_data_end+0xfffa6e50>
    892c:	8d000017 	ldw	r20,0(r17)
    8930:	8c800117 	ldw	r18,4(r17)
    8934:	8c400204 	addi	r17,r17,8
    8938:	003fd406 	br	888c <__alt_data_end+0xfffa6e0c>
    893c:	0005883a 	mov	r2,zero
    8940:	f800283a 	ret
    8944:	1880004c 	andi	r2,r3,1
    8948:	1000301e 	bne	r2,zero,8a0c <__sfvwrite_r+0x1ec>
    894c:	002f883a 	mov	r23,zero
    8950:	0025883a 	mov	r18,zero
    8954:	90001c26 	beq	r18,zero,89c8 <__sfvwrite_r+0x1a8>
    8958:	1880800c 	andi	r2,r3,512
    895c:	85000217 	ldw	r20,8(r16)
    8960:	10006c26 	beq	r2,zero,8b14 <__sfvwrite_r+0x2f4>
    8964:	a02d883a 	mov	r22,r20
    8968:	95008536 	bltu	r18,r20,8b80 <__sfvwrite_r+0x360>
    896c:	1881200c 	andi	r2,r3,1152
    8970:	10009d1e 	bne	r2,zero,8be8 <__sfvwrite_r+0x3c8>
    8974:	81000017 	ldw	r4,0(r16)
    8978:	a039883a 	mov	fp,r20
    897c:	9029883a 	mov	r20,r18
    8980:	b80b883a 	mov	r5,r23
    8984:	b00d883a 	mov	r6,r22
    8988:	0008d740 	call	8d74 <memmove>
    898c:	80c00217 	ldw	r3,8(r16)
    8990:	81000017 	ldw	r4,0(r16)
    8994:	9005883a 	mov	r2,r18
    8998:	1f39c83a 	sub	fp,r3,fp
    899c:	258f883a 	add	r7,r4,r22
    89a0:	87000215 	stw	fp,8(r16)
    89a4:	81c00015 	stw	r7,0(r16)
    89a8:	98c00217 	ldw	r3,8(r19)
    89ac:	b8af883a 	add	r23,r23,r2
    89b0:	90a5c83a 	sub	r18,r18,r2
    89b4:	1d05c83a 	sub	r2,r3,r20
    89b8:	98800215 	stw	r2,8(r19)
    89bc:	103fc326 	beq	r2,zero,88cc <__alt_data_end+0xfffa6e4c>
    89c0:	80c0030b 	ldhu	r3,12(r16)
    89c4:	903fe41e 	bne	r18,zero,8958 <__alt_data_end+0xfffa6ed8>
    89c8:	8dc00017 	ldw	r23,0(r17)
    89cc:	8c800117 	ldw	r18,4(r17)
    89d0:	8c400204 	addi	r17,r17,8
    89d4:	003fdf06 	br	8954 <__alt_data_end+0xfffa6ed4>
    89d8:	0008f2c0 	call	8f2c <_realloc_r>
    89dc:	102d883a 	mov	r22,r2
    89e0:	1000a01e 	bne	r2,zero,8c64 <__sfvwrite_r+0x444>
    89e4:	81400417 	ldw	r5,16(r16)
    89e8:	a809883a 	mov	r4,r21
    89ec:	00050840 	call	5084 <_free_r>
    89f0:	00800304 	movi	r2,12
    89f4:	a8800015 	stw	r2,0(r21)
    89f8:	80c0030b 	ldhu	r3,12(r16)
    89fc:	00bfffc4 	movi	r2,-1
    8a00:	18c01014 	ori	r3,r3,64
    8a04:	80c0030d 	sth	r3,12(r16)
    8a08:	003fb106 	br	88d0 <__alt_data_end+0xfffa6e50>
    8a0c:	0029883a 	mov	r20,zero
    8a10:	0011883a 	mov	r8,zero
    8a14:	0039883a 	mov	fp,zero
    8a18:	0025883a 	mov	r18,zero
    8a1c:	90001f26 	beq	r18,zero,8a9c <__sfvwrite_r+0x27c>
    8a20:	40006826 	beq	r8,zero,8bc4 <__sfvwrite_r+0x3a4>
    8a24:	a02f883a 	mov	r23,r20
    8a28:	9500012e 	bgeu	r18,r20,8a30 <__sfvwrite_r+0x210>
    8a2c:	902f883a 	mov	r23,r18
    8a30:	81000017 	ldw	r4,0(r16)
    8a34:	80800417 	ldw	r2,16(r16)
    8a38:	b82d883a 	mov	r22,r23
    8a3c:	81800217 	ldw	r6,8(r16)
    8a40:	81c00517 	ldw	r7,20(r16)
    8a44:	1100022e 	bgeu	r2,r4,8a50 <__sfvwrite_r+0x230>
    8a48:	31c7883a 	add	r3,r6,r7
    8a4c:	1dc01816 	blt	r3,r23,8ab0 <__sfvwrite_r+0x290>
    8a50:	b9c03f16 	blt	r23,r7,8b50 <__sfvwrite_r+0x330>
    8a54:	80800917 	ldw	r2,36(r16)
    8a58:	81400717 	ldw	r5,28(r16)
    8a5c:	a809883a 	mov	r4,r21
    8a60:	da000115 	stw	r8,4(sp)
    8a64:	e00d883a 	mov	r6,fp
    8a68:	103ee83a 	callr	r2
    8a6c:	102d883a 	mov	r22,r2
    8a70:	da000117 	ldw	r8,4(sp)
    8a74:	00bfe00e 	bge	zero,r2,89f8 <__alt_data_end+0xfffa6f78>
    8a78:	a5a9c83a 	sub	r20,r20,r22
    8a7c:	a0001f26 	beq	r20,zero,8afc <__sfvwrite_r+0x2dc>
    8a80:	98800217 	ldw	r2,8(r19)
    8a84:	e5b9883a 	add	fp,fp,r22
    8a88:	95a5c83a 	sub	r18,r18,r22
    8a8c:	15adc83a 	sub	r22,r2,r22
    8a90:	9d800215 	stw	r22,8(r19)
    8a94:	b03f8d26 	beq	r22,zero,88cc <__alt_data_end+0xfffa6e4c>
    8a98:	903fe11e 	bne	r18,zero,8a20 <__alt_data_end+0xfffa6fa0>
    8a9c:	8f000017 	ldw	fp,0(r17)
    8aa0:	8c800117 	ldw	r18,4(r17)
    8aa4:	0011883a 	mov	r8,zero
    8aa8:	8c400204 	addi	r17,r17,8
    8aac:	003fdb06 	br	8a1c <__alt_data_end+0xfffa6f9c>
    8ab0:	180d883a 	mov	r6,r3
    8ab4:	e00b883a 	mov	r5,fp
    8ab8:	da000115 	stw	r8,4(sp)
    8abc:	d8c00015 	stw	r3,0(sp)
    8ac0:	0008d740 	call	8d74 <memmove>
    8ac4:	d8c00017 	ldw	r3,0(sp)
    8ac8:	80800017 	ldw	r2,0(r16)
    8acc:	a809883a 	mov	r4,r21
    8ad0:	800b883a 	mov	r5,r16
    8ad4:	10c5883a 	add	r2,r2,r3
    8ad8:	80800015 	stw	r2,0(r16)
    8adc:	d8c00015 	stw	r3,0(sp)
    8ae0:	00049540 	call	4954 <_fflush_r>
    8ae4:	d8c00017 	ldw	r3,0(sp)
    8ae8:	da000117 	ldw	r8,4(sp)
    8aec:	103fc21e 	bne	r2,zero,89f8 <__alt_data_end+0xfffa6f78>
    8af0:	182d883a 	mov	r22,r3
    8af4:	a5a9c83a 	sub	r20,r20,r22
    8af8:	a03fe11e 	bne	r20,zero,8a80 <__alt_data_end+0xfffa7000>
    8afc:	a809883a 	mov	r4,r21
    8b00:	800b883a 	mov	r5,r16
    8b04:	00049540 	call	4954 <_fflush_r>
    8b08:	103fbb1e 	bne	r2,zero,89f8 <__alt_data_end+0xfffa6f78>
    8b0c:	0011883a 	mov	r8,zero
    8b10:	003fdb06 	br	8a80 <__alt_data_end+0xfffa7000>
    8b14:	81000017 	ldw	r4,0(r16)
    8b18:	80800417 	ldw	r2,16(r16)
    8b1c:	1100012e 	bgeu	r2,r4,8b24 <__sfvwrite_r+0x304>
    8b20:	a4805a36 	bltu	r20,r18,8c8c <__sfvwrite_r+0x46c>
    8b24:	81c00517 	ldw	r7,20(r16)
    8b28:	91c01a36 	bltu	r18,r7,8b94 <__sfvwrite_r+0x374>
    8b2c:	80800917 	ldw	r2,36(r16)
    8b30:	81400717 	ldw	r5,28(r16)
    8b34:	a809883a 	mov	r4,r21
    8b38:	b80d883a 	mov	r6,r23
    8b3c:	103ee83a 	callr	r2
    8b40:	1029883a 	mov	r20,r2
    8b44:	00bfac0e 	bge	zero,r2,89f8 <__alt_data_end+0xfffa6f78>
    8b48:	a005883a 	mov	r2,r20
    8b4c:	003f9606 	br	89a8 <__alt_data_end+0xfffa6f28>
    8b50:	b80d883a 	mov	r6,r23
    8b54:	e00b883a 	mov	r5,fp
    8b58:	da000115 	stw	r8,4(sp)
    8b5c:	0008d740 	call	8d74 <memmove>
    8b60:	80800217 	ldw	r2,8(r16)
    8b64:	80c00017 	ldw	r3,0(r16)
    8b68:	da000117 	ldw	r8,4(sp)
    8b6c:	15c5c83a 	sub	r2,r2,r23
    8b70:	1def883a 	add	r23,r3,r23
    8b74:	80800215 	stw	r2,8(r16)
    8b78:	85c00015 	stw	r23,0(r16)
    8b7c:	003fbe06 	br	8a78 <__alt_data_end+0xfffa6ff8>
    8b80:	81000017 	ldw	r4,0(r16)
    8b84:	9039883a 	mov	fp,r18
    8b88:	9029883a 	mov	r20,r18
    8b8c:	902d883a 	mov	r22,r18
    8b90:	003f7b06 	br	8980 <__alt_data_end+0xfffa6f00>
    8b94:	b80b883a 	mov	r5,r23
    8b98:	900d883a 	mov	r6,r18
    8b9c:	0008d740 	call	8d74 <memmove>
    8ba0:	80c00217 	ldw	r3,8(r16)
    8ba4:	80800017 	ldw	r2,0(r16)
    8ba8:	9029883a 	mov	r20,r18
    8bac:	1c87c83a 	sub	r3,r3,r18
    8bb0:	1485883a 	add	r2,r2,r18
    8bb4:	80800015 	stw	r2,0(r16)
    8bb8:	80c00215 	stw	r3,8(r16)
    8bbc:	9005883a 	mov	r2,r18
    8bc0:	003f7906 	br	89a8 <__alt_data_end+0xfffa6f28>
    8bc4:	e009883a 	mov	r4,fp
    8bc8:	01400284 	movi	r5,10
    8bcc:	900d883a 	mov	r6,r18
    8bd0:	000577c0 	call	577c <memchr>
    8bd4:	10003826 	beq	r2,zero,8cb8 <__sfvwrite_r+0x498>
    8bd8:	10800044 	addi	r2,r2,1
    8bdc:	1729c83a 	sub	r20,r2,fp
    8be0:	02000044 	movi	r8,1
    8be4:	003f8f06 	br	8a24 <__alt_data_end+0xfffa6fa4>
    8be8:	80800517 	ldw	r2,20(r16)
    8bec:	81400417 	ldw	r5,16(r16)
    8bf0:	87000017 	ldw	fp,0(r16)
    8bf4:	10a9883a 	add	r20,r2,r2
    8bf8:	a085883a 	add	r2,r20,r2
    8bfc:	1028d7fa 	srli	r20,r2,31
    8c00:	e179c83a 	sub	fp,fp,r5
    8c04:	e1000044 	addi	r4,fp,1
    8c08:	a085883a 	add	r2,r20,r2
    8c0c:	1029d07a 	srai	r20,r2,1
    8c10:	2485883a 	add	r2,r4,r18
    8c14:	a00d883a 	mov	r6,r20
    8c18:	a080022e 	bgeu	r20,r2,8c24 <__sfvwrite_r+0x404>
    8c1c:	1029883a 	mov	r20,r2
    8c20:	100d883a 	mov	r6,r2
    8c24:	18c1000c 	andi	r3,r3,1024
    8c28:	a809883a 	mov	r4,r21
    8c2c:	183f6a26 	beq	r3,zero,89d8 <__alt_data_end+0xfffa6f58>
    8c30:	300b883a 	mov	r5,r6
    8c34:	00005500 	call	550 <_malloc_r>
    8c38:	102d883a 	mov	r22,r2
    8c3c:	103f6c26 	beq	r2,zero,89f0 <__alt_data_end+0xfffa6f70>
    8c40:	81400417 	ldw	r5,16(r16)
    8c44:	1009883a 	mov	r4,r2
    8c48:	e00d883a 	mov	r6,fp
    8c4c:	00058640 	call	5864 <memcpy>
    8c50:	8080030b 	ldhu	r2,12(r16)
    8c54:	00fedfc4 	movi	r3,-1153
    8c58:	10c4703a 	and	r2,r2,r3
    8c5c:	10802014 	ori	r2,r2,128
    8c60:	8080030d 	sth	r2,12(r16)
    8c64:	b709883a 	add	r4,r22,fp
    8c68:	a707c83a 	sub	r3,r20,fp
    8c6c:	85800415 	stw	r22,16(r16)
    8c70:	85000515 	stw	r20,20(r16)
    8c74:	81000015 	stw	r4,0(r16)
    8c78:	9039883a 	mov	fp,r18
    8c7c:	80c00215 	stw	r3,8(r16)
    8c80:	9029883a 	mov	r20,r18
    8c84:	902d883a 	mov	r22,r18
    8c88:	003f3d06 	br	8980 <__alt_data_end+0xfffa6f00>
    8c8c:	b80b883a 	mov	r5,r23
    8c90:	a00d883a 	mov	r6,r20
    8c94:	0008d740 	call	8d74 <memmove>
    8c98:	80800017 	ldw	r2,0(r16)
    8c9c:	a809883a 	mov	r4,r21
    8ca0:	800b883a 	mov	r5,r16
    8ca4:	1505883a 	add	r2,r2,r20
    8ca8:	80800015 	stw	r2,0(r16)
    8cac:	00049540 	call	4954 <_fflush_r>
    8cb0:	103fa526 	beq	r2,zero,8b48 <__alt_data_end+0xfffa70c8>
    8cb4:	003f5006 	br	89f8 <__alt_data_end+0xfffa6f78>
    8cb8:	95000044 	addi	r20,r18,1
    8cbc:	02000044 	movi	r8,1
    8cc0:	003f5806 	br	8a24 <__alt_data_end+0xfffa6fa4>

00008cc4 <_isatty_r>:
    8cc4:	defffd04 	addi	sp,sp,-12
    8cc8:	dc000015 	stw	r16,0(sp)
    8ccc:	04000074 	movhi	r16,1
    8cd0:	dc400115 	stw	r17,4(sp)
    8cd4:	840b8f04 	addi	r16,r16,11836
    8cd8:	2023883a 	mov	r17,r4
    8cdc:	2809883a 	mov	r4,r5
    8ce0:	dfc00215 	stw	ra,8(sp)
    8ce4:	80000015 	stw	zero,0(r16)
    8ce8:	000d0940 	call	d094 <isatty>
    8cec:	00ffffc4 	movi	r3,-1
    8cf0:	10c00526 	beq	r2,r3,8d08 <_isatty_r+0x44>
    8cf4:	dfc00217 	ldw	ra,8(sp)
    8cf8:	dc400117 	ldw	r17,4(sp)
    8cfc:	dc000017 	ldw	r16,0(sp)
    8d00:	dec00304 	addi	sp,sp,12
    8d04:	f800283a 	ret
    8d08:	80c00017 	ldw	r3,0(r16)
    8d0c:	183ff926 	beq	r3,zero,8cf4 <__alt_data_end+0xfffa7274>
    8d10:	88c00015 	stw	r3,0(r17)
    8d14:	003ff706 	br	8cf4 <__alt_data_end+0xfffa7274>

00008d18 <_lseek_r>:
    8d18:	defffd04 	addi	sp,sp,-12
    8d1c:	dc000015 	stw	r16,0(sp)
    8d20:	04000074 	movhi	r16,1
    8d24:	dc400115 	stw	r17,4(sp)
    8d28:	840b8f04 	addi	r16,r16,11836
    8d2c:	2023883a 	mov	r17,r4
    8d30:	2809883a 	mov	r4,r5
    8d34:	300b883a 	mov	r5,r6
    8d38:	380d883a 	mov	r6,r7
    8d3c:	dfc00215 	stw	ra,8(sp)
    8d40:	80000015 	stw	zero,0(r16)
    8d44:	000d2740 	call	d274 <lseek>
    8d48:	00ffffc4 	movi	r3,-1
    8d4c:	10c00526 	beq	r2,r3,8d64 <_lseek_r+0x4c>
    8d50:	dfc00217 	ldw	ra,8(sp)
    8d54:	dc400117 	ldw	r17,4(sp)
    8d58:	dc000017 	ldw	r16,0(sp)
    8d5c:	dec00304 	addi	sp,sp,12
    8d60:	f800283a 	ret
    8d64:	80c00017 	ldw	r3,0(r16)
    8d68:	183ff926 	beq	r3,zero,8d50 <__alt_data_end+0xfffa72d0>
    8d6c:	88c00015 	stw	r3,0(r17)
    8d70:	003ff706 	br	8d50 <__alt_data_end+0xfffa72d0>

00008d74 <memmove>:
    8d74:	2005883a 	mov	r2,r4
    8d78:	29000b2e 	bgeu	r5,r4,8da8 <memmove+0x34>
    8d7c:	298f883a 	add	r7,r5,r6
    8d80:	21c0092e 	bgeu	r4,r7,8da8 <memmove+0x34>
    8d84:	2187883a 	add	r3,r4,r6
    8d88:	198bc83a 	sub	r5,r3,r6
    8d8c:	30004b26 	beq	r6,zero,8ebc <memmove+0x148>
    8d90:	39ffffc4 	addi	r7,r7,-1
    8d94:	39000003 	ldbu	r4,0(r7)
    8d98:	18ffffc4 	addi	r3,r3,-1
    8d9c:	19000005 	stb	r4,0(r3)
    8da0:	197ffb1e 	bne	r3,r5,8d90 <__alt_data_end+0xfffa7310>
    8da4:	f800283a 	ret
    8da8:	00c003c4 	movi	r3,15
    8dac:	1980412e 	bgeu	r3,r6,8eb4 <memmove+0x140>
    8db0:	1146b03a 	or	r3,r2,r5
    8db4:	18c000cc 	andi	r3,r3,3
    8db8:	1800411e 	bne	r3,zero,8ec0 <memmove+0x14c>
    8dbc:	33fffc04 	addi	r15,r6,-16
    8dc0:	781ed13a 	srli	r15,r15,4
    8dc4:	28c00104 	addi	r3,r5,4
    8dc8:	13400104 	addi	r13,r2,4
    8dcc:	781c913a 	slli	r14,r15,4
    8dd0:	2b000204 	addi	r12,r5,8
    8dd4:	12c00204 	addi	r11,r2,8
    8dd8:	73800504 	addi	r14,r14,20
    8ddc:	2a800304 	addi	r10,r5,12
    8de0:	12400304 	addi	r9,r2,12
    8de4:	2b9d883a 	add	r14,r5,r14
    8de8:	2811883a 	mov	r8,r5
    8dec:	100f883a 	mov	r7,r2
    8df0:	41000017 	ldw	r4,0(r8)
    8df4:	39c00404 	addi	r7,r7,16
    8df8:	18c00404 	addi	r3,r3,16
    8dfc:	393ffc15 	stw	r4,-16(r7)
    8e00:	193ffc17 	ldw	r4,-16(r3)
    8e04:	6b400404 	addi	r13,r13,16
    8e08:	5ac00404 	addi	r11,r11,16
    8e0c:	693ffc15 	stw	r4,-16(r13)
    8e10:	61000017 	ldw	r4,0(r12)
    8e14:	4a400404 	addi	r9,r9,16
    8e18:	42000404 	addi	r8,r8,16
    8e1c:	593ffc15 	stw	r4,-16(r11)
    8e20:	51000017 	ldw	r4,0(r10)
    8e24:	63000404 	addi	r12,r12,16
    8e28:	52800404 	addi	r10,r10,16
    8e2c:	493ffc15 	stw	r4,-16(r9)
    8e30:	1bbfef1e 	bne	r3,r14,8df0 <__alt_data_end+0xfffa7370>
    8e34:	79000044 	addi	r4,r15,1
    8e38:	2008913a 	slli	r4,r4,4
    8e3c:	328003cc 	andi	r10,r6,15
    8e40:	02c000c4 	movi	r11,3
    8e44:	1107883a 	add	r3,r2,r4
    8e48:	290b883a 	add	r5,r5,r4
    8e4c:	5a801e2e 	bgeu	r11,r10,8ec8 <memmove+0x154>
    8e50:	1813883a 	mov	r9,r3
    8e54:	2811883a 	mov	r8,r5
    8e58:	500f883a 	mov	r7,r10
    8e5c:	41000017 	ldw	r4,0(r8)
    8e60:	4a400104 	addi	r9,r9,4
    8e64:	39ffff04 	addi	r7,r7,-4
    8e68:	493fff15 	stw	r4,-4(r9)
    8e6c:	42000104 	addi	r8,r8,4
    8e70:	59fffa36 	bltu	r11,r7,8e5c <__alt_data_end+0xfffa73dc>
    8e74:	513fff04 	addi	r4,r10,-4
    8e78:	2008d0ba 	srli	r4,r4,2
    8e7c:	318000cc 	andi	r6,r6,3
    8e80:	21000044 	addi	r4,r4,1
    8e84:	2109883a 	add	r4,r4,r4
    8e88:	2109883a 	add	r4,r4,r4
    8e8c:	1907883a 	add	r3,r3,r4
    8e90:	290b883a 	add	r5,r5,r4
    8e94:	30000926 	beq	r6,zero,8ebc <memmove+0x148>
    8e98:	198d883a 	add	r6,r3,r6
    8e9c:	29c00003 	ldbu	r7,0(r5)
    8ea0:	18c00044 	addi	r3,r3,1
    8ea4:	29400044 	addi	r5,r5,1
    8ea8:	19ffffc5 	stb	r7,-1(r3)
    8eac:	19bffb1e 	bne	r3,r6,8e9c <__alt_data_end+0xfffa741c>
    8eb0:	f800283a 	ret
    8eb4:	1007883a 	mov	r3,r2
    8eb8:	003ff606 	br	8e94 <__alt_data_end+0xfffa7414>
    8ebc:	f800283a 	ret
    8ec0:	1007883a 	mov	r3,r2
    8ec4:	003ff406 	br	8e98 <__alt_data_end+0xfffa7418>
    8ec8:	500d883a 	mov	r6,r10
    8ecc:	003ff106 	br	8e94 <__alt_data_end+0xfffa7414>

00008ed0 <_read_r>:
    8ed0:	defffd04 	addi	sp,sp,-12
    8ed4:	dc000015 	stw	r16,0(sp)
    8ed8:	04000074 	movhi	r16,1
    8edc:	dc400115 	stw	r17,4(sp)
    8ee0:	840b8f04 	addi	r16,r16,11836
    8ee4:	2023883a 	mov	r17,r4
    8ee8:	2809883a 	mov	r4,r5
    8eec:	300b883a 	mov	r5,r6
    8ef0:	380d883a 	mov	r6,r7
    8ef4:	dfc00215 	stw	ra,8(sp)
    8ef8:	80000015 	stw	zero,0(r16)
    8efc:	000d4580 	call	d458 <read>
    8f00:	00ffffc4 	movi	r3,-1
    8f04:	10c00526 	beq	r2,r3,8f1c <_read_r+0x4c>
    8f08:	dfc00217 	ldw	ra,8(sp)
    8f0c:	dc400117 	ldw	r17,4(sp)
    8f10:	dc000017 	ldw	r16,0(sp)
    8f14:	dec00304 	addi	sp,sp,12
    8f18:	f800283a 	ret
    8f1c:	80c00017 	ldw	r3,0(r16)
    8f20:	183ff926 	beq	r3,zero,8f08 <__alt_data_end+0xfffa7488>
    8f24:	88c00015 	stw	r3,0(r17)
    8f28:	003ff706 	br	8f08 <__alt_data_end+0xfffa7488>

00008f2c <_realloc_r>:
    8f2c:	defff604 	addi	sp,sp,-40
    8f30:	dcc00315 	stw	r19,12(sp)
    8f34:	dc400115 	stw	r17,4(sp)
    8f38:	dfc00915 	stw	ra,36(sp)
    8f3c:	df000815 	stw	fp,32(sp)
    8f40:	ddc00715 	stw	r23,28(sp)
    8f44:	dd800615 	stw	r22,24(sp)
    8f48:	dd400515 	stw	r21,20(sp)
    8f4c:	dd000415 	stw	r20,16(sp)
    8f50:	dc800215 	stw	r18,8(sp)
    8f54:	dc000015 	stw	r16,0(sp)
    8f58:	2827883a 	mov	r19,r5
    8f5c:	3023883a 	mov	r17,r6
    8f60:	2800bf26 	beq	r5,zero,9260 <_realloc_r+0x334>
    8f64:	2025883a 	mov	r18,r4
    8f68:	000d3c80 	call	d3c8 <__malloc_lock>
    8f6c:	98ffff17 	ldw	r3,-4(r19)
    8f70:	01bfff04 	movi	r6,-4
    8f74:	890002c4 	addi	r4,r17,11
    8f78:	01c00584 	movi	r7,22
    8f7c:	9d7ffe04 	addi	r21,r19,-8
    8f80:	19a0703a 	and	r16,r3,r6
    8f84:	39003f2e 	bgeu	r7,r4,9084 <_realloc_r+0x158>
    8f88:	053ffe04 	movi	r20,-8
    8f8c:	2528703a 	and	r20,r4,r20
    8f90:	a00f883a 	mov	r7,r20
    8f94:	a0008216 	blt	r20,zero,91a0 <_realloc_r+0x274>
    8f98:	a4408136 	bltu	r20,r17,91a0 <_realloc_r+0x274>
    8f9c:	81c03c0e 	bge	r16,r7,9090 <_realloc_r+0x164>
    8fa0:	07000074 	movhi	fp,1
    8fa4:	e73e1604 	addi	fp,fp,-1960
    8fa8:	e1000217 	ldw	r4,8(fp)
    8fac:	ac05883a 	add	r2,r21,r16
    8fb0:	2080bf26 	beq	r4,r2,92b0 <_realloc_r+0x384>
    8fb4:	11000117 	ldw	r4,4(r2)
    8fb8:	023fff84 	movi	r8,-2
    8fbc:	2210703a 	and	r8,r4,r8
    8fc0:	1211883a 	add	r8,r2,r8
    8fc4:	41400117 	ldw	r5,4(r8)
    8fc8:	2940004c 	andi	r5,r5,1
    8fcc:	28004a1e 	bne	r5,zero,90f8 <_realloc_r+0x1cc>
    8fd0:	017fff04 	movi	r5,-4
    8fd4:	2148703a 	and	r4,r4,r5
    8fd8:	2409883a 	add	r4,r4,r16
    8fdc:	21c0ad0e 	bge	r4,r7,9294 <_realloc_r+0x368>
    8fe0:	18c0004c 	andi	r3,r3,1
    8fe4:	18007f1e 	bne	r3,zero,91e4 <_realloc_r+0x2b8>
    8fe8:	9dfffe17 	ldw	r23,-8(r19)
    8fec:	adefc83a 	sub	r23,r21,r23
    8ff0:	bd800117 	ldw	r22,4(r23)
    8ff4:	b14a703a 	and	r5,r22,r5
    8ff8:	216d883a 	add	r22,r4,r5
    8ffc:	b1c04516 	blt	r22,r7,9114 <_realloc_r+0x1e8>
    9000:	10c00317 	ldw	r3,12(r2)
    9004:	10800217 	ldw	r2,8(r2)
    9008:	81bfff04 	addi	r6,r16,-4
    900c:	bc400204 	addi	r17,r23,8
    9010:	10c00315 	stw	r3,12(r2)
    9014:	18800215 	stw	r2,8(r3)
    9018:	b9400217 	ldw	r5,8(r23)
    901c:	b8c00317 	ldw	r3,12(r23)
    9020:	00800904 	movi	r2,36
    9024:	28c00315 	stw	r3,12(r5)
    9028:	19400215 	stw	r5,8(r3)
    902c:	1180ef36 	bltu	r2,r6,93ec <_realloc_r+0x4c0>
    9030:	008004c4 	movi	r2,19
    9034:	1180da2e 	bgeu	r2,r6,93a0 <_realloc_r+0x474>
    9038:	98800017 	ldw	r2,0(r19)
    903c:	b8800215 	stw	r2,8(r23)
    9040:	98800117 	ldw	r2,4(r19)
    9044:	b8800315 	stw	r2,12(r23)
    9048:	008006c4 	movi	r2,27
    904c:	1180fc2e 	bgeu	r2,r6,9440 <_realloc_r+0x514>
    9050:	98800217 	ldw	r2,8(r19)
    9054:	b8800415 	stw	r2,16(r23)
    9058:	98800317 	ldw	r2,12(r19)
    905c:	b8800515 	stw	r2,20(r23)
    9060:	00800904 	movi	r2,36
    9064:	3080421e 	bne	r6,r2,9170 <_realloc_r+0x244>
    9068:	98800417 	ldw	r2,16(r19)
    906c:	9cc00604 	addi	r19,r19,24
    9070:	b8c00804 	addi	r3,r23,32
    9074:	b8800615 	stw	r2,24(r23)
    9078:	98bfff17 	ldw	r2,-4(r19)
    907c:	b8800715 	stw	r2,28(r23)
    9080:	00003d06 	br	9178 <_realloc_r+0x24c>
    9084:	01c00404 	movi	r7,16
    9088:	3829883a 	mov	r20,r7
    908c:	003fc206 	br	8f98 <__alt_data_end+0xfffa7518>
    9090:	9823883a 	mov	r17,r19
    9094:	850fc83a 	sub	r7,r16,r20
    9098:	008003c4 	movi	r2,15
    909c:	18c0004c 	andi	r3,r3,1
    90a0:	11c04336 	bltu	r2,r7,91b0 <_realloc_r+0x284>
    90a4:	1c06b03a 	or	r3,r3,r16
    90a8:	a8c00115 	stw	r3,4(r21)
    90ac:	ac21883a 	add	r16,r21,r16
    90b0:	80c00117 	ldw	r3,4(r16)
    90b4:	18c00054 	ori	r3,r3,1
    90b8:	80c00115 	stw	r3,4(r16)
    90bc:	9009883a 	mov	r4,r18
    90c0:	000d3e80 	call	d3e8 <__malloc_unlock>
    90c4:	8805883a 	mov	r2,r17
    90c8:	dfc00917 	ldw	ra,36(sp)
    90cc:	df000817 	ldw	fp,32(sp)
    90d0:	ddc00717 	ldw	r23,28(sp)
    90d4:	dd800617 	ldw	r22,24(sp)
    90d8:	dd400517 	ldw	r21,20(sp)
    90dc:	dd000417 	ldw	r20,16(sp)
    90e0:	dcc00317 	ldw	r19,12(sp)
    90e4:	dc800217 	ldw	r18,8(sp)
    90e8:	dc400117 	ldw	r17,4(sp)
    90ec:	dc000017 	ldw	r16,0(sp)
    90f0:	dec00a04 	addi	sp,sp,40
    90f4:	f800283a 	ret
    90f8:	18c0004c 	andi	r3,r3,1
    90fc:	1800391e 	bne	r3,zero,91e4 <_realloc_r+0x2b8>
    9100:	9dfffe17 	ldw	r23,-8(r19)
    9104:	00bfff04 	movi	r2,-4
    9108:	adefc83a 	sub	r23,r21,r23
    910c:	b9400117 	ldw	r5,4(r23)
    9110:	288a703a 	and	r5,r5,r2
    9114:	2c2d883a 	add	r22,r5,r16
    9118:	b1c03216 	blt	r22,r7,91e4 <_realloc_r+0x2b8>
    911c:	b8800317 	ldw	r2,12(r23)
    9120:	b8c00217 	ldw	r3,8(r23)
    9124:	81bfff04 	addi	r6,r16,-4
    9128:	01000904 	movi	r4,36
    912c:	18800315 	stw	r2,12(r3)
    9130:	10c00215 	stw	r3,8(r2)
    9134:	bc400204 	addi	r17,r23,8
    9138:	2180ac36 	bltu	r4,r6,93ec <_realloc_r+0x4c0>
    913c:	008004c4 	movi	r2,19
    9140:	1180972e 	bgeu	r2,r6,93a0 <_realloc_r+0x474>
    9144:	98800017 	ldw	r2,0(r19)
    9148:	b8800215 	stw	r2,8(r23)
    914c:	98800117 	ldw	r2,4(r19)
    9150:	b8800315 	stw	r2,12(r23)
    9154:	008006c4 	movi	r2,27
    9158:	1180b92e 	bgeu	r2,r6,9440 <_realloc_r+0x514>
    915c:	98800217 	ldw	r2,8(r19)
    9160:	b8800415 	stw	r2,16(r23)
    9164:	98800317 	ldw	r2,12(r19)
    9168:	b8800515 	stw	r2,20(r23)
    916c:	313fbe26 	beq	r6,r4,9068 <__alt_data_end+0xfffa75e8>
    9170:	b8c00604 	addi	r3,r23,24
    9174:	9cc00404 	addi	r19,r19,16
    9178:	98800017 	ldw	r2,0(r19)
    917c:	b021883a 	mov	r16,r22
    9180:	b82b883a 	mov	r21,r23
    9184:	18800015 	stw	r2,0(r3)
    9188:	98800117 	ldw	r2,4(r19)
    918c:	18800115 	stw	r2,4(r3)
    9190:	98800217 	ldw	r2,8(r19)
    9194:	18800215 	stw	r2,8(r3)
    9198:	b8c00117 	ldw	r3,4(r23)
    919c:	003fbd06 	br	9094 <__alt_data_end+0xfffa7614>
    91a0:	00800304 	movi	r2,12
    91a4:	90800015 	stw	r2,0(r18)
    91a8:	0005883a 	mov	r2,zero
    91ac:	003fc606 	br	90c8 <__alt_data_end+0xfffa7648>
    91b0:	1d06b03a 	or	r3,r3,r20
    91b4:	ad0b883a 	add	r5,r21,r20
    91b8:	a8c00115 	stw	r3,4(r21)
    91bc:	38800054 	ori	r2,r7,1
    91c0:	28800115 	stw	r2,4(r5)
    91c4:	29cf883a 	add	r7,r5,r7
    91c8:	38800117 	ldw	r2,4(r7)
    91cc:	9009883a 	mov	r4,r18
    91d0:	29400204 	addi	r5,r5,8
    91d4:	10800054 	ori	r2,r2,1
    91d8:	38800115 	stw	r2,4(r7)
    91dc:	00050840 	call	5084 <_free_r>
    91e0:	003fb606 	br	90bc <__alt_data_end+0xfffa763c>
    91e4:	880b883a 	mov	r5,r17
    91e8:	9009883a 	mov	r4,r18
    91ec:	00005500 	call	550 <_malloc_r>
    91f0:	1023883a 	mov	r17,r2
    91f4:	1000aa26 	beq	r2,zero,94a0 <_realloc_r+0x574>
    91f8:	98ffff17 	ldw	r3,-4(r19)
    91fc:	113ffe04 	addi	r4,r2,-8
    9200:	00bfff84 	movi	r2,-2
    9204:	1884703a 	and	r2,r3,r2
    9208:	a885883a 	add	r2,r21,r2
    920c:	20808626 	beq	r4,r2,9428 <_realloc_r+0x4fc>
    9210:	81bfff04 	addi	r6,r16,-4
    9214:	00800904 	movi	r2,36
    9218:	11807036 	bltu	r2,r6,93dc <_realloc_r+0x4b0>
    921c:	00c004c4 	movi	r3,19
    9220:	19805636 	bltu	r3,r6,937c <_realloc_r+0x450>
    9224:	8805883a 	mov	r2,r17
    9228:	9807883a 	mov	r3,r19
    922c:	19000017 	ldw	r4,0(r3)
    9230:	11000015 	stw	r4,0(r2)
    9234:	19000117 	ldw	r4,4(r3)
    9238:	11000115 	stw	r4,4(r2)
    923c:	18c00217 	ldw	r3,8(r3)
    9240:	10c00215 	stw	r3,8(r2)
    9244:	980b883a 	mov	r5,r19
    9248:	9009883a 	mov	r4,r18
    924c:	00050840 	call	5084 <_free_r>
    9250:	9009883a 	mov	r4,r18
    9254:	000d3e80 	call	d3e8 <__malloc_unlock>
    9258:	8805883a 	mov	r2,r17
    925c:	003f9a06 	br	90c8 <__alt_data_end+0xfffa7648>
    9260:	300b883a 	mov	r5,r6
    9264:	dfc00917 	ldw	ra,36(sp)
    9268:	df000817 	ldw	fp,32(sp)
    926c:	ddc00717 	ldw	r23,28(sp)
    9270:	dd800617 	ldw	r22,24(sp)
    9274:	dd400517 	ldw	r21,20(sp)
    9278:	dd000417 	ldw	r20,16(sp)
    927c:	dcc00317 	ldw	r19,12(sp)
    9280:	dc800217 	ldw	r18,8(sp)
    9284:	dc400117 	ldw	r17,4(sp)
    9288:	dc000017 	ldw	r16,0(sp)
    928c:	dec00a04 	addi	sp,sp,40
    9290:	00005501 	jmpi	550 <_malloc_r>
    9294:	11400317 	ldw	r5,12(r2)
    9298:	10800217 	ldw	r2,8(r2)
    929c:	9823883a 	mov	r17,r19
    92a0:	2021883a 	mov	r16,r4
    92a4:	11400315 	stw	r5,12(r2)
    92a8:	28800215 	stw	r2,8(r5)
    92ac:	003f7906 	br	9094 <__alt_data_end+0xfffa7614>
    92b0:	21000117 	ldw	r4,4(r4)
    92b4:	00bfff04 	movi	r2,-4
    92b8:	a1800404 	addi	r6,r20,16
    92bc:	2088703a 	and	r4,r4,r2
    92c0:	2409883a 	add	r4,r4,r16
    92c4:	2180380e 	bge	r4,r6,93a8 <_realloc_r+0x47c>
    92c8:	18c0004c 	andi	r3,r3,1
    92cc:	183fc51e 	bne	r3,zero,91e4 <__alt_data_end+0xfffa7764>
    92d0:	9dfffe17 	ldw	r23,-8(r19)
    92d4:	adefc83a 	sub	r23,r21,r23
    92d8:	b9400117 	ldw	r5,4(r23)
    92dc:	288a703a 	and	r5,r5,r2
    92e0:	216d883a 	add	r22,r4,r5
    92e4:	b1bf8b16 	blt	r22,r6,9114 <__alt_data_end+0xfffa7694>
    92e8:	b8800317 	ldw	r2,12(r23)
    92ec:	b8c00217 	ldw	r3,8(r23)
    92f0:	81bfff04 	addi	r6,r16,-4
    92f4:	01000904 	movi	r4,36
    92f8:	18800315 	stw	r2,12(r3)
    92fc:	10c00215 	stw	r3,8(r2)
    9300:	bc400204 	addi	r17,r23,8
    9304:	21805a36 	bltu	r4,r6,9470 <_realloc_r+0x544>
    9308:	008004c4 	movi	r2,19
    930c:	1180562e 	bgeu	r2,r6,9468 <_realloc_r+0x53c>
    9310:	98800017 	ldw	r2,0(r19)
    9314:	b8800215 	stw	r2,8(r23)
    9318:	98800117 	ldw	r2,4(r19)
    931c:	b8800315 	stw	r2,12(r23)
    9320:	008006c4 	movi	r2,27
    9324:	11805636 	bltu	r2,r6,9480 <_realloc_r+0x554>
    9328:	b8800404 	addi	r2,r23,16
    932c:	9cc00204 	addi	r19,r19,8
    9330:	98c00017 	ldw	r3,0(r19)
    9334:	10c00015 	stw	r3,0(r2)
    9338:	98c00117 	ldw	r3,4(r19)
    933c:	10c00115 	stw	r3,4(r2)
    9340:	98c00217 	ldw	r3,8(r19)
    9344:	10c00215 	stw	r3,8(r2)
    9348:	bd07883a 	add	r3,r23,r20
    934c:	b505c83a 	sub	r2,r22,r20
    9350:	e0c00215 	stw	r3,8(fp)
    9354:	10800054 	ori	r2,r2,1
    9358:	18800115 	stw	r2,4(r3)
    935c:	b8800117 	ldw	r2,4(r23)
    9360:	9009883a 	mov	r4,r18
    9364:	1080004c 	andi	r2,r2,1
    9368:	a0a8b03a 	or	r20,r20,r2
    936c:	bd000115 	stw	r20,4(r23)
    9370:	000d3e80 	call	d3e8 <__malloc_unlock>
    9374:	8805883a 	mov	r2,r17
    9378:	003f5306 	br	90c8 <__alt_data_end+0xfffa7648>
    937c:	98c00017 	ldw	r3,0(r19)
    9380:	88c00015 	stw	r3,0(r17)
    9384:	98c00117 	ldw	r3,4(r19)
    9388:	88c00115 	stw	r3,4(r17)
    938c:	00c006c4 	movi	r3,27
    9390:	19801d36 	bltu	r3,r6,9408 <_realloc_r+0x4dc>
    9394:	88800204 	addi	r2,r17,8
    9398:	98c00204 	addi	r3,r19,8
    939c:	003fa306 	br	922c <__alt_data_end+0xfffa77ac>
    93a0:	8807883a 	mov	r3,r17
    93a4:	003f7406 	br	9178 <__alt_data_end+0xfffa76f8>
    93a8:	ad2b883a 	add	r21,r21,r20
    93ac:	2505c83a 	sub	r2,r4,r20
    93b0:	e5400215 	stw	r21,8(fp)
    93b4:	10800054 	ori	r2,r2,1
    93b8:	a8800115 	stw	r2,4(r21)
    93bc:	98bfff17 	ldw	r2,-4(r19)
    93c0:	9009883a 	mov	r4,r18
    93c4:	1080004c 	andi	r2,r2,1
    93c8:	a0a8b03a 	or	r20,r20,r2
    93cc:	9d3fff15 	stw	r20,-4(r19)
    93d0:	000d3e80 	call	d3e8 <__malloc_unlock>
    93d4:	9805883a 	mov	r2,r19
    93d8:	003f3b06 	br	90c8 <__alt_data_end+0xfffa7648>
    93dc:	8809883a 	mov	r4,r17
    93e0:	980b883a 	mov	r5,r19
    93e4:	0008d740 	call	8d74 <memmove>
    93e8:	003f9606 	br	9244 <__alt_data_end+0xfffa77c4>
    93ec:	8809883a 	mov	r4,r17
    93f0:	980b883a 	mov	r5,r19
    93f4:	0008d740 	call	8d74 <memmove>
    93f8:	b8c00117 	ldw	r3,4(r23)
    93fc:	b021883a 	mov	r16,r22
    9400:	b82b883a 	mov	r21,r23
    9404:	003f2306 	br	9094 <__alt_data_end+0xfffa7614>
    9408:	98c00217 	ldw	r3,8(r19)
    940c:	88c00215 	stw	r3,8(r17)
    9410:	98c00317 	ldw	r3,12(r19)
    9414:	88c00315 	stw	r3,12(r17)
    9418:	30800c26 	beq	r6,r2,944c <_realloc_r+0x520>
    941c:	88800404 	addi	r2,r17,16
    9420:	98c00404 	addi	r3,r19,16
    9424:	003f8106 	br	922c <__alt_data_end+0xfffa77ac>
    9428:	893fff17 	ldw	r4,-4(r17)
    942c:	00bfff04 	movi	r2,-4
    9430:	9823883a 	mov	r17,r19
    9434:	2084703a 	and	r2,r4,r2
    9438:	80a1883a 	add	r16,r16,r2
    943c:	003f1506 	br	9094 <__alt_data_end+0xfffa7614>
    9440:	b8c00404 	addi	r3,r23,16
    9444:	9cc00204 	addi	r19,r19,8
    9448:	003f4b06 	br	9178 <__alt_data_end+0xfffa76f8>
    944c:	99000417 	ldw	r4,16(r19)
    9450:	88800604 	addi	r2,r17,24
    9454:	98c00604 	addi	r3,r19,24
    9458:	89000415 	stw	r4,16(r17)
    945c:	99000517 	ldw	r4,20(r19)
    9460:	89000515 	stw	r4,20(r17)
    9464:	003f7106 	br	922c <__alt_data_end+0xfffa77ac>
    9468:	8805883a 	mov	r2,r17
    946c:	003fb006 	br	9330 <__alt_data_end+0xfffa78b0>
    9470:	8809883a 	mov	r4,r17
    9474:	980b883a 	mov	r5,r19
    9478:	0008d740 	call	8d74 <memmove>
    947c:	003fb206 	br	9348 <__alt_data_end+0xfffa78c8>
    9480:	98800217 	ldw	r2,8(r19)
    9484:	b8800415 	stw	r2,16(r23)
    9488:	98800317 	ldw	r2,12(r19)
    948c:	b8800515 	stw	r2,20(r23)
    9490:	31000726 	beq	r6,r4,94b0 <_realloc_r+0x584>
    9494:	b8800604 	addi	r2,r23,24
    9498:	9cc00404 	addi	r19,r19,16
    949c:	003fa406 	br	9330 <__alt_data_end+0xfffa78b0>
    94a0:	9009883a 	mov	r4,r18
    94a4:	000d3e80 	call	d3e8 <__malloc_unlock>
    94a8:	0005883a 	mov	r2,zero
    94ac:	003f0606 	br	90c8 <__alt_data_end+0xfffa7648>
    94b0:	98c00417 	ldw	r3,16(r19)
    94b4:	9cc00604 	addi	r19,r19,24
    94b8:	b8800804 	addi	r2,r23,32
    94bc:	b8c00615 	stw	r3,24(r23)
    94c0:	98ffff17 	ldw	r3,-4(r19)
    94c4:	b8c00715 	stw	r3,28(r23)
    94c8:	003f9906 	br	9330 <__alt_data_end+0xfffa78b0>

000094cc <__swbuf_r>:
    94cc:	defffc04 	addi	sp,sp,-16
    94d0:	dc800215 	stw	r18,8(sp)
    94d4:	dc400115 	stw	r17,4(sp)
    94d8:	dc000015 	stw	r16,0(sp)
    94dc:	dfc00315 	stw	ra,12(sp)
    94e0:	2025883a 	mov	r18,r4
    94e4:	2823883a 	mov	r17,r5
    94e8:	3021883a 	mov	r16,r6
    94ec:	20000226 	beq	r4,zero,94f8 <__swbuf_r+0x2c>
    94f0:	20800e17 	ldw	r2,56(r4)
    94f4:	10004126 	beq	r2,zero,95fc <__swbuf_r+0x130>
    94f8:	80c00617 	ldw	r3,24(r16)
    94fc:	8180030b 	ldhu	r6,12(r16)
    9500:	80c00215 	stw	r3,8(r16)
    9504:	30c0020c 	andi	r3,r6,8
    9508:	18003526 	beq	r3,zero,95e0 <__swbuf_r+0x114>
    950c:	80c00417 	ldw	r3,16(r16)
    9510:	18003326 	beq	r3,zero,95e0 <__swbuf_r+0x114>
    9514:	3088000c 	andi	r2,r6,8192
    9518:	8c403fcc 	andi	r17,r17,255
    951c:	10001726 	beq	r2,zero,957c <__swbuf_r+0xb0>
    9520:	80800017 	ldw	r2,0(r16)
    9524:	81000517 	ldw	r4,20(r16)
    9528:	10c7c83a 	sub	r3,r2,r3
    952c:	19001d0e 	bge	r3,r4,95a4 <__swbuf_r+0xd8>
    9530:	18c00044 	addi	r3,r3,1
    9534:	81400217 	ldw	r5,8(r16)
    9538:	11000044 	addi	r4,r2,1
    953c:	81000015 	stw	r4,0(r16)
    9540:	297fffc4 	addi	r5,r5,-1
    9544:	81400215 	stw	r5,8(r16)
    9548:	14400005 	stb	r17,0(r2)
    954c:	80800517 	ldw	r2,20(r16)
    9550:	10c01d26 	beq	r2,r3,95c8 <__swbuf_r+0xfc>
    9554:	8080030b 	ldhu	r2,12(r16)
    9558:	1080004c 	andi	r2,r2,1
    955c:	1000181e 	bne	r2,zero,95c0 <__swbuf_r+0xf4>
    9560:	8805883a 	mov	r2,r17
    9564:	dfc00317 	ldw	ra,12(sp)
    9568:	dc800217 	ldw	r18,8(sp)
    956c:	dc400117 	ldw	r17,4(sp)
    9570:	dc000017 	ldw	r16,0(sp)
    9574:	dec00404 	addi	sp,sp,16
    9578:	f800283a 	ret
    957c:	81001917 	ldw	r4,100(r16)
    9580:	00b7ffc4 	movi	r2,-8193
    9584:	31880014 	ori	r6,r6,8192
    9588:	2084703a 	and	r2,r4,r2
    958c:	80801915 	stw	r2,100(r16)
    9590:	80800017 	ldw	r2,0(r16)
    9594:	81000517 	ldw	r4,20(r16)
    9598:	8180030d 	sth	r6,12(r16)
    959c:	10c7c83a 	sub	r3,r2,r3
    95a0:	193fe316 	blt	r3,r4,9530 <__alt_data_end+0xfffa7ab0>
    95a4:	9009883a 	mov	r4,r18
    95a8:	800b883a 	mov	r5,r16
    95ac:	00049540 	call	4954 <_fflush_r>
    95b0:	1000091e 	bne	r2,zero,95d8 <__swbuf_r+0x10c>
    95b4:	80800017 	ldw	r2,0(r16)
    95b8:	00c00044 	movi	r3,1
    95bc:	003fdd06 	br	9534 <__alt_data_end+0xfffa7ab4>
    95c0:	00800284 	movi	r2,10
    95c4:	88bfe61e 	bne	r17,r2,9560 <__alt_data_end+0xfffa7ae0>
    95c8:	9009883a 	mov	r4,r18
    95cc:	800b883a 	mov	r5,r16
    95d0:	00049540 	call	4954 <_fflush_r>
    95d4:	103fe226 	beq	r2,zero,9560 <__alt_data_end+0xfffa7ae0>
    95d8:	00bfffc4 	movi	r2,-1
    95dc:	003fe106 	br	9564 <__alt_data_end+0xfffa7ae4>
    95e0:	9009883a 	mov	r4,r18
    95e4:	800b883a 	mov	r5,r16
    95e8:	0002ed40 	call	2ed4 <__swsetup_r>
    95ec:	1000051e 	bne	r2,zero,9604 <__swbuf_r+0x138>
    95f0:	8180030b 	ldhu	r6,12(r16)
    95f4:	80c00417 	ldw	r3,16(r16)
    95f8:	003fc606 	br	9514 <__alt_data_end+0xfffa7a94>
    95fc:	0004f100 	call	4f10 <__sinit>
    9600:	003fbd06 	br	94f8 <__alt_data_end+0xfffa7a78>
    9604:	80c0030b 	ldhu	r3,12(r16)
    9608:	00bfffc4 	movi	r2,-1
    960c:	18c01014 	ori	r3,r3,64
    9610:	80c0030d 	sth	r3,12(r16)
    9614:	00c00244 	movi	r3,9
    9618:	90c00015 	stw	r3,0(r18)
    961c:	003fd106 	br	9564 <__alt_data_end+0xfffa7ae4>

00009620 <__swbuf>:
    9620:	00c00074 	movhi	r3,1
    9624:	18c4c404 	addi	r3,r3,4880
    9628:	2005883a 	mov	r2,r4
    962c:	19000017 	ldw	r4,0(r3)
    9630:	280d883a 	mov	r6,r5
    9634:	100b883a 	mov	r5,r2
    9638:	00094cc1 	jmpi	94cc <__swbuf_r>

0000963c <_wcrtomb_r>:
    963c:	defff604 	addi	sp,sp,-40
    9640:	00800074 	movhi	r2,1
    9644:	dc800815 	stw	r18,32(sp)
    9648:	dc400715 	stw	r17,28(sp)
    964c:	dc000615 	stw	r16,24(sp)
    9650:	1084c604 	addi	r2,r2,4888
    9654:	dfc00915 	stw	ra,36(sp)
    9658:	2021883a 	mov	r16,r4
    965c:	3823883a 	mov	r17,r7
    9660:	14800017 	ldw	r18,0(r2)
    9664:	28001426 	beq	r5,zero,96b8 <_wcrtomb_r+0x7c>
    9668:	d9400415 	stw	r5,16(sp)
    966c:	d9800515 	stw	r6,20(sp)
    9670:	00055600 	call	5560 <__locale_charset>
    9674:	d9400417 	ldw	r5,16(sp)
    9678:	d9800517 	ldw	r6,20(sp)
    967c:	8009883a 	mov	r4,r16
    9680:	dc400015 	stw	r17,0(sp)
    9684:	100f883a 	mov	r7,r2
    9688:	903ee83a 	callr	r18
    968c:	00ffffc4 	movi	r3,-1
    9690:	10c0031e 	bne	r2,r3,96a0 <_wcrtomb_r+0x64>
    9694:	88000015 	stw	zero,0(r17)
    9698:	00c02284 	movi	r3,138
    969c:	80c00015 	stw	r3,0(r16)
    96a0:	dfc00917 	ldw	ra,36(sp)
    96a4:	dc800817 	ldw	r18,32(sp)
    96a8:	dc400717 	ldw	r17,28(sp)
    96ac:	dc000617 	ldw	r16,24(sp)
    96b0:	dec00a04 	addi	sp,sp,40
    96b4:	f800283a 	ret
    96b8:	00055600 	call	5560 <__locale_charset>
    96bc:	8009883a 	mov	r4,r16
    96c0:	dc400015 	stw	r17,0(sp)
    96c4:	d9400104 	addi	r5,sp,4
    96c8:	000d883a 	mov	r6,zero
    96cc:	100f883a 	mov	r7,r2
    96d0:	903ee83a 	callr	r18
    96d4:	003fed06 	br	968c <__alt_data_end+0xfffa7c0c>

000096d8 <wcrtomb>:
    96d8:	defff504 	addi	sp,sp,-44
    96dc:	dc400515 	stw	r17,20(sp)
    96e0:	dc000415 	stw	r16,16(sp)
    96e4:	dfc00a15 	stw	ra,40(sp)
    96e8:	dd400915 	stw	r21,36(sp)
    96ec:	dd000815 	stw	r20,32(sp)
    96f0:	dcc00715 	stw	r19,28(sp)
    96f4:	dc800615 	stw	r18,24(sp)
    96f8:	2021883a 	mov	r16,r4
    96fc:	3023883a 	mov	r17,r6
    9700:	20001d26 	beq	r4,zero,9778 <wcrtomb+0xa0>
    9704:	04800074 	movhi	r18,1
    9708:	9484c404 	addi	r18,r18,4880
    970c:	00800074 	movhi	r2,1
    9710:	95400017 	ldw	r21,0(r18)
    9714:	1084c604 	addi	r2,r2,4888
    9718:	15000017 	ldw	r20,0(r2)
    971c:	2827883a 	mov	r19,r5
    9720:	00055600 	call	5560 <__locale_charset>
    9724:	a809883a 	mov	r4,r21
    9728:	dc400015 	stw	r17,0(sp)
    972c:	800b883a 	mov	r5,r16
    9730:	980d883a 	mov	r6,r19
    9734:	100f883a 	mov	r7,r2
    9738:	a03ee83a 	callr	r20
    973c:	00ffffc4 	movi	r3,-1
    9740:	10c0041e 	bne	r2,r3,9754 <wcrtomb+0x7c>
    9744:	90c00017 	ldw	r3,0(r18)
    9748:	01002284 	movi	r4,138
    974c:	88000015 	stw	zero,0(r17)
    9750:	19000015 	stw	r4,0(r3)
    9754:	dfc00a17 	ldw	ra,40(sp)
    9758:	dd400917 	ldw	r21,36(sp)
    975c:	dd000817 	ldw	r20,32(sp)
    9760:	dcc00717 	ldw	r19,28(sp)
    9764:	dc800617 	ldw	r18,24(sp)
    9768:	dc400517 	ldw	r17,20(sp)
    976c:	dc000417 	ldw	r16,16(sp)
    9770:	dec00b04 	addi	sp,sp,44
    9774:	f800283a 	ret
    9778:	04800074 	movhi	r18,1
    977c:	9484c404 	addi	r18,r18,4880
    9780:	00800074 	movhi	r2,1
    9784:	94c00017 	ldw	r19,0(r18)
    9788:	1084c604 	addi	r2,r2,4888
    978c:	14000017 	ldw	r16,0(r2)
    9790:	00055600 	call	5560 <__locale_charset>
    9794:	9809883a 	mov	r4,r19
    9798:	dc400015 	stw	r17,0(sp)
    979c:	d9400104 	addi	r5,sp,4
    97a0:	000d883a 	mov	r6,zero
    97a4:	100f883a 	mov	r7,r2
    97a8:	803ee83a 	callr	r16
    97ac:	003fe306 	br	973c <__alt_data_end+0xfffa7cbc>

000097b0 <__ascii_wctomb>:
    97b0:	28000526 	beq	r5,zero,97c8 <__ascii_wctomb+0x18>
    97b4:	00803fc4 	movi	r2,255
    97b8:	11800536 	bltu	r2,r6,97d0 <__ascii_wctomb+0x20>
    97bc:	29800005 	stb	r6,0(r5)
    97c0:	00800044 	movi	r2,1
    97c4:	f800283a 	ret
    97c8:	0005883a 	mov	r2,zero
    97cc:	f800283a 	ret
    97d0:	00802284 	movi	r2,138
    97d4:	20800015 	stw	r2,0(r4)
    97d8:	00bfffc4 	movi	r2,-1
    97dc:	f800283a 	ret

000097e0 <_wctomb_r>:
    97e0:	00800074 	movhi	r2,1
    97e4:	defff904 	addi	sp,sp,-28
    97e8:	1084c604 	addi	r2,r2,4888
    97ec:	dfc00615 	stw	ra,24(sp)
    97f0:	dc400515 	stw	r17,20(sp)
    97f4:	dc000415 	stw	r16,16(sp)
    97f8:	3823883a 	mov	r17,r7
    97fc:	14000017 	ldw	r16,0(r2)
    9800:	d9000115 	stw	r4,4(sp)
    9804:	d9400215 	stw	r5,8(sp)
    9808:	d9800315 	stw	r6,12(sp)
    980c:	00055600 	call	5560 <__locale_charset>
    9810:	d9000117 	ldw	r4,4(sp)
    9814:	d9400217 	ldw	r5,8(sp)
    9818:	d9800317 	ldw	r6,12(sp)
    981c:	dc400015 	stw	r17,0(sp)
    9820:	100f883a 	mov	r7,r2
    9824:	803ee83a 	callr	r16
    9828:	dfc00617 	ldw	ra,24(sp)
    982c:	dc400517 	ldw	r17,20(sp)
    9830:	dc000417 	ldw	r16,16(sp)
    9834:	dec00704 	addi	sp,sp,28
    9838:	f800283a 	ret

0000983c <__udivdi3>:
    983c:	defff504 	addi	sp,sp,-44
    9840:	dcc00415 	stw	r19,16(sp)
    9844:	dc000115 	stw	r16,4(sp)
    9848:	dfc00a15 	stw	ra,40(sp)
    984c:	df000915 	stw	fp,36(sp)
    9850:	ddc00815 	stw	r23,32(sp)
    9854:	dd800715 	stw	r22,28(sp)
    9858:	dd400615 	stw	r21,24(sp)
    985c:	dd000515 	stw	r20,20(sp)
    9860:	dc800315 	stw	r18,12(sp)
    9864:	dc400215 	stw	r17,8(sp)
    9868:	2027883a 	mov	r19,r4
    986c:	2821883a 	mov	r16,r5
    9870:	3800471e 	bne	r7,zero,9990 <__udivdi3+0x154>
    9874:	3025883a 	mov	r18,r6
    9878:	2023883a 	mov	r17,r4
    987c:	2980592e 	bgeu	r5,r6,99e4 <__udivdi3+0x1a8>
    9880:	00bfffd4 	movui	r2,65535
    9884:	2829883a 	mov	r20,r5
    9888:	1180b236 	bltu	r2,r6,9b54 <__udivdi3+0x318>
    988c:	00803fc4 	movi	r2,255
    9890:	1181622e 	bgeu	r2,r6,9e1c <__udivdi3+0x5e0>
    9894:	00800204 	movi	r2,8
    9898:	1007883a 	mov	r3,r2
    989c:	3084d83a 	srl	r2,r6,r2
    98a0:	01000074 	movhi	r4,1
    98a4:	213dc904 	addi	r4,r4,-2268
    98a8:	2085883a 	add	r2,r4,r2
    98ac:	11000003 	ldbu	r4,0(r2)
    98b0:	20c9883a 	add	r4,r4,r3
    98b4:	00c00804 	movi	r3,32
    98b8:	1907c83a 	sub	r3,r3,r4
    98bc:	18000526 	beq	r3,zero,98d4 <__udivdi3+0x98>
    98c0:	80e0983a 	sll	r16,r16,r3
    98c4:	9908d83a 	srl	r4,r19,r4
    98c8:	30e4983a 	sll	r18,r6,r3
    98cc:	98e2983a 	sll	r17,r19,r3
    98d0:	8128b03a 	or	r20,r16,r4
    98d4:	902ad43a 	srli	r21,r18,16
    98d8:	a009883a 	mov	r4,r20
    98dc:	95bfffcc 	andi	r22,r18,65535
    98e0:	a80b883a 	mov	r5,r21
    98e4:	000a5bc0 	call	a5bc <__umodsi3>
    98e8:	a009883a 	mov	r4,r20
    98ec:	a80b883a 	mov	r5,r21
    98f0:	102f883a 	mov	r23,r2
    98f4:	000a5b40 	call	a5b4 <__udivsi3>
    98f8:	1009883a 	mov	r4,r2
    98fc:	b00b883a 	mov	r5,r22
    9900:	1021883a 	mov	r16,r2
    9904:	000a5c40 	call	a5c4 <__mulsi3>
    9908:	b82e943a 	slli	r23,r23,16
    990c:	8808d43a 	srli	r4,r17,16
    9910:	b906b03a 	or	r3,r23,r4
    9914:	1880052e 	bgeu	r3,r2,992c <__udivdi3+0xf0>
    9918:	1c87883a 	add	r3,r3,r18
    991c:	813fffc4 	addi	r4,r16,-1
    9920:	1c800136 	bltu	r3,r18,9928 <__udivdi3+0xec>
    9924:	18815236 	bltu	r3,r2,9e70 <__udivdi3+0x634>
    9928:	2021883a 	mov	r16,r4
    992c:	18a7c83a 	sub	r19,r3,r2
    9930:	9809883a 	mov	r4,r19
    9934:	a80b883a 	mov	r5,r21
    9938:	000a5bc0 	call	a5bc <__umodsi3>
    993c:	1029883a 	mov	r20,r2
    9940:	9809883a 	mov	r4,r19
    9944:	a80b883a 	mov	r5,r21
    9948:	a028943a 	slli	r20,r20,16
    994c:	000a5b40 	call	a5b4 <__udivsi3>
    9950:	1009883a 	mov	r4,r2
    9954:	b00b883a 	mov	r5,r22
    9958:	8c7fffcc 	andi	r17,r17,65535
    995c:	1027883a 	mov	r19,r2
    9960:	a462b03a 	or	r17,r20,r17
    9964:	000a5c40 	call	a5c4 <__mulsi3>
    9968:	8880052e 	bgeu	r17,r2,9980 <__udivdi3+0x144>
    996c:	8ca3883a 	add	r17,r17,r18
    9970:	98ffffc4 	addi	r3,r19,-1
    9974:	8c811036 	bltu	r17,r18,9db8 <__udivdi3+0x57c>
    9978:	88810f2e 	bgeu	r17,r2,9db8 <__udivdi3+0x57c>
    997c:	9cffff84 	addi	r19,r19,-2
    9980:	8020943a 	slli	r16,r16,16
    9984:	0007883a 	mov	r3,zero
    9988:	9c04b03a 	or	r2,r19,r16
    998c:	00006006 	br	9b10 <__udivdi3+0x2d4>
    9990:	29c05d36 	bltu	r5,r7,9b08 <__udivdi3+0x2cc>
    9994:	00bfffd4 	movui	r2,65535
    9998:	11c0692e 	bgeu	r2,r7,9b40 <__udivdi3+0x304>
    999c:	00804034 	movhi	r2,256
    99a0:	10bfffc4 	addi	r2,r2,-1
    99a4:	11c10e2e 	bgeu	r2,r7,9de0 <__udivdi3+0x5a4>
    99a8:	01400604 	movi	r5,24
    99ac:	2811883a 	mov	r8,r5
    99b0:	394ad83a 	srl	r5,r7,r5
    99b4:	00800074 	movhi	r2,1
    99b8:	10bdc904 	addi	r2,r2,-2268
    99bc:	114b883a 	add	r5,r2,r5
    99c0:	29400003 	ldbu	r5,0(r5)
    99c4:	00c00804 	movi	r3,32
    99c8:	2a0b883a 	add	r5,r5,r8
    99cc:	196fc83a 	sub	r23,r3,r5
    99d0:	b8006b1e 	bne	r23,zero,9b80 <__udivdi3+0x344>
    99d4:	3c011436 	bltu	r7,r16,9e28 <__udivdi3+0x5ec>
    99d8:	9985403a 	cmpgeu	r2,r19,r6
    99dc:	0007883a 	mov	r3,zero
    99e0:	00004b06 	br	9b10 <__udivdi3+0x2d4>
    99e4:	3000041e 	bne	r6,zero,99f8 <__udivdi3+0x1bc>
    99e8:	01000044 	movi	r4,1
    99ec:	000b883a 	mov	r5,zero
    99f0:	000a5b40 	call	a5b4 <__udivsi3>
    99f4:	1025883a 	mov	r18,r2
    99f8:	00bfffd4 	movui	r2,65535
    99fc:	14805b2e 	bgeu	r2,r18,9b6c <__udivdi3+0x330>
    9a00:	00804034 	movhi	r2,256
    9a04:	10bfffc4 	addi	r2,r2,-1
    9a08:	1480fe2e 	bgeu	r2,r18,9e04 <__udivdi3+0x5c8>
    9a0c:	00800604 	movi	r2,24
    9a10:	1007883a 	mov	r3,r2
    9a14:	9084d83a 	srl	r2,r18,r2
    9a18:	01000074 	movhi	r4,1
    9a1c:	213dc904 	addi	r4,r4,-2268
    9a20:	2085883a 	add	r2,r4,r2
    9a24:	11800003 	ldbu	r6,0(r2)
    9a28:	01c00804 	movi	r7,32
    9a2c:	30c7883a 	add	r3,r6,r3
    9a30:	38cfc83a 	sub	r7,r7,r3
    9a34:	3800a71e 	bne	r7,zero,9cd4 <__udivdi3+0x498>
    9a38:	9028d43a 	srli	r20,r18,16
    9a3c:	84a1c83a 	sub	r16,r16,r18
    9a40:	957fffcc 	andi	r21,r18,65535
    9a44:	00c00044 	movi	r3,1
    9a48:	8009883a 	mov	r4,r16
    9a4c:	a00b883a 	mov	r5,r20
    9a50:	d8c00015 	stw	r3,0(sp)
    9a54:	000a5bc0 	call	a5bc <__umodsi3>
    9a58:	8009883a 	mov	r4,r16
    9a5c:	a00b883a 	mov	r5,r20
    9a60:	102d883a 	mov	r22,r2
    9a64:	000a5b40 	call	a5b4 <__udivsi3>
    9a68:	1009883a 	mov	r4,r2
    9a6c:	a80b883a 	mov	r5,r21
    9a70:	1021883a 	mov	r16,r2
    9a74:	000a5c40 	call	a5c4 <__mulsi3>
    9a78:	b02c943a 	slli	r22,r22,16
    9a7c:	880ed43a 	srli	r7,r17,16
    9a80:	d8c00017 	ldw	r3,0(sp)
    9a84:	b1ccb03a 	or	r6,r22,r7
    9a88:	3080052e 	bgeu	r6,r2,9aa0 <__udivdi3+0x264>
    9a8c:	348d883a 	add	r6,r6,r18
    9a90:	813fffc4 	addi	r4,r16,-1
    9a94:	34800136 	bltu	r6,r18,9a9c <__udivdi3+0x260>
    9a98:	3080f236 	bltu	r6,r2,9e64 <__udivdi3+0x628>
    9a9c:	2021883a 	mov	r16,r4
    9aa0:	30a7c83a 	sub	r19,r6,r2
    9aa4:	9809883a 	mov	r4,r19
    9aa8:	a00b883a 	mov	r5,r20
    9aac:	d8c00015 	stw	r3,0(sp)
    9ab0:	000a5bc0 	call	a5bc <__umodsi3>
    9ab4:	102d883a 	mov	r22,r2
    9ab8:	9809883a 	mov	r4,r19
    9abc:	a00b883a 	mov	r5,r20
    9ac0:	b02c943a 	slli	r22,r22,16
    9ac4:	000a5b40 	call	a5b4 <__udivsi3>
    9ac8:	1009883a 	mov	r4,r2
    9acc:	a80b883a 	mov	r5,r21
    9ad0:	8c7fffcc 	andi	r17,r17,65535
    9ad4:	1027883a 	mov	r19,r2
    9ad8:	b462b03a 	or	r17,r22,r17
    9adc:	000a5c40 	call	a5c4 <__mulsi3>
    9ae0:	d8c00017 	ldw	r3,0(sp)
    9ae4:	8880052e 	bgeu	r17,r2,9afc <__udivdi3+0x2c0>
    9ae8:	8ca3883a 	add	r17,r17,r18
    9aec:	993fffc4 	addi	r4,r19,-1
    9af0:	8c80af36 	bltu	r17,r18,9db0 <__udivdi3+0x574>
    9af4:	8880ae2e 	bgeu	r17,r2,9db0 <__udivdi3+0x574>
    9af8:	9cffff84 	addi	r19,r19,-2
    9afc:	8020943a 	slli	r16,r16,16
    9b00:	9c04b03a 	or	r2,r19,r16
    9b04:	00000206 	br	9b10 <__udivdi3+0x2d4>
    9b08:	0007883a 	mov	r3,zero
    9b0c:	0005883a 	mov	r2,zero
    9b10:	dfc00a17 	ldw	ra,40(sp)
    9b14:	df000917 	ldw	fp,36(sp)
    9b18:	ddc00817 	ldw	r23,32(sp)
    9b1c:	dd800717 	ldw	r22,28(sp)
    9b20:	dd400617 	ldw	r21,24(sp)
    9b24:	dd000517 	ldw	r20,20(sp)
    9b28:	dcc00417 	ldw	r19,16(sp)
    9b2c:	dc800317 	ldw	r18,12(sp)
    9b30:	dc400217 	ldw	r17,8(sp)
    9b34:	dc000117 	ldw	r16,4(sp)
    9b38:	dec00b04 	addi	sp,sp,44
    9b3c:	f800283a 	ret
    9b40:	00803fc4 	movi	r2,255
    9b44:	11c0a92e 	bgeu	r2,r7,9dec <__udivdi3+0x5b0>
    9b48:	01400204 	movi	r5,8
    9b4c:	2811883a 	mov	r8,r5
    9b50:	003f9706 	br	99b0 <__alt_data_end+0xfffa7f30>
    9b54:	00804034 	movhi	r2,256
    9b58:	10bfffc4 	addi	r2,r2,-1
    9b5c:	1180a62e 	bgeu	r2,r6,9df8 <__udivdi3+0x5bc>
    9b60:	00800604 	movi	r2,24
    9b64:	1007883a 	mov	r3,r2
    9b68:	003f4c06 	br	989c <__alt_data_end+0xfffa7e1c>
    9b6c:	00803fc4 	movi	r2,255
    9b70:	1480a72e 	bgeu	r2,r18,9e10 <__udivdi3+0x5d4>
    9b74:	00800204 	movi	r2,8
    9b78:	1007883a 	mov	r3,r2
    9b7c:	003fa506 	br	9a14 <__alt_data_end+0xfffa7f94>
    9b80:	3178d83a 	srl	fp,r6,r5
    9b84:	3dce983a 	sll	r7,r7,r23
    9b88:	8168d83a 	srl	r20,r16,r5
    9b8c:	9950d83a 	srl	r8,r19,r5
    9b90:	3f38b03a 	or	fp,r7,fp
    9b94:	e024d43a 	srli	r18,fp,16
    9b98:	85e0983a 	sll	r16,r16,r23
    9b9c:	a009883a 	mov	r4,r20
    9ba0:	900b883a 	mov	r5,r18
    9ba4:	8220b03a 	or	r16,r16,r8
    9ba8:	35ea983a 	sll	r21,r6,r23
    9bac:	000a5bc0 	call	a5bc <__umodsi3>
    9bb0:	a009883a 	mov	r4,r20
    9bb4:	900b883a 	mov	r5,r18
    9bb8:	1023883a 	mov	r17,r2
    9bbc:	e5bfffcc 	andi	r22,fp,65535
    9bc0:	000a5b40 	call	a5b4 <__udivsi3>
    9bc4:	1009883a 	mov	r4,r2
    9bc8:	b00b883a 	mov	r5,r22
    9bcc:	1029883a 	mov	r20,r2
    9bd0:	000a5c40 	call	a5c4 <__mulsi3>
    9bd4:	8806943a 	slli	r3,r17,16
    9bd8:	8014d43a 	srli	r10,r16,16
    9bdc:	1a92b03a 	or	r9,r3,r10
    9be0:	4880042e 	bgeu	r9,r2,9bf4 <__udivdi3+0x3b8>
    9be4:	4f13883a 	add	r9,r9,fp
    9be8:	a0ffffc4 	addi	r3,r20,-1
    9bec:	4f00952e 	bgeu	r9,fp,9e44 <__udivdi3+0x608>
    9bf0:	1829883a 	mov	r20,r3
    9bf4:	48a3c83a 	sub	r17,r9,r2
    9bf8:	8809883a 	mov	r4,r17
    9bfc:	900b883a 	mov	r5,r18
    9c00:	000a5bc0 	call	a5bc <__umodsi3>
    9c04:	8809883a 	mov	r4,r17
    9c08:	900b883a 	mov	r5,r18
    9c0c:	d8800015 	stw	r2,0(sp)
    9c10:	000a5b40 	call	a5b4 <__udivsi3>
    9c14:	1009883a 	mov	r4,r2
    9c18:	b00b883a 	mov	r5,r22
    9c1c:	1023883a 	mov	r17,r2
    9c20:	000a5c40 	call	a5c4 <__mulsi3>
    9c24:	d8c00017 	ldw	r3,0(sp)
    9c28:	823fffcc 	andi	r8,r16,65535
    9c2c:	1806943a 	slli	r3,r3,16
    9c30:	1a20b03a 	or	r16,r3,r8
    9c34:	8080042e 	bgeu	r16,r2,9c48 <__udivdi3+0x40c>
    9c38:	8721883a 	add	r16,r16,fp
    9c3c:	88ffffc4 	addi	r3,r17,-1
    9c40:	87007c2e 	bgeu	r16,fp,9e34 <__udivdi3+0x5f8>
    9c44:	1823883a 	mov	r17,r3
    9c48:	a028943a 	slli	r20,r20,16
    9c4c:	acbfffcc 	andi	r18,r21,65535
    9c50:	900b883a 	mov	r5,r18
    9c54:	8d28b03a 	or	r20,r17,r20
    9c58:	a022d43a 	srli	r17,r20,16
    9c5c:	a5bfffcc 	andi	r22,r20,65535
    9c60:	b009883a 	mov	r4,r22
    9c64:	a82ad43a 	srli	r21,r21,16
    9c68:	80a1c83a 	sub	r16,r16,r2
    9c6c:	000a5c40 	call	a5c4 <__mulsi3>
    9c70:	8809883a 	mov	r4,r17
    9c74:	900b883a 	mov	r5,r18
    9c78:	1039883a 	mov	fp,r2
    9c7c:	000a5c40 	call	a5c4 <__mulsi3>
    9c80:	8809883a 	mov	r4,r17
    9c84:	a80b883a 	mov	r5,r21
    9c88:	1025883a 	mov	r18,r2
    9c8c:	000a5c40 	call	a5c4 <__mulsi3>
    9c90:	b009883a 	mov	r4,r22
    9c94:	a80b883a 	mov	r5,r21
    9c98:	1023883a 	mov	r17,r2
    9c9c:	000a5c40 	call	a5c4 <__mulsi3>
    9ca0:	e006d43a 	srli	r3,fp,16
    9ca4:	9085883a 	add	r2,r18,r2
    9ca8:	10c7883a 	add	r3,r2,r3
    9cac:	1c80022e 	bgeu	r3,r18,9cb8 <__udivdi3+0x47c>
    9cb0:	00800074 	movhi	r2,1
    9cb4:	88a3883a 	add	r17,r17,r2
    9cb8:	1808d43a 	srli	r4,r3,16
    9cbc:	8909883a 	add	r4,r17,r4
    9cc0:	81004436 	bltu	r16,r4,9dd4 <__udivdi3+0x598>
    9cc4:	81003e26 	beq	r16,r4,9dc0 <__udivdi3+0x584>
    9cc8:	a005883a 	mov	r2,r20
    9ccc:	0007883a 	mov	r3,zero
    9cd0:	003f8f06 	br	9b10 <__alt_data_end+0xfffa8090>
    9cd4:	91e4983a 	sll	r18,r18,r7
    9cd8:	80eed83a 	srl	r23,r16,r3
    9cdc:	81cc983a 	sll	r6,r16,r7
    9ce0:	9028d43a 	srli	r20,r18,16
    9ce4:	98c6d83a 	srl	r3,r19,r3
    9ce8:	b809883a 	mov	r4,r23
    9cec:	a00b883a 	mov	r5,r20
    9cf0:	30ecb03a 	or	r22,r6,r3
    9cf4:	99e2983a 	sll	r17,r19,r7
    9cf8:	000a5bc0 	call	a5bc <__umodsi3>
    9cfc:	b809883a 	mov	r4,r23
    9d00:	a00b883a 	mov	r5,r20
    9d04:	1021883a 	mov	r16,r2
    9d08:	957fffcc 	andi	r21,r18,65535
    9d0c:	000a5b40 	call	a5b4 <__udivsi3>
    9d10:	a80b883a 	mov	r5,r21
    9d14:	1009883a 	mov	r4,r2
    9d18:	102f883a 	mov	r23,r2
    9d1c:	000a5c40 	call	a5c4 <__mulsi3>
    9d20:	8020943a 	slli	r16,r16,16
    9d24:	b00ad43a 	srli	r5,r22,16
    9d28:	814cb03a 	or	r6,r16,r5
    9d2c:	3080062e 	bgeu	r6,r2,9d48 <__udivdi3+0x50c>
    9d30:	348d883a 	add	r6,r6,r18
    9d34:	b8ffffc4 	addi	r3,r23,-1
    9d38:	34804836 	bltu	r6,r18,9e5c <__udivdi3+0x620>
    9d3c:	3080472e 	bgeu	r6,r2,9e5c <__udivdi3+0x620>
    9d40:	bdffff84 	addi	r23,r23,-2
    9d44:	348d883a 	add	r6,r6,r18
    9d48:	30a7c83a 	sub	r19,r6,r2
    9d4c:	9809883a 	mov	r4,r19
    9d50:	a00b883a 	mov	r5,r20
    9d54:	000a5bc0 	call	a5bc <__umodsi3>
    9d58:	9809883a 	mov	r4,r19
    9d5c:	a00b883a 	mov	r5,r20
    9d60:	1039883a 	mov	fp,r2
    9d64:	000a5b40 	call	a5b4 <__udivsi3>
    9d68:	1009883a 	mov	r4,r2
    9d6c:	a80b883a 	mov	r5,r21
    9d70:	e038943a 	slli	fp,fp,16
    9d74:	1027883a 	mov	r19,r2
    9d78:	000a5c40 	call	a5c4 <__mulsi3>
    9d7c:	b1bfffcc 	andi	r6,r22,65535
    9d80:	e18cb03a 	or	r6,fp,r6
    9d84:	3080062e 	bgeu	r6,r2,9da0 <__udivdi3+0x564>
    9d88:	348d883a 	add	r6,r6,r18
    9d8c:	98ffffc4 	addi	r3,r19,-1
    9d90:	34803036 	bltu	r6,r18,9e54 <__udivdi3+0x618>
    9d94:	30802f2e 	bgeu	r6,r2,9e54 <__udivdi3+0x618>
    9d98:	9cffff84 	addi	r19,r19,-2
    9d9c:	348d883a 	add	r6,r6,r18
    9da0:	b82e943a 	slli	r23,r23,16
    9da4:	30a1c83a 	sub	r16,r6,r2
    9da8:	9dc6b03a 	or	r3,r19,r23
    9dac:	003f2606 	br	9a48 <__alt_data_end+0xfffa7fc8>
    9db0:	2027883a 	mov	r19,r4
    9db4:	003f5106 	br	9afc <__alt_data_end+0xfffa807c>
    9db8:	1827883a 	mov	r19,r3
    9dbc:	003ef006 	br	9980 <__alt_data_end+0xfffa7f00>
    9dc0:	1808943a 	slli	r4,r3,16
    9dc4:	9dc6983a 	sll	r3,r19,r23
    9dc8:	e73fffcc 	andi	fp,fp,65535
    9dcc:	2709883a 	add	r4,r4,fp
    9dd0:	193fbd2e 	bgeu	r3,r4,9cc8 <__alt_data_end+0xfffa8248>
    9dd4:	a0bfffc4 	addi	r2,r20,-1
    9dd8:	0007883a 	mov	r3,zero
    9ddc:	003f4c06 	br	9b10 <__alt_data_end+0xfffa8090>
    9de0:	01400404 	movi	r5,16
    9de4:	2811883a 	mov	r8,r5
    9de8:	003ef106 	br	99b0 <__alt_data_end+0xfffa7f30>
    9dec:	000b883a 	mov	r5,zero
    9df0:	0011883a 	mov	r8,zero
    9df4:	003eee06 	br	99b0 <__alt_data_end+0xfffa7f30>
    9df8:	00800404 	movi	r2,16
    9dfc:	1007883a 	mov	r3,r2
    9e00:	003ea606 	br	989c <__alt_data_end+0xfffa7e1c>
    9e04:	00800404 	movi	r2,16
    9e08:	1007883a 	mov	r3,r2
    9e0c:	003f0106 	br	9a14 <__alt_data_end+0xfffa7f94>
    9e10:	0005883a 	mov	r2,zero
    9e14:	0007883a 	mov	r3,zero
    9e18:	003efe06 	br	9a14 <__alt_data_end+0xfffa7f94>
    9e1c:	0005883a 	mov	r2,zero
    9e20:	0007883a 	mov	r3,zero
    9e24:	003e9d06 	br	989c <__alt_data_end+0xfffa7e1c>
    9e28:	0007883a 	mov	r3,zero
    9e2c:	00800044 	movi	r2,1
    9e30:	003f3706 	br	9b10 <__alt_data_end+0xfffa8090>
    9e34:	80bf832e 	bgeu	r16,r2,9c44 <__alt_data_end+0xfffa81c4>
    9e38:	8c7fff84 	addi	r17,r17,-2
    9e3c:	8721883a 	add	r16,r16,fp
    9e40:	003f8106 	br	9c48 <__alt_data_end+0xfffa81c8>
    9e44:	48bf6a2e 	bgeu	r9,r2,9bf0 <__alt_data_end+0xfffa8170>
    9e48:	a53fff84 	addi	r20,r20,-2
    9e4c:	4f13883a 	add	r9,r9,fp
    9e50:	003f6806 	br	9bf4 <__alt_data_end+0xfffa8174>
    9e54:	1827883a 	mov	r19,r3
    9e58:	003fd106 	br	9da0 <__alt_data_end+0xfffa8320>
    9e5c:	182f883a 	mov	r23,r3
    9e60:	003fb906 	br	9d48 <__alt_data_end+0xfffa82c8>
    9e64:	843fff84 	addi	r16,r16,-2
    9e68:	348d883a 	add	r6,r6,r18
    9e6c:	003f0c06 	br	9aa0 <__alt_data_end+0xfffa8020>
    9e70:	843fff84 	addi	r16,r16,-2
    9e74:	1c87883a 	add	r3,r3,r18
    9e78:	003eac06 	br	992c <__alt_data_end+0xfffa7eac>

00009e7c <__umoddi3>:
    9e7c:	defff404 	addi	sp,sp,-48
    9e80:	dd800815 	stw	r22,32(sp)
    9e84:	dc400315 	stw	r17,12(sp)
    9e88:	dc000215 	stw	r16,8(sp)
    9e8c:	dfc00b15 	stw	ra,44(sp)
    9e90:	df000a15 	stw	fp,40(sp)
    9e94:	ddc00915 	stw	r23,36(sp)
    9e98:	dd400715 	stw	r21,28(sp)
    9e9c:	dd000615 	stw	r20,24(sp)
    9ea0:	dcc00515 	stw	r19,20(sp)
    9ea4:	dc800415 	stw	r18,16(sp)
    9ea8:	2021883a 	mov	r16,r4
    9eac:	2823883a 	mov	r17,r5
    9eb0:	282d883a 	mov	r22,r5
    9eb4:	38003c1e 	bne	r7,zero,9fa8 <__umoddi3+0x12c>
    9eb8:	3027883a 	mov	r19,r6
    9ebc:	2029883a 	mov	r20,r4
    9ec0:	2980522e 	bgeu	r5,r6,a00c <__umoddi3+0x190>
    9ec4:	00bfffd4 	movui	r2,65535
    9ec8:	1180a436 	bltu	r2,r6,a15c <__umoddi3+0x2e0>
    9ecc:	00803fc4 	movi	r2,255
    9ed0:	11815e2e 	bgeu	r2,r6,a44c <__umoddi3+0x5d0>
    9ed4:	01400204 	movi	r5,8
    9ed8:	2805883a 	mov	r2,r5
    9edc:	314ad83a 	srl	r5,r6,r5
    9ee0:	00c00074 	movhi	r3,1
    9ee4:	18fdc904 	addi	r3,r3,-2268
    9ee8:	194b883a 	add	r5,r3,r5
    9eec:	29000003 	ldbu	r4,0(r5)
    9ef0:	2089883a 	add	r4,r4,r2
    9ef4:	00800804 	movi	r2,32
    9ef8:	1105c83a 	sub	r2,r2,r4
    9efc:	10010c26 	beq	r2,zero,a330 <__umoddi3+0x4b4>
    9f00:	88a2983a 	sll	r17,r17,r2
    9f04:	8108d83a 	srl	r4,r16,r4
    9f08:	30a6983a 	sll	r19,r6,r2
    9f0c:	80a8983a 	sll	r20,r16,r2
    9f10:	1025883a 	mov	r18,r2
    9f14:	892cb03a 	or	r22,r17,r4
    9f18:	9822d43a 	srli	r17,r19,16
    9f1c:	b009883a 	mov	r4,r22
    9f20:	9d7fffcc 	andi	r21,r19,65535
    9f24:	880b883a 	mov	r5,r17
    9f28:	000a5bc0 	call	a5bc <__umodsi3>
    9f2c:	b009883a 	mov	r4,r22
    9f30:	880b883a 	mov	r5,r17
    9f34:	102f883a 	mov	r23,r2
    9f38:	000a5b40 	call	a5b4 <__udivsi3>
    9f3c:	1009883a 	mov	r4,r2
    9f40:	a80b883a 	mov	r5,r21
    9f44:	000a5c40 	call	a5c4 <__mulsi3>
    9f48:	b82e943a 	slli	r23,r23,16
    9f4c:	a008d43a 	srli	r4,r20,16
    9f50:	b906b03a 	or	r3,r23,r4
    9f54:	1880042e 	bgeu	r3,r2,9f68 <__umoddi3+0xec>
    9f58:	1cc7883a 	add	r3,r3,r19
    9f5c:	1cc00236 	bltu	r3,r19,9f68 <__umoddi3+0xec>
    9f60:	1880012e 	bgeu	r3,r2,9f68 <__umoddi3+0xec>
    9f64:	1cc7883a 	add	r3,r3,r19
    9f68:	18a1c83a 	sub	r16,r3,r2
    9f6c:	8009883a 	mov	r4,r16
    9f70:	880b883a 	mov	r5,r17
    9f74:	000a5bc0 	call	a5bc <__umodsi3>
    9f78:	8009883a 	mov	r4,r16
    9f7c:	880b883a 	mov	r5,r17
    9f80:	102d883a 	mov	r22,r2
    9f84:	000a5b40 	call	a5b4 <__udivsi3>
    9f88:	1009883a 	mov	r4,r2
    9f8c:	a80b883a 	mov	r5,r21
    9f90:	b02c943a 	slli	r22,r22,16
    9f94:	000a5c40 	call	a5c4 <__mulsi3>
    9f98:	a13fffcc 	andi	r4,r20,65535
    9f9c:	b106b03a 	or	r3,r22,r4
    9fa0:	1880572e 	bgeu	r3,r2,a100 <__umoddi3+0x284>
    9fa4:	00005206 	br	a0f0 <__umoddi3+0x274>
    9fa8:	29c05936 	bltu	r5,r7,a110 <__umoddi3+0x294>
    9fac:	00bfffd4 	movui	r2,65535
    9fb0:	11c0652e 	bgeu	r2,r7,a148 <__umoddi3+0x2cc>
    9fb4:	00804034 	movhi	r2,256
    9fb8:	10bfffc4 	addi	r2,r2,-1
    9fbc:	11c1172e 	bgeu	r2,r7,a41c <__umoddi3+0x5a0>
    9fc0:	01400604 	movi	r5,24
    9fc4:	282b883a 	mov	r21,r5
    9fc8:	394ad83a 	srl	r5,r7,r5
    9fcc:	00c00074 	movhi	r3,1
    9fd0:	18fdc904 	addi	r3,r3,-2268
    9fd4:	194b883a 	add	r5,r3,r5
    9fd8:	28800003 	ldbu	r2,0(r5)
    9fdc:	00c00804 	movi	r3,32
    9fe0:	156b883a 	add	r21,r2,r21
    9fe4:	1d69c83a 	sub	r20,r3,r21
    9fe8:	a000671e 	bne	r20,zero,a188 <__umoddi3+0x30c>
    9fec:	3c400136 	bltu	r7,r17,9ff4 <__umoddi3+0x178>
    9ff0:	81812336 	bltu	r16,r6,a480 <__umoddi3+0x604>
    9ff4:	8185c83a 	sub	r2,r16,r6
    9ff8:	89e3c83a 	sub	r17,r17,r7
    9ffc:	8087803a 	cmpltu	r3,r16,r2
    a000:	88edc83a 	sub	r22,r17,r3
    a004:	b007883a 	mov	r3,r22
    a008:	00004306 	br	a118 <__umoddi3+0x29c>
    a00c:	3000041e 	bne	r6,zero,a020 <__umoddi3+0x1a4>
    a010:	01000044 	movi	r4,1
    a014:	000b883a 	mov	r5,zero
    a018:	000a5b40 	call	a5b4 <__udivsi3>
    a01c:	1027883a 	mov	r19,r2
    a020:	00bfffd4 	movui	r2,65535
    a024:	14c0532e 	bgeu	r2,r19,a174 <__umoddi3+0x2f8>
    a028:	00804034 	movhi	r2,256
    a02c:	10bfffc4 	addi	r2,r2,-1
    a030:	14c1032e 	bgeu	r2,r19,a440 <__umoddi3+0x5c4>
    a034:	00800604 	movi	r2,24
    a038:	1007883a 	mov	r3,r2
    a03c:	9884d83a 	srl	r2,r19,r2
    a040:	01000074 	movhi	r4,1
    a044:	213dc904 	addi	r4,r4,-2268
    a048:	2085883a 	add	r2,r4,r2
    a04c:	11000003 	ldbu	r4,0(r2)
    a050:	00800804 	movi	r2,32
    a054:	20c7883a 	add	r3,r4,r3
    a058:	10c5c83a 	sub	r2,r2,r3
    a05c:	1000b61e 	bne	r2,zero,a338 <__umoddi3+0x4bc>
    a060:	982ad43a 	srli	r21,r19,16
    a064:	8ce3c83a 	sub	r17,r17,r19
    a068:	9dbfffcc 	andi	r22,r19,65535
    a06c:	0025883a 	mov	r18,zero
    a070:	8809883a 	mov	r4,r17
    a074:	a80b883a 	mov	r5,r21
    a078:	000a5bc0 	call	a5bc <__umodsi3>
    a07c:	8809883a 	mov	r4,r17
    a080:	a80b883a 	mov	r5,r21
    a084:	102f883a 	mov	r23,r2
    a088:	000a5b40 	call	a5b4 <__udivsi3>
    a08c:	1009883a 	mov	r4,r2
    a090:	b00b883a 	mov	r5,r22
    a094:	000a5c40 	call	a5c4 <__mulsi3>
    a098:	b82e943a 	slli	r23,r23,16
    a09c:	a008d43a 	srli	r4,r20,16
    a0a0:	b906b03a 	or	r3,r23,r4
    a0a4:	1880032e 	bgeu	r3,r2,a0b4 <__umoddi3+0x238>
    a0a8:	1cc7883a 	add	r3,r3,r19
    a0ac:	1cc00136 	bltu	r3,r19,a0b4 <__umoddi3+0x238>
    a0b0:	1880f136 	bltu	r3,r2,a478 <__umoddi3+0x5fc>
    a0b4:	18a1c83a 	sub	r16,r3,r2
    a0b8:	8009883a 	mov	r4,r16
    a0bc:	a80b883a 	mov	r5,r21
    a0c0:	000a5bc0 	call	a5bc <__umodsi3>
    a0c4:	8009883a 	mov	r4,r16
    a0c8:	a80b883a 	mov	r5,r21
    a0cc:	1023883a 	mov	r17,r2
    a0d0:	000a5b40 	call	a5b4 <__udivsi3>
    a0d4:	1009883a 	mov	r4,r2
    a0d8:	b00b883a 	mov	r5,r22
    a0dc:	8822943a 	slli	r17,r17,16
    a0e0:	000a5c40 	call	a5c4 <__mulsi3>
    a0e4:	a13fffcc 	andi	r4,r20,65535
    a0e8:	8906b03a 	or	r3,r17,r4
    a0ec:	1880042e 	bgeu	r3,r2,a100 <__umoddi3+0x284>
    a0f0:	1cc7883a 	add	r3,r3,r19
    a0f4:	1cc00236 	bltu	r3,r19,a100 <__umoddi3+0x284>
    a0f8:	1880012e 	bgeu	r3,r2,a100 <__umoddi3+0x284>
    a0fc:	1cc7883a 	add	r3,r3,r19
    a100:	1887c83a 	sub	r3,r3,r2
    a104:	1c84d83a 	srl	r2,r3,r18
    a108:	0007883a 	mov	r3,zero
    a10c:	00000206 	br	a118 <__umoddi3+0x29c>
    a110:	2005883a 	mov	r2,r4
    a114:	2807883a 	mov	r3,r5
    a118:	dfc00b17 	ldw	ra,44(sp)
    a11c:	df000a17 	ldw	fp,40(sp)
    a120:	ddc00917 	ldw	r23,36(sp)
    a124:	dd800817 	ldw	r22,32(sp)
    a128:	dd400717 	ldw	r21,28(sp)
    a12c:	dd000617 	ldw	r20,24(sp)
    a130:	dcc00517 	ldw	r19,20(sp)
    a134:	dc800417 	ldw	r18,16(sp)
    a138:	dc400317 	ldw	r17,12(sp)
    a13c:	dc000217 	ldw	r16,8(sp)
    a140:	dec00c04 	addi	sp,sp,48
    a144:	f800283a 	ret
    a148:	00803fc4 	movi	r2,255
    a14c:	11c0b02e 	bgeu	r2,r7,a410 <__umoddi3+0x594>
    a150:	01400204 	movi	r5,8
    a154:	282b883a 	mov	r21,r5
    a158:	003f9b06 	br	9fc8 <__alt_data_end+0xfffa8548>
    a15c:	00804034 	movhi	r2,256
    a160:	10bfffc4 	addi	r2,r2,-1
    a164:	1180b02e 	bgeu	r2,r6,a428 <__umoddi3+0x5ac>
    a168:	01400604 	movi	r5,24
    a16c:	2805883a 	mov	r2,r5
    a170:	003f5a06 	br	9edc <__alt_data_end+0xfffa845c>
    a174:	00803fc4 	movi	r2,255
    a178:	14c0ae2e 	bgeu	r2,r19,a434 <__umoddi3+0x5b8>
    a17c:	00800204 	movi	r2,8
    a180:	1007883a 	mov	r3,r2
    a184:	003fad06 	br	a03c <__alt_data_end+0xfffa85bc>
    a188:	3d0a983a 	sll	r5,r7,r20
    a18c:	356cd83a 	srl	r22,r6,r21
    a190:	8d78d83a 	srl	fp,r17,r21
    a194:	8d10983a 	sll	r8,r17,r20
    a198:	2dacb03a 	or	r22,r5,r22
    a19c:	b02ed43a 	srli	r23,r22,16
    a1a0:	8564d83a 	srl	r18,r16,r21
    a1a4:	e009883a 	mov	r4,fp
    a1a8:	b80b883a 	mov	r5,r23
    a1ac:	44a4b03a 	or	r18,r8,r18
    a1b0:	3526983a 	sll	r19,r6,r20
    a1b4:	000a5bc0 	call	a5bc <__umodsi3>
    a1b8:	e009883a 	mov	r4,fp
    a1bc:	b80b883a 	mov	r5,r23
    a1c0:	b47fffcc 	andi	r17,r22,65535
    a1c4:	d8800015 	stw	r2,0(sp)
    a1c8:	000a5b40 	call	a5b4 <__udivsi3>
    a1cc:	1009883a 	mov	r4,r2
    a1d0:	880b883a 	mov	r5,r17
    a1d4:	1039883a 	mov	fp,r2
    a1d8:	000a5c40 	call	a5c4 <__mulsi3>
    a1dc:	d9800017 	ldw	r6,0(sp)
    a1e0:	9008d43a 	srli	r4,r18,16
    a1e4:	8520983a 	sll	r16,r16,r20
    a1e8:	300c943a 	slli	r6,r6,16
    a1ec:	3106b03a 	or	r3,r6,r4
    a1f0:	1880042e 	bgeu	r3,r2,a204 <__umoddi3+0x388>
    a1f4:	1d87883a 	add	r3,r3,r22
    a1f8:	e13fffc4 	addi	r4,fp,-1
    a1fc:	1d809a2e 	bgeu	r3,r22,a468 <__umoddi3+0x5ec>
    a200:	2039883a 	mov	fp,r4
    a204:	1887c83a 	sub	r3,r3,r2
    a208:	1809883a 	mov	r4,r3
    a20c:	b80b883a 	mov	r5,r23
    a210:	d8c00115 	stw	r3,4(sp)
    a214:	000a5bc0 	call	a5bc <__umodsi3>
    a218:	d8c00117 	ldw	r3,4(sp)
    a21c:	b80b883a 	mov	r5,r23
    a220:	d8800015 	stw	r2,0(sp)
    a224:	1809883a 	mov	r4,r3
    a228:	000a5b40 	call	a5b4 <__udivsi3>
    a22c:	880b883a 	mov	r5,r17
    a230:	1009883a 	mov	r4,r2
    a234:	102f883a 	mov	r23,r2
    a238:	000a5c40 	call	a5c4 <__mulsi3>
    a23c:	d9800017 	ldw	r6,0(sp)
    a240:	947fffcc 	andi	r17,r18,65535
    a244:	300c943a 	slli	r6,r6,16
    a248:	3464b03a 	or	r18,r6,r17
    a24c:	9080042e 	bgeu	r18,r2,a260 <__umoddi3+0x3e4>
    a250:	95a5883a 	add	r18,r18,r22
    a254:	b8ffffc4 	addi	r3,r23,-1
    a258:	95807f2e 	bgeu	r18,r22,a458 <__umoddi3+0x5dc>
    a25c:	182f883a 	mov	r23,r3
    a260:	e038943a 	slli	fp,fp,16
    a264:	980cd43a 	srli	r6,r19,16
    a268:	98ffffcc 	andi	r3,r19,65535
    a26c:	bf38b03a 	or	fp,r23,fp
    a270:	e02ed43a 	srli	r23,fp,16
    a274:	e73fffcc 	andi	fp,fp,65535
    a278:	180b883a 	mov	r5,r3
    a27c:	e009883a 	mov	r4,fp
    a280:	d9800015 	stw	r6,0(sp)
    a284:	d8c00115 	stw	r3,4(sp)
    a288:	90a5c83a 	sub	r18,r18,r2
    a28c:	000a5c40 	call	a5c4 <__mulsi3>
    a290:	d8c00117 	ldw	r3,4(sp)
    a294:	b809883a 	mov	r4,r23
    a298:	1023883a 	mov	r17,r2
    a29c:	180b883a 	mov	r5,r3
    a2a0:	000a5c40 	call	a5c4 <__mulsi3>
    a2a4:	d9800017 	ldw	r6,0(sp)
    a2a8:	b809883a 	mov	r4,r23
    a2ac:	d8800115 	stw	r2,4(sp)
    a2b0:	300b883a 	mov	r5,r6
    a2b4:	302f883a 	mov	r23,r6
    a2b8:	000a5c40 	call	a5c4 <__mulsi3>
    a2bc:	e009883a 	mov	r4,fp
    a2c0:	b80b883a 	mov	r5,r23
    a2c4:	d8800015 	stw	r2,0(sp)
    a2c8:	000a5c40 	call	a5c4 <__mulsi3>
    a2cc:	d8c00117 	ldw	r3,4(sp)
    a2d0:	880cd43a 	srli	r6,r17,16
    a2d4:	d9c00017 	ldw	r7,0(sp)
    a2d8:	1885883a 	add	r2,r3,r2
    a2dc:	118d883a 	add	r6,r2,r6
    a2e0:	30c0022e 	bgeu	r6,r3,a2ec <__umoddi3+0x470>
    a2e4:	00800074 	movhi	r2,1
    a2e8:	388f883a 	add	r7,r7,r2
    a2ec:	3006d43a 	srli	r3,r6,16
    a2f0:	300c943a 	slli	r6,r6,16
    a2f4:	8c7fffcc 	andi	r17,r17,65535
    a2f8:	38c7883a 	add	r3,r7,r3
    a2fc:	3463883a 	add	r17,r6,r17
    a300:	90c03d36 	bltu	r18,r3,a3f8 <__umoddi3+0x57c>
    a304:	90c06026 	beq	r18,r3,a488 <__umoddi3+0x60c>
    a308:	90c9c83a 	sub	r4,r18,r3
    a30c:	880f883a 	mov	r7,r17
    a310:	81cfc83a 	sub	r7,r16,r7
    a314:	81c7803a 	cmpltu	r3,r16,r7
    a318:	20c7c83a 	sub	r3,r4,r3
    a31c:	1d44983a 	sll	r2,r3,r21
    a320:	3d0ed83a 	srl	r7,r7,r20
    a324:	1d06d83a 	srl	r3,r3,r20
    a328:	11c4b03a 	or	r2,r2,r7
    a32c:	003f7a06 	br	a118 <__alt_data_end+0xfffa8698>
    a330:	0025883a 	mov	r18,zero
    a334:	003ef806 	br	9f18 <__alt_data_end+0xfffa8498>
    a338:	98a6983a 	sll	r19,r19,r2
    a33c:	88e8d83a 	srl	r20,r17,r3
    a340:	80c6d83a 	srl	r3,r16,r3
    a344:	982ad43a 	srli	r21,r19,16
    a348:	88a2983a 	sll	r17,r17,r2
    a34c:	a009883a 	mov	r4,r20
    a350:	a80b883a 	mov	r5,r21
    a354:	88eeb03a 	or	r23,r17,r3
    a358:	1025883a 	mov	r18,r2
    a35c:	000a5bc0 	call	a5bc <__umodsi3>
    a360:	a009883a 	mov	r4,r20
    a364:	a80b883a 	mov	r5,r21
    a368:	1023883a 	mov	r17,r2
    a36c:	9dbfffcc 	andi	r22,r19,65535
    a370:	000a5b40 	call	a5b4 <__udivsi3>
    a374:	1009883a 	mov	r4,r2
    a378:	b00b883a 	mov	r5,r22
    a37c:	000a5c40 	call	a5c4 <__mulsi3>
    a380:	8822943a 	slli	r17,r17,16
    a384:	b808d43a 	srli	r4,r23,16
    a388:	84a8983a 	sll	r20,r16,r18
    a38c:	8906b03a 	or	r3,r17,r4
    a390:	1880042e 	bgeu	r3,r2,a3a4 <__umoddi3+0x528>
    a394:	1cc7883a 	add	r3,r3,r19
    a398:	1cc00236 	bltu	r3,r19,a3a4 <__umoddi3+0x528>
    a39c:	1880012e 	bgeu	r3,r2,a3a4 <__umoddi3+0x528>
    a3a0:	1cc7883a 	add	r3,r3,r19
    a3a4:	18a1c83a 	sub	r16,r3,r2
    a3a8:	8009883a 	mov	r4,r16
    a3ac:	a80b883a 	mov	r5,r21
    a3b0:	000a5bc0 	call	a5bc <__umodsi3>
    a3b4:	8009883a 	mov	r4,r16
    a3b8:	a80b883a 	mov	r5,r21
    a3bc:	1039883a 	mov	fp,r2
    a3c0:	000a5b40 	call	a5b4 <__udivsi3>
    a3c4:	1009883a 	mov	r4,r2
    a3c8:	b00b883a 	mov	r5,r22
    a3cc:	000a5c40 	call	a5c4 <__mulsi3>
    a3d0:	e006943a 	slli	r3,fp,16
    a3d4:	b93fffcc 	andi	r4,r23,65535
    a3d8:	1906b03a 	or	r3,r3,r4
    a3dc:	1880042e 	bgeu	r3,r2,a3f0 <__umoddi3+0x574>
    a3e0:	1cc7883a 	add	r3,r3,r19
    a3e4:	1cc00236 	bltu	r3,r19,a3f0 <__umoddi3+0x574>
    a3e8:	1880012e 	bgeu	r3,r2,a3f0 <__umoddi3+0x574>
    a3ec:	1cc7883a 	add	r3,r3,r19
    a3f0:	18a3c83a 	sub	r17,r3,r2
    a3f4:	003f1e06 	br	a070 <__alt_data_end+0xfffa85f0>
    a3f8:	8ccfc83a 	sub	r7,r17,r19
    a3fc:	1d89c83a 	sub	r4,r3,r22
    a400:	89e3803a 	cmpltu	r17,r17,r7
    a404:	2463c83a 	sub	r17,r4,r17
    a408:	9449c83a 	sub	r4,r18,r17
    a40c:	003fc006 	br	a310 <__alt_data_end+0xfffa8890>
    a410:	000b883a 	mov	r5,zero
    a414:	002b883a 	mov	r21,zero
    a418:	003eeb06 	br	9fc8 <__alt_data_end+0xfffa8548>
    a41c:	01400404 	movi	r5,16
    a420:	282b883a 	mov	r21,r5
    a424:	003ee806 	br	9fc8 <__alt_data_end+0xfffa8548>
    a428:	01400404 	movi	r5,16
    a42c:	2805883a 	mov	r2,r5
    a430:	003eaa06 	br	9edc <__alt_data_end+0xfffa845c>
    a434:	0005883a 	mov	r2,zero
    a438:	0007883a 	mov	r3,zero
    a43c:	003eff06 	br	a03c <__alt_data_end+0xfffa85bc>
    a440:	00800404 	movi	r2,16
    a444:	1007883a 	mov	r3,r2
    a448:	003efc06 	br	a03c <__alt_data_end+0xfffa85bc>
    a44c:	000b883a 	mov	r5,zero
    a450:	0005883a 	mov	r2,zero
    a454:	003ea106 	br	9edc <__alt_data_end+0xfffa845c>
    a458:	90bf802e 	bgeu	r18,r2,a25c <__alt_data_end+0xfffa87dc>
    a45c:	bdffff84 	addi	r23,r23,-2
    a460:	95a5883a 	add	r18,r18,r22
    a464:	003f7e06 	br	a260 <__alt_data_end+0xfffa87e0>
    a468:	18bf652e 	bgeu	r3,r2,a200 <__alt_data_end+0xfffa8780>
    a46c:	e73fff84 	addi	fp,fp,-2
    a470:	1d87883a 	add	r3,r3,r22
    a474:	003f6306 	br	a204 <__alt_data_end+0xfffa8784>
    a478:	1cc7883a 	add	r3,r3,r19
    a47c:	003f0d06 	br	a0b4 <__alt_data_end+0xfffa8634>
    a480:	8005883a 	mov	r2,r16
    a484:	003edf06 	br	a004 <__alt_data_end+0xfffa8584>
    a488:	847fdb36 	bltu	r16,r17,a3f8 <__alt_data_end+0xfffa8978>
    a48c:	880f883a 	mov	r7,r17
    a490:	0009883a 	mov	r4,zero
    a494:	003f9e06 	br	a310 <__alt_data_end+0xfffa8890>

0000a498 <udivmodsi4>:
    a498:	2900182e 	bgeu	r5,r4,a4fc <udivmodsi4+0x64>
    a49c:	28001716 	blt	r5,zero,a4fc <udivmodsi4+0x64>
    a4a0:	00800804 	movi	r2,32
    a4a4:	00c00044 	movi	r3,1
    a4a8:	00000206 	br	a4b4 <udivmodsi4+0x1c>
    a4ac:	10001126 	beq	r2,zero,a4f4 <udivmodsi4+0x5c>
    a4b0:	28000516 	blt	r5,zero,a4c8 <udivmodsi4+0x30>
    a4b4:	294b883a 	add	r5,r5,r5
    a4b8:	10bfffc4 	addi	r2,r2,-1
    a4bc:	18c7883a 	add	r3,r3,r3
    a4c0:	293ffa36 	bltu	r5,r4,a4ac <__alt_data_end+0xfffa8a2c>
    a4c4:	18000b26 	beq	r3,zero,a4f4 <udivmodsi4+0x5c>
    a4c8:	0005883a 	mov	r2,zero
    a4cc:	21400236 	bltu	r4,r5,a4d8 <udivmodsi4+0x40>
    a4d0:	2149c83a 	sub	r4,r4,r5
    a4d4:	10c4b03a 	or	r2,r2,r3
    a4d8:	1806d07a 	srli	r3,r3,1
    a4dc:	280ad07a 	srli	r5,r5,1
    a4e0:	183ffa1e 	bne	r3,zero,a4cc <__alt_data_end+0xfffa8a4c>
    a4e4:	3000011e 	bne	r6,zero,a4ec <udivmodsi4+0x54>
    a4e8:	f800283a 	ret
    a4ec:	2005883a 	mov	r2,r4
    a4f0:	f800283a 	ret
    a4f4:	0005883a 	mov	r2,zero
    a4f8:	003ffa06 	br	a4e4 <__alt_data_end+0xfffa8a64>
    a4fc:	00c00044 	movi	r3,1
    a500:	003ff106 	br	a4c8 <__alt_data_end+0xfffa8a48>

0000a504 <__divsi3>:
    a504:	defffe04 	addi	sp,sp,-8
    a508:	dfc00115 	stw	ra,4(sp)
    a50c:	dc000015 	stw	r16,0(sp)
    a510:	20000b16 	blt	r4,zero,a540 <__divsi3+0x3c>
    a514:	0021883a 	mov	r16,zero
    a518:	28000c16 	blt	r5,zero,a54c <__divsi3+0x48>
    a51c:	000d883a 	mov	r6,zero
    a520:	000a4980 	call	a498 <udivmodsi4>
    a524:	0407c83a 	sub	r3,zero,r16
    a528:	1884f03a 	xor	r2,r3,r2
    a52c:	1405883a 	add	r2,r2,r16
    a530:	dfc00117 	ldw	ra,4(sp)
    a534:	dc000017 	ldw	r16,0(sp)
    a538:	dec00204 	addi	sp,sp,8
    a53c:	f800283a 	ret
    a540:	0109c83a 	sub	r4,zero,r4
    a544:	04000044 	movi	r16,1
    a548:	283ff40e 	bge	r5,zero,a51c <__alt_data_end+0xfffa8a9c>
    a54c:	014bc83a 	sub	r5,zero,r5
    a550:	8400005c 	xori	r16,r16,1
    a554:	003ff106 	br	a51c <__alt_data_end+0xfffa8a9c>

0000a558 <__modsi3>:
    a558:	defffd04 	addi	sp,sp,-12
    a55c:	dfc00215 	stw	ra,8(sp)
    a560:	dc400115 	stw	r17,4(sp)
    a564:	dc000015 	stw	r16,0(sp)
    a568:	20000c16 	blt	r4,zero,a59c <__modsi3+0x44>
    a56c:	0023883a 	mov	r17,zero
    a570:	0021883a 	mov	r16,zero
    a574:	28000d16 	blt	r5,zero,a5ac <__modsi3+0x54>
    a578:	01800044 	movi	r6,1
    a57c:	000a4980 	call	a498 <udivmodsi4>
    a580:	1404f03a 	xor	r2,r2,r16
    a584:	8885883a 	add	r2,r17,r2
    a588:	dfc00217 	ldw	ra,8(sp)
    a58c:	dc400117 	ldw	r17,4(sp)
    a590:	dc000017 	ldw	r16,0(sp)
    a594:	dec00304 	addi	sp,sp,12
    a598:	f800283a 	ret
    a59c:	0109c83a 	sub	r4,zero,r4
    a5a0:	04400044 	movi	r17,1
    a5a4:	043fffc4 	movi	r16,-1
    a5a8:	283ff30e 	bge	r5,zero,a578 <__alt_data_end+0xfffa8af8>
    a5ac:	014bc83a 	sub	r5,zero,r5
    a5b0:	003ff106 	br	a578 <__alt_data_end+0xfffa8af8>

0000a5b4 <__udivsi3>:
    a5b4:	000d883a 	mov	r6,zero
    a5b8:	000a4981 	jmpi	a498 <udivmodsi4>

0000a5bc <__umodsi3>:
    a5bc:	01800044 	movi	r6,1
    a5c0:	000a4981 	jmpi	a498 <udivmodsi4>

0000a5c4 <__mulsi3>:
    a5c4:	0005883a 	mov	r2,zero
    a5c8:	20000726 	beq	r4,zero,a5e8 <__mulsi3+0x24>
    a5cc:	20c0004c 	andi	r3,r4,1
    a5d0:	2008d07a 	srli	r4,r4,1
    a5d4:	18000126 	beq	r3,zero,a5dc <__mulsi3+0x18>
    a5d8:	1145883a 	add	r2,r2,r5
    a5dc:	294b883a 	add	r5,r5,r5
    a5e0:	203ffa1e 	bne	r4,zero,a5cc <__alt_data_end+0xfffa8b4c>
    a5e4:	f800283a 	ret
    a5e8:	f800283a 	ret

0000a5ec <__adddf3>:
    a5ec:	02000434 	movhi	r8,16
    a5f0:	423fffc4 	addi	r8,r8,-1
    a5f4:	defffb04 	addi	sp,sp,-20
    a5f8:	2a12703a 	and	r9,r5,r8
    a5fc:	2806d7fa 	srli	r3,r5,31
    a600:	3a10703a 	and	r8,r7,r8
    a604:	3804d53a 	srli	r2,r7,20
    a608:	3014d77a 	srli	r10,r6,29
    a60c:	dc000015 	stw	r16,0(sp)
    a610:	481290fa 	slli	r9,r9,3
    a614:	2820d53a 	srli	r16,r5,20
    a618:	401090fa 	slli	r8,r8,3
    a61c:	200ad77a 	srli	r5,r4,29
    a620:	380ed7fa 	srli	r7,r7,31
    a624:	dc800215 	stw	r18,8(sp)
    a628:	dc400115 	stw	r17,4(sp)
    a62c:	dfc00415 	stw	ra,16(sp)
    a630:	dcc00315 	stw	r19,12(sp)
    a634:	1c803fcc 	andi	r18,r3,255
    a638:	8401ffcc 	andi	r16,r16,2047
    a63c:	494ab03a 	or	r5,r9,r5
    a640:	202290fa 	slli	r17,r4,3
    a644:	1081ffcc 	andi	r2,r2,2047
    a648:	4290b03a 	or	r8,r8,r10
    a64c:	300c90fa 	slli	r6,r6,3
    a650:	91c07026 	beq	r18,r7,a814 <__adddf3+0x228>
    a654:	8087c83a 	sub	r3,r16,r2
    a658:	00c0b30e 	bge	zero,r3,a928 <__adddf3+0x33c>
    a65c:	10002a1e 	bne	r2,zero,a708 <__adddf3+0x11c>
    a660:	4184b03a 	or	r2,r8,r6
    a664:	1000991e 	bne	r2,zero,a8cc <__adddf3+0x2e0>
    a668:	888001cc 	andi	r2,r17,7
    a66c:	10005b26 	beq	r2,zero,a7dc <__adddf3+0x1f0>
    a670:	88c003cc 	andi	r3,r17,15
    a674:	00800104 	movi	r2,4
    a678:	18805826 	beq	r3,r2,a7dc <__adddf3+0x1f0>
    a67c:	89800104 	addi	r6,r17,4
    a680:	3463803a 	cmpltu	r17,r6,r17
    a684:	2c4b883a 	add	r5,r5,r17
    a688:	2880202c 	andhi	r2,r5,128
    a68c:	9007883a 	mov	r3,r18
    a690:	3023883a 	mov	r17,r6
    a694:	10005426 	beq	r2,zero,a7e8 <__adddf3+0x1fc>
    a698:	84000044 	addi	r16,r16,1
    a69c:	0081ffc4 	movi	r2,2047
    a6a0:	8080c126 	beq	r16,r2,a9a8 <__adddf3+0x3bc>
    a6a4:	013fe034 	movhi	r4,65408
    a6a8:	213fffc4 	addi	r4,r4,-1
    a6ac:	290a703a 	and	r5,r5,r4
    a6b0:	2804977a 	slli	r2,r5,29
    a6b4:	280a927a 	slli	r5,r5,9
    a6b8:	8822d0fa 	srli	r17,r17,3
    a6bc:	8401ffcc 	andi	r16,r16,2047
    a6c0:	2808d33a 	srli	r4,r5,12
    a6c4:	1444b03a 	or	r2,r2,r17
    a6c8:	8401ffcc 	andi	r16,r16,2047
    a6cc:	800a953a 	slli	r5,r16,20
    a6d0:	18c03fcc 	andi	r3,r3,255
    a6d4:	04000434 	movhi	r16,16
    a6d8:	180697fa 	slli	r3,r3,31
    a6dc:	843fffc4 	addi	r16,r16,-1
    a6e0:	2420703a 	and	r16,r4,r16
    a6e4:	8160b03a 	or	r16,r16,r5
    a6e8:	80c6b03a 	or	r3,r16,r3
    a6ec:	dfc00417 	ldw	ra,16(sp)
    a6f0:	dcc00317 	ldw	r19,12(sp)
    a6f4:	dc800217 	ldw	r18,8(sp)
    a6f8:	dc400117 	ldw	r17,4(sp)
    a6fc:	dc000017 	ldw	r16,0(sp)
    a700:	dec00504 	addi	sp,sp,20
    a704:	f800283a 	ret
    a708:	0081ffc4 	movi	r2,2047
    a70c:	80bfd626 	beq	r16,r2,a668 <__alt_data_end+0xfffa8be8>
    a710:	42002034 	orhi	r8,r8,128
    a714:	00800e04 	movi	r2,56
    a718:	10c0a616 	blt	r2,r3,a9b4 <__adddf3+0x3c8>
    a71c:	008007c4 	movi	r2,31
    a720:	10c0c916 	blt	r2,r3,aa48 <__adddf3+0x45c>
    a724:	00800804 	movi	r2,32
    a728:	10c5c83a 	sub	r2,r2,r3
    a72c:	408e983a 	sll	r7,r8,r2
    a730:	30c8d83a 	srl	r4,r6,r3
    a734:	3084983a 	sll	r2,r6,r2
    a738:	40c6d83a 	srl	r3,r8,r3
    a73c:	390cb03a 	or	r6,r7,r4
    a740:	1004c03a 	cmpne	r2,r2,zero
    a744:	308cb03a 	or	r6,r6,r2
    a748:	898dc83a 	sub	r6,r17,r6
    a74c:	89a3803a 	cmpltu	r17,r17,r6
    a750:	28cbc83a 	sub	r5,r5,r3
    a754:	2c4bc83a 	sub	r5,r5,r17
    a758:	3023883a 	mov	r17,r6
    a75c:	2880202c 	andhi	r2,r5,128
    a760:	10006d26 	beq	r2,zero,a918 <__adddf3+0x32c>
    a764:	04c02034 	movhi	r19,128
    a768:	9cffffc4 	addi	r19,r19,-1
    a76c:	2ce6703a 	and	r19,r5,r19
    a770:	98007e26 	beq	r19,zero,a96c <__adddf3+0x380>
    a774:	9809883a 	mov	r4,r19
    a778:	000cd840 	call	cd84 <__clzsi2>
    a77c:	10fffe04 	addi	r3,r2,-8
    a780:	010007c4 	movi	r4,31
    a784:	20c07f16 	blt	r4,r3,a984 <__adddf3+0x398>
    a788:	01400a04 	movi	r5,40
    a78c:	2885c83a 	sub	r2,r5,r2
    a790:	888ad83a 	srl	r5,r17,r2
    a794:	98e6983a 	sll	r19,r19,r3
    a798:	88e2983a 	sll	r17,r17,r3
    a79c:	2ce6b03a 	or	r19,r5,r19
    a7a0:	1c007c16 	blt	r3,r16,a994 <__adddf3+0x3a8>
    a7a4:	1c21c83a 	sub	r16,r3,r16
    a7a8:	81400044 	addi	r5,r16,1
    a7ac:	00c007c4 	movi	r3,31
    a7b0:	19409816 	blt	r3,r5,aa14 <__adddf3+0x428>
    a7b4:	1c21c83a 	sub	r16,r3,r16
    a7b8:	8c08983a 	sll	r4,r17,r16
    a7bc:	8946d83a 	srl	r3,r17,r5
    a7c0:	9c20983a 	sll	r16,r19,r16
    a7c4:	2008c03a 	cmpne	r4,r4,zero
    a7c8:	994ad83a 	srl	r5,r19,r5
    a7cc:	1c06b03a 	or	r3,r3,r16
    a7d0:	1922b03a 	or	r17,r3,r4
    a7d4:	0021883a 	mov	r16,zero
    a7d8:	003fa306 	br	a668 <__alt_data_end+0xfffa8be8>
    a7dc:	2880202c 	andhi	r2,r5,128
    a7e0:	9007883a 	mov	r3,r18
    a7e4:	103fac1e 	bne	r2,zero,a698 <__alt_data_end+0xfffa8c18>
    a7e8:	2804977a 	slli	r2,r5,29
    a7ec:	8822d0fa 	srli	r17,r17,3
    a7f0:	0101ffc4 	movi	r4,2047
    a7f4:	280ad0fa 	srli	r5,r5,3
    a7f8:	1444b03a 	or	r2,r2,r17
    a7fc:	81002c26 	beq	r16,r4,a8b0 <__adddf3+0x2c4>
    a800:	8120703a 	and	r16,r16,r4
    a804:	01000434 	movhi	r4,16
    a808:	213fffc4 	addi	r4,r4,-1
    a80c:	2908703a 	and	r4,r5,r4
    a810:	003fad06 	br	a6c8 <__alt_data_end+0xfffa8c48>
    a814:	8089c83a 	sub	r4,r16,r2
    a818:	01006a0e 	bge	zero,r4,a9c4 <__adddf3+0x3d8>
    a81c:	10003326 	beq	r2,zero,a8ec <__adddf3+0x300>
    a820:	0081ffc4 	movi	r2,2047
    a824:	80bf9026 	beq	r16,r2,a668 <__alt_data_end+0xfffa8be8>
    a828:	42002034 	orhi	r8,r8,128
    a82c:	00800e04 	movi	r2,56
    a830:	1100b116 	blt	r2,r4,aaf8 <__adddf3+0x50c>
    a834:	008007c4 	movi	r2,31
    a838:	1100e216 	blt	r2,r4,abc4 <__adddf3+0x5d8>
    a83c:	00800804 	movi	r2,32
    a840:	1105c83a 	sub	r2,r2,r4
    a844:	4092983a 	sll	r9,r8,r2
    a848:	310ed83a 	srl	r7,r6,r4
    a84c:	3084983a 	sll	r2,r6,r2
    a850:	4110d83a 	srl	r8,r8,r4
    a854:	49ccb03a 	or	r6,r9,r7
    a858:	1004c03a 	cmpne	r2,r2,zero
    a85c:	308cb03a 	or	r6,r6,r2
    a860:	344d883a 	add	r6,r6,r17
    a864:	3463803a 	cmpltu	r17,r6,r17
    a868:	414b883a 	add	r5,r8,r5
    a86c:	2c4b883a 	add	r5,r5,r17
    a870:	3023883a 	mov	r17,r6
    a874:	2880202c 	andhi	r2,r5,128
    a878:	10002726 	beq	r2,zero,a918 <__adddf3+0x32c>
    a87c:	84000044 	addi	r16,r16,1
    a880:	0081ffc4 	movi	r2,2047
    a884:	8080ae26 	beq	r16,r2,ab40 <__adddf3+0x554>
    a888:	00bfe034 	movhi	r2,65408
    a88c:	10bfffc4 	addi	r2,r2,-1
    a890:	288a703a 	and	r5,r5,r2
    a894:	880cd07a 	srli	r6,r17,1
    a898:	280897fa 	slli	r4,r5,31
    a89c:	88c0004c 	andi	r3,r17,1
    a8a0:	30e2b03a 	or	r17,r6,r3
    a8a4:	280ad07a 	srli	r5,r5,1
    a8a8:	8922b03a 	or	r17,r17,r4
    a8ac:	003f6e06 	br	a668 <__alt_data_end+0xfffa8be8>
    a8b0:	1148b03a 	or	r4,r2,r5
    a8b4:	20003c26 	beq	r4,zero,a9a8 <__adddf3+0x3bc>
    a8b8:	29000234 	orhi	r4,r5,8
    a8bc:	01400434 	movhi	r5,16
    a8c0:	297fffc4 	addi	r5,r5,-1
    a8c4:	2148703a 	and	r4,r4,r5
    a8c8:	003f7f06 	br	a6c8 <__alt_data_end+0xfffa8c48>
    a8cc:	18ffffc4 	addi	r3,r3,-1
    a8d0:	18004d1e 	bne	r3,zero,aa08 <__adddf3+0x41c>
    a8d4:	898dc83a 	sub	r6,r17,r6
    a8d8:	89a3803a 	cmpltu	r17,r17,r6
    a8dc:	2a0bc83a 	sub	r5,r5,r8
    a8e0:	2c4bc83a 	sub	r5,r5,r17
    a8e4:	3023883a 	mov	r17,r6
    a8e8:	003f9c06 	br	a75c <__alt_data_end+0xfffa8cdc>
    a8ec:	4184b03a 	or	r2,r8,r6
    a8f0:	103f5d26 	beq	r2,zero,a668 <__alt_data_end+0xfffa8be8>
    a8f4:	213fffc4 	addi	r4,r4,-1
    a8f8:	203fd926 	beq	r4,zero,a860 <__alt_data_end+0xfffa8de0>
    a8fc:	0081ffc4 	movi	r2,2047
    a900:	80bfca1e 	bne	r16,r2,a82c <__alt_data_end+0xfffa8dac>
    a904:	003f5806 	br	a668 <__alt_data_end+0xfffa8be8>
    a908:	10c8b03a 	or	r4,r2,r3
    a90c:	20008b26 	beq	r4,zero,ab3c <__adddf3+0x550>
    a910:	100b883a 	mov	r5,r2
    a914:	1823883a 	mov	r17,r3
    a918:	888001cc 	andi	r2,r17,7
    a91c:	103f541e 	bne	r2,zero,a670 <__alt_data_end+0xfffa8bf0>
    a920:	9007883a 	mov	r3,r18
    a924:	003fb006 	br	a7e8 <__alt_data_end+0xfffa8d68>
    a928:	1800531e 	bne	r3,zero,aa78 <__adddf3+0x48c>
    a92c:	80800044 	addi	r2,r16,1
    a930:	1081ffcc 	andi	r2,r2,2047
    a934:	00c00044 	movi	r3,1
    a938:	1880990e 	bge	r3,r2,aba0 <__adddf3+0x5b4>
    a93c:	8985c83a 	sub	r2,r17,r6
    a940:	8887803a 	cmpltu	r3,r17,r2
    a944:	2a27c83a 	sub	r19,r5,r8
    a948:	98e7c83a 	sub	r19,r19,r3
    a94c:	98c0202c 	andhi	r3,r19,128
    a950:	18006226 	beq	r3,zero,aadc <__adddf3+0x4f0>
    a954:	3463c83a 	sub	r17,r6,r17
    a958:	4151c83a 	sub	r8,r8,r5
    a95c:	344d803a 	cmpltu	r6,r6,r17
    a960:	41a7c83a 	sub	r19,r8,r6
    a964:	3825883a 	mov	r18,r7
    a968:	983f821e 	bne	r19,zero,a774 <__alt_data_end+0xfffa8cf4>
    a96c:	8809883a 	mov	r4,r17
    a970:	000cd840 	call	cd84 <__clzsi2>
    a974:	10800804 	addi	r2,r2,32
    a978:	10fffe04 	addi	r3,r2,-8
    a97c:	010007c4 	movi	r4,31
    a980:	20ff810e 	bge	r4,r3,a788 <__alt_data_end+0xfffa8d08>
    a984:	14fff604 	addi	r19,r2,-40
    a988:	8ce6983a 	sll	r19,r17,r19
    a98c:	0023883a 	mov	r17,zero
    a990:	1c3f840e 	bge	r3,r16,a7a4 <__alt_data_end+0xfffa8d24>
    a994:	017fe034 	movhi	r5,65408
    a998:	297fffc4 	addi	r5,r5,-1
    a99c:	80e1c83a 	sub	r16,r16,r3
    a9a0:	994a703a 	and	r5,r19,r5
    a9a4:	003f3006 	br	a668 <__alt_data_end+0xfffa8be8>
    a9a8:	0009883a 	mov	r4,zero
    a9ac:	0005883a 	mov	r2,zero
    a9b0:	003f4506 	br	a6c8 <__alt_data_end+0xfffa8c48>
    a9b4:	418cb03a 	or	r6,r8,r6
    a9b8:	300cc03a 	cmpne	r6,r6,zero
    a9bc:	0007883a 	mov	r3,zero
    a9c0:	003f6106 	br	a748 <__alt_data_end+0xfffa8cc8>
    a9c4:	2000921e 	bne	r4,zero,ac10 <__adddf3+0x624>
    a9c8:	80800044 	addi	r2,r16,1
    a9cc:	11c1ffcc 	andi	r7,r2,2047
    a9d0:	01000044 	movi	r4,1
    a9d4:	21c0610e 	bge	r4,r7,ab5c <__adddf3+0x570>
    a9d8:	0101ffc4 	movi	r4,2047
    a9dc:	1100a326 	beq	r2,r4,ac6c <__adddf3+0x680>
    a9e0:	344d883a 	add	r6,r6,r17
    a9e4:	3463803a 	cmpltu	r17,r6,r17
    a9e8:	414b883a 	add	r5,r8,r5
    a9ec:	2c4b883a 	add	r5,r5,r17
    a9f0:	282297fa 	slli	r17,r5,31
    a9f4:	300cd07a 	srli	r6,r6,1
    a9f8:	280ad07a 	srli	r5,r5,1
    a9fc:	1021883a 	mov	r16,r2
    aa00:	89a2b03a 	or	r17,r17,r6
    aa04:	003f1806 	br	a668 <__alt_data_end+0xfffa8be8>
    aa08:	0081ffc4 	movi	r2,2047
    aa0c:	80bf411e 	bne	r16,r2,a714 <__alt_data_end+0xfffa8c94>
    aa10:	003f1506 	br	a668 <__alt_data_end+0xfffa8be8>
    aa14:	80bff844 	addi	r2,r16,-31
    aa18:	00c00804 	movi	r3,32
    aa1c:	9884d83a 	srl	r2,r19,r2
    aa20:	28c04a26 	beq	r5,r3,ab4c <__adddf3+0x560>
    aa24:	00c00fc4 	movi	r3,63
    aa28:	1c21c83a 	sub	r16,r3,r16
    aa2c:	9c26983a 	sll	r19,r19,r16
    aa30:	9c62b03a 	or	r17,r19,r17
    aa34:	8822c03a 	cmpne	r17,r17,zero
    aa38:	88a2b03a 	or	r17,r17,r2
    aa3c:	000b883a 	mov	r5,zero
    aa40:	0021883a 	mov	r16,zero
    aa44:	003fb406 	br	a918 <__alt_data_end+0xfffa8e98>
    aa48:	18bff804 	addi	r2,r3,-32
    aa4c:	01000804 	movi	r4,32
    aa50:	4084d83a 	srl	r2,r8,r2
    aa54:	19003f26 	beq	r3,r4,ab54 <__adddf3+0x568>
    aa58:	01001004 	movi	r4,64
    aa5c:	20c7c83a 	sub	r3,r4,r3
    aa60:	40d0983a 	sll	r8,r8,r3
    aa64:	418cb03a 	or	r6,r8,r6
    aa68:	300cc03a 	cmpne	r6,r6,zero
    aa6c:	308cb03a 	or	r6,r6,r2
    aa70:	0007883a 	mov	r3,zero
    aa74:	003f3406 	br	a748 <__alt_data_end+0xfffa8cc8>
    aa78:	80002326 	beq	r16,zero,ab08 <__adddf3+0x51c>
    aa7c:	0101ffc4 	movi	r4,2047
    aa80:	11005e26 	beq	r2,r4,abfc <__adddf3+0x610>
    aa84:	00c7c83a 	sub	r3,zero,r3
    aa88:	29402034 	orhi	r5,r5,128
    aa8c:	01000e04 	movi	r4,56
    aa90:	20c07216 	blt	r4,r3,ac5c <__adddf3+0x670>
    aa94:	010007c4 	movi	r4,31
    aa98:	20c0ce16 	blt	r4,r3,add4 <__adddf3+0x7e8>
    aa9c:	01000804 	movi	r4,32
    aaa0:	20c9c83a 	sub	r4,r4,r3
    aaa4:	2914983a 	sll	r10,r5,r4
    aaa8:	88d2d83a 	srl	r9,r17,r3
    aaac:	8908983a 	sll	r4,r17,r4
    aab0:	28c6d83a 	srl	r3,r5,r3
    aab4:	5262b03a 	or	r17,r10,r9
    aab8:	2008c03a 	cmpne	r4,r4,zero
    aabc:	8922b03a 	or	r17,r17,r4
    aac0:	3463c83a 	sub	r17,r6,r17
    aac4:	40c7c83a 	sub	r3,r8,r3
    aac8:	344d803a 	cmpltu	r6,r6,r17
    aacc:	198bc83a 	sub	r5,r3,r6
    aad0:	1021883a 	mov	r16,r2
    aad4:	3825883a 	mov	r18,r7
    aad8:	003f2006 	br	a75c <__alt_data_end+0xfffa8cdc>
    aadc:	9886b03a 	or	r3,r19,r2
    aae0:	1800141e 	bne	r3,zero,ab34 <__adddf3+0x548>
    aae4:	0007883a 	mov	r3,zero
    aae8:	000b883a 	mov	r5,zero
    aaec:	0023883a 	mov	r17,zero
    aaf0:	0021883a 	mov	r16,zero
    aaf4:	003f3c06 	br	a7e8 <__alt_data_end+0xfffa8d68>
    aaf8:	418cb03a 	or	r6,r8,r6
    aafc:	300cc03a 	cmpne	r6,r6,zero
    ab00:	0011883a 	mov	r8,zero
    ab04:	003f5606 	br	a860 <__alt_data_end+0xfffa8de0>
    ab08:	2c48b03a 	or	r4,r5,r17
    ab0c:	20003b26 	beq	r4,zero,abfc <__adddf3+0x610>
    ab10:	00c6303a 	nor	r3,zero,r3
    ab14:	1800371e 	bne	r3,zero,abf4 <__adddf3+0x608>
    ab18:	3463c83a 	sub	r17,r6,r17
    ab1c:	414bc83a 	sub	r5,r8,r5
    ab20:	344d803a 	cmpltu	r6,r6,r17
    ab24:	298bc83a 	sub	r5,r5,r6
    ab28:	1021883a 	mov	r16,r2
    ab2c:	3825883a 	mov	r18,r7
    ab30:	003f0a06 	br	a75c <__alt_data_end+0xfffa8cdc>
    ab34:	1023883a 	mov	r17,r2
    ab38:	003f0d06 	br	a770 <__alt_data_end+0xfffa8cf0>
    ab3c:	0007883a 	mov	r3,zero
    ab40:	000b883a 	mov	r5,zero
    ab44:	0023883a 	mov	r17,zero
    ab48:	003f2706 	br	a7e8 <__alt_data_end+0xfffa8d68>
    ab4c:	0027883a 	mov	r19,zero
    ab50:	003fb706 	br	aa30 <__alt_data_end+0xfffa8fb0>
    ab54:	0011883a 	mov	r8,zero
    ab58:	003fc206 	br	aa64 <__alt_data_end+0xfffa8fe4>
    ab5c:	2c44b03a 	or	r2,r5,r17
    ab60:	8000871e 	bne	r16,zero,ad80 <__adddf3+0x794>
    ab64:	1000b126 	beq	r2,zero,ae2c <__adddf3+0x840>
    ab68:	4184b03a 	or	r2,r8,r6
    ab6c:	103ebe26 	beq	r2,zero,a668 <__alt_data_end+0xfffa8be8>
    ab70:	3445883a 	add	r2,r6,r17
    ab74:	1463803a 	cmpltu	r17,r2,r17
    ab78:	414b883a 	add	r5,r8,r5
    ab7c:	2c4b883a 	add	r5,r5,r17
    ab80:	28c0202c 	andhi	r3,r5,128
    ab84:	1023883a 	mov	r17,r2
    ab88:	183f6326 	beq	r3,zero,a918 <__alt_data_end+0xfffa8e98>
    ab8c:	00bfe034 	movhi	r2,65408
    ab90:	10bfffc4 	addi	r2,r2,-1
    ab94:	2021883a 	mov	r16,r4
    ab98:	288a703a 	and	r5,r5,r2
    ab9c:	003eb206 	br	a668 <__alt_data_end+0xfffa8be8>
    aba0:	2c44b03a 	or	r2,r5,r17
    aba4:	8000251e 	bne	r16,zero,ac3c <__adddf3+0x650>
    aba8:	10004b1e 	bne	r2,zero,acd8 <__adddf3+0x6ec>
    abac:	4184b03a 	or	r2,r8,r6
    abb0:	103fe226 	beq	r2,zero,ab3c <__alt_data_end+0xfffa90bc>
    abb4:	400b883a 	mov	r5,r8
    abb8:	3023883a 	mov	r17,r6
    abbc:	3825883a 	mov	r18,r7
    abc0:	003ea906 	br	a668 <__alt_data_end+0xfffa8be8>
    abc4:	20bff804 	addi	r2,r4,-32
    abc8:	01c00804 	movi	r7,32
    abcc:	4084d83a 	srl	r2,r8,r2
    abd0:	21c07e26 	beq	r4,r7,adcc <__adddf3+0x7e0>
    abd4:	01c01004 	movi	r7,64
    abd8:	3909c83a 	sub	r4,r7,r4
    abdc:	4110983a 	sll	r8,r8,r4
    abe0:	418cb03a 	or	r6,r8,r6
    abe4:	300cc03a 	cmpne	r6,r6,zero
    abe8:	308cb03a 	or	r6,r6,r2
    abec:	0011883a 	mov	r8,zero
    abf0:	003f1b06 	br	a860 <__alt_data_end+0xfffa8de0>
    abf4:	0101ffc4 	movi	r4,2047
    abf8:	113fa41e 	bne	r2,r4,aa8c <__alt_data_end+0xfffa900c>
    abfc:	400b883a 	mov	r5,r8
    ac00:	3023883a 	mov	r17,r6
    ac04:	1021883a 	mov	r16,r2
    ac08:	3825883a 	mov	r18,r7
    ac0c:	003e9606 	br	a668 <__alt_data_end+0xfffa8be8>
    ac10:	80001a1e 	bne	r16,zero,ac7c <__adddf3+0x690>
    ac14:	2c4eb03a 	or	r7,r5,r17
    ac18:	38005526 	beq	r7,zero,ad70 <__adddf3+0x784>
    ac1c:	0108303a 	nor	r4,zero,r4
    ac20:	2000511e 	bne	r4,zero,ad68 <__adddf3+0x77c>
    ac24:	89a3883a 	add	r17,r17,r6
    ac28:	414b883a 	add	r5,r8,r5
    ac2c:	898d803a 	cmpltu	r6,r17,r6
    ac30:	298b883a 	add	r5,r5,r6
    ac34:	1021883a 	mov	r16,r2
    ac38:	003f0e06 	br	a874 <__alt_data_end+0xfffa8df4>
    ac3c:	1000341e 	bne	r2,zero,ad10 <__adddf3+0x724>
    ac40:	4184b03a 	or	r2,r8,r6
    ac44:	10006f26 	beq	r2,zero,ae04 <__adddf3+0x818>
    ac48:	400b883a 	mov	r5,r8
    ac4c:	3023883a 	mov	r17,r6
    ac50:	3825883a 	mov	r18,r7
    ac54:	0401ffc4 	movi	r16,2047
    ac58:	003e8306 	br	a668 <__alt_data_end+0xfffa8be8>
    ac5c:	2c62b03a 	or	r17,r5,r17
    ac60:	8822c03a 	cmpne	r17,r17,zero
    ac64:	0007883a 	mov	r3,zero
    ac68:	003f9506 	br	aac0 <__alt_data_end+0xfffa9040>
    ac6c:	1021883a 	mov	r16,r2
    ac70:	000b883a 	mov	r5,zero
    ac74:	0023883a 	mov	r17,zero
    ac78:	003edb06 	br	a7e8 <__alt_data_end+0xfffa8d68>
    ac7c:	01c1ffc4 	movi	r7,2047
    ac80:	11c03b26 	beq	r2,r7,ad70 <__adddf3+0x784>
    ac84:	0109c83a 	sub	r4,zero,r4
    ac88:	29402034 	orhi	r5,r5,128
    ac8c:	01c00e04 	movi	r7,56
    ac90:	39006216 	blt	r7,r4,ae1c <__adddf3+0x830>
    ac94:	01c007c4 	movi	r7,31
    ac98:	39006b16 	blt	r7,r4,ae48 <__adddf3+0x85c>
    ac9c:	01c00804 	movi	r7,32
    aca0:	390fc83a 	sub	r7,r7,r4
    aca4:	29d4983a 	sll	r10,r5,r7
    aca8:	8912d83a 	srl	r9,r17,r4
    acac:	89ce983a 	sll	r7,r17,r7
    acb0:	2908d83a 	srl	r4,r5,r4
    acb4:	5262b03a 	or	r17,r10,r9
    acb8:	380ac03a 	cmpne	r5,r7,zero
    acbc:	8962b03a 	or	r17,r17,r5
    acc0:	89a3883a 	add	r17,r17,r6
    acc4:	2211883a 	add	r8,r4,r8
    acc8:	898d803a 	cmpltu	r6,r17,r6
    accc:	418b883a 	add	r5,r8,r6
    acd0:	1021883a 	mov	r16,r2
    acd4:	003ee706 	br	a874 <__alt_data_end+0xfffa8df4>
    acd8:	4184b03a 	or	r2,r8,r6
    acdc:	103e6226 	beq	r2,zero,a668 <__alt_data_end+0xfffa8be8>
    ace0:	8987c83a 	sub	r3,r17,r6
    ace4:	88c9803a 	cmpltu	r4,r17,r3
    ace8:	2a05c83a 	sub	r2,r5,r8
    acec:	1105c83a 	sub	r2,r2,r4
    acf0:	1100202c 	andhi	r4,r2,128
    acf4:	203f0426 	beq	r4,zero,a908 <__alt_data_end+0xfffa8e88>
    acf8:	3463c83a 	sub	r17,r6,r17
    acfc:	414bc83a 	sub	r5,r8,r5
    ad00:	344d803a 	cmpltu	r6,r6,r17
    ad04:	298bc83a 	sub	r5,r5,r6
    ad08:	3825883a 	mov	r18,r7
    ad0c:	003e5606 	br	a668 <__alt_data_end+0xfffa8be8>
    ad10:	4184b03a 	or	r2,r8,r6
    ad14:	10002b26 	beq	r2,zero,adc4 <__adddf3+0x7d8>
    ad18:	2804d0fa 	srli	r2,r5,3
    ad1c:	8822d0fa 	srli	r17,r17,3
    ad20:	280a977a 	slli	r5,r5,29
    ad24:	10c0022c 	andhi	r3,r2,8
    ad28:	2c62b03a 	or	r17,r5,r17
    ad2c:	18000826 	beq	r3,zero,ad50 <__adddf3+0x764>
    ad30:	4008d0fa 	srli	r4,r8,3
    ad34:	20c0022c 	andhi	r3,r4,8
    ad38:	1800051e 	bne	r3,zero,ad50 <__adddf3+0x764>
    ad3c:	300cd0fa 	srli	r6,r6,3
    ad40:	4010977a 	slli	r8,r8,29
    ad44:	2005883a 	mov	r2,r4
    ad48:	3825883a 	mov	r18,r7
    ad4c:	41a2b03a 	or	r17,r8,r6
    ad50:	880ad77a 	srli	r5,r17,29
    ad54:	100490fa 	slli	r2,r2,3
    ad58:	882290fa 	slli	r17,r17,3
    ad5c:	0401ffc4 	movi	r16,2047
    ad60:	288ab03a 	or	r5,r5,r2
    ad64:	003e4006 	br	a668 <__alt_data_end+0xfffa8be8>
    ad68:	01c1ffc4 	movi	r7,2047
    ad6c:	11ffc71e 	bne	r2,r7,ac8c <__alt_data_end+0xfffa920c>
    ad70:	400b883a 	mov	r5,r8
    ad74:	3023883a 	mov	r17,r6
    ad78:	1021883a 	mov	r16,r2
    ad7c:	003e3a06 	br	a668 <__alt_data_end+0xfffa8be8>
    ad80:	10002d26 	beq	r2,zero,ae38 <__adddf3+0x84c>
    ad84:	4184b03a 	or	r2,r8,r6
    ad88:	10000e26 	beq	r2,zero,adc4 <__adddf3+0x7d8>
    ad8c:	2804d0fa 	srli	r2,r5,3
    ad90:	8822d0fa 	srli	r17,r17,3
    ad94:	280a977a 	slli	r5,r5,29
    ad98:	10c0022c 	andhi	r3,r2,8
    ad9c:	2c62b03a 	or	r17,r5,r17
    ada0:	183feb26 	beq	r3,zero,ad50 <__alt_data_end+0xfffa92d0>
    ada4:	4008d0fa 	srli	r4,r8,3
    ada8:	20c0022c 	andhi	r3,r4,8
    adac:	183fe81e 	bne	r3,zero,ad50 <__alt_data_end+0xfffa92d0>
    adb0:	300cd0fa 	srli	r6,r6,3
    adb4:	4010977a 	slli	r8,r8,29
    adb8:	2005883a 	mov	r2,r4
    adbc:	41a2b03a 	or	r17,r8,r6
    adc0:	003fe306 	br	ad50 <__alt_data_end+0xfffa92d0>
    adc4:	0401ffc4 	movi	r16,2047
    adc8:	003e2706 	br	a668 <__alt_data_end+0xfffa8be8>
    adcc:	0011883a 	mov	r8,zero
    add0:	003f8306 	br	abe0 <__alt_data_end+0xfffa9160>
    add4:	193ff804 	addi	r4,r3,-32
    add8:	02400804 	movi	r9,32
    addc:	2908d83a 	srl	r4,r5,r4
    ade0:	1a402526 	beq	r3,r9,ae78 <__adddf3+0x88c>
    ade4:	02401004 	movi	r9,64
    ade8:	48c7c83a 	sub	r3,r9,r3
    adec:	28ca983a 	sll	r5,r5,r3
    adf0:	2c62b03a 	or	r17,r5,r17
    adf4:	8822c03a 	cmpne	r17,r17,zero
    adf8:	8922b03a 	or	r17,r17,r4
    adfc:	0007883a 	mov	r3,zero
    ae00:	003f2f06 	br	aac0 <__alt_data_end+0xfffa9040>
    ae04:	01402034 	movhi	r5,128
    ae08:	0007883a 	mov	r3,zero
    ae0c:	297fffc4 	addi	r5,r5,-1
    ae10:	047ffe04 	movi	r17,-8
    ae14:	0401ffc4 	movi	r16,2047
    ae18:	003e7306 	br	a7e8 <__alt_data_end+0xfffa8d68>
    ae1c:	2c62b03a 	or	r17,r5,r17
    ae20:	8822c03a 	cmpne	r17,r17,zero
    ae24:	0009883a 	mov	r4,zero
    ae28:	003fa506 	br	acc0 <__alt_data_end+0xfffa9240>
    ae2c:	400b883a 	mov	r5,r8
    ae30:	3023883a 	mov	r17,r6
    ae34:	003e0c06 	br	a668 <__alt_data_end+0xfffa8be8>
    ae38:	400b883a 	mov	r5,r8
    ae3c:	3023883a 	mov	r17,r6
    ae40:	0401ffc4 	movi	r16,2047
    ae44:	003e0806 	br	a668 <__alt_data_end+0xfffa8be8>
    ae48:	21fff804 	addi	r7,r4,-32
    ae4c:	02400804 	movi	r9,32
    ae50:	29ced83a 	srl	r7,r5,r7
    ae54:	22400a26 	beq	r4,r9,ae80 <__adddf3+0x894>
    ae58:	02401004 	movi	r9,64
    ae5c:	4909c83a 	sub	r4,r9,r4
    ae60:	290a983a 	sll	r5,r5,r4
    ae64:	2c62b03a 	or	r17,r5,r17
    ae68:	8822c03a 	cmpne	r17,r17,zero
    ae6c:	89e2b03a 	or	r17,r17,r7
    ae70:	0009883a 	mov	r4,zero
    ae74:	003f9206 	br	acc0 <__alt_data_end+0xfffa9240>
    ae78:	000b883a 	mov	r5,zero
    ae7c:	003fdc06 	br	adf0 <__alt_data_end+0xfffa9370>
    ae80:	000b883a 	mov	r5,zero
    ae84:	003ff706 	br	ae64 <__alt_data_end+0xfffa93e4>

0000ae88 <__divdf3>:
    ae88:	defff004 	addi	sp,sp,-64
    ae8c:	dc800815 	stw	r18,32(sp)
    ae90:	2824d53a 	srli	r18,r5,20
    ae94:	dd800c15 	stw	r22,48(sp)
    ae98:	282cd7fa 	srli	r22,r5,31
    ae9c:	dc000615 	stw	r16,24(sp)
    aea0:	04000434 	movhi	r16,16
    aea4:	df000e15 	stw	fp,56(sp)
    aea8:	dd000a15 	stw	r20,40(sp)
    aeac:	dcc00915 	stw	r19,36(sp)
    aeb0:	dc400715 	stw	r17,28(sp)
    aeb4:	843fffc4 	addi	r16,r16,-1
    aeb8:	dfc00f15 	stw	ra,60(sp)
    aebc:	ddc00d15 	stw	r23,52(sp)
    aec0:	dd400b15 	stw	r21,44(sp)
    aec4:	9481ffcc 	andi	r18,r18,2047
    aec8:	2029883a 	mov	r20,r4
    aecc:	2027883a 	mov	r19,r4
    aed0:	2c22703a 	and	r17,r5,r16
    aed4:	b7003fcc 	andi	fp,r22,255
    aed8:	90005e26 	beq	r18,zero,b054 <__divdf3+0x1cc>
    aedc:	0081ffc4 	movi	r2,2047
    aee0:	90803526 	beq	r18,r2,afb8 <__divdf3+0x130>
    aee4:	8c000434 	orhi	r16,r17,16
    aee8:	2004d77a 	srli	r2,r4,29
    aeec:	802090fa 	slli	r16,r16,3
    aef0:	202690fa 	slli	r19,r4,3
    aef4:	94bf0044 	addi	r18,r18,-1023
    aef8:	80a2b03a 	or	r17,r16,r2
    aefc:	0029883a 	mov	r20,zero
    af00:	0011883a 	mov	r8,zero
    af04:	380ad53a 	srli	r5,r7,20
    af08:	382ed7fa 	srli	r23,r7,31
    af0c:	04000434 	movhi	r16,16
    af10:	843fffc4 	addi	r16,r16,-1
    af14:	2941ffcc 	andi	r5,r5,2047
    af18:	302b883a 	mov	r21,r6
    af1c:	3c20703a 	and	r16,r7,r16
    af20:	ba403fcc 	andi	r9,r23,255
    af24:	28006726 	beq	r5,zero,b0c4 <__divdf3+0x23c>
    af28:	0081ffc4 	movi	r2,2047
    af2c:	28805f26 	beq	r5,r2,b0ac <__divdf3+0x224>
    af30:	84000434 	orhi	r16,r16,16
    af34:	3004d77a 	srli	r2,r6,29
    af38:	802090fa 	slli	r16,r16,3
    af3c:	302a90fa 	slli	r21,r6,3
    af40:	297f0044 	addi	r5,r5,-1023
    af44:	80a0b03a 	or	r16,r16,r2
    af48:	000f883a 	mov	r7,zero
    af4c:	3d06b03a 	or	r3,r7,r20
    af50:	180690ba 	slli	r3,r3,2
    af54:	00800074 	movhi	r2,1
    af58:	10abde04 	addi	r2,r2,-20616
    af5c:	1885883a 	add	r2,r3,r2
    af60:	10800017 	ldw	r2,0(r2)
    af64:	b5c8f03a 	xor	r4,r22,r23
    af68:	200d883a 	mov	r6,r4
    af6c:	25003fcc 	andi	r20,r4,255
    af70:	9165c83a 	sub	r18,r18,r5
    af74:	1000683a 	jmp	r2
    af78:	0000b1c0 	call	b1c <_malloc_r+0x5cc>
    af7c:	0000aff0 	cmpltui	zero,zero,703
    af80:	0000b184 	movi	zero,710
    af84:	0000afd4 	movui	zero,703
    af88:	0000b184 	movi	zero,710
    af8c:	0000b158 	cmpnei	zero,zero,709
    af90:	0000b184 	movi	zero,710
    af94:	0000afd4 	movui	zero,703
    af98:	0000aff0 	cmpltui	zero,zero,703
    af9c:	0000aff0 	cmpltui	zero,zero,703
    afa0:	0000b158 	cmpnei	zero,zero,709
    afa4:	0000afd4 	movui	zero,703
    afa8:	0000afe4 	muli	zero,zero,703
    afac:	0000afe4 	muli	zero,zero,703
    afb0:	0000afe4 	muli	zero,zero,703
    afb4:	0000b194 	movui	zero,710
    afb8:	8904b03a 	or	r2,r17,r4
    afbc:	1000631e 	bne	r2,zero,b14c <__divdf3+0x2c4>
    afc0:	05000204 	movi	r20,8
    afc4:	0023883a 	mov	r17,zero
    afc8:	0027883a 	mov	r19,zero
    afcc:	02000084 	movi	r8,2
    afd0:	003fcc06 	br	af04 <__alt_data_end+0xfffa9484>
    afd4:	8023883a 	mov	r17,r16
    afd8:	a827883a 	mov	r19,r21
    afdc:	4839883a 	mov	fp,r9
    afe0:	3811883a 	mov	r8,r7
    afe4:	00800084 	movi	r2,2
    afe8:	4081531e 	bne	r8,r2,b538 <__divdf3+0x6b0>
    afec:	e029883a 	mov	r20,fp
    aff0:	a180004c 	andi	r6,r20,1
    aff4:	0201ffc4 	movi	r8,2047
    aff8:	000b883a 	mov	r5,zero
    affc:	0027883a 	mov	r19,zero
    b000:	4010953a 	slli	r8,r8,20
    b004:	30c03fcc 	andi	r3,r6,255
    b008:	04000434 	movhi	r16,16
    b00c:	180697fa 	slli	r3,r3,31
    b010:	843fffc4 	addi	r16,r16,-1
    b014:	2c20703a 	and	r16,r5,r16
    b018:	8220b03a 	or	r16,r16,r8
    b01c:	80c6b03a 	or	r3,r16,r3
    b020:	9805883a 	mov	r2,r19
    b024:	dfc00f17 	ldw	ra,60(sp)
    b028:	df000e17 	ldw	fp,56(sp)
    b02c:	ddc00d17 	ldw	r23,52(sp)
    b030:	dd800c17 	ldw	r22,48(sp)
    b034:	dd400b17 	ldw	r21,44(sp)
    b038:	dd000a17 	ldw	r20,40(sp)
    b03c:	dcc00917 	ldw	r19,36(sp)
    b040:	dc800817 	ldw	r18,32(sp)
    b044:	dc400717 	ldw	r17,28(sp)
    b048:	dc000617 	ldw	r16,24(sp)
    b04c:	dec01004 	addi	sp,sp,64
    b050:	f800283a 	ret
    b054:	8904b03a 	or	r2,r17,r4
    b058:	10003726 	beq	r2,zero,b138 <__divdf3+0x2b0>
    b05c:	88014d26 	beq	r17,zero,b594 <__divdf3+0x70c>
    b060:	8809883a 	mov	r4,r17
    b064:	d9800215 	stw	r6,8(sp)
    b068:	d9c00515 	stw	r7,20(sp)
    b06c:	000cd840 	call	cd84 <__clzsi2>
    b070:	d9800217 	ldw	r6,8(sp)
    b074:	d9c00517 	ldw	r7,20(sp)
    b078:	1007883a 	mov	r3,r2
    b07c:	01000a04 	movi	r4,40
    b080:	1cfffe04 	addi	r19,r3,-8
    b084:	20c9c83a 	sub	r4,r4,r3
    b088:	8cca983a 	sll	r5,r17,r19
    b08c:	a108d83a 	srl	r4,r20,r4
    b090:	a4e6983a 	sll	r19,r20,r19
    b094:	2162b03a 	or	r17,r4,r5
    b098:	04bf0344 	movi	r18,-1011
    b09c:	90e5c83a 	sub	r18,r18,r3
    b0a0:	0029883a 	mov	r20,zero
    b0a4:	0011883a 	mov	r8,zero
    b0a8:	003f9606 	br	af04 <__alt_data_end+0xfffa9484>
    b0ac:	8184b03a 	or	r2,r16,r6
    b0b0:	10001f1e 	bne	r2,zero,b130 <__divdf3+0x2a8>
    b0b4:	0021883a 	mov	r16,zero
    b0b8:	002b883a 	mov	r21,zero
    b0bc:	01c00084 	movi	r7,2
    b0c0:	003fa206 	br	af4c <__alt_data_end+0xfffa94cc>
    b0c4:	8184b03a 	or	r2,r16,r6
    b0c8:	10001526 	beq	r2,zero,b120 <__divdf3+0x298>
    b0cc:	80013d26 	beq	r16,zero,b5c4 <__divdf3+0x73c>
    b0d0:	8009883a 	mov	r4,r16
    b0d4:	d9800215 	stw	r6,8(sp)
    b0d8:	da000315 	stw	r8,12(sp)
    b0dc:	da400415 	stw	r9,16(sp)
    b0e0:	000cd840 	call	cd84 <__clzsi2>
    b0e4:	d9800217 	ldw	r6,8(sp)
    b0e8:	da000317 	ldw	r8,12(sp)
    b0ec:	da400417 	ldw	r9,16(sp)
    b0f0:	1007883a 	mov	r3,r2
    b0f4:	01000a04 	movi	r4,40
    b0f8:	1d7ffe04 	addi	r21,r3,-8
    b0fc:	20c9c83a 	sub	r4,r4,r3
    b100:	8560983a 	sll	r16,r16,r21
    b104:	3108d83a 	srl	r4,r6,r4
    b108:	356a983a 	sll	r21,r6,r21
    b10c:	2420b03a 	or	r16,r4,r16
    b110:	017f0344 	movi	r5,-1011
    b114:	28cbc83a 	sub	r5,r5,r3
    b118:	000f883a 	mov	r7,zero
    b11c:	003f8b06 	br	af4c <__alt_data_end+0xfffa94cc>
    b120:	0021883a 	mov	r16,zero
    b124:	002b883a 	mov	r21,zero
    b128:	01c00044 	movi	r7,1
    b12c:	003f8706 	br	af4c <__alt_data_end+0xfffa94cc>
    b130:	01c000c4 	movi	r7,3
    b134:	003f8506 	br	af4c <__alt_data_end+0xfffa94cc>
    b138:	05000104 	movi	r20,4
    b13c:	0023883a 	mov	r17,zero
    b140:	0027883a 	mov	r19,zero
    b144:	02000044 	movi	r8,1
    b148:	003f6e06 	br	af04 <__alt_data_end+0xfffa9484>
    b14c:	05000304 	movi	r20,12
    b150:	020000c4 	movi	r8,3
    b154:	003f6b06 	br	af04 <__alt_data_end+0xfffa9484>
    b158:	01400434 	movhi	r5,16
    b15c:	000d883a 	mov	r6,zero
    b160:	297fffc4 	addi	r5,r5,-1
    b164:	04ffffc4 	movi	r19,-1
    b168:	0201ffc4 	movi	r8,2047
    b16c:	003fa406 	br	b000 <__alt_data_end+0xfffa9580>
    b170:	043f0084 	movi	r16,-1022
    b174:	84a1c83a 	sub	r16,r16,r18
    b178:	00800e04 	movi	r2,56
    b17c:	14014d0e 	bge	r2,r16,b6b4 <__divdf3+0x82c>
    b180:	a180004c 	andi	r6,r20,1
    b184:	0011883a 	mov	r8,zero
    b188:	000b883a 	mov	r5,zero
    b18c:	0027883a 	mov	r19,zero
    b190:	003f9b06 	br	b000 <__alt_data_end+0xfffa9580>
    b194:	8880022c 	andhi	r2,r17,8
    b198:	1000f026 	beq	r2,zero,b55c <__divdf3+0x6d4>
    b19c:	8080022c 	andhi	r2,r16,8
    b1a0:	1000ee1e 	bne	r2,zero,b55c <__divdf3+0x6d4>
    b1a4:	00800434 	movhi	r2,16
    b1a8:	81400234 	orhi	r5,r16,8
    b1ac:	10bfffc4 	addi	r2,r2,-1
    b1b0:	b80d883a 	mov	r6,r23
    b1b4:	288a703a 	and	r5,r5,r2
    b1b8:	a827883a 	mov	r19,r21
    b1bc:	003fea06 	br	b168 <__alt_data_end+0xfffa96e8>
    b1c0:	84411c36 	bltu	r16,r17,b634 <__divdf3+0x7ac>
    b1c4:	8c011a26 	beq	r17,r16,b630 <__divdf3+0x7a8>
    b1c8:	94bfffc4 	addi	r18,r18,-1
    b1cc:	dcc00015 	stw	r19,0(sp)
    b1d0:	8811883a 	mov	r8,r17
    b1d4:	002d883a 	mov	r22,zero
    b1d8:	a80cd63a 	srli	r6,r21,24
    b1dc:	8020923a 	slli	r16,r16,8
    b1e0:	a82a923a 	slli	r21,r21,8
    b1e4:	4009883a 	mov	r4,r8
    b1e8:	342eb03a 	or	r23,r6,r16
    b1ec:	dd400115 	stw	r21,4(sp)
    b1f0:	b82ad43a 	srli	r21,r23,16
    b1f4:	da000315 	stw	r8,12(sp)
    b1f8:	bcffffcc 	andi	r19,r23,65535
    b1fc:	a80b883a 	mov	r5,r21
    b200:	000a5b40 	call	a5b4 <__udivsi3>
    b204:	1009883a 	mov	r4,r2
    b208:	980b883a 	mov	r5,r19
    b20c:	1023883a 	mov	r17,r2
    b210:	000a5c40 	call	a5c4 <__mulsi3>
    b214:	da000317 	ldw	r8,12(sp)
    b218:	a80b883a 	mov	r5,r21
    b21c:	1039883a 	mov	fp,r2
    b220:	4009883a 	mov	r4,r8
    b224:	000a5bc0 	call	a5bc <__umodsi3>
    b228:	d8c00017 	ldw	r3,0(sp)
    b22c:	1004943a 	slli	r2,r2,16
    b230:	1810d43a 	srli	r8,r3,16
    b234:	120eb03a 	or	r7,r2,r8
    b238:	3f00062e 	bgeu	r7,fp,b254 <__divdf3+0x3cc>
    b23c:	3dcf883a 	add	r7,r7,r23
    b240:	88bfffc4 	addi	r2,r17,-1
    b244:	3dc10a36 	bltu	r7,r23,b670 <__divdf3+0x7e8>
    b248:	3f01092e 	bgeu	r7,fp,b670 <__divdf3+0x7e8>
    b24c:	8c7fff84 	addi	r17,r17,-2
    b250:	3dcf883a 	add	r7,r7,r23
    b254:	3f39c83a 	sub	fp,r7,fp
    b258:	e009883a 	mov	r4,fp
    b25c:	a80b883a 	mov	r5,r21
    b260:	000a5b40 	call	a5b4 <__udivsi3>
    b264:	1009883a 	mov	r4,r2
    b268:	980b883a 	mov	r5,r19
    b26c:	1021883a 	mov	r16,r2
    b270:	000a5c40 	call	a5c4 <__mulsi3>
    b274:	e009883a 	mov	r4,fp
    b278:	a80b883a 	mov	r5,r21
    b27c:	d8800315 	stw	r2,12(sp)
    b280:	000a5bc0 	call	a5bc <__umodsi3>
    b284:	d9000017 	ldw	r4,0(sp)
    b288:	1004943a 	slli	r2,r2,16
    b28c:	da000317 	ldw	r8,12(sp)
    b290:	20ffffcc 	andi	r3,r4,65535
    b294:	10ceb03a 	or	r7,r2,r3
    b298:	3a00062e 	bgeu	r7,r8,b2b4 <__divdf3+0x42c>
    b29c:	3dcf883a 	add	r7,r7,r23
    b2a0:	80bfffc4 	addi	r2,r16,-1
    b2a4:	3dc0f036 	bltu	r7,r23,b668 <__divdf3+0x7e0>
    b2a8:	3a00ef2e 	bgeu	r7,r8,b668 <__divdf3+0x7e0>
    b2ac:	843fff84 	addi	r16,r16,-2
    b2b0:	3dcf883a 	add	r7,r7,r23
    b2b4:	d8c00117 	ldw	r3,4(sp)
    b2b8:	8822943a 	slli	r17,r17,16
    b2bc:	3a0fc83a 	sub	r7,r7,r8
    b2c0:	1806d43a 	srli	r3,r3,16
    b2c4:	8462b03a 	or	r17,r16,r17
    b2c8:	8affffcc 	andi	r11,r17,65535
    b2cc:	d8c00015 	stw	r3,0(sp)
    b2d0:	d8c00117 	ldw	r3,4(sp)
    b2d4:	8820d43a 	srli	r16,r17,16
    b2d8:	5809883a 	mov	r4,r11
    b2dc:	1f3fffcc 	andi	fp,r3,65535
    b2e0:	e00b883a 	mov	r5,fp
    b2e4:	d9c00515 	stw	r7,20(sp)
    b2e8:	dac00215 	stw	r11,8(sp)
    b2ec:	000a5c40 	call	a5c4 <__mulsi3>
    b2f0:	8009883a 	mov	r4,r16
    b2f4:	e00b883a 	mov	r5,fp
    b2f8:	d8800415 	stw	r2,16(sp)
    b2fc:	000a5c40 	call	a5c4 <__mulsi3>
    b300:	d9400017 	ldw	r5,0(sp)
    b304:	8009883a 	mov	r4,r16
    b308:	d8800315 	stw	r2,12(sp)
    b30c:	000a5c40 	call	a5c4 <__mulsi3>
    b310:	dac00217 	ldw	r11,8(sp)
    b314:	d9400017 	ldw	r5,0(sp)
    b318:	d8800215 	stw	r2,8(sp)
    b31c:	5809883a 	mov	r4,r11
    b320:	000a5c40 	call	a5c4 <__mulsi3>
    b324:	da400417 	ldw	r9,16(sp)
    b328:	da800317 	ldw	r10,12(sp)
    b32c:	d9c00517 	ldw	r7,20(sp)
    b330:	480ad43a 	srli	r5,r9,16
    b334:	5085883a 	add	r2,r10,r2
    b338:	db000217 	ldw	r12,8(sp)
    b33c:	1151883a 	add	r8,r2,r5
    b340:	4280022e 	bgeu	r8,r10,b34c <__divdf3+0x4c4>
    b344:	00800074 	movhi	r2,1
    b348:	6099883a 	add	r12,r12,r2
    b34c:	400ad43a 	srli	r5,r8,16
    b350:	4010943a 	slli	r8,r8,16
    b354:	4c3fffcc 	andi	r16,r9,65535
    b358:	6149883a 	add	r4,r12,r5
    b35c:	4411883a 	add	r8,r8,r16
    b360:	3900a736 	bltu	r7,r4,b600 <__divdf3+0x778>
    b364:	3900c426 	beq	r7,r4,b678 <__divdf3+0x7f0>
    b368:	3909c83a 	sub	r4,r7,r4
    b36c:	b221c83a 	sub	r16,r22,r8
    b370:	b42d803a 	cmpltu	r22,r22,r16
    b374:	25adc83a 	sub	r22,r4,r22
    b378:	b5c0c626 	beq	r22,r23,b694 <__divdf3+0x80c>
    b37c:	b009883a 	mov	r4,r22
    b380:	a80b883a 	mov	r5,r21
    b384:	000a5b40 	call	a5b4 <__udivsi3>
    b388:	1009883a 	mov	r4,r2
    b38c:	980b883a 	mov	r5,r19
    b390:	d8800315 	stw	r2,12(sp)
    b394:	000a5c40 	call	a5c4 <__mulsi3>
    b398:	a80b883a 	mov	r5,r21
    b39c:	b009883a 	mov	r4,r22
    b3a0:	d8800415 	stw	r2,16(sp)
    b3a4:	000a5bc0 	call	a5bc <__umodsi3>
    b3a8:	1004943a 	slli	r2,r2,16
    b3ac:	800ed43a 	srli	r7,r16,16
    b3b0:	da400417 	ldw	r9,16(sp)
    b3b4:	da000317 	ldw	r8,12(sp)
    b3b8:	11cab03a 	or	r5,r2,r7
    b3bc:	2a40062e 	bgeu	r5,r9,b3d8 <__divdf3+0x550>
    b3c0:	2dcb883a 	add	r5,r5,r23
    b3c4:	40bfffc4 	addi	r2,r8,-1
    b3c8:	2dc0b436 	bltu	r5,r23,b69c <__divdf3+0x814>
    b3cc:	2a40b32e 	bgeu	r5,r9,b69c <__divdf3+0x814>
    b3d0:	423fff84 	addi	r8,r8,-2
    b3d4:	2dcb883a 	add	r5,r5,r23
    b3d8:	2a6dc83a 	sub	r22,r5,r9
    b3dc:	b009883a 	mov	r4,r22
    b3e0:	a80b883a 	mov	r5,r21
    b3e4:	da000315 	stw	r8,12(sp)
    b3e8:	000a5b40 	call	a5b4 <__udivsi3>
    b3ec:	980b883a 	mov	r5,r19
    b3f0:	1009883a 	mov	r4,r2
    b3f4:	d8800415 	stw	r2,16(sp)
    b3f8:	000a5c40 	call	a5c4 <__mulsi3>
    b3fc:	b009883a 	mov	r4,r22
    b400:	a80b883a 	mov	r5,r21
    b404:	1027883a 	mov	r19,r2
    b408:	000a5bc0 	call	a5bc <__umodsi3>
    b40c:	1004943a 	slli	r2,r2,16
    b410:	843fffcc 	andi	r16,r16,65535
    b414:	da000317 	ldw	r8,12(sp)
    b418:	140eb03a 	or	r7,r2,r16
    b41c:	da400417 	ldw	r9,16(sp)
    b420:	3cc0062e 	bgeu	r7,r19,b43c <__divdf3+0x5b4>
    b424:	3dcf883a 	add	r7,r7,r23
    b428:	48bfffc4 	addi	r2,r9,-1
    b42c:	3dc09d36 	bltu	r7,r23,b6a4 <__divdf3+0x81c>
    b430:	3cc09c2e 	bgeu	r7,r19,b6a4 <__divdf3+0x81c>
    b434:	4a7fff84 	addi	r9,r9,-2
    b438:	3dcf883a 	add	r7,r7,r23
    b43c:	4010943a 	slli	r8,r8,16
    b440:	3cebc83a 	sub	r21,r7,r19
    b444:	e00b883a 	mov	r5,fp
    b448:	4a26b03a 	or	r19,r9,r8
    b44c:	99ffffcc 	andi	r7,r19,65535
    b450:	9820d43a 	srli	r16,r19,16
    b454:	3809883a 	mov	r4,r7
    b458:	d9c00515 	stw	r7,20(sp)
    b45c:	000a5c40 	call	a5c4 <__mulsi3>
    b460:	8009883a 	mov	r4,r16
    b464:	e00b883a 	mov	r5,fp
    b468:	102d883a 	mov	r22,r2
    b46c:	000a5c40 	call	a5c4 <__mulsi3>
    b470:	d9400017 	ldw	r5,0(sp)
    b474:	8009883a 	mov	r4,r16
    b478:	1039883a 	mov	fp,r2
    b47c:	000a5c40 	call	a5c4 <__mulsi3>
    b480:	d9c00517 	ldw	r7,20(sp)
    b484:	d9400017 	ldw	r5,0(sp)
    b488:	1021883a 	mov	r16,r2
    b48c:	3809883a 	mov	r4,r7
    b490:	000a5c40 	call	a5c4 <__mulsi3>
    b494:	b008d43a 	srli	r4,r22,16
    b498:	e085883a 	add	r2,fp,r2
    b49c:	1109883a 	add	r4,r2,r4
    b4a0:	2700022e 	bgeu	r4,fp,b4ac <__divdf3+0x624>
    b4a4:	00800074 	movhi	r2,1
    b4a8:	80a1883a 	add	r16,r16,r2
    b4ac:	200ad43a 	srli	r5,r4,16
    b4b0:	2008943a 	slli	r4,r4,16
    b4b4:	b5bfffcc 	andi	r22,r22,65535
    b4b8:	8145883a 	add	r2,r16,r5
    b4bc:	2589883a 	add	r4,r4,r22
    b4c0:	a8802c36 	bltu	r21,r2,b574 <__divdf3+0x6ec>
    b4c4:	a880a426 	beq	r21,r2,b758 <__divdf3+0x8d0>
    b4c8:	9cc00054 	ori	r19,r19,1
    b4cc:	9200ffc4 	addi	r8,r18,1023
    b4d0:	023f270e 	bge	zero,r8,b170 <__alt_data_end+0xfffa96f0>
    b4d4:	988001cc 	andi	r2,r19,7
    b4d8:	10000726 	beq	r2,zero,b4f8 <__divdf3+0x670>
    b4dc:	990003cc 	andi	r4,r19,15
    b4e0:	00800104 	movi	r2,4
    b4e4:	20800426 	beq	r4,r2,b4f8 <__divdf3+0x670>
    b4e8:	9885883a 	add	r2,r19,r2
    b4ec:	14e7803a 	cmpltu	r19,r2,r19
    b4f0:	8ce3883a 	add	r17,r17,r19
    b4f4:	1027883a 	mov	r19,r2
    b4f8:	8880402c 	andhi	r2,r17,256
    b4fc:	10000426 	beq	r2,zero,b510 <__divdf3+0x688>
    b500:	00bfc034 	movhi	r2,65280
    b504:	10bfffc4 	addi	r2,r2,-1
    b508:	92010004 	addi	r8,r18,1024
    b50c:	88a2703a 	and	r17,r17,r2
    b510:	0081ff84 	movi	r2,2046
    b514:	123eb616 	blt	r2,r8,aff0 <__alt_data_end+0xfffa9570>
    b518:	9826d0fa 	srli	r19,r19,3
    b51c:	8804977a 	slli	r2,r17,29
    b520:	8820927a 	slli	r16,r17,9
    b524:	4201ffcc 	andi	r8,r8,2047
    b528:	14e6b03a 	or	r19,r2,r19
    b52c:	800ad33a 	srli	r5,r16,12
    b530:	a180004c 	andi	r6,r20,1
    b534:	003eb206 	br	b000 <__alt_data_end+0xfffa9580>
    b538:	008000c4 	movi	r2,3
    b53c:	4080ac26 	beq	r8,r2,b7f0 <__divdf3+0x968>
    b540:	00800044 	movi	r2,1
    b544:	4080591e 	bne	r8,r2,b6ac <__divdf3+0x824>
    b548:	e00d883a 	mov	r6,fp
    b54c:	0011883a 	mov	r8,zero
    b550:	000b883a 	mov	r5,zero
    b554:	0027883a 	mov	r19,zero
    b558:	003ea906 	br	b000 <__alt_data_end+0xfffa9580>
    b55c:	00800434 	movhi	r2,16
    b560:	89400234 	orhi	r5,r17,8
    b564:	10bfffc4 	addi	r2,r2,-1
    b568:	b00d883a 	mov	r6,r22
    b56c:	288a703a 	and	r5,r5,r2
    b570:	003efd06 	br	b168 <__alt_data_end+0xfffa96e8>
    b574:	adcf883a 	add	r7,r21,r23
    b578:	997fffc4 	addi	r5,r19,-1
    b57c:	3dc0412e 	bgeu	r7,r23,b684 <__divdf3+0x7fc>
    b580:	2827883a 	mov	r19,r5
    b584:	38bfd01e 	bne	r7,r2,b4c8 <__alt_data_end+0xfffa9a48>
    b588:	d8c00117 	ldw	r3,4(sp)
    b58c:	193fce1e 	bne	r3,r4,b4c8 <__alt_data_end+0xfffa9a48>
    b590:	003fce06 	br	b4cc <__alt_data_end+0xfffa9a4c>
    b594:	d9800215 	stw	r6,8(sp)
    b598:	d9c00515 	stw	r7,20(sp)
    b59c:	000cd840 	call	cd84 <__clzsi2>
    b5a0:	10c00804 	addi	r3,r2,32
    b5a4:	010009c4 	movi	r4,39
    b5a8:	d9800217 	ldw	r6,8(sp)
    b5ac:	d9c00517 	ldw	r7,20(sp)
    b5b0:	20feb20e 	bge	r4,r3,b07c <__alt_data_end+0xfffa95fc>
    b5b4:	117ffe04 	addi	r5,r2,-8
    b5b8:	a162983a 	sll	r17,r20,r5
    b5bc:	0027883a 	mov	r19,zero
    b5c0:	003eb506 	br	b098 <__alt_data_end+0xfffa9618>
    b5c4:	3009883a 	mov	r4,r6
    b5c8:	d9800215 	stw	r6,8(sp)
    b5cc:	da000315 	stw	r8,12(sp)
    b5d0:	da400415 	stw	r9,16(sp)
    b5d4:	000cd840 	call	cd84 <__clzsi2>
    b5d8:	10c00804 	addi	r3,r2,32
    b5dc:	010009c4 	movi	r4,39
    b5e0:	d9800217 	ldw	r6,8(sp)
    b5e4:	da000317 	ldw	r8,12(sp)
    b5e8:	da400417 	ldw	r9,16(sp)
    b5ec:	20fec10e 	bge	r4,r3,b0f4 <__alt_data_end+0xfffa9674>
    b5f0:	10bffe04 	addi	r2,r2,-8
    b5f4:	a8a0983a 	sll	r16,r21,r2
    b5f8:	002b883a 	mov	r21,zero
    b5fc:	003ec406 	br	b110 <__alt_data_end+0xfffa9690>
    b600:	d8c00117 	ldw	r3,4(sp)
    b604:	b0ed883a 	add	r22,r22,r3
    b608:	b0c5803a 	cmpltu	r2,r22,r3
    b60c:	15c5883a 	add	r2,r2,r23
    b610:	11cf883a 	add	r7,r2,r7
    b614:	88bfffc4 	addi	r2,r17,-1
    b618:	b9c00d2e 	bgeu	r23,r7,b650 <__divdf3+0x7c8>
    b61c:	39003f36 	bltu	r7,r4,b71c <__divdf3+0x894>
    b620:	21c06a26 	beq	r4,r7,b7cc <__divdf3+0x944>
    b624:	3909c83a 	sub	r4,r7,r4
    b628:	1023883a 	mov	r17,r2
    b62c:	003f4f06 	br	b36c <__alt_data_end+0xfffa98ec>
    b630:	9d7ee536 	bltu	r19,r21,b1c8 <__alt_data_end+0xfffa9748>
    b634:	982ed07a 	srli	r23,r19,1
    b638:	880497fa 	slli	r2,r17,31
    b63c:	8810d07a 	srli	r8,r17,1
    b640:	982c97fa 	slli	r22,r19,31
    b644:	b884b03a 	or	r2,r23,r2
    b648:	d8800015 	stw	r2,0(sp)
    b64c:	003ee206 	br	b1d8 <__alt_data_end+0xfffa9758>
    b650:	3dfff41e 	bne	r7,r23,b624 <__alt_data_end+0xfffa9ba4>
    b654:	d8c00117 	ldw	r3,4(sp)
    b658:	b0fff02e 	bgeu	r22,r3,b61c <__alt_data_end+0xfffa9b9c>
    b65c:	b909c83a 	sub	r4,r23,r4
    b660:	1023883a 	mov	r17,r2
    b664:	003f4106 	br	b36c <__alt_data_end+0xfffa98ec>
    b668:	1021883a 	mov	r16,r2
    b66c:	003f1106 	br	b2b4 <__alt_data_end+0xfffa9834>
    b670:	1023883a 	mov	r17,r2
    b674:	003ef706 	br	b254 <__alt_data_end+0xfffa97d4>
    b678:	b23fe136 	bltu	r22,r8,b600 <__alt_data_end+0xfffa9b80>
    b67c:	0009883a 	mov	r4,zero
    b680:	003f3a06 	br	b36c <__alt_data_end+0xfffa98ec>
    b684:	38802c36 	bltu	r7,r2,b738 <__divdf3+0x8b0>
    b688:	11c05326 	beq	r2,r7,b7d8 <__divdf3+0x950>
    b68c:	2827883a 	mov	r19,r5
    b690:	003f8d06 	br	b4c8 <__alt_data_end+0xfffa9a48>
    b694:	04ffffc4 	movi	r19,-1
    b698:	003f8c06 	br	b4cc <__alt_data_end+0xfffa9a4c>
    b69c:	1011883a 	mov	r8,r2
    b6a0:	003f4d06 	br	b3d8 <__alt_data_end+0xfffa9958>
    b6a4:	1013883a 	mov	r9,r2
    b6a8:	003f6406 	br	b43c <__alt_data_end+0xfffa99bc>
    b6ac:	e029883a 	mov	r20,fp
    b6b0:	003f8606 	br	b4cc <__alt_data_end+0xfffa9a4c>
    b6b4:	008007c4 	movi	r2,31
    b6b8:	14002a16 	blt	r2,r16,b764 <__divdf3+0x8dc>
    b6bc:	91410784 	addi	r5,r18,1054
    b6c0:	9c0cd83a 	srl	r6,r19,r16
    b6c4:	8948983a 	sll	r4,r17,r5
    b6c8:	9944983a 	sll	r2,r19,r5
    b6cc:	8c20d83a 	srl	r16,r17,r16
    b6d0:	3108b03a 	or	r4,r6,r4
    b6d4:	1004c03a 	cmpne	r2,r2,zero
    b6d8:	2084b03a 	or	r2,r4,r2
    b6dc:	110001cc 	andi	r4,r2,7
    b6e0:	20000726 	beq	r4,zero,b700 <__divdf3+0x878>
    b6e4:	114003cc 	andi	r5,r2,15
    b6e8:	01000104 	movi	r4,4
    b6ec:	29000426 	beq	r5,r4,b700 <__divdf3+0x878>
    b6f0:	11000104 	addi	r4,r2,4
    b6f4:	2085803a 	cmpltu	r2,r4,r2
    b6f8:	80a1883a 	add	r16,r16,r2
    b6fc:	2005883a 	mov	r2,r4
    b700:	8100202c 	andhi	r4,r16,128
    b704:	20002d26 	beq	r4,zero,b7bc <__divdf3+0x934>
    b708:	a180004c 	andi	r6,r20,1
    b70c:	02000044 	movi	r8,1
    b710:	000b883a 	mov	r5,zero
    b714:	0027883a 	mov	r19,zero
    b718:	003e3906 	br	b000 <__alt_data_end+0xfffa9580>
    b71c:	d8c00117 	ldw	r3,4(sp)
    b720:	8c7fff84 	addi	r17,r17,-2
    b724:	b0ed883a 	add	r22,r22,r3
    b728:	b0c5803a 	cmpltu	r2,r22,r3
    b72c:	15c5883a 	add	r2,r2,r23
    b730:	11cf883a 	add	r7,r2,r7
    b734:	003f0c06 	br	b368 <__alt_data_end+0xfffa98e8>
    b738:	d8c00117 	ldw	r3,4(sp)
    b73c:	997fff84 	addi	r5,r19,-2
    b740:	18d1883a 	add	r8,r3,r3
    b744:	40c7803a 	cmpltu	r3,r8,r3
    b748:	1dcd883a 	add	r6,r3,r23
    b74c:	398f883a 	add	r7,r7,r6
    b750:	da000115 	stw	r8,4(sp)
    b754:	003f8a06 	br	b580 <__alt_data_end+0xfffa9b00>
    b758:	203f861e 	bne	r4,zero,b574 <__alt_data_end+0xfffa9af4>
    b75c:	d8000115 	stw	zero,4(sp)
    b760:	003f8906 	br	b588 <__alt_data_end+0xfffa9b08>
    b764:	00bef884 	movi	r2,-1054
    b768:	1485c83a 	sub	r2,r2,r18
    b76c:	01000804 	movi	r4,32
    b770:	8884d83a 	srl	r2,r17,r2
    b774:	81001c26 	beq	r16,r4,b7e8 <__divdf3+0x960>
    b778:	91010f84 	addi	r4,r18,1086
    b77c:	8908983a 	sll	r4,r17,r4
    b780:	24c8b03a 	or	r4,r4,r19
    b784:	2008c03a 	cmpne	r4,r4,zero
    b788:	2084b03a 	or	r2,r4,r2
    b78c:	140001cc 	andi	r16,r2,7
    b790:	8000061e 	bne	r16,zero,b7ac <__divdf3+0x924>
    b794:	000b883a 	mov	r5,zero
    b798:	1004d0fa 	srli	r2,r2,3
    b79c:	a180004c 	andi	r6,r20,1
    b7a0:	0011883a 	mov	r8,zero
    b7a4:	1426b03a 	or	r19,r2,r16
    b7a8:	003e1506 	br	b000 <__alt_data_end+0xfffa9580>
    b7ac:	114003cc 	andi	r5,r2,15
    b7b0:	01000104 	movi	r4,4
    b7b4:	0021883a 	mov	r16,zero
    b7b8:	293fcd1e 	bne	r5,r4,b6f0 <__alt_data_end+0xfffa9c70>
    b7bc:	800a927a 	slli	r5,r16,9
    b7c0:	8020977a 	slli	r16,r16,29
    b7c4:	280ad33a 	srli	r5,r5,12
    b7c8:	003ff306 	br	b798 <__alt_data_end+0xfffa9d18>
    b7cc:	b23fd336 	bltu	r22,r8,b71c <__alt_data_end+0xfffa9c9c>
    b7d0:	1023883a 	mov	r17,r2
    b7d4:	003fa906 	br	b67c <__alt_data_end+0xfffa9bfc>
    b7d8:	d8c00117 	ldw	r3,4(sp)
    b7dc:	193fd636 	bltu	r3,r4,b738 <__alt_data_end+0xfffa9cb8>
    b7e0:	2827883a 	mov	r19,r5
    b7e4:	003f6806 	br	b588 <__alt_data_end+0xfffa9b08>
    b7e8:	0009883a 	mov	r4,zero
    b7ec:	003fe406 	br	b780 <__alt_data_end+0xfffa9d00>
    b7f0:	00800434 	movhi	r2,16
    b7f4:	89400234 	orhi	r5,r17,8
    b7f8:	10bfffc4 	addi	r2,r2,-1
    b7fc:	e00d883a 	mov	r6,fp
    b800:	288a703a 	and	r5,r5,r2
    b804:	003e5806 	br	b168 <__alt_data_end+0xfffa96e8>

0000b808 <__eqdf2>:
    b808:	2804d53a 	srli	r2,r5,20
    b80c:	3806d53a 	srli	r3,r7,20
    b810:	02000434 	movhi	r8,16
    b814:	423fffc4 	addi	r8,r8,-1
    b818:	1081ffcc 	andi	r2,r2,2047
    b81c:	0241ffc4 	movi	r9,2047
    b820:	2a14703a 	and	r10,r5,r8
    b824:	18c1ffcc 	andi	r3,r3,2047
    b828:	3a10703a 	and	r8,r7,r8
    b82c:	280ad7fa 	srli	r5,r5,31
    b830:	380ed7fa 	srli	r7,r7,31
    b834:	12400f26 	beq	r2,r9,b874 <__eqdf2+0x6c>
    b838:	0241ffc4 	movi	r9,2047
    b83c:	1a400326 	beq	r3,r9,b84c <__eqdf2+0x44>
    b840:	10c00526 	beq	r2,r3,b858 <__eqdf2+0x50>
    b844:	00800044 	movi	r2,1
    b848:	f800283a 	ret
    b84c:	4192b03a 	or	r9,r8,r6
    b850:	483ffc1e 	bne	r9,zero,b844 <__alt_data_end+0xfffa9dc4>
    b854:	10fffb1e 	bne	r2,r3,b844 <__alt_data_end+0xfffa9dc4>
    b858:	523ffa1e 	bne	r10,r8,b844 <__alt_data_end+0xfffa9dc4>
    b85c:	21bff91e 	bne	r4,r6,b844 <__alt_data_end+0xfffa9dc4>
    b860:	29c00826 	beq	r5,r7,b884 <__eqdf2+0x7c>
    b864:	103ff71e 	bne	r2,zero,b844 <__alt_data_end+0xfffa9dc4>
    b868:	5104b03a 	or	r2,r10,r4
    b86c:	1004c03a 	cmpne	r2,r2,zero
    b870:	f800283a 	ret
    b874:	5112b03a 	or	r9,r10,r4
    b878:	483fef26 	beq	r9,zero,b838 <__alt_data_end+0xfffa9db8>
    b87c:	00800044 	movi	r2,1
    b880:	f800283a 	ret
    b884:	0005883a 	mov	r2,zero
    b888:	f800283a 	ret

0000b88c <__gedf2>:
    b88c:	2804d53a 	srli	r2,r5,20
    b890:	3806d53a 	srli	r3,r7,20
    b894:	02000434 	movhi	r8,16
    b898:	423fffc4 	addi	r8,r8,-1
    b89c:	0241ffc4 	movi	r9,2047
    b8a0:	1081ffcc 	andi	r2,r2,2047
    b8a4:	2a14703a 	and	r10,r5,r8
    b8a8:	1a46703a 	and	r3,r3,r9
    b8ac:	3a10703a 	and	r8,r7,r8
    b8b0:	280ad7fa 	srli	r5,r5,31
    b8b4:	380ed7fa 	srli	r7,r7,31
    b8b8:	12400b26 	beq	r2,r9,b8e8 <__gedf2+0x5c>
    b8bc:	1a401626 	beq	r3,r9,b918 <__gedf2+0x8c>
    b8c0:	10000c1e 	bne	r2,zero,b8f4 <__gedf2+0x68>
    b8c4:	5112b03a 	or	r9,r10,r4
    b8c8:	4813003a 	cmpeq	r9,r9,zero
    b8cc:	4817883a 	mov	r11,r9
    b8d0:	18000c1e 	bne	r3,zero,b904 <__gedf2+0x78>
    b8d4:	4198b03a 	or	r12,r8,r6
    b8d8:	60000a1e 	bne	r12,zero,b904 <__gedf2+0x78>
    b8dc:	48001326 	beq	r9,zero,b92c <__gedf2+0xa0>
    b8e0:	0005883a 	mov	r2,zero
    b8e4:	f800283a 	ret
    b8e8:	5112b03a 	or	r9,r10,r4
    b8ec:	4800191e 	bne	r9,zero,b954 <__gedf2+0xc8>
    b8f0:	18800926 	beq	r3,r2,b918 <__gedf2+0x8c>
    b8f4:	18000b1e 	bne	r3,zero,b924 <__gedf2+0x98>
    b8f8:	4192b03a 	or	r9,r8,r6
    b8fc:	0017883a 	mov	r11,zero
    b900:	48000a26 	beq	r9,zero,b92c <__gedf2+0xa0>
    b904:	39c03fcc 	andi	r7,r7,255
    b908:	58000726 	beq	r11,zero,b928 <__gedf2+0x9c>
    b90c:	3800081e 	bne	r7,zero,b930 <__gedf2+0xa4>
    b910:	00bfffc4 	movi	r2,-1
    b914:	f800283a 	ret
    b918:	4192b03a 	or	r9,r8,r6
    b91c:	48000d1e 	bne	r9,zero,b954 <__gedf2+0xc8>
    b920:	103fe826 	beq	r2,zero,b8c4 <__alt_data_end+0xfffa9e44>
    b924:	39c03fcc 	andi	r7,r7,255
    b928:	29c00326 	beq	r5,r7,b938 <__gedf2+0xac>
    b92c:	283ff81e 	bne	r5,zero,b910 <__alt_data_end+0xfffa9e90>
    b930:	00800044 	movi	r2,1
    b934:	f800283a 	ret
    b938:	18bffc16 	blt	r3,r2,b92c <__alt_data_end+0xfffa9eac>
    b93c:	10c00316 	blt	r2,r3,b94c <__gedf2+0xc0>
    b940:	42bffa36 	bltu	r8,r10,b92c <__alt_data_end+0xfffa9eac>
    b944:	52000526 	beq	r10,r8,b95c <__gedf2+0xd0>
    b948:	523fe52e 	bgeu	r10,r8,b8e0 <__alt_data_end+0xfffa9e60>
    b94c:	283ff026 	beq	r5,zero,b910 <__alt_data_end+0xfffa9e90>
    b950:	003ff706 	br	b930 <__alt_data_end+0xfffa9eb0>
    b954:	00bfff84 	movi	r2,-2
    b958:	f800283a 	ret
    b95c:	313ff336 	bltu	r6,r4,b92c <__alt_data_end+0xfffa9eac>
    b960:	21bfdf2e 	bgeu	r4,r6,b8e0 <__alt_data_end+0xfffa9e60>
    b964:	283fea26 	beq	r5,zero,b910 <__alt_data_end+0xfffa9e90>
    b968:	003ff106 	br	b930 <__alt_data_end+0xfffa9eb0>

0000b96c <__ledf2>:
    b96c:	2804d53a 	srli	r2,r5,20
    b970:	3810d53a 	srli	r8,r7,20
    b974:	00c00434 	movhi	r3,16
    b978:	18ffffc4 	addi	r3,r3,-1
    b97c:	0241ffc4 	movi	r9,2047
    b980:	1081ffcc 	andi	r2,r2,2047
    b984:	28d4703a 	and	r10,r5,r3
    b988:	4250703a 	and	r8,r8,r9
    b98c:	38c6703a 	and	r3,r7,r3
    b990:	280ad7fa 	srli	r5,r5,31
    b994:	380ed7fa 	srli	r7,r7,31
    b998:	12400b26 	beq	r2,r9,b9c8 <__ledf2+0x5c>
    b99c:	42401926 	beq	r8,r9,ba04 <__ledf2+0x98>
    b9a0:	10000c1e 	bne	r2,zero,b9d4 <__ledf2+0x68>
    b9a4:	5112b03a 	or	r9,r10,r4
    b9a8:	4813003a 	cmpeq	r9,r9,zero
    b9ac:	4817883a 	mov	r11,r9
    b9b0:	40000f26 	beq	r8,zero,b9f0 <__ledf2+0x84>
    b9b4:	39c03fcc 	andi	r7,r7,255
    b9b8:	58001826 	beq	r11,zero,ba1c <__ledf2+0xb0>
    b9bc:	38000a1e 	bne	r7,zero,b9e8 <__ledf2+0x7c>
    b9c0:	00bfffc4 	movi	r2,-1
    b9c4:	f800283a 	ret
    b9c8:	5112b03a 	or	r9,r10,r4
    b9cc:	48000f1e 	bne	r9,zero,ba0c <__ledf2+0xa0>
    b9d0:	40800c26 	beq	r8,r2,ba04 <__ledf2+0x98>
    b9d4:	4000101e 	bne	r8,zero,ba18 <__ledf2+0xac>
    b9d8:	1992b03a 	or	r9,r3,r6
    b9dc:	0017883a 	mov	r11,zero
    b9e0:	483ff41e 	bne	r9,zero,b9b4 <__alt_data_end+0xfffa9f34>
    b9e4:	283ff61e 	bne	r5,zero,b9c0 <__alt_data_end+0xfffa9f40>
    b9e8:	00800044 	movi	r2,1
    b9ec:	f800283a 	ret
    b9f0:	1998b03a 	or	r12,r3,r6
    b9f4:	603fef1e 	bne	r12,zero,b9b4 <__alt_data_end+0xfffa9f34>
    b9f8:	483ffa26 	beq	r9,zero,b9e4 <__alt_data_end+0xfffa9f64>
    b9fc:	0005883a 	mov	r2,zero
    ba00:	f800283a 	ret
    ba04:	1992b03a 	or	r9,r3,r6
    ba08:	48000226 	beq	r9,zero,ba14 <__ledf2+0xa8>
    ba0c:	00800084 	movi	r2,2
    ba10:	f800283a 	ret
    ba14:	103fe326 	beq	r2,zero,b9a4 <__alt_data_end+0xfffa9f24>
    ba18:	39c03fcc 	andi	r7,r7,255
    ba1c:	29fff11e 	bne	r5,r7,b9e4 <__alt_data_end+0xfffa9f64>
    ba20:	40bff016 	blt	r8,r2,b9e4 <__alt_data_end+0xfffa9f64>
    ba24:	12000316 	blt	r2,r8,ba34 <__ledf2+0xc8>
    ba28:	1abfee36 	bltu	r3,r10,b9e4 <__alt_data_end+0xfffa9f64>
    ba2c:	50c00326 	beq	r10,r3,ba3c <__ledf2+0xd0>
    ba30:	50fff22e 	bgeu	r10,r3,b9fc <__alt_data_end+0xfffa9f7c>
    ba34:	283fe226 	beq	r5,zero,b9c0 <__alt_data_end+0xfffa9f40>
    ba38:	003feb06 	br	b9e8 <__alt_data_end+0xfffa9f68>
    ba3c:	313fe936 	bltu	r6,r4,b9e4 <__alt_data_end+0xfffa9f64>
    ba40:	21bfee2e 	bgeu	r4,r6,b9fc <__alt_data_end+0xfffa9f7c>
    ba44:	283fde26 	beq	r5,zero,b9c0 <__alt_data_end+0xfffa9f40>
    ba48:	003fe706 	br	b9e8 <__alt_data_end+0xfffa9f68>

0000ba4c <__muldf3>:
    ba4c:	deffee04 	addi	sp,sp,-72
    ba50:	dd000c15 	stw	r20,48(sp)
    ba54:	2828d53a 	srli	r20,r5,20
    ba58:	dd400d15 	stw	r21,52(sp)
    ba5c:	282ad7fa 	srli	r21,r5,31
    ba60:	dc000815 	stw	r16,32(sp)
    ba64:	04000434 	movhi	r16,16
    ba68:	ddc00f15 	stw	r23,60(sp)
    ba6c:	dcc00b15 	stw	r19,44(sp)
    ba70:	dc800a15 	stw	r18,40(sp)
    ba74:	843fffc4 	addi	r16,r16,-1
    ba78:	dfc01115 	stw	ra,68(sp)
    ba7c:	df001015 	stw	fp,64(sp)
    ba80:	dd800e15 	stw	r22,56(sp)
    ba84:	dc400915 	stw	r17,36(sp)
    ba88:	a501ffcc 	andi	r20,r20,2047
    ba8c:	2025883a 	mov	r18,r4
    ba90:	202f883a 	mov	r23,r4
    ba94:	2c20703a 	and	r16,r5,r16
    ba98:	a827883a 	mov	r19,r21
    ba9c:	aa403fcc 	andi	r9,r21,255
    baa0:	a0005926 	beq	r20,zero,bc08 <__muldf3+0x1bc>
    baa4:	0081ffc4 	movi	r2,2047
    baa8:	a0803426 	beq	r20,r2,bb7c <__muldf3+0x130>
    baac:	84000434 	orhi	r16,r16,16
    bab0:	2004d77a 	srli	r2,r4,29
    bab4:	802090fa 	slli	r16,r16,3
    bab8:	202e90fa 	slli	r23,r4,3
    babc:	a53f0044 	addi	r20,r20,-1023
    bac0:	80a0b03a 	or	r16,r16,r2
    bac4:	000b883a 	mov	r5,zero
    bac8:	0039883a 	mov	fp,zero
    bacc:	3806d53a 	srli	r3,r7,20
    bad0:	382cd7fa 	srli	r22,r7,31
    bad4:	00800434 	movhi	r2,16
    bad8:	10bfffc4 	addi	r2,r2,-1
    badc:	18c1ffcc 	andi	r3,r3,2047
    bae0:	3025883a 	mov	r18,r6
    bae4:	38a2703a 	and	r17,r7,r2
    bae8:	b2803fcc 	andi	r10,r22,255
    baec:	18006426 	beq	r3,zero,bc80 <__muldf3+0x234>
    baf0:	0081ffc4 	movi	r2,2047
    baf4:	18805c26 	beq	r3,r2,bc68 <__muldf3+0x21c>
    baf8:	8c400434 	orhi	r17,r17,16
    bafc:	3004d77a 	srli	r2,r6,29
    bb00:	882290fa 	slli	r17,r17,3
    bb04:	302490fa 	slli	r18,r6,3
    bb08:	18ff0044 	addi	r3,r3,-1023
    bb0c:	88a2b03a 	or	r17,r17,r2
    bb10:	000f883a 	mov	r7,zero
    bb14:	394ab03a 	or	r5,r7,r5
    bb18:	280a90ba 	slli	r5,r5,2
    bb1c:	00800074 	movhi	r2,1
    bb20:	10aecf04 	addi	r2,r2,-17604
    bb24:	288b883a 	add	r5,r5,r2
    bb28:	28800017 	ldw	r2,0(r5)
    bb2c:	a0c7883a 	add	r3,r20,r3
    bb30:	b54cf03a 	xor	r6,r22,r21
    bb34:	1a000044 	addi	r8,r3,1
    bb38:	1000683a 	jmp	r2
    bb3c:	0000bd80 	call	bd8 <_malloc_r+0x688>
    bb40:	0000bd6c 	andhi	zero,zero,757
    bb44:	0000bd6c 	andhi	zero,zero,757
    bb48:	0000bd58 	cmpnei	zero,zero,757
    bb4c:	0000bb98 	cmpnei	zero,zero,750
    bb50:	0000bb98 	cmpnei	zero,zero,750
    bb54:	0000bd40 	call	bd4 <_malloc_r+0x684>
    bb58:	0000bd58 	cmpnei	zero,zero,757
    bb5c:	0000bb98 	cmpnei	zero,zero,750
    bb60:	0000bd40 	call	bd4 <_malloc_r+0x684>
    bb64:	0000bb98 	cmpnei	zero,zero,750
    bb68:	0000bd58 	cmpnei	zero,zero,757
    bb6c:	0000bb9c 	xori	zero,zero,750
    bb70:	0000bb9c 	xori	zero,zero,750
    bb74:	0000bb9c 	xori	zero,zero,750
    bb78:	0000c0bc 	xorhi	zero,zero,770
    bb7c:	8104b03a 	or	r2,r16,r4
    bb80:	10006c1e 	bne	r2,zero,bd34 <__muldf3+0x2e8>
    bb84:	01400204 	movi	r5,8
    bb88:	0021883a 	mov	r16,zero
    bb8c:	002f883a 	mov	r23,zero
    bb90:	07000084 	movi	fp,2
    bb94:	003fcd06 	br	bacc <__alt_data_end+0xfffaa04c>
    bb98:	3013883a 	mov	r9,r6
    bb9c:	00800084 	movi	r2,2
    bba0:	e080501e 	bne	fp,r2,bce4 <__muldf3+0x298>
    bba4:	4cc0004c 	andi	r19,r9,1
    bba8:	0101ffc4 	movi	r4,2047
    bbac:	0021883a 	mov	r16,zero
    bbb0:	002f883a 	mov	r23,zero
    bbb4:	2008953a 	slli	r4,r4,20
    bbb8:	98c03fcc 	andi	r3,r19,255
    bbbc:	04400434 	movhi	r17,16
    bbc0:	8c7fffc4 	addi	r17,r17,-1
    bbc4:	180697fa 	slli	r3,r3,31
    bbc8:	8460703a 	and	r16,r16,r17
    bbcc:	8120b03a 	or	r16,r16,r4
    bbd0:	80c6b03a 	or	r3,r16,r3
    bbd4:	b805883a 	mov	r2,r23
    bbd8:	dfc01117 	ldw	ra,68(sp)
    bbdc:	df001017 	ldw	fp,64(sp)
    bbe0:	ddc00f17 	ldw	r23,60(sp)
    bbe4:	dd800e17 	ldw	r22,56(sp)
    bbe8:	dd400d17 	ldw	r21,52(sp)
    bbec:	dd000c17 	ldw	r20,48(sp)
    bbf0:	dcc00b17 	ldw	r19,44(sp)
    bbf4:	dc800a17 	ldw	r18,40(sp)
    bbf8:	dc400917 	ldw	r17,36(sp)
    bbfc:	dc000817 	ldw	r16,32(sp)
    bc00:	dec01204 	addi	sp,sp,72
    bc04:	f800283a 	ret
    bc08:	8104b03a 	or	r2,r16,r4
    bc0c:	10004426 	beq	r2,zero,bd20 <__muldf3+0x2d4>
    bc10:	80014b26 	beq	r16,zero,c140 <__muldf3+0x6f4>
    bc14:	8009883a 	mov	r4,r16
    bc18:	d9800715 	stw	r6,28(sp)
    bc1c:	d9c00215 	stw	r7,8(sp)
    bc20:	da400415 	stw	r9,16(sp)
    bc24:	000cd840 	call	cd84 <__clzsi2>
    bc28:	d9800717 	ldw	r6,28(sp)
    bc2c:	d9c00217 	ldw	r7,8(sp)
    bc30:	da400417 	ldw	r9,16(sp)
    bc34:	1007883a 	mov	r3,r2
    bc38:	01000a04 	movi	r4,40
    bc3c:	1dfffe04 	addi	r23,r3,-8
    bc40:	20c9c83a 	sub	r4,r4,r3
    bc44:	85e0983a 	sll	r16,r16,r23
    bc48:	9108d83a 	srl	r4,r18,r4
    bc4c:	95ee983a 	sll	r23,r18,r23
    bc50:	2420b03a 	or	r16,r4,r16
    bc54:	053f0344 	movi	r20,-1011
    bc58:	a0e9c83a 	sub	r20,r20,r3
    bc5c:	000b883a 	mov	r5,zero
    bc60:	0039883a 	mov	fp,zero
    bc64:	003f9906 	br	bacc <__alt_data_end+0xfffaa04c>
    bc68:	8984b03a 	or	r2,r17,r6
    bc6c:	10002a1e 	bne	r2,zero,bd18 <__muldf3+0x2cc>
    bc70:	0023883a 	mov	r17,zero
    bc74:	0025883a 	mov	r18,zero
    bc78:	01c00084 	movi	r7,2
    bc7c:	003fa506 	br	bb14 <__alt_data_end+0xfffaa094>
    bc80:	8984b03a 	or	r2,r17,r6
    bc84:	10002026 	beq	r2,zero,bd08 <__muldf3+0x2bc>
    bc88:	88011c26 	beq	r17,zero,c0fc <__muldf3+0x6b0>
    bc8c:	8809883a 	mov	r4,r17
    bc90:	d9400215 	stw	r5,8(sp)
    bc94:	d9800715 	stw	r6,28(sp)
    bc98:	da400415 	stw	r9,16(sp)
    bc9c:	da800315 	stw	r10,12(sp)
    bca0:	000cd840 	call	cd84 <__clzsi2>
    bca4:	d9400217 	ldw	r5,8(sp)
    bca8:	d9800717 	ldw	r6,28(sp)
    bcac:	da400417 	ldw	r9,16(sp)
    bcb0:	da800317 	ldw	r10,12(sp)
    bcb4:	1007883a 	mov	r3,r2
    bcb8:	01000a04 	movi	r4,40
    bcbc:	1cbffe04 	addi	r18,r3,-8
    bcc0:	20c9c83a 	sub	r4,r4,r3
    bcc4:	8ca2983a 	sll	r17,r17,r18
    bcc8:	3108d83a 	srl	r4,r6,r4
    bccc:	34a4983a 	sll	r18,r6,r18
    bcd0:	2462b03a 	or	r17,r4,r17
    bcd4:	00bf0344 	movi	r2,-1011
    bcd8:	10c7c83a 	sub	r3,r2,r3
    bcdc:	000f883a 	mov	r7,zero
    bce0:	003f8c06 	br	bb14 <__alt_data_end+0xfffaa094>
    bce4:	008000c4 	movi	r2,3
    bce8:	e0816d26 	beq	fp,r2,c2a0 <__muldf3+0x854>
    bcec:	00800044 	movi	r2,1
    bcf0:	e081321e 	bne	fp,r2,c1bc <__muldf3+0x770>
    bcf4:	48a6703a 	and	r19,r9,r2
    bcf8:	0009883a 	mov	r4,zero
    bcfc:	0021883a 	mov	r16,zero
    bd00:	002f883a 	mov	r23,zero
    bd04:	003fab06 	br	bbb4 <__alt_data_end+0xfffaa134>
    bd08:	0023883a 	mov	r17,zero
    bd0c:	0025883a 	mov	r18,zero
    bd10:	01c00044 	movi	r7,1
    bd14:	003f7f06 	br	bb14 <__alt_data_end+0xfffaa094>
    bd18:	01c000c4 	movi	r7,3
    bd1c:	003f7d06 	br	bb14 <__alt_data_end+0xfffaa094>
    bd20:	01400104 	movi	r5,4
    bd24:	0021883a 	mov	r16,zero
    bd28:	002f883a 	mov	r23,zero
    bd2c:	07000044 	movi	fp,1
    bd30:	003f6606 	br	bacc <__alt_data_end+0xfffaa04c>
    bd34:	01400304 	movi	r5,12
    bd38:	070000c4 	movi	fp,3
    bd3c:	003f6306 	br	bacc <__alt_data_end+0xfffaa04c>
    bd40:	04000434 	movhi	r16,16
    bd44:	0027883a 	mov	r19,zero
    bd48:	843fffc4 	addi	r16,r16,-1
    bd4c:	05ffffc4 	movi	r23,-1
    bd50:	0101ffc4 	movi	r4,2047
    bd54:	003f9706 	br	bbb4 <__alt_data_end+0xfffaa134>
    bd58:	8821883a 	mov	r16,r17
    bd5c:	902f883a 	mov	r23,r18
    bd60:	5013883a 	mov	r9,r10
    bd64:	3839883a 	mov	fp,r7
    bd68:	003f8c06 	br	bb9c <__alt_data_end+0xfffaa11c>
    bd6c:	8821883a 	mov	r16,r17
    bd70:	902f883a 	mov	r23,r18
    bd74:	3013883a 	mov	r9,r6
    bd78:	3839883a 	mov	fp,r7
    bd7c:	003f8706 	br	bb9c <__alt_data_end+0xfffaa11c>
    bd80:	b82ad43a 	srli	r21,r23,16
    bd84:	9038d43a 	srli	fp,r18,16
    bd88:	bdffffcc 	andi	r23,r23,65535
    bd8c:	94bfffcc 	andi	r18,r18,65535
    bd90:	9009883a 	mov	r4,r18
    bd94:	b80b883a 	mov	r5,r23
    bd98:	d8c00515 	stw	r3,20(sp)
    bd9c:	d9800715 	stw	r6,28(sp)
    bda0:	da000615 	stw	r8,24(sp)
    bda4:	000a5c40 	call	a5c4 <__mulsi3>
    bda8:	9009883a 	mov	r4,r18
    bdac:	a80b883a 	mov	r5,r21
    bdb0:	1029883a 	mov	r20,r2
    bdb4:	000a5c40 	call	a5c4 <__mulsi3>
    bdb8:	e009883a 	mov	r4,fp
    bdbc:	a80b883a 	mov	r5,r21
    bdc0:	102d883a 	mov	r22,r2
    bdc4:	000a5c40 	call	a5c4 <__mulsi3>
    bdc8:	e009883a 	mov	r4,fp
    bdcc:	b80b883a 	mov	r5,r23
    bdd0:	1027883a 	mov	r19,r2
    bdd4:	000a5c40 	call	a5c4 <__mulsi3>
    bdd8:	a008d43a 	srli	r4,r20,16
    bddc:	b085883a 	add	r2,r22,r2
    bde0:	d8c00517 	ldw	r3,20(sp)
    bde4:	110f883a 	add	r7,r2,r4
    bde8:	d9800717 	ldw	r6,28(sp)
    bdec:	da000617 	ldw	r8,24(sp)
    bdf0:	3d80022e 	bgeu	r7,r22,bdfc <__muldf3+0x3b0>
    bdf4:	00800074 	movhi	r2,1
    bdf8:	98a7883a 	add	r19,r19,r2
    bdfc:	3804943a 	slli	r2,r7,16
    be00:	380ed43a 	srli	r7,r7,16
    be04:	882cd43a 	srli	r22,r17,16
    be08:	a53fffcc 	andi	r20,r20,65535
    be0c:	8c7fffcc 	andi	r17,r17,65535
    be10:	1529883a 	add	r20,r2,r20
    be14:	8809883a 	mov	r4,r17
    be18:	b80b883a 	mov	r5,r23
    be1c:	d8c00515 	stw	r3,20(sp)
    be20:	d9800715 	stw	r6,28(sp)
    be24:	da000615 	stw	r8,24(sp)
    be28:	d9c00015 	stw	r7,0(sp)
    be2c:	dd000115 	stw	r20,4(sp)
    be30:	000a5c40 	call	a5c4 <__mulsi3>
    be34:	a80b883a 	mov	r5,r21
    be38:	8809883a 	mov	r4,r17
    be3c:	d8800415 	stw	r2,16(sp)
    be40:	000a5c40 	call	a5c4 <__mulsi3>
    be44:	a80b883a 	mov	r5,r21
    be48:	b009883a 	mov	r4,r22
    be4c:	1029883a 	mov	r20,r2
    be50:	000a5c40 	call	a5c4 <__mulsi3>
    be54:	b009883a 	mov	r4,r22
    be58:	b80b883a 	mov	r5,r23
    be5c:	102b883a 	mov	r21,r2
    be60:	000a5c40 	call	a5c4 <__mulsi3>
    be64:	da400417 	ldw	r9,16(sp)
    be68:	a085883a 	add	r2,r20,r2
    be6c:	d8c00517 	ldw	r3,20(sp)
    be70:	4808d43a 	srli	r4,r9,16
    be74:	d9800717 	ldw	r6,28(sp)
    be78:	da000617 	ldw	r8,24(sp)
    be7c:	1109883a 	add	r4,r2,r4
    be80:	2500022e 	bgeu	r4,r20,be8c <__muldf3+0x440>
    be84:	00800074 	movhi	r2,1
    be88:	a8ab883a 	add	r21,r21,r2
    be8c:	200e943a 	slli	r7,r4,16
    be90:	2004d43a 	srli	r2,r4,16
    be94:	802ed43a 	srli	r23,r16,16
    be98:	843fffcc 	andi	r16,r16,65535
    be9c:	4d3fffcc 	andi	r20,r9,65535
    bea0:	9009883a 	mov	r4,r18
    bea4:	800b883a 	mov	r5,r16
    bea8:	3d29883a 	add	r20,r7,r20
    beac:	d8c00515 	stw	r3,20(sp)
    beb0:	d9800715 	stw	r6,28(sp)
    beb4:	da000615 	stw	r8,24(sp)
    beb8:	a8ab883a 	add	r21,r21,r2
    bebc:	000a5c40 	call	a5c4 <__mulsi3>
    bec0:	9009883a 	mov	r4,r18
    bec4:	b80b883a 	mov	r5,r23
    bec8:	d8800315 	stw	r2,12(sp)
    becc:	000a5c40 	call	a5c4 <__mulsi3>
    bed0:	e009883a 	mov	r4,fp
    bed4:	b80b883a 	mov	r5,r23
    bed8:	1025883a 	mov	r18,r2
    bedc:	000a5c40 	call	a5c4 <__mulsi3>
    bee0:	e009883a 	mov	r4,fp
    bee4:	800b883a 	mov	r5,r16
    bee8:	d8800215 	stw	r2,8(sp)
    beec:	000a5c40 	call	a5c4 <__mulsi3>
    bef0:	da800317 	ldw	r10,12(sp)
    bef4:	d9400017 	ldw	r5,0(sp)
    bef8:	9085883a 	add	r2,r18,r2
    befc:	5008d43a 	srli	r4,r10,16
    bf00:	a153883a 	add	r9,r20,r5
    bf04:	d8c00517 	ldw	r3,20(sp)
    bf08:	1109883a 	add	r4,r2,r4
    bf0c:	d9800717 	ldw	r6,28(sp)
    bf10:	da000617 	ldw	r8,24(sp)
    bf14:	dac00217 	ldw	r11,8(sp)
    bf18:	2480022e 	bgeu	r4,r18,bf24 <__muldf3+0x4d8>
    bf1c:	00800074 	movhi	r2,1
    bf20:	5897883a 	add	r11,r11,r2
    bf24:	200e943a 	slli	r7,r4,16
    bf28:	2038d43a 	srli	fp,r4,16
    bf2c:	52bfffcc 	andi	r10,r10,65535
    bf30:	3a8f883a 	add	r7,r7,r10
    bf34:	8809883a 	mov	r4,r17
    bf38:	800b883a 	mov	r5,r16
    bf3c:	d8c00515 	stw	r3,20(sp)
    bf40:	d9800715 	stw	r6,28(sp)
    bf44:	d9c00215 	stw	r7,8(sp)
    bf48:	da000615 	stw	r8,24(sp)
    bf4c:	da400415 	stw	r9,16(sp)
    bf50:	5f39883a 	add	fp,r11,fp
    bf54:	000a5c40 	call	a5c4 <__mulsi3>
    bf58:	8809883a 	mov	r4,r17
    bf5c:	b80b883a 	mov	r5,r23
    bf60:	1025883a 	mov	r18,r2
    bf64:	000a5c40 	call	a5c4 <__mulsi3>
    bf68:	b009883a 	mov	r4,r22
    bf6c:	b80b883a 	mov	r5,r23
    bf70:	d8800315 	stw	r2,12(sp)
    bf74:	000a5c40 	call	a5c4 <__mulsi3>
    bf78:	b009883a 	mov	r4,r22
    bf7c:	800b883a 	mov	r5,r16
    bf80:	1023883a 	mov	r17,r2
    bf84:	000a5c40 	call	a5c4 <__mulsi3>
    bf88:	da800317 	ldw	r10,12(sp)
    bf8c:	9008d43a 	srli	r4,r18,16
    bf90:	d8c00517 	ldw	r3,20(sp)
    bf94:	5085883a 	add	r2,r10,r2
    bf98:	1109883a 	add	r4,r2,r4
    bf9c:	d9800717 	ldw	r6,28(sp)
    bfa0:	d9c00217 	ldw	r7,8(sp)
    bfa4:	da000617 	ldw	r8,24(sp)
    bfa8:	da400417 	ldw	r9,16(sp)
    bfac:	2280022e 	bgeu	r4,r10,bfb8 <__muldf3+0x56c>
    bfb0:	00800074 	movhi	r2,1
    bfb4:	88a3883a 	add	r17,r17,r2
    bfb8:	2004943a 	slli	r2,r4,16
    bfbc:	94bfffcc 	andi	r18,r18,65535
    bfc0:	4ce7883a 	add	r19,r9,r19
    bfc4:	14a5883a 	add	r18,r2,r18
    bfc8:	9d29803a 	cmpltu	r20,r19,r20
    bfcc:	9565883a 	add	r18,r18,r21
    bfd0:	9505883a 	add	r2,r18,r20
    bfd4:	99e7883a 	add	r19,r19,r7
    bfd8:	99cf803a 	cmpltu	r7,r19,r7
    bfdc:	e08b883a 	add	r5,fp,r2
    bfe0:	2008d43a 	srli	r4,r4,16
    bfe4:	29ef883a 	add	r23,r5,r7
    bfe8:	1529803a 	cmpltu	r20,r2,r20
    bfec:	956b803a 	cmpltu	r21,r18,r21
    bff0:	b9cf803a 	cmpltu	r7,r23,r7
    bff4:	a564b03a 	or	r18,r20,r21
    bff8:	2f39803a 	cmpltu	fp,r5,fp
    bffc:	9125883a 	add	r18,r18,r4
    c000:	3f38b03a 	or	fp,r7,fp
    c004:	9725883a 	add	r18,r18,fp
    c008:	9804927a 	slli	r2,r19,9
    c00c:	9463883a 	add	r17,r18,r17
    c010:	d9000117 	ldw	r4,4(sp)
    c014:	b820d5fa 	srli	r16,r23,23
    c018:	8822927a 	slli	r17,r17,9
    c01c:	9826d5fa 	srli	r19,r19,23
    c020:	1104b03a 	or	r2,r2,r4
    c024:	b82e927a 	slli	r23,r23,9
    c028:	1004c03a 	cmpne	r2,r2,zero
    c02c:	8c20b03a 	or	r16,r17,r16
    c030:	14e6b03a 	or	r19,r2,r19
    c034:	8080402c 	andhi	r2,r16,256
    c038:	9deeb03a 	or	r23,r19,r23
    c03c:	10000726 	beq	r2,zero,c05c <__muldf3+0x610>
    c040:	b804d07a 	srli	r2,r23,1
    c044:	800697fa 	slli	r3,r16,31
    c048:	bdc0004c 	andi	r23,r23,1
    c04c:	8020d07a 	srli	r16,r16,1
    c050:	b8aeb03a 	or	r23,r23,r2
    c054:	b8eeb03a 	or	r23,r23,r3
    c058:	4007883a 	mov	r3,r8
    c05c:	1900ffc4 	addi	r4,r3,1023
    c060:	01004d0e 	bge	zero,r4,c198 <__muldf3+0x74c>
    c064:	b88001cc 	andi	r2,r23,7
    c068:	10000726 	beq	r2,zero,c088 <__muldf3+0x63c>
    c06c:	b94003cc 	andi	r5,r23,15
    c070:	00800104 	movi	r2,4
    c074:	28800426 	beq	r5,r2,c088 <__muldf3+0x63c>
    c078:	b885883a 	add	r2,r23,r2
    c07c:	15ef803a 	cmpltu	r23,r2,r23
    c080:	85e1883a 	add	r16,r16,r23
    c084:	102f883a 	mov	r23,r2
    c088:	8080402c 	andhi	r2,r16,256
    c08c:	10000426 	beq	r2,zero,c0a0 <__muldf3+0x654>
    c090:	00bfc034 	movhi	r2,65280
    c094:	10bfffc4 	addi	r2,r2,-1
    c098:	19010004 	addi	r4,r3,1024
    c09c:	80a0703a 	and	r16,r16,r2
    c0a0:	0081ff84 	movi	r2,2046
    c0a4:	1100340e 	bge	r2,r4,c178 <__muldf3+0x72c>
    c0a8:	34c0004c 	andi	r19,r6,1
    c0ac:	0101ffc4 	movi	r4,2047
    c0b0:	0021883a 	mov	r16,zero
    c0b4:	002f883a 	mov	r23,zero
    c0b8:	003ebe06 	br	bbb4 <__alt_data_end+0xfffaa134>
    c0bc:	8080022c 	andhi	r2,r16,8
    c0c0:	10000926 	beq	r2,zero,c0e8 <__muldf3+0x69c>
    c0c4:	8880022c 	andhi	r2,r17,8
    c0c8:	1000071e 	bne	r2,zero,c0e8 <__muldf3+0x69c>
    c0cc:	00800434 	movhi	r2,16
    c0d0:	8c000234 	orhi	r16,r17,8
    c0d4:	10bfffc4 	addi	r2,r2,-1
    c0d8:	b027883a 	mov	r19,r22
    c0dc:	80a0703a 	and	r16,r16,r2
    c0e0:	902f883a 	mov	r23,r18
    c0e4:	003f1a06 	br	bd50 <__alt_data_end+0xfffaa2d0>
    c0e8:	00800434 	movhi	r2,16
    c0ec:	84000234 	orhi	r16,r16,8
    c0f0:	10bfffc4 	addi	r2,r2,-1
    c0f4:	80a0703a 	and	r16,r16,r2
    c0f8:	003f1506 	br	bd50 <__alt_data_end+0xfffaa2d0>
    c0fc:	3009883a 	mov	r4,r6
    c100:	d9400215 	stw	r5,8(sp)
    c104:	d9800715 	stw	r6,28(sp)
    c108:	da400415 	stw	r9,16(sp)
    c10c:	da800315 	stw	r10,12(sp)
    c110:	000cd840 	call	cd84 <__clzsi2>
    c114:	10c00804 	addi	r3,r2,32
    c118:	010009c4 	movi	r4,39
    c11c:	d9400217 	ldw	r5,8(sp)
    c120:	d9800717 	ldw	r6,28(sp)
    c124:	da400417 	ldw	r9,16(sp)
    c128:	da800317 	ldw	r10,12(sp)
    c12c:	20fee20e 	bge	r4,r3,bcb8 <__alt_data_end+0xfffaa238>
    c130:	147ffe04 	addi	r17,r2,-8
    c134:	9462983a 	sll	r17,r18,r17
    c138:	0025883a 	mov	r18,zero
    c13c:	003ee506 	br	bcd4 <__alt_data_end+0xfffaa254>
    c140:	d9800715 	stw	r6,28(sp)
    c144:	d9c00215 	stw	r7,8(sp)
    c148:	da400415 	stw	r9,16(sp)
    c14c:	000cd840 	call	cd84 <__clzsi2>
    c150:	10c00804 	addi	r3,r2,32
    c154:	010009c4 	movi	r4,39
    c158:	d9800717 	ldw	r6,28(sp)
    c15c:	d9c00217 	ldw	r7,8(sp)
    c160:	da400417 	ldw	r9,16(sp)
    c164:	20feb40e 	bge	r4,r3,bc38 <__alt_data_end+0xfffaa1b8>
    c168:	143ffe04 	addi	r16,r2,-8
    c16c:	9420983a 	sll	r16,r18,r16
    c170:	002f883a 	mov	r23,zero
    c174:	003eb706 	br	bc54 <__alt_data_end+0xfffaa1d4>
    c178:	8004977a 	slli	r2,r16,29
    c17c:	b82ed0fa 	srli	r23,r23,3
    c180:	8020927a 	slli	r16,r16,9
    c184:	2101ffcc 	andi	r4,r4,2047
    c188:	15eeb03a 	or	r23,r2,r23
    c18c:	8020d33a 	srli	r16,r16,12
    c190:	34c0004c 	andi	r19,r6,1
    c194:	003e8706 	br	bbb4 <__alt_data_end+0xfffaa134>
    c198:	00bf0084 	movi	r2,-1022
    c19c:	10c5c83a 	sub	r2,r2,r3
    c1a0:	01000e04 	movi	r4,56
    c1a4:	2080080e 	bge	r4,r2,c1c8 <__muldf3+0x77c>
    c1a8:	34c0004c 	andi	r19,r6,1
    c1ac:	0009883a 	mov	r4,zero
    c1b0:	0021883a 	mov	r16,zero
    c1b4:	002f883a 	mov	r23,zero
    c1b8:	003e7e06 	br	bbb4 <__alt_data_end+0xfffaa134>
    c1bc:	4007883a 	mov	r3,r8
    c1c0:	480d883a 	mov	r6,r9
    c1c4:	003fa506 	br	c05c <__alt_data_end+0xfffaa5dc>
    c1c8:	010007c4 	movi	r4,31
    c1cc:	20801816 	blt	r4,r2,c230 <__muldf3+0x7e4>
    c1d0:	18c10784 	addi	r3,r3,1054
    c1d4:	80c8983a 	sll	r4,r16,r3
    c1d8:	b88ad83a 	srl	r5,r23,r2
    c1dc:	b8c6983a 	sll	r3,r23,r3
    c1e0:	80a0d83a 	srl	r16,r16,r2
    c1e4:	2908b03a 	or	r4,r5,r4
    c1e8:	1804c03a 	cmpne	r2,r3,zero
    c1ec:	2088b03a 	or	r4,r4,r2
    c1f0:	208001cc 	andi	r2,r4,7
    c1f4:	10000726 	beq	r2,zero,c214 <__muldf3+0x7c8>
    c1f8:	20c003cc 	andi	r3,r4,15
    c1fc:	00800104 	movi	r2,4
    c200:	18800426 	beq	r3,r2,c214 <__muldf3+0x7c8>
    c204:	20c00104 	addi	r3,r4,4
    c208:	1905803a 	cmpltu	r2,r3,r4
    c20c:	80a1883a 	add	r16,r16,r2
    c210:	1809883a 	mov	r4,r3
    c214:	8080202c 	andhi	r2,r16,128
    c218:	10001b26 	beq	r2,zero,c288 <__muldf3+0x83c>
    c21c:	34c0004c 	andi	r19,r6,1
    c220:	01000044 	movi	r4,1
    c224:	0021883a 	mov	r16,zero
    c228:	002f883a 	mov	r23,zero
    c22c:	003e6106 	br	bbb4 <__alt_data_end+0xfffaa134>
    c230:	013ef884 	movi	r4,-1054
    c234:	20c9c83a 	sub	r4,r4,r3
    c238:	01400804 	movi	r5,32
    c23c:	8108d83a 	srl	r4,r16,r4
    c240:	11401526 	beq	r2,r5,c298 <__muldf3+0x84c>
    c244:	18c10f84 	addi	r3,r3,1086
    c248:	80e0983a 	sll	r16,r16,r3
    c24c:	85eeb03a 	or	r23,r16,r23
    c250:	b804c03a 	cmpne	r2,r23,zero
    c254:	1108b03a 	or	r4,r2,r4
    c258:	20c001cc 	andi	r3,r4,7
    c25c:	1800061e 	bne	r3,zero,c278 <__muldf3+0x82c>
    c260:	0021883a 	mov	r16,zero
    c264:	202ed0fa 	srli	r23,r4,3
    c268:	34c0004c 	andi	r19,r6,1
    c26c:	0009883a 	mov	r4,zero
    c270:	b8eeb03a 	or	r23,r23,r3
    c274:	003e4f06 	br	bbb4 <__alt_data_end+0xfffaa134>
    c278:	20c003cc 	andi	r3,r4,15
    c27c:	00800104 	movi	r2,4
    c280:	0021883a 	mov	r16,zero
    c284:	18bfdf1e 	bne	r3,r2,c204 <__alt_data_end+0xfffaa784>
    c288:	8004927a 	slli	r2,r16,9
    c28c:	8006977a 	slli	r3,r16,29
    c290:	1020d33a 	srli	r16,r2,12
    c294:	003ff306 	br	c264 <__alt_data_end+0xfffaa7e4>
    c298:	0021883a 	mov	r16,zero
    c29c:	003feb06 	br	c24c <__alt_data_end+0xfffaa7cc>
    c2a0:	00800434 	movhi	r2,16
    c2a4:	84000234 	orhi	r16,r16,8
    c2a8:	10bfffc4 	addi	r2,r2,-1
    c2ac:	4cc0004c 	andi	r19,r9,1
    c2b0:	80a0703a 	and	r16,r16,r2
    c2b4:	003ea606 	br	bd50 <__alt_data_end+0xfffaa2d0>

0000c2b8 <__subdf3>:
    c2b8:	00c00434 	movhi	r3,16
    c2bc:	18ffffc4 	addi	r3,r3,-1
    c2c0:	defffb04 	addi	sp,sp,-20
    c2c4:	28d2703a 	and	r9,r5,r3
    c2c8:	3814d53a 	srli	r10,r7,20
    c2cc:	38c6703a 	and	r3,r7,r3
    c2d0:	3004d77a 	srli	r2,r6,29
    c2d4:	dc800215 	stw	r18,8(sp)
    c2d8:	dc000015 	stw	r16,0(sp)
    c2dc:	2824d7fa 	srli	r18,r5,31
    c2e0:	2820d53a 	srli	r16,r5,20
    c2e4:	481290fa 	slli	r9,r9,3
    c2e8:	200ad77a 	srli	r5,r4,29
    c2ec:	180690fa 	slli	r3,r3,3
    c2f0:	dc400115 	stw	r17,4(sp)
    c2f4:	dfc00415 	stw	ra,16(sp)
    c2f8:	202290fa 	slli	r17,r4,3
    c2fc:	dcc00315 	stw	r19,12(sp)
    c300:	5281ffcc 	andi	r10,r10,2047
    c304:	0101ffc4 	movi	r4,2047
    c308:	9011883a 	mov	r8,r18
    c30c:	8401ffcc 	andi	r16,r16,2047
    c310:	94803fcc 	andi	r18,r18,255
    c314:	494ab03a 	or	r5,r9,r5
    c318:	380ed7fa 	srli	r7,r7,31
    c31c:	1886b03a 	or	r3,r3,r2
    c320:	300c90fa 	slli	r6,r6,3
    c324:	51009026 	beq	r10,r4,c568 <__subdf3+0x2b0>
    c328:	39c0005c 	xori	r7,r7,1
    c32c:	8285c83a 	sub	r2,r16,r10
    c330:	91c06f26 	beq	r18,r7,c4f0 <__subdf3+0x238>
    c334:	0080b10e 	bge	zero,r2,c5fc <__subdf3+0x344>
    c338:	50002a1e 	bne	r10,zero,c3e4 <__subdf3+0x12c>
    c33c:	1988b03a 	or	r4,r3,r6
    c340:	2000941e 	bne	r4,zero,c594 <__subdf3+0x2dc>
    c344:	888001cc 	andi	r2,r17,7
    c348:	10005b26 	beq	r2,zero,c4b8 <__subdf3+0x200>
    c34c:	88c003cc 	andi	r3,r17,15
    c350:	00800104 	movi	r2,4
    c354:	18805826 	beq	r3,r2,c4b8 <__subdf3+0x200>
    c358:	88c00104 	addi	r3,r17,4
    c35c:	1c63803a 	cmpltu	r17,r3,r17
    c360:	2c4b883a 	add	r5,r5,r17
    c364:	2880202c 	andhi	r2,r5,128
    c368:	9200004c 	andi	r8,r18,1
    c36c:	1823883a 	mov	r17,r3
    c370:	10005426 	beq	r2,zero,c4c4 <__subdf3+0x20c>
    c374:	84000044 	addi	r16,r16,1
    c378:	0081ffc4 	movi	r2,2047
    c37c:	8080bf26 	beq	r16,r2,c67c <__subdf3+0x3c4>
    c380:	013fe034 	movhi	r4,65408
    c384:	213fffc4 	addi	r4,r4,-1
    c388:	290a703a 	and	r5,r5,r4
    c38c:	2804977a 	slli	r2,r5,29
    c390:	280a927a 	slli	r5,r5,9
    c394:	8822d0fa 	srli	r17,r17,3
    c398:	8401ffcc 	andi	r16,r16,2047
    c39c:	2808d33a 	srli	r4,r5,12
    c3a0:	1444b03a 	or	r2,r2,r17
    c3a4:	8401ffcc 	andi	r16,r16,2047
    c3a8:	800a953a 	slli	r5,r16,20
    c3ac:	40c03fcc 	andi	r3,r8,255
    c3b0:	04000434 	movhi	r16,16
    c3b4:	180697fa 	slli	r3,r3,31
    c3b8:	843fffc4 	addi	r16,r16,-1
    c3bc:	2420703a 	and	r16,r4,r16
    c3c0:	8160b03a 	or	r16,r16,r5
    c3c4:	80c6b03a 	or	r3,r16,r3
    c3c8:	dfc00417 	ldw	ra,16(sp)
    c3cc:	dcc00317 	ldw	r19,12(sp)
    c3d0:	dc800217 	ldw	r18,8(sp)
    c3d4:	dc400117 	ldw	r17,4(sp)
    c3d8:	dc000017 	ldw	r16,0(sp)
    c3dc:	dec00504 	addi	sp,sp,20
    c3e0:	f800283a 	ret
    c3e4:	0101ffc4 	movi	r4,2047
    c3e8:	813fd626 	beq	r16,r4,c344 <__alt_data_end+0xfffaa8c4>
    c3ec:	18c02034 	orhi	r3,r3,128
    c3f0:	01000e04 	movi	r4,56
    c3f4:	2080a416 	blt	r4,r2,c688 <__subdf3+0x3d0>
    c3f8:	010007c4 	movi	r4,31
    c3fc:	2080c716 	blt	r4,r2,c71c <__subdf3+0x464>
    c400:	01000804 	movi	r4,32
    c404:	2089c83a 	sub	r4,r4,r2
    c408:	1910983a 	sll	r8,r3,r4
    c40c:	308ed83a 	srl	r7,r6,r2
    c410:	3108983a 	sll	r4,r6,r4
    c414:	1884d83a 	srl	r2,r3,r2
    c418:	41ccb03a 	or	r6,r8,r7
    c41c:	2008c03a 	cmpne	r4,r4,zero
    c420:	310cb03a 	or	r6,r6,r4
    c424:	898dc83a 	sub	r6,r17,r6
    c428:	89a3803a 	cmpltu	r17,r17,r6
    c42c:	288bc83a 	sub	r5,r5,r2
    c430:	2c4bc83a 	sub	r5,r5,r17
    c434:	3023883a 	mov	r17,r6
    c438:	2880202c 	andhi	r2,r5,128
    c43c:	10006b26 	beq	r2,zero,c5ec <__subdf3+0x334>
    c440:	04c02034 	movhi	r19,128
    c444:	9cffffc4 	addi	r19,r19,-1
    c448:	2ce6703a 	and	r19,r5,r19
    c44c:	98007c26 	beq	r19,zero,c640 <__subdf3+0x388>
    c450:	9809883a 	mov	r4,r19
    c454:	000cd840 	call	cd84 <__clzsi2>
    c458:	10fffe04 	addi	r3,r2,-8
    c45c:	010007c4 	movi	r4,31
    c460:	20c07d16 	blt	r4,r3,c658 <__subdf3+0x3a0>
    c464:	01400a04 	movi	r5,40
    c468:	2885c83a 	sub	r2,r5,r2
    c46c:	888ad83a 	srl	r5,r17,r2
    c470:	98e6983a 	sll	r19,r19,r3
    c474:	88e2983a 	sll	r17,r17,r3
    c478:	2ce6b03a 	or	r19,r5,r19
    c47c:	1c007a16 	blt	r3,r16,c668 <__subdf3+0x3b0>
    c480:	1c21c83a 	sub	r16,r3,r16
    c484:	81400044 	addi	r5,r16,1
    c488:	00c007c4 	movi	r3,31
    c48c:	19409616 	blt	r3,r5,c6e8 <__subdf3+0x430>
    c490:	1c21c83a 	sub	r16,r3,r16
    c494:	8c08983a 	sll	r4,r17,r16
    c498:	8946d83a 	srl	r3,r17,r5
    c49c:	9c20983a 	sll	r16,r19,r16
    c4a0:	2008c03a 	cmpne	r4,r4,zero
    c4a4:	994ad83a 	srl	r5,r19,r5
    c4a8:	1c06b03a 	or	r3,r3,r16
    c4ac:	1922b03a 	or	r17,r3,r4
    c4b0:	0021883a 	mov	r16,zero
    c4b4:	003fa306 	br	c344 <__alt_data_end+0xfffaa8c4>
    c4b8:	2880202c 	andhi	r2,r5,128
    c4bc:	9200004c 	andi	r8,r18,1
    c4c0:	103fac1e 	bne	r2,zero,c374 <__alt_data_end+0xfffaa8f4>
    c4c4:	2804977a 	slli	r2,r5,29
    c4c8:	8822d0fa 	srli	r17,r17,3
    c4cc:	00c1ffc4 	movi	r3,2047
    c4d0:	280ad0fa 	srli	r5,r5,3
    c4d4:	1444b03a 	or	r2,r2,r17
    c4d8:	80c02726 	beq	r16,r3,c578 <__subdf3+0x2c0>
    c4dc:	01000434 	movhi	r4,16
    c4e0:	213fffc4 	addi	r4,r4,-1
    c4e4:	80e0703a 	and	r16,r16,r3
    c4e8:	2908703a 	and	r4,r5,r4
    c4ec:	003fad06 	br	c3a4 <__alt_data_end+0xfffaa924>
    c4f0:	0080690e 	bge	zero,r2,c698 <__subdf3+0x3e0>
    c4f4:	50002f26 	beq	r10,zero,c5b4 <__subdf3+0x2fc>
    c4f8:	0101ffc4 	movi	r4,2047
    c4fc:	813f9126 	beq	r16,r4,c344 <__alt_data_end+0xfffaa8c4>
    c500:	18c02034 	orhi	r3,r3,128
    c504:	01000e04 	movi	r4,56
    c508:	2080b00e 	bge	r4,r2,c7cc <__subdf3+0x514>
    c50c:	198cb03a 	or	r6,r3,r6
    c510:	300ec03a 	cmpne	r7,r6,zero
    c514:	0005883a 	mov	r2,zero
    c518:	3c4f883a 	add	r7,r7,r17
    c51c:	3c63803a 	cmpltu	r17,r7,r17
    c520:	114b883a 	add	r5,r2,r5
    c524:	2c4b883a 	add	r5,r5,r17
    c528:	3823883a 	mov	r17,r7
    c52c:	2880202c 	andhi	r2,r5,128
    c530:	10002e26 	beq	r2,zero,c5ec <__subdf3+0x334>
    c534:	84000044 	addi	r16,r16,1
    c538:	0081ffc4 	movi	r2,2047
    c53c:	8080de26 	beq	r16,r2,c8b8 <__subdf3+0x600>
    c540:	00bfe034 	movhi	r2,65408
    c544:	10bfffc4 	addi	r2,r2,-1
    c548:	288a703a 	and	r5,r5,r2
    c54c:	880cd07a 	srli	r6,r17,1
    c550:	280897fa 	slli	r4,r5,31
    c554:	88c0004c 	andi	r3,r17,1
    c558:	30e2b03a 	or	r17,r6,r3
    c55c:	280ad07a 	srli	r5,r5,1
    c560:	8922b03a 	or	r17,r17,r4
    c564:	003f7706 	br	c344 <__alt_data_end+0xfffaa8c4>
    c568:	1984b03a 	or	r2,r3,r6
    c56c:	103f6e26 	beq	r2,zero,c328 <__alt_data_end+0xfffaa8a8>
    c570:	39c03fcc 	andi	r7,r7,255
    c574:	003f6d06 	br	c32c <__alt_data_end+0xfffaa8ac>
    c578:	1146b03a 	or	r3,r2,r5
    c57c:	18003f26 	beq	r3,zero,c67c <__subdf3+0x3c4>
    c580:	00c00434 	movhi	r3,16
    c584:	29000234 	orhi	r4,r5,8
    c588:	18ffffc4 	addi	r3,r3,-1
    c58c:	20c8703a 	and	r4,r4,r3
    c590:	003f8406 	br	c3a4 <__alt_data_end+0xfffaa924>
    c594:	10bfffc4 	addi	r2,r2,-1
    c598:	1000501e 	bne	r2,zero,c6dc <__subdf3+0x424>
    c59c:	898fc83a 	sub	r7,r17,r6
    c5a0:	89e3803a 	cmpltu	r17,r17,r7
    c5a4:	28cbc83a 	sub	r5,r5,r3
    c5a8:	2c4bc83a 	sub	r5,r5,r17
    c5ac:	3823883a 	mov	r17,r7
    c5b0:	003fa106 	br	c438 <__alt_data_end+0xfffaa9b8>
    c5b4:	1988b03a 	or	r4,r3,r6
    c5b8:	203f6226 	beq	r4,zero,c344 <__alt_data_end+0xfffaa8c4>
    c5bc:	10bfffc4 	addi	r2,r2,-1
    c5c0:	10009b1e 	bne	r2,zero,c830 <__subdf3+0x578>
    c5c4:	344d883a 	add	r6,r6,r17
    c5c8:	3463803a 	cmpltu	r17,r6,r17
    c5cc:	194b883a 	add	r5,r3,r5
    c5d0:	2c4b883a 	add	r5,r5,r17
    c5d4:	3023883a 	mov	r17,r6
    c5d8:	003fd406 	br	c52c <__alt_data_end+0xfffaaaac>
    c5dc:	1106b03a 	or	r3,r2,r4
    c5e0:	1800b426 	beq	r3,zero,c8b4 <__subdf3+0x5fc>
    c5e4:	100b883a 	mov	r5,r2
    c5e8:	2023883a 	mov	r17,r4
    c5ec:	888001cc 	andi	r2,r17,7
    c5f0:	103f561e 	bne	r2,zero,c34c <__alt_data_end+0xfffaa8cc>
    c5f4:	9200004c 	andi	r8,r18,1
    c5f8:	003fb206 	br	c4c4 <__alt_data_end+0xfffaaa44>
    c5fc:	1000531e 	bne	r2,zero,c74c <__subdf3+0x494>
    c600:	80800044 	addi	r2,r16,1
    c604:	1081ffcc 	andi	r2,r2,2047
    c608:	01000044 	movi	r4,1
    c60c:	2080a00e 	bge	r4,r2,c890 <__subdf3+0x5d8>
    c610:	8985c83a 	sub	r2,r17,r6
    c614:	8889803a 	cmpltu	r4,r17,r2
    c618:	28e7c83a 	sub	r19,r5,r3
    c61c:	9927c83a 	sub	r19,r19,r4
    c620:	9900202c 	andhi	r4,r19,128
    c624:	20006226 	beq	r4,zero,c7b0 <__subdf3+0x4f8>
    c628:	3463c83a 	sub	r17,r6,r17
    c62c:	194bc83a 	sub	r5,r3,r5
    c630:	344d803a 	cmpltu	r6,r6,r17
    c634:	29a7c83a 	sub	r19,r5,r6
    c638:	3825883a 	mov	r18,r7
    c63c:	983f841e 	bne	r19,zero,c450 <__alt_data_end+0xfffaa9d0>
    c640:	8809883a 	mov	r4,r17
    c644:	000cd840 	call	cd84 <__clzsi2>
    c648:	10800804 	addi	r2,r2,32
    c64c:	10fffe04 	addi	r3,r2,-8
    c650:	010007c4 	movi	r4,31
    c654:	20ff830e 	bge	r4,r3,c464 <__alt_data_end+0xfffaa9e4>
    c658:	14fff604 	addi	r19,r2,-40
    c65c:	8ce6983a 	sll	r19,r17,r19
    c660:	0023883a 	mov	r17,zero
    c664:	1c3f860e 	bge	r3,r16,c480 <__alt_data_end+0xfffaaa00>
    c668:	017fe034 	movhi	r5,65408
    c66c:	297fffc4 	addi	r5,r5,-1
    c670:	80e1c83a 	sub	r16,r16,r3
    c674:	994a703a 	and	r5,r19,r5
    c678:	003f3206 	br	c344 <__alt_data_end+0xfffaa8c4>
    c67c:	0009883a 	mov	r4,zero
    c680:	0005883a 	mov	r2,zero
    c684:	003f4706 	br	c3a4 <__alt_data_end+0xfffaa924>
    c688:	198cb03a 	or	r6,r3,r6
    c68c:	300cc03a 	cmpne	r6,r6,zero
    c690:	0005883a 	mov	r2,zero
    c694:	003f6306 	br	c424 <__alt_data_end+0xfffaa9a4>
    c698:	10009d1e 	bne	r2,zero,c910 <__subdf3+0x658>
    c69c:	81c00044 	addi	r7,r16,1
    c6a0:	3881ffcc 	andi	r2,r7,2047
    c6a4:	02400044 	movi	r9,1
    c6a8:	4880680e 	bge	r9,r2,c84c <__subdf3+0x594>
    c6ac:	0081ffc4 	movi	r2,2047
    c6b0:	3880ae26 	beq	r7,r2,c96c <__subdf3+0x6b4>
    c6b4:	344d883a 	add	r6,r6,r17
    c6b8:	3463803a 	cmpltu	r17,r6,r17
    c6bc:	194b883a 	add	r5,r3,r5
    c6c0:	2c4b883a 	add	r5,r5,r17
    c6c4:	282297fa 	slli	r17,r5,31
    c6c8:	300cd07a 	srli	r6,r6,1
    c6cc:	280ad07a 	srli	r5,r5,1
    c6d0:	3821883a 	mov	r16,r7
    c6d4:	89a2b03a 	or	r17,r17,r6
    c6d8:	003f1a06 	br	c344 <__alt_data_end+0xfffaa8c4>
    c6dc:	0101ffc4 	movi	r4,2047
    c6e0:	813f431e 	bne	r16,r4,c3f0 <__alt_data_end+0xfffaa970>
    c6e4:	003f1706 	br	c344 <__alt_data_end+0xfffaa8c4>
    c6e8:	80bff844 	addi	r2,r16,-31
    c6ec:	00c00804 	movi	r3,32
    c6f0:	9884d83a 	srl	r2,r19,r2
    c6f4:	28c05126 	beq	r5,r3,c83c <__subdf3+0x584>
    c6f8:	00c00fc4 	movi	r3,63
    c6fc:	1c21c83a 	sub	r16,r3,r16
    c700:	9c26983a 	sll	r19,r19,r16
    c704:	9c62b03a 	or	r17,r19,r17
    c708:	8822c03a 	cmpne	r17,r17,zero
    c70c:	88a2b03a 	or	r17,r17,r2
    c710:	000b883a 	mov	r5,zero
    c714:	0021883a 	mov	r16,zero
    c718:	003fb406 	br	c5ec <__alt_data_end+0xfffaab6c>
    c71c:	113ff804 	addi	r4,r2,-32
    c720:	01c00804 	movi	r7,32
    c724:	1908d83a 	srl	r4,r3,r4
    c728:	11c04626 	beq	r2,r7,c844 <__subdf3+0x58c>
    c72c:	01c01004 	movi	r7,64
    c730:	3885c83a 	sub	r2,r7,r2
    c734:	1884983a 	sll	r2,r3,r2
    c738:	118cb03a 	or	r6,r2,r6
    c73c:	300cc03a 	cmpne	r6,r6,zero
    c740:	310cb03a 	or	r6,r6,r4
    c744:	0005883a 	mov	r2,zero
    c748:	003f3606 	br	c424 <__alt_data_end+0xfffaa9a4>
    c74c:	80002b26 	beq	r16,zero,c7fc <__subdf3+0x544>
    c750:	0101ffc4 	movi	r4,2047
    c754:	51006926 	beq	r10,r4,c8fc <__subdf3+0x644>
    c758:	0085c83a 	sub	r2,zero,r2
    c75c:	29402034 	orhi	r5,r5,128
    c760:	01000e04 	movi	r4,56
    c764:	20807d16 	blt	r4,r2,c95c <__subdf3+0x6a4>
    c768:	010007c4 	movi	r4,31
    c76c:	2080d916 	blt	r4,r2,cad4 <__subdf3+0x81c>
    c770:	01000804 	movi	r4,32
    c774:	2089c83a 	sub	r4,r4,r2
    c778:	2912983a 	sll	r9,r5,r4
    c77c:	8890d83a 	srl	r8,r17,r2
    c780:	8908983a 	sll	r4,r17,r4
    c784:	2884d83a 	srl	r2,r5,r2
    c788:	4a22b03a 	or	r17,r9,r8
    c78c:	2008c03a 	cmpne	r4,r4,zero
    c790:	8922b03a 	or	r17,r17,r4
    c794:	3463c83a 	sub	r17,r6,r17
    c798:	1885c83a 	sub	r2,r3,r2
    c79c:	344d803a 	cmpltu	r6,r6,r17
    c7a0:	118bc83a 	sub	r5,r2,r6
    c7a4:	5021883a 	mov	r16,r10
    c7a8:	3825883a 	mov	r18,r7
    c7ac:	003f2206 	br	c438 <__alt_data_end+0xfffaa9b8>
    c7b0:	9886b03a 	or	r3,r19,r2
    c7b4:	18001c1e 	bne	r3,zero,c828 <__subdf3+0x570>
    c7b8:	0011883a 	mov	r8,zero
    c7bc:	000b883a 	mov	r5,zero
    c7c0:	0023883a 	mov	r17,zero
    c7c4:	0021883a 	mov	r16,zero
    c7c8:	003f3e06 	br	c4c4 <__alt_data_end+0xfffaaa44>
    c7cc:	010007c4 	movi	r4,31
    c7d0:	20803c16 	blt	r4,r2,c8c4 <__subdf3+0x60c>
    c7d4:	01000804 	movi	r4,32
    c7d8:	2089c83a 	sub	r4,r4,r2
    c7dc:	1912983a 	sll	r9,r3,r4
    c7e0:	308ed83a 	srl	r7,r6,r2
    c7e4:	3108983a 	sll	r4,r6,r4
    c7e8:	1884d83a 	srl	r2,r3,r2
    c7ec:	49ceb03a 	or	r7,r9,r7
    c7f0:	2008c03a 	cmpne	r4,r4,zero
    c7f4:	390eb03a 	or	r7,r7,r4
    c7f8:	003f4706 	br	c518 <__alt_data_end+0xfffaaa98>
    c7fc:	2c48b03a 	or	r4,r5,r17
    c800:	20003e26 	beq	r4,zero,c8fc <__subdf3+0x644>
    c804:	0084303a 	nor	r2,zero,r2
    c808:	10003a1e 	bne	r2,zero,c8f4 <__subdf3+0x63c>
    c80c:	3463c83a 	sub	r17,r6,r17
    c810:	194bc83a 	sub	r5,r3,r5
    c814:	344d803a 	cmpltu	r6,r6,r17
    c818:	298bc83a 	sub	r5,r5,r6
    c81c:	5021883a 	mov	r16,r10
    c820:	3825883a 	mov	r18,r7
    c824:	003f0406 	br	c438 <__alt_data_end+0xfffaa9b8>
    c828:	1023883a 	mov	r17,r2
    c82c:	003f0706 	br	c44c <__alt_data_end+0xfffaa9cc>
    c830:	0101ffc4 	movi	r4,2047
    c834:	813f331e 	bne	r16,r4,c504 <__alt_data_end+0xfffaaa84>
    c838:	003ec206 	br	c344 <__alt_data_end+0xfffaa8c4>
    c83c:	0027883a 	mov	r19,zero
    c840:	003fb006 	br	c704 <__alt_data_end+0xfffaac84>
    c844:	0005883a 	mov	r2,zero
    c848:	003fbb06 	br	c738 <__alt_data_end+0xfffaacb8>
    c84c:	2c44b03a 	or	r2,r5,r17
    c850:	80008b1e 	bne	r16,zero,ca80 <__subdf3+0x7c8>
    c854:	1000b526 	beq	r2,zero,cb2c <__subdf3+0x874>
    c858:	1984b03a 	or	r2,r3,r6
    c85c:	103eb926 	beq	r2,zero,c344 <__alt_data_end+0xfffaa8c4>
    c860:	3449883a 	add	r4,r6,r17
    c864:	2463803a 	cmpltu	r17,r4,r17
    c868:	194b883a 	add	r5,r3,r5
    c86c:	2c4b883a 	add	r5,r5,r17
    c870:	2880202c 	andhi	r2,r5,128
    c874:	2023883a 	mov	r17,r4
    c878:	103f5c26 	beq	r2,zero,c5ec <__alt_data_end+0xfffaab6c>
    c87c:	00bfe034 	movhi	r2,65408
    c880:	10bfffc4 	addi	r2,r2,-1
    c884:	4821883a 	mov	r16,r9
    c888:	288a703a 	and	r5,r5,r2
    c88c:	003ead06 	br	c344 <__alt_data_end+0xfffaa8c4>
    c890:	2c44b03a 	or	r2,r5,r17
    c894:	8000291e 	bne	r16,zero,c93c <__subdf3+0x684>
    c898:	10004f1e 	bne	r2,zero,c9d8 <__subdf3+0x720>
    c89c:	1984b03a 	or	r2,r3,r6
    c8a0:	10000426 	beq	r2,zero,c8b4 <__subdf3+0x5fc>
    c8a4:	180b883a 	mov	r5,r3
    c8a8:	3023883a 	mov	r17,r6
    c8ac:	3825883a 	mov	r18,r7
    c8b0:	003ea406 	br	c344 <__alt_data_end+0xfffaa8c4>
    c8b4:	0011883a 	mov	r8,zero
    c8b8:	000b883a 	mov	r5,zero
    c8bc:	0023883a 	mov	r17,zero
    c8c0:	003f0006 	br	c4c4 <__alt_data_end+0xfffaaa44>
    c8c4:	11fff804 	addi	r7,r2,-32
    c8c8:	19c8d83a 	srl	r4,r3,r7
    c8cc:	01c00804 	movi	r7,32
    c8d0:	11c07e26 	beq	r2,r7,cacc <__subdf3+0x814>
    c8d4:	01c01004 	movi	r7,64
    c8d8:	3885c83a 	sub	r2,r7,r2
    c8dc:	1884983a 	sll	r2,r3,r2
    c8e0:	118cb03a 	or	r6,r2,r6
    c8e4:	300ec03a 	cmpne	r7,r6,zero
    c8e8:	390eb03a 	or	r7,r7,r4
    c8ec:	0005883a 	mov	r2,zero
    c8f0:	003f0906 	br	c518 <__alt_data_end+0xfffaaa98>
    c8f4:	0101ffc4 	movi	r4,2047
    c8f8:	513f991e 	bne	r10,r4,c760 <__alt_data_end+0xfffaace0>
    c8fc:	180b883a 	mov	r5,r3
    c900:	3023883a 	mov	r17,r6
    c904:	5021883a 	mov	r16,r10
    c908:	3825883a 	mov	r18,r7
    c90c:	003e8d06 	br	c344 <__alt_data_end+0xfffaa8c4>
    c910:	80001a1e 	bne	r16,zero,c97c <__subdf3+0x6c4>
    c914:	2c48b03a 	or	r4,r5,r17
    c918:	20005526 	beq	r4,zero,ca70 <__subdf3+0x7b8>
    c91c:	0084303a 	nor	r2,zero,r2
    c920:	1000511e 	bne	r2,zero,ca68 <__subdf3+0x7b0>
    c924:	89a3883a 	add	r17,r17,r6
    c928:	194b883a 	add	r5,r3,r5
    c92c:	898d803a 	cmpltu	r6,r17,r6
    c930:	298b883a 	add	r5,r5,r6
    c934:	5021883a 	mov	r16,r10
    c938:	003efc06 	br	c52c <__alt_data_end+0xfffaaaac>
    c93c:	1000341e 	bne	r2,zero,ca10 <__subdf3+0x758>
    c940:	1984b03a 	or	r2,r3,r6
    c944:	10006f26 	beq	r2,zero,cb04 <__subdf3+0x84c>
    c948:	180b883a 	mov	r5,r3
    c94c:	3023883a 	mov	r17,r6
    c950:	3825883a 	mov	r18,r7
    c954:	0401ffc4 	movi	r16,2047
    c958:	003e7a06 	br	c344 <__alt_data_end+0xfffaa8c4>
    c95c:	2c62b03a 	or	r17,r5,r17
    c960:	8822c03a 	cmpne	r17,r17,zero
    c964:	0005883a 	mov	r2,zero
    c968:	003f8a06 	br	c794 <__alt_data_end+0xfffaad14>
    c96c:	3821883a 	mov	r16,r7
    c970:	000b883a 	mov	r5,zero
    c974:	0023883a 	mov	r17,zero
    c978:	003ed206 	br	c4c4 <__alt_data_end+0xfffaaa44>
    c97c:	0101ffc4 	movi	r4,2047
    c980:	51003b26 	beq	r10,r4,ca70 <__subdf3+0x7b8>
    c984:	0085c83a 	sub	r2,zero,r2
    c988:	29402034 	orhi	r5,r5,128
    c98c:	01000e04 	movi	r4,56
    c990:	20806216 	blt	r4,r2,cb1c <__subdf3+0x864>
    c994:	010007c4 	movi	r4,31
    c998:	20806b16 	blt	r4,r2,cb48 <__subdf3+0x890>
    c99c:	01000804 	movi	r4,32
    c9a0:	2089c83a 	sub	r4,r4,r2
    c9a4:	2912983a 	sll	r9,r5,r4
    c9a8:	888ed83a 	srl	r7,r17,r2
    c9ac:	8908983a 	sll	r4,r17,r4
    c9b0:	2884d83a 	srl	r2,r5,r2
    c9b4:	49e2b03a 	or	r17,r9,r7
    c9b8:	2008c03a 	cmpne	r4,r4,zero
    c9bc:	8922b03a 	or	r17,r17,r4
    c9c0:	89a3883a 	add	r17,r17,r6
    c9c4:	10c5883a 	add	r2,r2,r3
    c9c8:	898d803a 	cmpltu	r6,r17,r6
    c9cc:	118b883a 	add	r5,r2,r6
    c9d0:	5021883a 	mov	r16,r10
    c9d4:	003ed506 	br	c52c <__alt_data_end+0xfffaaaac>
    c9d8:	1984b03a 	or	r2,r3,r6
    c9dc:	103e5926 	beq	r2,zero,c344 <__alt_data_end+0xfffaa8c4>
    c9e0:	8989c83a 	sub	r4,r17,r6
    c9e4:	8911803a 	cmpltu	r8,r17,r4
    c9e8:	28c5c83a 	sub	r2,r5,r3
    c9ec:	1205c83a 	sub	r2,r2,r8
    c9f0:	1200202c 	andhi	r8,r2,128
    c9f4:	403ef926 	beq	r8,zero,c5dc <__alt_data_end+0xfffaab5c>
    c9f8:	3463c83a 	sub	r17,r6,r17
    c9fc:	194bc83a 	sub	r5,r3,r5
    ca00:	344d803a 	cmpltu	r6,r6,r17
    ca04:	298bc83a 	sub	r5,r5,r6
    ca08:	3825883a 	mov	r18,r7
    ca0c:	003e4d06 	br	c344 <__alt_data_end+0xfffaa8c4>
    ca10:	1984b03a 	or	r2,r3,r6
    ca14:	10002b26 	beq	r2,zero,cac4 <__subdf3+0x80c>
    ca18:	2808d0fa 	srli	r4,r5,3
    ca1c:	8822d0fa 	srli	r17,r17,3
    ca20:	280a977a 	slli	r5,r5,29
    ca24:	2080022c 	andhi	r2,r4,8
    ca28:	2c62b03a 	or	r17,r5,r17
    ca2c:	10000826 	beq	r2,zero,ca50 <__subdf3+0x798>
    ca30:	1810d0fa 	srli	r8,r3,3
    ca34:	4080022c 	andhi	r2,r8,8
    ca38:	1000051e 	bne	r2,zero,ca50 <__subdf3+0x798>
    ca3c:	300cd0fa 	srli	r6,r6,3
    ca40:	1804977a 	slli	r2,r3,29
    ca44:	4009883a 	mov	r4,r8
    ca48:	3825883a 	mov	r18,r7
    ca4c:	11a2b03a 	or	r17,r2,r6
    ca50:	880ad77a 	srli	r5,r17,29
    ca54:	200890fa 	slli	r4,r4,3
    ca58:	882290fa 	slli	r17,r17,3
    ca5c:	0401ffc4 	movi	r16,2047
    ca60:	290ab03a 	or	r5,r5,r4
    ca64:	003e3706 	br	c344 <__alt_data_end+0xfffaa8c4>
    ca68:	0101ffc4 	movi	r4,2047
    ca6c:	513fc71e 	bne	r10,r4,c98c <__alt_data_end+0xfffaaf0c>
    ca70:	180b883a 	mov	r5,r3
    ca74:	3023883a 	mov	r17,r6
    ca78:	5021883a 	mov	r16,r10
    ca7c:	003e3106 	br	c344 <__alt_data_end+0xfffaa8c4>
    ca80:	10002d26 	beq	r2,zero,cb38 <__subdf3+0x880>
    ca84:	1984b03a 	or	r2,r3,r6
    ca88:	10000e26 	beq	r2,zero,cac4 <__subdf3+0x80c>
    ca8c:	2808d0fa 	srli	r4,r5,3
    ca90:	8822d0fa 	srli	r17,r17,3
    ca94:	280a977a 	slli	r5,r5,29
    ca98:	2080022c 	andhi	r2,r4,8
    ca9c:	2c62b03a 	or	r17,r5,r17
    caa0:	103feb26 	beq	r2,zero,ca50 <__alt_data_end+0xfffaafd0>
    caa4:	180ed0fa 	srli	r7,r3,3
    caa8:	3880022c 	andhi	r2,r7,8
    caac:	103fe81e 	bne	r2,zero,ca50 <__alt_data_end+0xfffaafd0>
    cab0:	300cd0fa 	srli	r6,r6,3
    cab4:	1804977a 	slli	r2,r3,29
    cab8:	3809883a 	mov	r4,r7
    cabc:	11a2b03a 	or	r17,r2,r6
    cac0:	003fe306 	br	ca50 <__alt_data_end+0xfffaafd0>
    cac4:	0401ffc4 	movi	r16,2047
    cac8:	003e1e06 	br	c344 <__alt_data_end+0xfffaa8c4>
    cacc:	0005883a 	mov	r2,zero
    cad0:	003f8306 	br	c8e0 <__alt_data_end+0xfffaae60>
    cad4:	113ff804 	addi	r4,r2,-32
    cad8:	02000804 	movi	r8,32
    cadc:	2908d83a 	srl	r4,r5,r4
    cae0:	12002526 	beq	r2,r8,cb78 <__subdf3+0x8c0>
    cae4:	02001004 	movi	r8,64
    cae8:	4085c83a 	sub	r2,r8,r2
    caec:	288a983a 	sll	r5,r5,r2
    caf0:	2c62b03a 	or	r17,r5,r17
    caf4:	8822c03a 	cmpne	r17,r17,zero
    caf8:	8922b03a 	or	r17,r17,r4
    cafc:	0005883a 	mov	r2,zero
    cb00:	003f2406 	br	c794 <__alt_data_end+0xfffaad14>
    cb04:	01402034 	movhi	r5,128
    cb08:	0011883a 	mov	r8,zero
    cb0c:	297fffc4 	addi	r5,r5,-1
    cb10:	047ffe04 	movi	r17,-8
    cb14:	0401ffc4 	movi	r16,2047
    cb18:	003e6a06 	br	c4c4 <__alt_data_end+0xfffaaa44>
    cb1c:	2c62b03a 	or	r17,r5,r17
    cb20:	8822c03a 	cmpne	r17,r17,zero
    cb24:	0005883a 	mov	r2,zero
    cb28:	003fa506 	br	c9c0 <__alt_data_end+0xfffaaf40>
    cb2c:	180b883a 	mov	r5,r3
    cb30:	3023883a 	mov	r17,r6
    cb34:	003e0306 	br	c344 <__alt_data_end+0xfffaa8c4>
    cb38:	180b883a 	mov	r5,r3
    cb3c:	3023883a 	mov	r17,r6
    cb40:	0401ffc4 	movi	r16,2047
    cb44:	003dff06 	br	c344 <__alt_data_end+0xfffaa8c4>
    cb48:	113ff804 	addi	r4,r2,-32
    cb4c:	01c00804 	movi	r7,32
    cb50:	2908d83a 	srl	r4,r5,r4
    cb54:	11c00a26 	beq	r2,r7,cb80 <__subdf3+0x8c8>
    cb58:	01c01004 	movi	r7,64
    cb5c:	3885c83a 	sub	r2,r7,r2
    cb60:	288a983a 	sll	r5,r5,r2
    cb64:	2c62b03a 	or	r17,r5,r17
    cb68:	8822c03a 	cmpne	r17,r17,zero
    cb6c:	8922b03a 	or	r17,r17,r4
    cb70:	0005883a 	mov	r2,zero
    cb74:	003f9206 	br	c9c0 <__alt_data_end+0xfffaaf40>
    cb78:	000b883a 	mov	r5,zero
    cb7c:	003fdc06 	br	caf0 <__alt_data_end+0xfffab070>
    cb80:	000b883a 	mov	r5,zero
    cb84:	003ff706 	br	cb64 <__alt_data_end+0xfffab0e4>

0000cb88 <__fixdfsi>:
    cb88:	2806d53a 	srli	r3,r5,20
    cb8c:	00800434 	movhi	r2,16
    cb90:	10bfffc4 	addi	r2,r2,-1
    cb94:	18c1ffcc 	andi	r3,r3,2047
    cb98:	0180ff84 	movi	r6,1022
    cb9c:	2884703a 	and	r2,r5,r2
    cba0:	280ad7fa 	srli	r5,r5,31
    cba4:	30c0130e 	bge	r6,r3,cbf4 <__fixdfsi+0x6c>
    cba8:	01810744 	movi	r6,1053
    cbac:	30c00d16 	blt	r6,r3,cbe4 <__fixdfsi+0x5c>
    cbb0:	01810cc4 	movi	r6,1075
    cbb4:	30cdc83a 	sub	r6,r6,r3
    cbb8:	01c007c4 	movi	r7,31
    cbbc:	10800434 	orhi	r2,r2,16
    cbc0:	39800e0e 	bge	r7,r6,cbfc <__fixdfsi+0x74>
    cbc4:	010104c4 	movi	r4,1043
    cbc8:	20c7c83a 	sub	r3,r4,r3
    cbcc:	10c6d83a 	srl	r3,r2,r3
    cbd0:	29403fcc 	andi	r5,r5,255
    cbd4:	0145c83a 	sub	r2,zero,r5
    cbd8:	1884f03a 	xor	r2,r3,r2
    cbdc:	1145883a 	add	r2,r2,r5
    cbe0:	f800283a 	ret
    cbe4:	00a00034 	movhi	r2,32768
    cbe8:	10bfffc4 	addi	r2,r2,-1
    cbec:	2885883a 	add	r2,r5,r2
    cbf0:	f800283a 	ret
    cbf4:	0005883a 	mov	r2,zero
    cbf8:	f800283a 	ret
    cbfc:	18fefb44 	addi	r3,r3,-1043
    cc00:	2188d83a 	srl	r4,r4,r6
    cc04:	10c6983a 	sll	r3,r2,r3
    cc08:	20c6b03a 	or	r3,r4,r3
    cc0c:	003ff006 	br	cbd0 <__alt_data_end+0xfffab150>

0000cc10 <__floatsidf>:
    cc10:	defffd04 	addi	sp,sp,-12
    cc14:	dc400115 	stw	r17,4(sp)
    cc18:	dfc00215 	stw	ra,8(sp)
    cc1c:	dc000015 	stw	r16,0(sp)
    cc20:	2023883a 	mov	r17,r4
    cc24:	20001426 	beq	r4,zero,cc78 <__floatsidf+0x68>
    cc28:	2020d7fa 	srli	r16,r4,31
    cc2c:	80000126 	beq	r16,zero,cc34 <__floatsidf+0x24>
    cc30:	0123c83a 	sub	r17,zero,r4
    cc34:	8809883a 	mov	r4,r17
    cc38:	000cd840 	call	cd84 <__clzsi2>
    cc3c:	01410784 	movi	r5,1054
    cc40:	00c00284 	movi	r3,10
    cc44:	288bc83a 	sub	r5,r5,r2
    cc48:	18801c16 	blt	r3,r2,ccbc <__floatsidf+0xac>
    cc4c:	00c002c4 	movi	r3,11
    cc50:	1887c83a 	sub	r3,r3,r2
    cc54:	88c8d83a 	srl	r4,r17,r3
    cc58:	00c00434 	movhi	r3,16
    cc5c:	18ffffc4 	addi	r3,r3,-1
    cc60:	10800544 	addi	r2,r2,21
    cc64:	20c8703a 	and	r4,r4,r3
    cc68:	8884983a 	sll	r2,r17,r2
    cc6c:	28c1ffcc 	andi	r3,r5,2047
    cc70:	800d883a 	mov	r6,r16
    cc74:	00000406 	br	cc88 <__floatsidf+0x78>
    cc78:	000d883a 	mov	r6,zero
    cc7c:	0007883a 	mov	r3,zero
    cc80:	0009883a 	mov	r4,zero
    cc84:	0005883a 	mov	r2,zero
    cc88:	180a953a 	slli	r5,r3,20
    cc8c:	31803fcc 	andi	r6,r6,255
    cc90:	00c00434 	movhi	r3,16
    cc94:	300c97fa 	slli	r6,r6,31
    cc98:	18ffffc4 	addi	r3,r3,-1
    cc9c:	20c6703a 	and	r3,r4,r3
    cca0:	1946b03a 	or	r3,r3,r5
    cca4:	1986b03a 	or	r3,r3,r6
    cca8:	dfc00217 	ldw	ra,8(sp)
    ccac:	dc400117 	ldw	r17,4(sp)
    ccb0:	dc000017 	ldw	r16,0(sp)
    ccb4:	dec00304 	addi	sp,sp,12
    ccb8:	f800283a 	ret
    ccbc:	10fffd44 	addi	r3,r2,-11
    ccc0:	88c8983a 	sll	r4,r17,r3
    ccc4:	00800434 	movhi	r2,16
    ccc8:	10bfffc4 	addi	r2,r2,-1
    cccc:	2088703a 	and	r4,r4,r2
    ccd0:	28c1ffcc 	andi	r3,r5,2047
    ccd4:	800d883a 	mov	r6,r16
    ccd8:	0005883a 	mov	r2,zero
    ccdc:	003fea06 	br	cc88 <__alt_data_end+0xfffab208>

0000cce0 <__floatunsidf>:
    cce0:	defffe04 	addi	sp,sp,-8
    cce4:	dc000015 	stw	r16,0(sp)
    cce8:	dfc00115 	stw	ra,4(sp)
    ccec:	2021883a 	mov	r16,r4
    ccf0:	20001026 	beq	r4,zero,cd34 <__floatunsidf+0x54>
    ccf4:	000cd840 	call	cd84 <__clzsi2>
    ccf8:	01410784 	movi	r5,1054
    ccfc:	100d883a 	mov	r6,r2
    cd00:	288bc83a 	sub	r5,r5,r2
    cd04:	00800284 	movi	r2,10
    cd08:	11801616 	blt	r2,r6,cd64 <__floatunsidf+0x84>
    cd0c:	008002c4 	movi	r2,11
    cd10:	1185c83a 	sub	r2,r2,r6
    cd14:	8084d83a 	srl	r2,r16,r2
    cd18:	00c00434 	movhi	r3,16
    cd1c:	31c00544 	addi	r7,r6,21
    cd20:	18ffffc4 	addi	r3,r3,-1
    cd24:	81e0983a 	sll	r16,r16,r7
    cd28:	10cc703a 	and	r6,r2,r3
    cd2c:	2941ffcc 	andi	r5,r5,2047
    cd30:	00000206 	br	cd3c <__floatunsidf+0x5c>
    cd34:	000b883a 	mov	r5,zero
    cd38:	000d883a 	mov	r6,zero
    cd3c:	280a953a 	slli	r5,r5,20
    cd40:	00c00434 	movhi	r3,16
    cd44:	18ffffc4 	addi	r3,r3,-1
    cd48:	30c6703a 	and	r3,r6,r3
    cd4c:	8005883a 	mov	r2,r16
    cd50:	1946b03a 	or	r3,r3,r5
    cd54:	dfc00117 	ldw	ra,4(sp)
    cd58:	dc000017 	ldw	r16,0(sp)
    cd5c:	dec00204 	addi	sp,sp,8
    cd60:	f800283a 	ret
    cd64:	31bffd44 	addi	r6,r6,-11
    cd68:	818c983a 	sll	r6,r16,r6
    cd6c:	00800434 	movhi	r2,16
    cd70:	10bfffc4 	addi	r2,r2,-1
    cd74:	2941ffcc 	andi	r5,r5,2047
    cd78:	0021883a 	mov	r16,zero
    cd7c:	308c703a 	and	r6,r6,r2
    cd80:	003fee06 	br	cd3c <__alt_data_end+0xfffab2bc>

0000cd84 <__clzsi2>:
    cd84:	00bfffd4 	movui	r2,65535
    cd88:	11000b36 	bltu	r2,r4,cdb8 <__clzsi2+0x34>
    cd8c:	00803fc4 	movi	r2,255
    cd90:	1100122e 	bgeu	r2,r4,cddc <__clzsi2+0x58>
    cd94:	00c00204 	movi	r3,8
    cd98:	01400604 	movi	r5,24
    cd9c:	20c8d83a 	srl	r4,r4,r3
    cda0:	00800074 	movhi	r2,1
    cda4:	10bdc904 	addi	r2,r2,-2268
    cda8:	1109883a 	add	r4,r2,r4
    cdac:	20800003 	ldbu	r2,0(r4)
    cdb0:	2885c83a 	sub	r2,r5,r2
    cdb4:	f800283a 	ret
    cdb8:	00804034 	movhi	r2,256
    cdbc:	10bfffc4 	addi	r2,r2,-1
    cdc0:	11000336 	bltu	r2,r4,cdd0 <__clzsi2+0x4c>
    cdc4:	00c00404 	movi	r3,16
    cdc8:	180b883a 	mov	r5,r3
    cdcc:	003ff306 	br	cd9c <__alt_data_end+0xfffab31c>
    cdd0:	00c00604 	movi	r3,24
    cdd4:	01400204 	movi	r5,8
    cdd8:	003ff006 	br	cd9c <__alt_data_end+0xfffab31c>
    cddc:	0007883a 	mov	r3,zero
    cde0:	01400804 	movi	r5,32
    cde4:	003fed06 	br	cd9c <__alt_data_end+0xfffab31c>

0000cde8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    cde8:	defffe04 	addi	sp,sp,-8
    cdec:	dfc00115 	stw	ra,4(sp)
    cdf0:	df000015 	stw	fp,0(sp)
    cdf4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    cdf8:	00800074 	movhi	r2,1
    cdfc:	1084cc04 	addi	r2,r2,4912
    ce00:	10800017 	ldw	r2,0(r2)
    ce04:	10000526 	beq	r2,zero,ce1c <alt_get_errno+0x34>
    ce08:	00800074 	movhi	r2,1
    ce0c:	1084cc04 	addi	r2,r2,4912
    ce10:	10800017 	ldw	r2,0(r2)
    ce14:	103ee83a 	callr	r2
    ce18:	00000206 	br	ce24 <alt_get_errno+0x3c>
    ce1c:	00800074 	movhi	r2,1
    ce20:	108b8f04 	addi	r2,r2,11836
}
    ce24:	e037883a 	mov	sp,fp
    ce28:	dfc00117 	ldw	ra,4(sp)
    ce2c:	df000017 	ldw	fp,0(sp)
    ce30:	dec00204 	addi	sp,sp,8
    ce34:	f800283a 	ret

0000ce38 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    ce38:	defffb04 	addi	sp,sp,-20
    ce3c:	dfc00415 	stw	ra,16(sp)
    ce40:	df000315 	stw	fp,12(sp)
    ce44:	df000304 	addi	fp,sp,12
    ce48:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    ce4c:	e0bfff17 	ldw	r2,-4(fp)
    ce50:	10000816 	blt	r2,zero,ce74 <close+0x3c>
    ce54:	e13fff17 	ldw	r4,-4(fp)
    ce58:	01400304 	movi	r5,12
    ce5c:	000a5c40 	call	a5c4 <__mulsi3>
    ce60:	1007883a 	mov	r3,r2
    ce64:	00800074 	movhi	r2,1
    ce68:	10804904 	addi	r2,r2,292
    ce6c:	1885883a 	add	r2,r3,r2
    ce70:	00000106 	br	ce78 <close+0x40>
    ce74:	0005883a 	mov	r2,zero
    ce78:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
    ce7c:	e0bffd17 	ldw	r2,-12(fp)
    ce80:	10001926 	beq	r2,zero,cee8 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    ce84:	e0bffd17 	ldw	r2,-12(fp)
    ce88:	10800017 	ldw	r2,0(r2)
    ce8c:	10800417 	ldw	r2,16(r2)
    ce90:	10000626 	beq	r2,zero,ceac <close+0x74>
    ce94:	e0bffd17 	ldw	r2,-12(fp)
    ce98:	10800017 	ldw	r2,0(r2)
    ce9c:	10800417 	ldw	r2,16(r2)
    cea0:	e13ffd17 	ldw	r4,-12(fp)
    cea4:	103ee83a 	callr	r2
    cea8:	00000106 	br	ceb0 <close+0x78>
    ceac:	0005883a 	mov	r2,zero
    ceb0:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    ceb4:	e13fff17 	ldw	r4,-4(fp)
    ceb8:	000d55c0 	call	d55c <alt_release_fd>
    if (rval < 0)
    cebc:	e0bffe17 	ldw	r2,-8(fp)
    cec0:	1000070e 	bge	r2,zero,cee0 <close+0xa8>
    {
      ALT_ERRNO = -rval;
    cec4:	000cde80 	call	cde8 <alt_get_errno>
    cec8:	1007883a 	mov	r3,r2
    cecc:	e0bffe17 	ldw	r2,-8(fp)
    ced0:	0085c83a 	sub	r2,zero,r2
    ced4:	18800015 	stw	r2,0(r3)
      return -1;
    ced8:	00bfffc4 	movi	r2,-1
    cedc:	00000706 	br	cefc <close+0xc4>
    }
    return 0;
    cee0:	0005883a 	mov	r2,zero
    cee4:	00000506 	br	cefc <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    cee8:	000cde80 	call	cde8 <alt_get_errno>
    ceec:	1007883a 	mov	r3,r2
    cef0:	00801444 	movi	r2,81
    cef4:	18800015 	stw	r2,0(r3)
    return -1;
    cef8:	00bfffc4 	movi	r2,-1
  }
}
    cefc:	e037883a 	mov	sp,fp
    cf00:	dfc00117 	ldw	ra,4(sp)
    cf04:	df000017 	ldw	fp,0(sp)
    cf08:	dec00204 	addi	sp,sp,8
    cf0c:	f800283a 	ret

0000cf10 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    cf10:	defffc04 	addi	sp,sp,-16
    cf14:	df000315 	stw	fp,12(sp)
    cf18:	df000304 	addi	fp,sp,12
    cf1c:	e13ffd15 	stw	r4,-12(fp)
    cf20:	e17ffe15 	stw	r5,-8(fp)
    cf24:	e1bfff15 	stw	r6,-4(fp)
  return len;
    cf28:	e0bfff17 	ldw	r2,-4(fp)
}
    cf2c:	e037883a 	mov	sp,fp
    cf30:	df000017 	ldw	fp,0(sp)
    cf34:	dec00104 	addi	sp,sp,4
    cf38:	f800283a 	ret

0000cf3c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    cf3c:	defffe04 	addi	sp,sp,-8
    cf40:	dfc00115 	stw	ra,4(sp)
    cf44:	df000015 	stw	fp,0(sp)
    cf48:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    cf4c:	00800074 	movhi	r2,1
    cf50:	1084cc04 	addi	r2,r2,4912
    cf54:	10800017 	ldw	r2,0(r2)
    cf58:	10000526 	beq	r2,zero,cf70 <alt_get_errno+0x34>
    cf5c:	00800074 	movhi	r2,1
    cf60:	1084cc04 	addi	r2,r2,4912
    cf64:	10800017 	ldw	r2,0(r2)
    cf68:	103ee83a 	callr	r2
    cf6c:	00000206 	br	cf78 <alt_get_errno+0x3c>
    cf70:	00800074 	movhi	r2,1
    cf74:	108b8f04 	addi	r2,r2,11836
}
    cf78:	e037883a 	mov	sp,fp
    cf7c:	dfc00117 	ldw	ra,4(sp)
    cf80:	df000017 	ldw	fp,0(sp)
    cf84:	dec00204 	addi	sp,sp,8
    cf88:	f800283a 	ret

0000cf8c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    cf8c:	defffb04 	addi	sp,sp,-20
    cf90:	dfc00415 	stw	ra,16(sp)
    cf94:	df000315 	stw	fp,12(sp)
    cf98:	df000304 	addi	fp,sp,12
    cf9c:	e13ffe15 	stw	r4,-8(fp)
    cfa0:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    cfa4:	e0bffe17 	ldw	r2,-8(fp)
    cfa8:	10000816 	blt	r2,zero,cfcc <fstat+0x40>
    cfac:	e13ffe17 	ldw	r4,-8(fp)
    cfb0:	01400304 	movi	r5,12
    cfb4:	000a5c40 	call	a5c4 <__mulsi3>
    cfb8:	1007883a 	mov	r3,r2
    cfbc:	00800074 	movhi	r2,1
    cfc0:	10804904 	addi	r2,r2,292
    cfc4:	1885883a 	add	r2,r3,r2
    cfc8:	00000106 	br	cfd0 <fstat+0x44>
    cfcc:	0005883a 	mov	r2,zero
    cfd0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
    cfd4:	e0bffd17 	ldw	r2,-12(fp)
    cfd8:	10001026 	beq	r2,zero,d01c <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    cfdc:	e0bffd17 	ldw	r2,-12(fp)
    cfe0:	10800017 	ldw	r2,0(r2)
    cfe4:	10800817 	ldw	r2,32(r2)
    cfe8:	10000726 	beq	r2,zero,d008 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
    cfec:	e0bffd17 	ldw	r2,-12(fp)
    cff0:	10800017 	ldw	r2,0(r2)
    cff4:	10800817 	ldw	r2,32(r2)
    cff8:	e13ffd17 	ldw	r4,-12(fp)
    cffc:	e17fff17 	ldw	r5,-4(fp)
    d000:	103ee83a 	callr	r2
    d004:	00000a06 	br	d030 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d008:	e0bfff17 	ldw	r2,-4(fp)
    d00c:	00c80004 	movi	r3,8192
    d010:	10c00115 	stw	r3,4(r2)
      return 0;
    d014:	0005883a 	mov	r2,zero
    d018:	00000506 	br	d030 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d01c:	000cf3c0 	call	cf3c <alt_get_errno>
    d020:	1007883a 	mov	r3,r2
    d024:	00801444 	movi	r2,81
    d028:	18800015 	stw	r2,0(r3)
    return -1;
    d02c:	00bfffc4 	movi	r2,-1
  }
}
    d030:	e037883a 	mov	sp,fp
    d034:	dfc00117 	ldw	ra,4(sp)
    d038:	df000017 	ldw	fp,0(sp)
    d03c:	dec00204 	addi	sp,sp,8
    d040:	f800283a 	ret

0000d044 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d044:	defffe04 	addi	sp,sp,-8
    d048:	dfc00115 	stw	ra,4(sp)
    d04c:	df000015 	stw	fp,0(sp)
    d050:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d054:	00800074 	movhi	r2,1
    d058:	1084cc04 	addi	r2,r2,4912
    d05c:	10800017 	ldw	r2,0(r2)
    d060:	10000526 	beq	r2,zero,d078 <alt_get_errno+0x34>
    d064:	00800074 	movhi	r2,1
    d068:	1084cc04 	addi	r2,r2,4912
    d06c:	10800017 	ldw	r2,0(r2)
    d070:	103ee83a 	callr	r2
    d074:	00000206 	br	d080 <alt_get_errno+0x3c>
    d078:	00800074 	movhi	r2,1
    d07c:	108b8f04 	addi	r2,r2,11836
}
    d080:	e037883a 	mov	sp,fp
    d084:	dfc00117 	ldw	ra,4(sp)
    d088:	df000017 	ldw	fp,0(sp)
    d08c:	dec00204 	addi	sp,sp,8
    d090:	f800283a 	ret

0000d094 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d094:	deffed04 	addi	sp,sp,-76
    d098:	dfc01215 	stw	ra,72(sp)
    d09c:	df001115 	stw	fp,68(sp)
    d0a0:	df001104 	addi	fp,sp,68
    d0a4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d0a8:	e0bfff17 	ldw	r2,-4(fp)
    d0ac:	10000816 	blt	r2,zero,d0d0 <isatty+0x3c>
    d0b0:	e13fff17 	ldw	r4,-4(fp)
    d0b4:	01400304 	movi	r5,12
    d0b8:	000a5c40 	call	a5c4 <__mulsi3>
    d0bc:	1007883a 	mov	r3,r2
    d0c0:	00800074 	movhi	r2,1
    d0c4:	10804904 	addi	r2,r2,292
    d0c8:	1885883a 	add	r2,r3,r2
    d0cc:	00000106 	br	d0d4 <isatty+0x40>
    d0d0:	0005883a 	mov	r2,zero
    d0d4:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
    d0d8:	e0bfef17 	ldw	r2,-68(fp)
    d0dc:	10000e26 	beq	r2,zero,d118 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d0e0:	e0bfef17 	ldw	r2,-68(fp)
    d0e4:	10800017 	ldw	r2,0(r2)
    d0e8:	10800817 	ldw	r2,32(r2)
    d0ec:	1000021e 	bne	r2,zero,d0f8 <isatty+0x64>
    {
      return 1;
    d0f0:	00800044 	movi	r2,1
    d0f4:	00000d06 	br	d12c <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d0f8:	e0bff004 	addi	r2,fp,-64
    d0fc:	e13fff17 	ldw	r4,-4(fp)
    d100:	100b883a 	mov	r5,r2
    d104:	000cf8c0 	call	cf8c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d108:	e0bff117 	ldw	r2,-60(fp)
    d10c:	10880020 	cmpeqi	r2,r2,8192
    d110:	10803fcc 	andi	r2,r2,255
    d114:	00000506 	br	d12c <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d118:	000d0440 	call	d044 <alt_get_errno>
    d11c:	1007883a 	mov	r3,r2
    d120:	00801444 	movi	r2,81
    d124:	18800015 	stw	r2,0(r3)
    return 0;
    d128:	0005883a 	mov	r2,zero
  }
}
    d12c:	e037883a 	mov	sp,fp
    d130:	dfc00117 	ldw	ra,4(sp)
    d134:	df000017 	ldw	fp,0(sp)
    d138:	dec00204 	addi	sp,sp,8
    d13c:	f800283a 	ret

0000d140 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    d140:	defffc04 	addi	sp,sp,-16
    d144:	df000315 	stw	fp,12(sp)
    d148:	df000304 	addi	fp,sp,12
    d14c:	e13ffd15 	stw	r4,-12(fp)
    d150:	e17ffe15 	stw	r5,-8(fp)
    d154:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    d158:	e0fffe17 	ldw	r3,-8(fp)
    d15c:	e0bffd17 	ldw	r2,-12(fp)
    d160:	18800c26 	beq	r3,r2,d194 <alt_load_section+0x54>
  {
    while( to != end )
    d164:	00000806 	br	d188 <alt_load_section+0x48>
    {
      *to++ = *from++;
    d168:	e0bffe17 	ldw	r2,-8(fp)
    d16c:	10c00104 	addi	r3,r2,4
    d170:	e0fffe15 	stw	r3,-8(fp)
    d174:	e0fffd17 	ldw	r3,-12(fp)
    d178:	19000104 	addi	r4,r3,4
    d17c:	e13ffd15 	stw	r4,-12(fp)
    d180:	18c00017 	ldw	r3,0(r3)
    d184:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d188:	e0fffe17 	ldw	r3,-8(fp)
    d18c:	e0bfff17 	ldw	r2,-4(fp)
    d190:	18bff51e 	bne	r3,r2,d168 <__alt_data_end+0xfffab6e8>
    {
      *to++ = *from++;
    }
  }
}
    d194:	e037883a 	mov	sp,fp
    d198:	df000017 	ldw	fp,0(sp)
    d19c:	dec00104 	addi	sp,sp,4
    d1a0:	f800283a 	ret

0000d1a4 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d1a4:	defffe04 	addi	sp,sp,-8
    d1a8:	dfc00115 	stw	ra,4(sp)
    d1ac:	df000015 	stw	fp,0(sp)
    d1b0:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d1b4:	01000074 	movhi	r4,1
    d1b8:	2104d104 	addi	r4,r4,4932
    d1bc:	01400074 	movhi	r5,1
    d1c0:	297e1604 	addi	r5,r5,-1960
    d1c4:	01800074 	movhi	r6,1
    d1c8:	3184d104 	addi	r6,r6,4932
    d1cc:	000d1400 	call	d140 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d1d0:	01000034 	movhi	r4,0
    d1d4:	21000804 	addi	r4,r4,32
    d1d8:	01400034 	movhi	r5,0
    d1dc:	29400804 	addi	r5,r5,32
    d1e0:	01800034 	movhi	r6,0
    d1e4:	31808b04 	addi	r6,r6,556
    d1e8:	000d1400 	call	d140 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d1ec:	01000074 	movhi	r4,1
    d1f0:	213d5004 	addi	r4,r4,-2752
    d1f4:	01400074 	movhi	r5,1
    d1f8:	297d5004 	addi	r5,r5,-2752
    d1fc:	01800074 	movhi	r6,1
    d200:	31be1604 	addi	r6,r6,-1960
    d204:	000d1400 	call	d140 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d208:	000e41c0 	call	e41c <alt_dcache_flush_all>
  alt_icache_flush_all();
    d20c:	000e5e40 	call	e5e4 <alt_icache_flush_all>
}
    d210:	e037883a 	mov	sp,fp
    d214:	dfc00117 	ldw	ra,4(sp)
    d218:	df000017 	ldw	fp,0(sp)
    d21c:	dec00204 	addi	sp,sp,8
    d220:	f800283a 	ret

0000d224 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d224:	defffe04 	addi	sp,sp,-8
    d228:	dfc00115 	stw	ra,4(sp)
    d22c:	df000015 	stw	fp,0(sp)
    d230:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d234:	00800074 	movhi	r2,1
    d238:	1084cc04 	addi	r2,r2,4912
    d23c:	10800017 	ldw	r2,0(r2)
    d240:	10000526 	beq	r2,zero,d258 <alt_get_errno+0x34>
    d244:	00800074 	movhi	r2,1
    d248:	1084cc04 	addi	r2,r2,4912
    d24c:	10800017 	ldw	r2,0(r2)
    d250:	103ee83a 	callr	r2
    d254:	00000206 	br	d260 <alt_get_errno+0x3c>
    d258:	00800074 	movhi	r2,1
    d25c:	108b8f04 	addi	r2,r2,11836
}
    d260:	e037883a 	mov	sp,fp
    d264:	dfc00117 	ldw	ra,4(sp)
    d268:	df000017 	ldw	fp,0(sp)
    d26c:	dec00204 	addi	sp,sp,8
    d270:	f800283a 	ret

0000d274 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d274:	defff904 	addi	sp,sp,-28
    d278:	dfc00615 	stw	ra,24(sp)
    d27c:	df000515 	stw	fp,20(sp)
    d280:	df000504 	addi	fp,sp,20
    d284:	e13ffd15 	stw	r4,-12(fp)
    d288:	e17ffe15 	stw	r5,-8(fp)
    d28c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    d290:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d294:	e0bffd17 	ldw	r2,-12(fp)
    d298:	10000816 	blt	r2,zero,d2bc <lseek+0x48>
    d29c:	e13ffd17 	ldw	r4,-12(fp)
    d2a0:	01400304 	movi	r5,12
    d2a4:	000a5c40 	call	a5c4 <__mulsi3>
    d2a8:	1007883a 	mov	r3,r2
    d2ac:	00800074 	movhi	r2,1
    d2b0:	10804904 	addi	r2,r2,292
    d2b4:	1885883a 	add	r2,r3,r2
    d2b8:	00000106 	br	d2c0 <lseek+0x4c>
    d2bc:	0005883a 	mov	r2,zero
    d2c0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
    d2c4:	e0bffc17 	ldw	r2,-16(fp)
    d2c8:	10001026 	beq	r2,zero,d30c <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    d2cc:	e0bffc17 	ldw	r2,-16(fp)
    d2d0:	10800017 	ldw	r2,0(r2)
    d2d4:	10800717 	ldw	r2,28(r2)
    d2d8:	10000926 	beq	r2,zero,d300 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    d2dc:	e0bffc17 	ldw	r2,-16(fp)
    d2e0:	10800017 	ldw	r2,0(r2)
    d2e4:	10800717 	ldw	r2,28(r2)
    d2e8:	e13ffc17 	ldw	r4,-16(fp)
    d2ec:	e17ffe17 	ldw	r5,-8(fp)
    d2f0:	e1bfff17 	ldw	r6,-4(fp)
    d2f4:	103ee83a 	callr	r2
    d2f8:	e0bffb15 	stw	r2,-20(fp)
    d2fc:	00000506 	br	d314 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    d300:	00bfde84 	movi	r2,-134
    d304:	e0bffb15 	stw	r2,-20(fp)
    d308:	00000206 	br	d314 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
    d30c:	00bfebc4 	movi	r2,-81
    d310:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
    d314:	e0bffb17 	ldw	r2,-20(fp)
    d318:	1000070e 	bge	r2,zero,d338 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
    d31c:	000d2240 	call	d224 <alt_get_errno>
    d320:	1007883a 	mov	r3,r2
    d324:	e0bffb17 	ldw	r2,-20(fp)
    d328:	0085c83a 	sub	r2,zero,r2
    d32c:	18800015 	stw	r2,0(r3)
    rc = -1;
    d330:	00bfffc4 	movi	r2,-1
    d334:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
    d338:	e0bffb17 	ldw	r2,-20(fp)
}
    d33c:	e037883a 	mov	sp,fp
    d340:	dfc00117 	ldw	ra,4(sp)
    d344:	df000017 	ldw	fp,0(sp)
    d348:	dec00204 	addi	sp,sp,8
    d34c:	f800283a 	ret

0000d350 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    d350:	defffd04 	addi	sp,sp,-12
    d354:	dfc00215 	stw	ra,8(sp)
    d358:	df000115 	stw	fp,4(sp)
    d35c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    d360:	0009883a 	mov	r4,zero
    d364:	000d8140 	call	d814 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    d368:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    d36c:	000d8480 	call	d848 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    d370:	01000074 	movhi	r4,1
    d374:	213e0c04 	addi	r4,r4,-2000
    d378:	01400074 	movhi	r5,1
    d37c:	297e0c04 	addi	r5,r5,-2000
    d380:	01800074 	movhi	r6,1
    d384:	31be0c04 	addi	r6,r6,-2000
    d388:	000e9b00 	call	e9b0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    d38c:	000e52c0 	call	e52c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    d390:	01000074 	movhi	r4,1
    d394:	21396204 	addi	r4,r4,-6776
    d398:	000f19c0 	call	f19c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    d39c:	d126d217 	ldw	r4,-25784(gp)
    d3a0:	d0e6d317 	ldw	r3,-25780(gp)
    d3a4:	d0a6d417 	ldw	r2,-25776(gp)
    d3a8:	180b883a 	mov	r5,r3
    d3ac:	100d883a 	mov	r6,r2
    d3b0:	00004980 	call	498 <main>
    d3b4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    d3b8:	01000044 	movi	r4,1
    d3bc:	000ce380 	call	ce38 <close>
  exit (result);
    d3c0:	e13fff17 	ldw	r4,-4(fp)
    d3c4:	000f1b00 	call	f1b0 <exit>

0000d3c8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    d3c8:	defffe04 	addi	sp,sp,-8
    d3cc:	df000115 	stw	fp,4(sp)
    d3d0:	df000104 	addi	fp,sp,4
    d3d4:	e13fff15 	stw	r4,-4(fp)
}
    d3d8:	e037883a 	mov	sp,fp
    d3dc:	df000017 	ldw	fp,0(sp)
    d3e0:	dec00104 	addi	sp,sp,4
    d3e4:	f800283a 	ret

0000d3e8 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    d3e8:	defffe04 	addi	sp,sp,-8
    d3ec:	df000115 	stw	fp,4(sp)
    d3f0:	df000104 	addi	fp,sp,4
    d3f4:	e13fff15 	stw	r4,-4(fp)
}
    d3f8:	e037883a 	mov	sp,fp
    d3fc:	df000017 	ldw	fp,0(sp)
    d400:	dec00104 	addi	sp,sp,4
    d404:	f800283a 	ret

0000d408 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d408:	defffe04 	addi	sp,sp,-8
    d40c:	dfc00115 	stw	ra,4(sp)
    d410:	df000015 	stw	fp,0(sp)
    d414:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d418:	00800074 	movhi	r2,1
    d41c:	1084cc04 	addi	r2,r2,4912
    d420:	10800017 	ldw	r2,0(r2)
    d424:	10000526 	beq	r2,zero,d43c <alt_get_errno+0x34>
    d428:	00800074 	movhi	r2,1
    d42c:	1084cc04 	addi	r2,r2,4912
    d430:	10800017 	ldw	r2,0(r2)
    d434:	103ee83a 	callr	r2
    d438:	00000206 	br	d444 <alt_get_errno+0x3c>
    d43c:	00800074 	movhi	r2,1
    d440:	108b8f04 	addi	r2,r2,11836
}
    d444:	e037883a 	mov	sp,fp
    d448:	dfc00117 	ldw	ra,4(sp)
    d44c:	df000017 	ldw	fp,0(sp)
    d450:	dec00204 	addi	sp,sp,8
    d454:	f800283a 	ret

0000d458 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    d458:	defff904 	addi	sp,sp,-28
    d45c:	dfc00615 	stw	ra,24(sp)
    d460:	df000515 	stw	fp,20(sp)
    d464:	df000504 	addi	fp,sp,20
    d468:	e13ffd15 	stw	r4,-12(fp)
    d46c:	e17ffe15 	stw	r5,-8(fp)
    d470:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d474:	e0bffd17 	ldw	r2,-12(fp)
    d478:	10000816 	blt	r2,zero,d49c <read+0x44>
    d47c:	e13ffd17 	ldw	r4,-12(fp)
    d480:	01400304 	movi	r5,12
    d484:	000a5c40 	call	a5c4 <__mulsi3>
    d488:	1007883a 	mov	r3,r2
    d48c:	00800074 	movhi	r2,1
    d490:	10804904 	addi	r2,r2,292
    d494:	1885883a 	add	r2,r3,r2
    d498:	00000106 	br	d4a0 <read+0x48>
    d49c:	0005883a 	mov	r2,zero
    d4a0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    d4a4:	e0bffb17 	ldw	r2,-20(fp)
    d4a8:	10002226 	beq	r2,zero,d534 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d4ac:	e0bffb17 	ldw	r2,-20(fp)
    d4b0:	10800217 	ldw	r2,8(r2)
    d4b4:	108000cc 	andi	r2,r2,3
    d4b8:	10800060 	cmpeqi	r2,r2,1
    d4bc:	1000181e 	bne	r2,zero,d520 <read+0xc8>
        (fd->dev->read))
    d4c0:	e0bffb17 	ldw	r2,-20(fp)
    d4c4:	10800017 	ldw	r2,0(r2)
    d4c8:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d4cc:	10001426 	beq	r2,zero,d520 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    d4d0:	e0bffb17 	ldw	r2,-20(fp)
    d4d4:	10800017 	ldw	r2,0(r2)
    d4d8:	10800517 	ldw	r2,20(r2)
    d4dc:	e0ffff17 	ldw	r3,-4(fp)
    d4e0:	e13ffb17 	ldw	r4,-20(fp)
    d4e4:	e17ffe17 	ldw	r5,-8(fp)
    d4e8:	180d883a 	mov	r6,r3
    d4ec:	103ee83a 	callr	r2
    d4f0:	e0bffc15 	stw	r2,-16(fp)
    d4f4:	e0bffc17 	ldw	r2,-16(fp)
    d4f8:	1000070e 	bge	r2,zero,d518 <read+0xc0>
        {
          ALT_ERRNO = -rval;
    d4fc:	000d4080 	call	d408 <alt_get_errno>
    d500:	1007883a 	mov	r3,r2
    d504:	e0bffc17 	ldw	r2,-16(fp)
    d508:	0085c83a 	sub	r2,zero,r2
    d50c:	18800015 	stw	r2,0(r3)
          return -1;
    d510:	00bfffc4 	movi	r2,-1
    d514:	00000c06 	br	d548 <read+0xf0>
        }
        return rval;
    d518:	e0bffc17 	ldw	r2,-16(fp)
    d51c:	00000a06 	br	d548 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
    d520:	000d4080 	call	d408 <alt_get_errno>
    d524:	1007883a 	mov	r3,r2
    d528:	00800344 	movi	r2,13
    d52c:	18800015 	stw	r2,0(r3)
    d530:	00000406 	br	d544 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    d534:	000d4080 	call	d408 <alt_get_errno>
    d538:	1007883a 	mov	r3,r2
    d53c:	00801444 	movi	r2,81
    d540:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d544:	00bfffc4 	movi	r2,-1
}
    d548:	e037883a 	mov	sp,fp
    d54c:	dfc00117 	ldw	ra,4(sp)
    d550:	df000017 	ldw	fp,0(sp)
    d554:	dec00204 	addi	sp,sp,8
    d558:	f800283a 	ret

0000d55c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    d55c:	defffc04 	addi	sp,sp,-16
    d560:	dfc00315 	stw	ra,12(sp)
    d564:	df000215 	stw	fp,8(sp)
    d568:	dc000115 	stw	r16,4(sp)
    d56c:	df000204 	addi	fp,sp,8
    d570:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
    d574:	e0bffe17 	ldw	r2,-8(fp)
    d578:	108000d0 	cmplti	r2,r2,3
    d57c:	1000111e 	bne	r2,zero,d5c4 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
    d580:	04000074 	movhi	r16,1
    d584:	84004904 	addi	r16,r16,292
    d588:	e0bffe17 	ldw	r2,-8(fp)
    d58c:	1009883a 	mov	r4,r2
    d590:	01400304 	movi	r5,12
    d594:	000a5c40 	call	a5c4 <__mulsi3>
    d598:	8085883a 	add	r2,r16,r2
    d59c:	10800204 	addi	r2,r2,8
    d5a0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    d5a4:	04000074 	movhi	r16,1
    d5a8:	84004904 	addi	r16,r16,292
    d5ac:	e0bffe17 	ldw	r2,-8(fp)
    d5b0:	1009883a 	mov	r4,r2
    d5b4:	01400304 	movi	r5,12
    d5b8:	000a5c40 	call	a5c4 <__mulsi3>
    d5bc:	8085883a 	add	r2,r16,r2
    d5c0:	10000015 	stw	zero,0(r2)
  }
}
    d5c4:	e6ffff04 	addi	sp,fp,-4
    d5c8:	dfc00217 	ldw	ra,8(sp)
    d5cc:	df000117 	ldw	fp,4(sp)
    d5d0:	dc000017 	ldw	r16,0(sp)
    d5d4:	dec00304 	addi	sp,sp,12
    d5d8:	f800283a 	ret

0000d5dc <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    d5dc:	defff904 	addi	sp,sp,-28
    d5e0:	df000615 	stw	fp,24(sp)
    d5e4:	df000604 	addi	fp,sp,24
    d5e8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d5ec:	0005303a 	rdctl	r2,status
    d5f0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d5f4:	e0fffc17 	ldw	r3,-16(fp)
    d5f8:	00bfff84 	movi	r2,-2
    d5fc:	1884703a 	and	r2,r3,r2
    d600:	1001703a 	wrctl	status,r2
  
  return context;
    d604:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    d608:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    d60c:	d0a00c17 	ldw	r2,-32720(gp)
    d610:	10c000c4 	addi	r3,r2,3
    d614:	00bfff04 	movi	r2,-4
    d618:	1884703a 	and	r2,r3,r2
    d61c:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    d620:	d0e00c17 	ldw	r3,-32720(gp)
    d624:	e0bfff17 	ldw	r2,-4(fp)
    d628:	1887883a 	add	r3,r3,r2
    d62c:	008001b4 	movhi	r2,6
    d630:	1086a004 	addi	r2,r2,6784
    d634:	10c0062e 	bgeu	r2,r3,d650 <sbrk+0x74>
    d638:	e0bffa17 	ldw	r2,-24(fp)
    d63c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    d640:	e0bffd17 	ldw	r2,-12(fp)
    d644:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    d648:	00bfffc4 	movi	r2,-1
    d64c:	00000b06 	br	d67c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    d650:	d0a00c17 	ldw	r2,-32720(gp)
    d654:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
    d658:	d0e00c17 	ldw	r3,-32720(gp)
    d65c:	e0bfff17 	ldw	r2,-4(fp)
    d660:	1885883a 	add	r2,r3,r2
    d664:	d0a00c15 	stw	r2,-32720(gp)
    d668:	e0bffa17 	ldw	r2,-24(fp)
    d66c:	e0bffe15 	stw	r2,-8(fp)
    d670:	e0bffe17 	ldw	r2,-8(fp)
    d674:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    d678:	e0bffb17 	ldw	r2,-20(fp)
} 
    d67c:	e037883a 	mov	sp,fp
    d680:	df000017 	ldw	fp,0(sp)
    d684:	dec00104 	addi	sp,sp,4
    d688:	f800283a 	ret

0000d68c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d68c:	defffe04 	addi	sp,sp,-8
    d690:	dfc00115 	stw	ra,4(sp)
    d694:	df000015 	stw	fp,0(sp)
    d698:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d69c:	00800074 	movhi	r2,1
    d6a0:	1084cc04 	addi	r2,r2,4912
    d6a4:	10800017 	ldw	r2,0(r2)
    d6a8:	10000526 	beq	r2,zero,d6c0 <alt_get_errno+0x34>
    d6ac:	00800074 	movhi	r2,1
    d6b0:	1084cc04 	addi	r2,r2,4912
    d6b4:	10800017 	ldw	r2,0(r2)
    d6b8:	103ee83a 	callr	r2
    d6bc:	00000206 	br	d6c8 <alt_get_errno+0x3c>
    d6c0:	00800074 	movhi	r2,1
    d6c4:	108b8f04 	addi	r2,r2,11836
}
    d6c8:	e037883a 	mov	sp,fp
    d6cc:	dfc00117 	ldw	ra,4(sp)
    d6d0:	df000017 	ldw	fp,0(sp)
    d6d4:	dec00204 	addi	sp,sp,8
    d6d8:	f800283a 	ret

0000d6dc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    d6dc:	defff904 	addi	sp,sp,-28
    d6e0:	dfc00615 	stw	ra,24(sp)
    d6e4:	df000515 	stw	fp,20(sp)
    d6e8:	df000504 	addi	fp,sp,20
    d6ec:	e13ffd15 	stw	r4,-12(fp)
    d6f0:	e17ffe15 	stw	r5,-8(fp)
    d6f4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d6f8:	e0bffd17 	ldw	r2,-12(fp)
    d6fc:	10000816 	blt	r2,zero,d720 <write+0x44>
    d700:	e13ffd17 	ldw	r4,-12(fp)
    d704:	01400304 	movi	r5,12
    d708:	000a5c40 	call	a5c4 <__mulsi3>
    d70c:	1007883a 	mov	r3,r2
    d710:	00800074 	movhi	r2,1
    d714:	10804904 	addi	r2,r2,292
    d718:	1885883a 	add	r2,r3,r2
    d71c:	00000106 	br	d724 <write+0x48>
    d720:	0005883a 	mov	r2,zero
    d724:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    d728:	e0bffb17 	ldw	r2,-20(fp)
    d72c:	10002126 	beq	r2,zero,d7b4 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    d730:	e0bffb17 	ldw	r2,-20(fp)
    d734:	10800217 	ldw	r2,8(r2)
    d738:	108000cc 	andi	r2,r2,3
    d73c:	10001826 	beq	r2,zero,d7a0 <write+0xc4>
    d740:	e0bffb17 	ldw	r2,-20(fp)
    d744:	10800017 	ldw	r2,0(r2)
    d748:	10800617 	ldw	r2,24(r2)
    d74c:	10001426 	beq	r2,zero,d7a0 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    d750:	e0bffb17 	ldw	r2,-20(fp)
    d754:	10800017 	ldw	r2,0(r2)
    d758:	10800617 	ldw	r2,24(r2)
    d75c:	e0ffff17 	ldw	r3,-4(fp)
    d760:	e13ffb17 	ldw	r4,-20(fp)
    d764:	e17ffe17 	ldw	r5,-8(fp)
    d768:	180d883a 	mov	r6,r3
    d76c:	103ee83a 	callr	r2
    d770:	e0bffc15 	stw	r2,-16(fp)
    d774:	e0bffc17 	ldw	r2,-16(fp)
    d778:	1000070e 	bge	r2,zero,d798 <write+0xbc>
      {
        ALT_ERRNO = -rval;
    d77c:	000d68c0 	call	d68c <alt_get_errno>
    d780:	1007883a 	mov	r3,r2
    d784:	e0bffc17 	ldw	r2,-16(fp)
    d788:	0085c83a 	sub	r2,zero,r2
    d78c:	18800015 	stw	r2,0(r3)
        return -1;
    d790:	00bfffc4 	movi	r2,-1
    d794:	00000c06 	br	d7c8 <write+0xec>
      }
      return rval;
    d798:	e0bffc17 	ldw	r2,-16(fp)
    d79c:	00000a06 	br	d7c8 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
    d7a0:	000d68c0 	call	d68c <alt_get_errno>
    d7a4:	1007883a 	mov	r3,r2
    d7a8:	00800344 	movi	r2,13
    d7ac:	18800015 	stw	r2,0(r3)
    d7b0:	00000406 	br	d7c4 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    d7b4:	000d68c0 	call	d68c <alt_get_errno>
    d7b8:	1007883a 	mov	r3,r2
    d7bc:	00801444 	movi	r2,81
    d7c0:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d7c4:	00bfffc4 	movi	r2,-1
}
    d7c8:	e037883a 	mov	sp,fp
    d7cc:	dfc00117 	ldw	ra,4(sp)
    d7d0:	df000017 	ldw	fp,0(sp)
    d7d4:	dec00204 	addi	sp,sp,8
    d7d8:	f800283a 	ret

0000d7dc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    d7dc:	defffd04 	addi	sp,sp,-12
    d7e0:	dfc00215 	stw	ra,8(sp)
    d7e4:	df000115 	stw	fp,4(sp)
    d7e8:	df000104 	addi	fp,sp,4
    d7ec:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    d7f0:	e13fff17 	ldw	r4,-4(fp)
    d7f4:	01400074 	movhi	r5,1
    d7f8:	2944c904 	addi	r5,r5,4900
    d7fc:	000e4880 	call	e488 <alt_dev_llist_insert>
}
    d800:	e037883a 	mov	sp,fp
    d804:	dfc00117 	ldw	ra,4(sp)
    d808:	df000017 	ldw	fp,0(sp)
    d80c:	dec00204 	addi	sp,sp,8
    d810:	f800283a 	ret

0000d814 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    d814:	defffd04 	addi	sp,sp,-12
    d818:	dfc00215 	stw	ra,8(sp)
    d81c:	df000115 	stw	fp,4(sp)
    d820:	df000104 	addi	fp,sp,4
    d824:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
    d828:	000ee680 	call	ee68 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    d82c:	00800044 	movi	r2,1
    d830:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    d834:	e037883a 	mov	sp,fp
    d838:	dfc00117 	ldw	ra,4(sp)
    d83c:	df000017 	ldw	fp,0(sp)
    d840:	dec00204 	addi	sp,sp,8
    d844:	f800283a 	ret

0000d848 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    d848:	defffe04 	addi	sp,sp,-8
    d84c:	dfc00115 	stw	ra,4(sp)
    d850:	df000015 	stw	fp,0(sp)
    d854:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
    d858:	01000074 	movhi	r4,1
    d85c:	2100b304 	addi	r4,r4,716
    d860:	000b883a 	mov	r5,zero
    d864:	01800144 	movi	r6,5
    d868:	000d9f40 	call	d9f4 <altera_avalon_jtag_uart_init>
    d86c:	01000074 	movhi	r4,1
    d870:	2100a904 	addi	r4,r4,676
    d874:	000d7dc0 	call	d7dc <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
    d878:	0001883a 	nop
}
    d87c:	e037883a 	mov	sp,fp
    d880:	dfc00117 	ldw	ra,4(sp)
    d884:	df000017 	ldw	fp,0(sp)
    d888:	dec00204 	addi	sp,sp,8
    d88c:	f800283a 	ret

0000d890 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    d890:	defffa04 	addi	sp,sp,-24
    d894:	dfc00515 	stw	ra,20(sp)
    d898:	df000415 	stw	fp,16(sp)
    d89c:	df000404 	addi	fp,sp,16
    d8a0:	e13ffd15 	stw	r4,-12(fp)
    d8a4:	e17ffe15 	stw	r5,-8(fp)
    d8a8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    d8ac:	e0bffd17 	ldw	r2,-12(fp)
    d8b0:	10800017 	ldw	r2,0(r2)
    d8b4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    d8b8:	e0bffc17 	ldw	r2,-16(fp)
    d8bc:	10c00a04 	addi	r3,r2,40
    d8c0:	e0bffd17 	ldw	r2,-12(fp)
    d8c4:	10800217 	ldw	r2,8(r2)
    d8c8:	1809883a 	mov	r4,r3
    d8cc:	e17ffe17 	ldw	r5,-8(fp)
    d8d0:	e1bfff17 	ldw	r6,-4(fp)
    d8d4:	100f883a 	mov	r7,r2
    d8d8:	000deb80 	call	deb8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    d8dc:	e037883a 	mov	sp,fp
    d8e0:	dfc00117 	ldw	ra,4(sp)
    d8e4:	df000017 	ldw	fp,0(sp)
    d8e8:	dec00204 	addi	sp,sp,8
    d8ec:	f800283a 	ret

0000d8f0 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    d8f0:	defffa04 	addi	sp,sp,-24
    d8f4:	dfc00515 	stw	ra,20(sp)
    d8f8:	df000415 	stw	fp,16(sp)
    d8fc:	df000404 	addi	fp,sp,16
    d900:	e13ffd15 	stw	r4,-12(fp)
    d904:	e17ffe15 	stw	r5,-8(fp)
    d908:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    d90c:	e0bffd17 	ldw	r2,-12(fp)
    d910:	10800017 	ldw	r2,0(r2)
    d914:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    d918:	e0bffc17 	ldw	r2,-16(fp)
    d91c:	10c00a04 	addi	r3,r2,40
    d920:	e0bffd17 	ldw	r2,-12(fp)
    d924:	10800217 	ldw	r2,8(r2)
    d928:	1809883a 	mov	r4,r3
    d92c:	e17ffe17 	ldw	r5,-8(fp)
    d930:	e1bfff17 	ldw	r6,-4(fp)
    d934:	100f883a 	mov	r7,r2
    d938:	000e0c40 	call	e0c4 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    d93c:	e037883a 	mov	sp,fp
    d940:	dfc00117 	ldw	ra,4(sp)
    d944:	df000017 	ldw	fp,0(sp)
    d948:	dec00204 	addi	sp,sp,8
    d94c:	f800283a 	ret

0000d950 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    d950:	defffc04 	addi	sp,sp,-16
    d954:	dfc00315 	stw	ra,12(sp)
    d958:	df000215 	stw	fp,8(sp)
    d95c:	df000204 	addi	fp,sp,8
    d960:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    d964:	e0bfff17 	ldw	r2,-4(fp)
    d968:	10800017 	ldw	r2,0(r2)
    d96c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    d970:	e0bffe17 	ldw	r2,-8(fp)
    d974:	10c00a04 	addi	r3,r2,40
    d978:	e0bfff17 	ldw	r2,-4(fp)
    d97c:	10800217 	ldw	r2,8(r2)
    d980:	1809883a 	mov	r4,r3
    d984:	100b883a 	mov	r5,r2
    d988:	000dd640 	call	dd64 <altera_avalon_jtag_uart_close>
}
    d98c:	e037883a 	mov	sp,fp
    d990:	dfc00117 	ldw	ra,4(sp)
    d994:	df000017 	ldw	fp,0(sp)
    d998:	dec00204 	addi	sp,sp,8
    d99c:	f800283a 	ret

0000d9a0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    d9a0:	defffa04 	addi	sp,sp,-24
    d9a4:	dfc00515 	stw	ra,20(sp)
    d9a8:	df000415 	stw	fp,16(sp)
    d9ac:	df000404 	addi	fp,sp,16
    d9b0:	e13ffd15 	stw	r4,-12(fp)
    d9b4:	e17ffe15 	stw	r5,-8(fp)
    d9b8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    d9bc:	e0bffd17 	ldw	r2,-12(fp)
    d9c0:	10800017 	ldw	r2,0(r2)
    d9c4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    d9c8:	e0bffc17 	ldw	r2,-16(fp)
    d9cc:	10800a04 	addi	r2,r2,40
    d9d0:	1009883a 	mov	r4,r2
    d9d4:	e17ffe17 	ldw	r5,-8(fp)
    d9d8:	e1bfff17 	ldw	r6,-4(fp)
    d9dc:	000ddcc0 	call	ddcc <altera_avalon_jtag_uart_ioctl>
}
    d9e0:	e037883a 	mov	sp,fp
    d9e4:	dfc00117 	ldw	ra,4(sp)
    d9e8:	df000017 	ldw	fp,0(sp)
    d9ec:	dec00204 	addi	sp,sp,8
    d9f0:	f800283a 	ret

0000d9f4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    d9f4:	defffa04 	addi	sp,sp,-24
    d9f8:	dfc00515 	stw	ra,20(sp)
    d9fc:	df000415 	stw	fp,16(sp)
    da00:	df000404 	addi	fp,sp,16
    da04:	e13ffd15 	stw	r4,-12(fp)
    da08:	e17ffe15 	stw	r5,-8(fp)
    da0c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    da10:	e0bffd17 	ldw	r2,-12(fp)
    da14:	00c00044 	movi	r3,1
    da18:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    da1c:	e0bffd17 	ldw	r2,-12(fp)
    da20:	10800017 	ldw	r2,0(r2)
    da24:	10800104 	addi	r2,r2,4
    da28:	1007883a 	mov	r3,r2
    da2c:	e0bffd17 	ldw	r2,-12(fp)
    da30:	10800817 	ldw	r2,32(r2)
    da34:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    da38:	e0fffe17 	ldw	r3,-8(fp)
    da3c:	e0bfff17 	ldw	r2,-4(fp)
    da40:	d8000015 	stw	zero,0(sp)
    da44:	1809883a 	mov	r4,r3
    da48:	100b883a 	mov	r5,r2
    da4c:	01800074 	movhi	r6,1
    da50:	31b6ae04 	addi	r6,r6,-9544
    da54:	e1fffd17 	ldw	r7,-12(fp)
    da58:	000e6000 	call	e600 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    da5c:	e0bffd17 	ldw	r2,-12(fp)
    da60:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    da64:	e0bffd17 	ldw	r2,-12(fp)
    da68:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    da6c:	00800074 	movhi	r2,1
    da70:	108b9704 	addi	r2,r2,11868
    da74:	10800017 	ldw	r2,0(r2)
    da78:	1809883a 	mov	r4,r3
    da7c:	100b883a 	mov	r5,r2
    da80:	01800074 	movhi	r6,1
    da84:	31b72f04 	addi	r6,r6,-9028
    da88:	e1fffd17 	ldw	r7,-12(fp)
    da8c:	000e2dc0 	call	e2dc <alt_alarm_start>
    da90:	1000040e 	bge	r2,zero,daa4 <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    da94:	e0fffd17 	ldw	r3,-12(fp)
    da98:	00a00034 	movhi	r2,32768
    da9c:	10bfffc4 	addi	r2,r2,-1
    daa0:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    daa4:	e037883a 	mov	sp,fp
    daa8:	dfc00117 	ldw	ra,4(sp)
    daac:	df000017 	ldw	fp,0(sp)
    dab0:	dec00204 	addi	sp,sp,8
    dab4:	f800283a 	ret

0000dab8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    dab8:	defff804 	addi	sp,sp,-32
    dabc:	df000715 	stw	fp,28(sp)
    dac0:	df000704 	addi	fp,sp,28
    dac4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    dac8:	e0bfff17 	ldw	r2,-4(fp)
    dacc:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
    dad0:	e0bffb17 	ldw	r2,-20(fp)
    dad4:	10800017 	ldw	r2,0(r2)
    dad8:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    dadc:	e0bffc17 	ldw	r2,-16(fp)
    dae0:	10800104 	addi	r2,r2,4
    dae4:	10800037 	ldwio	r2,0(r2)
    dae8:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    daec:	e0bffd17 	ldw	r2,-12(fp)
    daf0:	1080c00c 	andi	r2,r2,768
    daf4:	1000011e 	bne	r2,zero,dafc <altera_avalon_jtag_uart_irq+0x44>
      break;
    daf8:	00006c06 	br	dcac <altera_avalon_jtag_uart_irq+0x1f4>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    dafc:	e0bffd17 	ldw	r2,-12(fp)
    db00:	1080400c 	andi	r2,r2,256
    db04:	10003426 	beq	r2,zero,dbd8 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    db08:	00800074 	movhi	r2,1
    db0c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    db10:	e0bffb17 	ldw	r2,-20(fp)
    db14:	10800a17 	ldw	r2,40(r2)
    db18:	10800044 	addi	r2,r2,1
    db1c:	1081ffcc 	andi	r2,r2,2047
    db20:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
    db24:	e0bffb17 	ldw	r2,-20(fp)
    db28:	10c00b17 	ldw	r3,44(r2)
    db2c:	e0bffe17 	ldw	r2,-8(fp)
    db30:	1880011e 	bne	r3,r2,db38 <altera_avalon_jtag_uart_irq+0x80>
          break;
    db34:	00001606 	br	db90 <altera_avalon_jtag_uart_irq+0xd8>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    db38:	e0bffc17 	ldw	r2,-16(fp)
    db3c:	10800037 	ldwio	r2,0(r2)
    db40:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    db44:	e0bff917 	ldw	r2,-28(fp)
    db48:	10a0000c 	andi	r2,r2,32768
    db4c:	1000011e 	bne	r2,zero,db54 <altera_avalon_jtag_uart_irq+0x9c>
          break;
    db50:	00000f06 	br	db90 <altera_avalon_jtag_uart_irq+0xd8>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    db54:	e0bffb17 	ldw	r2,-20(fp)
    db58:	10800a17 	ldw	r2,40(r2)
    db5c:	e0fff917 	ldw	r3,-28(fp)
    db60:	1809883a 	mov	r4,r3
    db64:	e0fffb17 	ldw	r3,-20(fp)
    db68:	1885883a 	add	r2,r3,r2
    db6c:	10800e04 	addi	r2,r2,56
    db70:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    db74:	e0bffb17 	ldw	r2,-20(fp)
    db78:	10800a17 	ldw	r2,40(r2)
    db7c:	10800044 	addi	r2,r2,1
    db80:	10c1ffcc 	andi	r3,r2,2047
    db84:	e0bffb17 	ldw	r2,-20(fp)
    db88:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
    db8c:	003fe006 	br	db10 <__alt_data_end+0xfffac090>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    db90:	e0bff917 	ldw	r2,-28(fp)
    db94:	10bfffec 	andhi	r2,r2,65535
    db98:	10000f26 	beq	r2,zero,dbd8 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    db9c:	e0bffb17 	ldw	r2,-20(fp)
    dba0:	10c00817 	ldw	r3,32(r2)
    dba4:	00bfff84 	movi	r2,-2
    dba8:	1886703a 	and	r3,r3,r2
    dbac:	e0bffb17 	ldw	r2,-20(fp)
    dbb0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    dbb4:	e0bffc17 	ldw	r2,-16(fp)
    dbb8:	10800104 	addi	r2,r2,4
    dbbc:	1007883a 	mov	r3,r2
    dbc0:	e0bffb17 	ldw	r2,-20(fp)
    dbc4:	10800817 	ldw	r2,32(r2)
    dbc8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    dbcc:	e0bffc17 	ldw	r2,-16(fp)
    dbd0:	10800104 	addi	r2,r2,4
    dbd4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    dbd8:	e0bffd17 	ldw	r2,-12(fp)
    dbdc:	1080800c 	andi	r2,r2,512
    dbe0:	10003126 	beq	r2,zero,dca8 <altera_avalon_jtag_uart_irq+0x1f0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    dbe4:	e0bffd17 	ldw	r2,-12(fp)
    dbe8:	1004d43a 	srli	r2,r2,16
    dbec:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    dbf0:	00001406 	br	dc44 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    dbf4:	e0bffc17 	ldw	r2,-16(fp)
    dbf8:	e0fffb17 	ldw	r3,-20(fp)
    dbfc:	18c00d17 	ldw	r3,52(r3)
    dc00:	e13ffb17 	ldw	r4,-20(fp)
    dc04:	20c7883a 	add	r3,r4,r3
    dc08:	18c20e04 	addi	r3,r3,2104
    dc0c:	18c00003 	ldbu	r3,0(r3)
    dc10:	18c03fcc 	andi	r3,r3,255
    dc14:	18c0201c 	xori	r3,r3,128
    dc18:	18ffe004 	addi	r3,r3,-128
    dc1c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    dc20:	e0bffb17 	ldw	r2,-20(fp)
    dc24:	10800d17 	ldw	r2,52(r2)
    dc28:	10800044 	addi	r2,r2,1
    dc2c:	10c1ffcc 	andi	r3,r2,2047
    dc30:	e0bffb17 	ldw	r2,-20(fp)
    dc34:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    dc38:	e0bffa17 	ldw	r2,-24(fp)
    dc3c:	10bfffc4 	addi	r2,r2,-1
    dc40:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    dc44:	e0bffa17 	ldw	r2,-24(fp)
    dc48:	10000526 	beq	r2,zero,dc60 <altera_avalon_jtag_uart_irq+0x1a8>
    dc4c:	e0bffb17 	ldw	r2,-20(fp)
    dc50:	10c00d17 	ldw	r3,52(r2)
    dc54:	e0bffb17 	ldw	r2,-20(fp)
    dc58:	10800c17 	ldw	r2,48(r2)
    dc5c:	18bfe51e 	bne	r3,r2,dbf4 <__alt_data_end+0xfffac174>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
    dc60:	e0bffa17 	ldw	r2,-24(fp)
    dc64:	10001026 	beq	r2,zero,dca8 <altera_avalon_jtag_uart_irq+0x1f0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    dc68:	e0bffb17 	ldw	r2,-20(fp)
    dc6c:	10c00817 	ldw	r3,32(r2)
    dc70:	00bfff44 	movi	r2,-3
    dc74:	1886703a 	and	r3,r3,r2
    dc78:	e0bffb17 	ldw	r2,-20(fp)
    dc7c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    dc80:	e0bffb17 	ldw	r2,-20(fp)
    dc84:	10800017 	ldw	r2,0(r2)
    dc88:	10800104 	addi	r2,r2,4
    dc8c:	1007883a 	mov	r3,r2
    dc90:	e0bffb17 	ldw	r2,-20(fp)
    dc94:	10800817 	ldw	r2,32(r2)
    dc98:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    dc9c:	e0bffc17 	ldw	r2,-16(fp)
    dca0:	10800104 	addi	r2,r2,4
    dca4:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
    dca8:	003f8c06 	br	dadc <__alt_data_end+0xfffac05c>
}
    dcac:	e037883a 	mov	sp,fp
    dcb0:	df000017 	ldw	fp,0(sp)
    dcb4:	dec00104 	addi	sp,sp,4
    dcb8:	f800283a 	ret

0000dcbc <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    dcbc:	defff804 	addi	sp,sp,-32
    dcc0:	df000715 	stw	fp,28(sp)
    dcc4:	df000704 	addi	fp,sp,28
    dcc8:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    dccc:	e0bffb17 	ldw	r2,-20(fp)
    dcd0:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    dcd4:	e0bff917 	ldw	r2,-28(fp)
    dcd8:	10800017 	ldw	r2,0(r2)
    dcdc:	10800104 	addi	r2,r2,4
    dce0:	10800037 	ldwio	r2,0(r2)
    dce4:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    dce8:	e0bffa17 	ldw	r2,-24(fp)
    dcec:	1081000c 	andi	r2,r2,1024
    dcf0:	10000b26 	beq	r2,zero,dd20 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    dcf4:	e0bff917 	ldw	r2,-28(fp)
    dcf8:	10800017 	ldw	r2,0(r2)
    dcfc:	10800104 	addi	r2,r2,4
    dd00:	1007883a 	mov	r3,r2
    dd04:	e0bff917 	ldw	r2,-28(fp)
    dd08:	10800817 	ldw	r2,32(r2)
    dd0c:	10810014 	ori	r2,r2,1024
    dd10:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    dd14:	e0bff917 	ldw	r2,-28(fp)
    dd18:	10000915 	stw	zero,36(r2)
    dd1c:	00000a06 	br	dd48 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    dd20:	e0bff917 	ldw	r2,-28(fp)
    dd24:	10c00917 	ldw	r3,36(r2)
    dd28:	00a00034 	movhi	r2,32768
    dd2c:	10bfff04 	addi	r2,r2,-4
    dd30:	10c00536 	bltu	r2,r3,dd48 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    dd34:	e0bff917 	ldw	r2,-28(fp)
    dd38:	10800917 	ldw	r2,36(r2)
    dd3c:	10c00044 	addi	r3,r2,1
    dd40:	e0bff917 	ldw	r2,-28(fp)
    dd44:	10c00915 	stw	r3,36(r2)
    dd48:	00800074 	movhi	r2,1
    dd4c:	108b9704 	addi	r2,r2,11868
    dd50:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    dd54:	e037883a 	mov	sp,fp
    dd58:	df000017 	ldw	fp,0(sp)
    dd5c:	dec00104 	addi	sp,sp,4
    dd60:	f800283a 	ret

0000dd64 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    dd64:	defffd04 	addi	sp,sp,-12
    dd68:	df000215 	stw	fp,8(sp)
    dd6c:	df000204 	addi	fp,sp,8
    dd70:	e13ffe15 	stw	r4,-8(fp)
    dd74:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    dd78:	00000506 	br	dd90 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    dd7c:	e0bfff17 	ldw	r2,-4(fp)
    dd80:	1090000c 	andi	r2,r2,16384
    dd84:	10000226 	beq	r2,zero,dd90 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    dd88:	00bffd44 	movi	r2,-11
    dd8c:	00000b06 	br	ddbc <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    dd90:	e0bffe17 	ldw	r2,-8(fp)
    dd94:	10c00d17 	ldw	r3,52(r2)
    dd98:	e0bffe17 	ldw	r2,-8(fp)
    dd9c:	10800c17 	ldw	r2,48(r2)
    dda0:	18800526 	beq	r3,r2,ddb8 <altera_avalon_jtag_uart_close+0x54>
    dda4:	e0bffe17 	ldw	r2,-8(fp)
    dda8:	10c00917 	ldw	r3,36(r2)
    ddac:	e0bffe17 	ldw	r2,-8(fp)
    ddb0:	10800117 	ldw	r2,4(r2)
    ddb4:	18bff136 	bltu	r3,r2,dd7c <__alt_data_end+0xfffac2fc>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
    ddb8:	0005883a 	mov	r2,zero
}
    ddbc:	e037883a 	mov	sp,fp
    ddc0:	df000017 	ldw	fp,0(sp)
    ddc4:	dec00104 	addi	sp,sp,4
    ddc8:	f800283a 	ret

0000ddcc <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    ddcc:	defffa04 	addi	sp,sp,-24
    ddd0:	df000515 	stw	fp,20(sp)
    ddd4:	df000504 	addi	fp,sp,20
    ddd8:	e13ffd15 	stw	r4,-12(fp)
    dddc:	e17ffe15 	stw	r5,-8(fp)
    dde0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
    dde4:	00bff9c4 	movi	r2,-25
    dde8:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
    ddec:	e0bffe17 	ldw	r2,-8(fp)
    ddf0:	10da8060 	cmpeqi	r3,r2,27137
    ddf4:	1800031e 	bne	r3,zero,de04 <altera_avalon_jtag_uart_ioctl+0x38>
    ddf8:	109a80a0 	cmpeqi	r2,r2,27138
    ddfc:	1000191e 	bne	r2,zero,de64 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
    de00:	00002806 	br	dea4 <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    de04:	e0bffd17 	ldw	r2,-12(fp)
    de08:	10c00117 	ldw	r3,4(r2)
    de0c:	00a00034 	movhi	r2,32768
    de10:	10bfffc4 	addi	r2,r2,-1
    de14:	18801226 	beq	r3,r2,de60 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
    de18:	e0bfff17 	ldw	r2,-4(fp)
    de1c:	10800017 	ldw	r2,0(r2)
    de20:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    de24:	e0bffc17 	ldw	r2,-16(fp)
    de28:	10800090 	cmplti	r2,r2,2
    de2c:	1000061e 	bne	r2,zero,de48 <altera_avalon_jtag_uart_ioctl+0x7c>
    de30:	e0fffc17 	ldw	r3,-16(fp)
    de34:	00a00034 	movhi	r2,32768
    de38:	10bfffc4 	addi	r2,r2,-1
    de3c:	18800226 	beq	r3,r2,de48 <altera_avalon_jtag_uart_ioctl+0x7c>
    de40:	e0bffc17 	ldw	r2,-16(fp)
    de44:	00000206 	br	de50 <altera_avalon_jtag_uart_ioctl+0x84>
    de48:	00a00034 	movhi	r2,32768
    de4c:	10bfff84 	addi	r2,r2,-2
    de50:	e0fffd17 	ldw	r3,-12(fp)
    de54:	18800115 	stw	r2,4(r3)
      rc = 0;
    de58:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    de5c:	00001106 	br	dea4 <altera_avalon_jtag_uart_ioctl+0xd8>
    de60:	00001006 	br	dea4 <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    de64:	e0bffd17 	ldw	r2,-12(fp)
    de68:	10c00117 	ldw	r3,4(r2)
    de6c:	00a00034 	movhi	r2,32768
    de70:	10bfffc4 	addi	r2,r2,-1
    de74:	18800a26 	beq	r3,r2,dea0 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    de78:	e0bffd17 	ldw	r2,-12(fp)
    de7c:	10c00917 	ldw	r3,36(r2)
    de80:	e0bffd17 	ldw	r2,-12(fp)
    de84:	10800117 	ldw	r2,4(r2)
    de88:	1885803a 	cmpltu	r2,r3,r2
    de8c:	10c03fcc 	andi	r3,r2,255
    de90:	e0bfff17 	ldw	r2,-4(fp)
    de94:	10c00015 	stw	r3,0(r2)
      rc = 0;
    de98:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    de9c:	00000006 	br	dea0 <altera_avalon_jtag_uart_ioctl+0xd4>
    dea0:	0001883a 	nop

  default:
    break;
  }

  return rc;
    dea4:	e0bffb17 	ldw	r2,-20(fp)
}
    dea8:	e037883a 	mov	sp,fp
    deac:	df000017 	ldw	fp,0(sp)
    deb0:	dec00104 	addi	sp,sp,4
    deb4:	f800283a 	ret

0000deb8 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    deb8:	defff304 	addi	sp,sp,-52
    debc:	dfc00c15 	stw	ra,48(sp)
    dec0:	df000b15 	stw	fp,44(sp)
    dec4:	df000b04 	addi	fp,sp,44
    dec8:	e13ffc15 	stw	r4,-16(fp)
    decc:	e17ffd15 	stw	r5,-12(fp)
    ded0:	e1bffe15 	stw	r6,-8(fp)
    ded4:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
    ded8:	e0bffd17 	ldw	r2,-12(fp)
    dedc:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    dee0:	00004906 	br	e008 <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    dee4:	e0bffc17 	ldw	r2,-16(fp)
    dee8:	10800a17 	ldw	r2,40(r2)
    deec:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
    def0:	e0bffc17 	ldw	r2,-16(fp)
    def4:	10800b17 	ldw	r2,44(r2)
    def8:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
    defc:	e0fff717 	ldw	r3,-36(fp)
    df00:	e0bff817 	ldw	r2,-32(fp)
    df04:	18800536 	bltu	r3,r2,df1c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    df08:	e0fff717 	ldw	r3,-36(fp)
    df0c:	e0bff817 	ldw	r2,-32(fp)
    df10:	1885c83a 	sub	r2,r3,r2
    df14:	e0bff615 	stw	r2,-40(fp)
    df18:	00000406 	br	df2c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    df1c:	00c20004 	movi	r3,2048
    df20:	e0bff817 	ldw	r2,-32(fp)
    df24:	1885c83a 	sub	r2,r3,r2
    df28:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    df2c:	e0bff617 	ldw	r2,-40(fp)
    df30:	1000011e 	bne	r2,zero,df38 <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
    df34:	00001d06 	br	dfac <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
    df38:	e0fffe17 	ldw	r3,-8(fp)
    df3c:	e0bff617 	ldw	r2,-40(fp)
    df40:	1880022e 	bgeu	r3,r2,df4c <altera_avalon_jtag_uart_read+0x94>
        n = space;
    df44:	e0bffe17 	ldw	r2,-8(fp)
    df48:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    df4c:	e0bff817 	ldw	r2,-32(fp)
    df50:	10800e04 	addi	r2,r2,56
    df54:	e0fffc17 	ldw	r3,-16(fp)
    df58:	1885883a 	add	r2,r3,r2
    df5c:	e13ff517 	ldw	r4,-44(fp)
    df60:	100b883a 	mov	r5,r2
    df64:	e1bff617 	ldw	r6,-40(fp)
    df68:	00058640 	call	5864 <memcpy>
      ptr   += n;
    df6c:	e0fff517 	ldw	r3,-44(fp)
    df70:	e0bff617 	ldw	r2,-40(fp)
    df74:	1885883a 	add	r2,r3,r2
    df78:	e0bff515 	stw	r2,-44(fp)
      space -= n;
    df7c:	e0fffe17 	ldw	r3,-8(fp)
    df80:	e0bff617 	ldw	r2,-40(fp)
    df84:	1885c83a 	sub	r2,r3,r2
    df88:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    df8c:	e0fff817 	ldw	r3,-32(fp)
    df90:	e0bff617 	ldw	r2,-40(fp)
    df94:	1885883a 	add	r2,r3,r2
    df98:	10c1ffcc 	andi	r3,r2,2047
    df9c:	e0bffc17 	ldw	r2,-16(fp)
    dfa0:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    dfa4:	e0bffe17 	ldw	r2,-8(fp)
    dfa8:	00bfce16 	blt	zero,r2,dee4 <__alt_data_end+0xfffac464>

    /* If we read any data then return it */
    if (ptr != buffer)
    dfac:	e0fff517 	ldw	r3,-44(fp)
    dfb0:	e0bffd17 	ldw	r2,-12(fp)
    dfb4:	18800126 	beq	r3,r2,dfbc <altera_avalon_jtag_uart_read+0x104>
      break;
    dfb8:	00001506 	br	e010 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    dfbc:	e0bfff17 	ldw	r2,-4(fp)
    dfc0:	1090000c 	andi	r2,r2,16384
    dfc4:	10000126 	beq	r2,zero,dfcc <altera_avalon_jtag_uart_read+0x114>
      break;
    dfc8:	00001106 	br	e010 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    dfcc:	0001883a 	nop
    dfd0:	e0bffc17 	ldw	r2,-16(fp)
    dfd4:	10c00a17 	ldw	r3,40(r2)
    dfd8:	e0bff717 	ldw	r2,-36(fp)
    dfdc:	1880051e 	bne	r3,r2,dff4 <altera_avalon_jtag_uart_read+0x13c>
    dfe0:	e0bffc17 	ldw	r2,-16(fp)
    dfe4:	10c00917 	ldw	r3,36(r2)
    dfe8:	e0bffc17 	ldw	r2,-16(fp)
    dfec:	10800117 	ldw	r2,4(r2)
    dff0:	18bff736 	bltu	r3,r2,dfd0 <__alt_data_end+0xfffac550>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    dff4:	e0bffc17 	ldw	r2,-16(fp)
    dff8:	10c00a17 	ldw	r3,40(r2)
    dffc:	e0bff717 	ldw	r2,-36(fp)
    e000:	1880011e 	bne	r3,r2,e008 <altera_avalon_jtag_uart_read+0x150>
      break;
    e004:	00000206 	br	e010 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e008:	e0bffe17 	ldw	r2,-8(fp)
    e00c:	00bfb516 	blt	zero,r2,dee4 <__alt_data_end+0xfffac464>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    e010:	e0fff517 	ldw	r3,-44(fp)
    e014:	e0bffd17 	ldw	r2,-12(fp)
    e018:	18801826 	beq	r3,r2,e07c <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e01c:	0005303a 	rdctl	r2,status
    e020:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e024:	e0fffa17 	ldw	r3,-24(fp)
    e028:	00bfff84 	movi	r2,-2
    e02c:	1884703a 	and	r2,r3,r2
    e030:	1001703a 	wrctl	status,r2
  
  return context;
    e034:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    e038:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e03c:	e0bffc17 	ldw	r2,-16(fp)
    e040:	10800817 	ldw	r2,32(r2)
    e044:	10c00054 	ori	r3,r2,1
    e048:	e0bffc17 	ldw	r2,-16(fp)
    e04c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e050:	e0bffc17 	ldw	r2,-16(fp)
    e054:	10800017 	ldw	r2,0(r2)
    e058:	10800104 	addi	r2,r2,4
    e05c:	1007883a 	mov	r3,r2
    e060:	e0bffc17 	ldw	r2,-16(fp)
    e064:	10800817 	ldw	r2,32(r2)
    e068:	18800035 	stwio	r2,0(r3)
    e06c:	e0bff917 	ldw	r2,-28(fp)
    e070:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e074:	e0bffb17 	ldw	r2,-20(fp)
    e078:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    e07c:	e0fff517 	ldw	r3,-44(fp)
    e080:	e0bffd17 	ldw	r2,-12(fp)
    e084:	18800426 	beq	r3,r2,e098 <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
    e088:	e0fff517 	ldw	r3,-44(fp)
    e08c:	e0bffd17 	ldw	r2,-12(fp)
    e090:	1885c83a 	sub	r2,r3,r2
    e094:	00000606 	br	e0b0 <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
    e098:	e0bfff17 	ldw	r2,-4(fp)
    e09c:	1090000c 	andi	r2,r2,16384
    e0a0:	10000226 	beq	r2,zero,e0ac <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
    e0a4:	00bffd44 	movi	r2,-11
    e0a8:	00000106 	br	e0b0 <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
    e0ac:	00bffec4 	movi	r2,-5
}
    e0b0:	e037883a 	mov	sp,fp
    e0b4:	dfc00117 	ldw	ra,4(sp)
    e0b8:	df000017 	ldw	fp,0(sp)
    e0bc:	dec00204 	addi	sp,sp,8
    e0c0:	f800283a 	ret

0000e0c4 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    e0c4:	defff304 	addi	sp,sp,-52
    e0c8:	dfc00c15 	stw	ra,48(sp)
    e0cc:	df000b15 	stw	fp,44(sp)
    e0d0:	df000b04 	addi	fp,sp,44
    e0d4:	e13ffc15 	stw	r4,-16(fp)
    e0d8:	e17ffd15 	stw	r5,-12(fp)
    e0dc:	e1bffe15 	stw	r6,-8(fp)
    e0e0:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    e0e4:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    e0e8:	e0bffd17 	ldw	r2,-12(fp)
    e0ec:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e0f0:	00003806 	br	e1d4 <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    e0f4:	e0bffc17 	ldw	r2,-16(fp)
    e0f8:	10800c17 	ldw	r2,48(r2)
    e0fc:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
    e100:	e0bffc17 	ldw	r2,-16(fp)
    e104:	10800d17 	ldw	r2,52(r2)
    e108:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
    e10c:	e0fff817 	ldw	r3,-32(fp)
    e110:	e0bff517 	ldw	r2,-44(fp)
    e114:	1880062e 	bgeu	r3,r2,e130 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    e118:	e0fff517 	ldw	r3,-44(fp)
    e11c:	e0bff817 	ldw	r2,-32(fp)
    e120:	1885c83a 	sub	r2,r3,r2
    e124:	10bfffc4 	addi	r2,r2,-1
    e128:	e0bff615 	stw	r2,-40(fp)
    e12c:	00000b06 	br	e15c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    e130:	e0bff517 	ldw	r2,-44(fp)
    e134:	10000526 	beq	r2,zero,e14c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    e138:	00c20004 	movi	r3,2048
    e13c:	e0bff817 	ldw	r2,-32(fp)
    e140:	1885c83a 	sub	r2,r3,r2
    e144:	e0bff615 	stw	r2,-40(fp)
    e148:	00000406 	br	e15c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    e14c:	00c1ffc4 	movi	r3,2047
    e150:	e0bff817 	ldw	r2,-32(fp)
    e154:	1885c83a 	sub	r2,r3,r2
    e158:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    e15c:	e0bff617 	ldw	r2,-40(fp)
    e160:	1000011e 	bne	r2,zero,e168 <altera_avalon_jtag_uart_write+0xa4>
        break;
    e164:	00001d06 	br	e1dc <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
    e168:	e0fffe17 	ldw	r3,-8(fp)
    e16c:	e0bff617 	ldw	r2,-40(fp)
    e170:	1880022e 	bgeu	r3,r2,e17c <altera_avalon_jtag_uart_write+0xb8>
        n = count;
    e174:	e0bffe17 	ldw	r2,-8(fp)
    e178:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    e17c:	e0bff817 	ldw	r2,-32(fp)
    e180:	10820e04 	addi	r2,r2,2104
    e184:	e0fffc17 	ldw	r3,-16(fp)
    e188:	1885883a 	add	r2,r3,r2
    e18c:	1009883a 	mov	r4,r2
    e190:	e17ffd17 	ldw	r5,-12(fp)
    e194:	e1bff617 	ldw	r6,-40(fp)
    e198:	00058640 	call	5864 <memcpy>
      ptr   += n;
    e19c:	e0fffd17 	ldw	r3,-12(fp)
    e1a0:	e0bff617 	ldw	r2,-40(fp)
    e1a4:	1885883a 	add	r2,r3,r2
    e1a8:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
    e1ac:	e0fffe17 	ldw	r3,-8(fp)
    e1b0:	e0bff617 	ldw	r2,-40(fp)
    e1b4:	1885c83a 	sub	r2,r3,r2
    e1b8:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e1bc:	e0fff817 	ldw	r3,-32(fp)
    e1c0:	e0bff617 	ldw	r2,-40(fp)
    e1c4:	1885883a 	add	r2,r3,r2
    e1c8:	10c1ffcc 	andi	r3,r2,2047
    e1cc:	e0bffc17 	ldw	r2,-16(fp)
    e1d0:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e1d4:	e0bffe17 	ldw	r2,-8(fp)
    e1d8:	00bfc616 	blt	zero,r2,e0f4 <__alt_data_end+0xfffac674>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e1dc:	0005303a 	rdctl	r2,status
    e1e0:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e1e4:	e0fffa17 	ldw	r3,-24(fp)
    e1e8:	00bfff84 	movi	r2,-2
    e1ec:	1884703a 	and	r2,r3,r2
    e1f0:	1001703a 	wrctl	status,r2
  
  return context;
    e1f4:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    e1f8:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e1fc:	e0bffc17 	ldw	r2,-16(fp)
    e200:	10800817 	ldw	r2,32(r2)
    e204:	10c00094 	ori	r3,r2,2
    e208:	e0bffc17 	ldw	r2,-16(fp)
    e20c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e210:	e0bffc17 	ldw	r2,-16(fp)
    e214:	10800017 	ldw	r2,0(r2)
    e218:	10800104 	addi	r2,r2,4
    e21c:	1007883a 	mov	r3,r2
    e220:	e0bffc17 	ldw	r2,-16(fp)
    e224:	10800817 	ldw	r2,32(r2)
    e228:	18800035 	stwio	r2,0(r3)
    e22c:	e0bff917 	ldw	r2,-28(fp)
    e230:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e234:	e0bffb17 	ldw	r2,-20(fp)
    e238:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    e23c:	e0bffe17 	ldw	r2,-8(fp)
    e240:	0080120e 	bge	zero,r2,e28c <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
    e244:	e0bfff17 	ldw	r2,-4(fp)
    e248:	1090000c 	andi	r2,r2,16384
    e24c:	10000126 	beq	r2,zero,e254 <altera_avalon_jtag_uart_write+0x190>
        break;
    e250:	00001006 	br	e294 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    e254:	0001883a 	nop
    e258:	e0bffc17 	ldw	r2,-16(fp)
    e25c:	10c00d17 	ldw	r3,52(r2)
    e260:	e0bff517 	ldw	r2,-44(fp)
    e264:	1880051e 	bne	r3,r2,e27c <altera_avalon_jtag_uart_write+0x1b8>
    e268:	e0bffc17 	ldw	r2,-16(fp)
    e26c:	10c00917 	ldw	r3,36(r2)
    e270:	e0bffc17 	ldw	r2,-16(fp)
    e274:	10800117 	ldw	r2,4(r2)
    e278:	18bff736 	bltu	r3,r2,e258 <__alt_data_end+0xfffac7d8>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    e27c:	e0bffc17 	ldw	r2,-16(fp)
    e280:	10800917 	ldw	r2,36(r2)
    e284:	10000126 	beq	r2,zero,e28c <altera_avalon_jtag_uart_write+0x1c8>
         break;
    e288:	00000206 	br	e294 <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
    e28c:	e0bffe17 	ldw	r2,-8(fp)
    e290:	00bf9716 	blt	zero,r2,e0f0 <__alt_data_end+0xfffac670>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    e294:	e0fffd17 	ldw	r3,-12(fp)
    e298:	e0bff717 	ldw	r2,-36(fp)
    e29c:	18800426 	beq	r3,r2,e2b0 <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
    e2a0:	e0fffd17 	ldw	r3,-12(fp)
    e2a4:	e0bff717 	ldw	r2,-36(fp)
    e2a8:	1885c83a 	sub	r2,r3,r2
    e2ac:	00000606 	br	e2c8 <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
    e2b0:	e0bfff17 	ldw	r2,-4(fp)
    e2b4:	1090000c 	andi	r2,r2,16384
    e2b8:	10000226 	beq	r2,zero,e2c4 <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
    e2bc:	00bffd44 	movi	r2,-11
    e2c0:	00000106 	br	e2c8 <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    e2c4:	00bffec4 	movi	r2,-5
}
    e2c8:	e037883a 	mov	sp,fp
    e2cc:	dfc00117 	ldw	ra,4(sp)
    e2d0:	df000017 	ldw	fp,0(sp)
    e2d4:	dec00204 	addi	sp,sp,8
    e2d8:	f800283a 	ret

0000e2dc <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    e2dc:	defff504 	addi	sp,sp,-44
    e2e0:	df000a15 	stw	fp,40(sp)
    e2e4:	df000a04 	addi	fp,sp,40
    e2e8:	e13ffc15 	stw	r4,-16(fp)
    e2ec:	e17ffd15 	stw	r5,-12(fp)
    e2f0:	e1bffe15 	stw	r6,-8(fp)
    e2f4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    e2f8:	e03ff615 	stw	zero,-40(fp)
    e2fc:	00800074 	movhi	r2,1
    e300:	108b9704 	addi	r2,r2,11868
    e304:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
    e308:	10003f26 	beq	r2,zero,e408 <alt_alarm_start+0x12c>
  {
    if (alarm)
    e30c:	e0bffc17 	ldw	r2,-16(fp)
    e310:	10003b26 	beq	r2,zero,e400 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
    e314:	e0bffc17 	ldw	r2,-16(fp)
    e318:	e0fffe17 	ldw	r3,-8(fp)
    e31c:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    e320:	e0bffc17 	ldw	r2,-16(fp)
    e324:	e0ffff17 	ldw	r3,-4(fp)
    e328:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e32c:	0005303a 	rdctl	r2,status
    e330:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e334:	e0fff817 	ldw	r3,-32(fp)
    e338:	00bfff84 	movi	r2,-2
    e33c:	1884703a 	and	r2,r3,r2
    e340:	1001703a 	wrctl	status,r2
  
  return context;
    e344:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
    e348:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    e34c:	00800074 	movhi	r2,1
    e350:	108b9804 	addi	r2,r2,11872
    e354:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
    e358:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    e35c:	e0fffd17 	ldw	r3,-12(fp)
    e360:	e0bff617 	ldw	r2,-40(fp)
    e364:	1885883a 	add	r2,r3,r2
    e368:	10c00044 	addi	r3,r2,1
    e36c:	e0bffc17 	ldw	r2,-16(fp)
    e370:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    e374:	e0bffc17 	ldw	r2,-16(fp)
    e378:	10c00217 	ldw	r3,8(r2)
    e37c:	e0bff617 	ldw	r2,-40(fp)
    e380:	1880042e 	bgeu	r3,r2,e394 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
    e384:	e0bffc17 	ldw	r2,-16(fp)
    e388:	00c00044 	movi	r3,1
    e38c:	10c00405 	stb	r3,16(r2)
    e390:	00000206 	br	e39c <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
    e394:	e0bffc17 	ldw	r2,-16(fp)
    e398:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    e39c:	e0fffc17 	ldw	r3,-16(fp)
    e3a0:	00800074 	movhi	r2,1
    e3a4:	1084cf04 	addi	r2,r2,4924
    e3a8:	e0bff915 	stw	r2,-28(fp)
    e3ac:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e3b0:	e0bffa17 	ldw	r2,-24(fp)
    e3b4:	e0fff917 	ldw	r3,-28(fp)
    e3b8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e3bc:	e0bff917 	ldw	r2,-28(fp)
    e3c0:	10c00017 	ldw	r3,0(r2)
    e3c4:	e0bffa17 	ldw	r2,-24(fp)
    e3c8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e3cc:	e0bff917 	ldw	r2,-28(fp)
    e3d0:	10800017 	ldw	r2,0(r2)
    e3d4:	e0fffa17 	ldw	r3,-24(fp)
    e3d8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e3dc:	e0bff917 	ldw	r2,-28(fp)
    e3e0:	e0fffa17 	ldw	r3,-24(fp)
    e3e4:	10c00015 	stw	r3,0(r2)
    e3e8:	e0bff717 	ldw	r2,-36(fp)
    e3ec:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e3f0:	e0bffb17 	ldw	r2,-20(fp)
    e3f4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    e3f8:	0005883a 	mov	r2,zero
    e3fc:	00000306 	br	e40c <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
    e400:	00bffa84 	movi	r2,-22
    e404:	00000106 	br	e40c <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
    e408:	00bfde84 	movi	r2,-134
  }
}
    e40c:	e037883a 	mov	sp,fp
    e410:	df000017 	ldw	fp,0(sp)
    e414:	dec00104 	addi	sp,sp,4
    e418:	f800283a 	ret

0000e41c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    e41c:	deffff04 	addi	sp,sp,-4
    e420:	df000015 	stw	fp,0(sp)
    e424:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    e428:	e037883a 	mov	sp,fp
    e42c:	df000017 	ldw	fp,0(sp)
    e430:	dec00104 	addi	sp,sp,4
    e434:	f800283a 	ret

0000e438 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    e438:	defffe04 	addi	sp,sp,-8
    e43c:	dfc00115 	stw	ra,4(sp)
    e440:	df000015 	stw	fp,0(sp)
    e444:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    e448:	00800074 	movhi	r2,1
    e44c:	1084cc04 	addi	r2,r2,4912
    e450:	10800017 	ldw	r2,0(r2)
    e454:	10000526 	beq	r2,zero,e46c <alt_get_errno+0x34>
    e458:	00800074 	movhi	r2,1
    e45c:	1084cc04 	addi	r2,r2,4912
    e460:	10800017 	ldw	r2,0(r2)
    e464:	103ee83a 	callr	r2
    e468:	00000206 	br	e474 <alt_get_errno+0x3c>
    e46c:	00800074 	movhi	r2,1
    e470:	108b8f04 	addi	r2,r2,11836
}
    e474:	e037883a 	mov	sp,fp
    e478:	dfc00117 	ldw	ra,4(sp)
    e47c:	df000017 	ldw	fp,0(sp)
    e480:	dec00204 	addi	sp,sp,8
    e484:	f800283a 	ret

0000e488 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    e488:	defffa04 	addi	sp,sp,-24
    e48c:	dfc00515 	stw	ra,20(sp)
    e490:	df000415 	stw	fp,16(sp)
    e494:	df000404 	addi	fp,sp,16
    e498:	e13ffe15 	stw	r4,-8(fp)
    e49c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    e4a0:	e0bffe17 	ldw	r2,-8(fp)
    e4a4:	10000326 	beq	r2,zero,e4b4 <alt_dev_llist_insert+0x2c>
    e4a8:	e0bffe17 	ldw	r2,-8(fp)
    e4ac:	10800217 	ldw	r2,8(r2)
    e4b0:	1000061e 	bne	r2,zero,e4cc <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    e4b4:	000e4380 	call	e438 <alt_get_errno>
    e4b8:	1007883a 	mov	r3,r2
    e4bc:	00800584 	movi	r2,22
    e4c0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    e4c4:	00bffa84 	movi	r2,-22
    e4c8:	00001306 	br	e518 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    e4cc:	e0bffe17 	ldw	r2,-8(fp)
    e4d0:	e0ffff17 	ldw	r3,-4(fp)
    e4d4:	e0fffc15 	stw	r3,-16(fp)
    e4d8:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e4dc:	e0bffd17 	ldw	r2,-12(fp)
    e4e0:	e0fffc17 	ldw	r3,-16(fp)
    e4e4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e4e8:	e0bffc17 	ldw	r2,-16(fp)
    e4ec:	10c00017 	ldw	r3,0(r2)
    e4f0:	e0bffd17 	ldw	r2,-12(fp)
    e4f4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e4f8:	e0bffc17 	ldw	r2,-16(fp)
    e4fc:	10800017 	ldw	r2,0(r2)
    e500:	e0fffd17 	ldw	r3,-12(fp)
    e504:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e508:	e0bffc17 	ldw	r2,-16(fp)
    e50c:	e0fffd17 	ldw	r3,-12(fp)
    e510:	10c00015 	stw	r3,0(r2)

  return 0;  
    e514:	0005883a 	mov	r2,zero
}
    e518:	e037883a 	mov	sp,fp
    e51c:	dfc00117 	ldw	ra,4(sp)
    e520:	df000017 	ldw	fp,0(sp)
    e524:	dec00204 	addi	sp,sp,8
    e528:	f800283a 	ret

0000e52c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    e52c:	defffd04 	addi	sp,sp,-12
    e530:	dfc00215 	stw	ra,8(sp)
    e534:	df000115 	stw	fp,4(sp)
    e538:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    e53c:	00800074 	movhi	r2,1
    e540:	10bd4f04 	addi	r2,r2,-2756
    e544:	e0bfff15 	stw	r2,-4(fp)
    e548:	00000606 	br	e564 <_do_ctors+0x38>
        (*ctor) (); 
    e54c:	e0bfff17 	ldw	r2,-4(fp)
    e550:	10800017 	ldw	r2,0(r2)
    e554:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    e558:	e0bfff17 	ldw	r2,-4(fp)
    e55c:	10bfff04 	addi	r2,r2,-4
    e560:	e0bfff15 	stw	r2,-4(fp)
    e564:	e0ffff17 	ldw	r3,-4(fp)
    e568:	00800074 	movhi	r2,1
    e56c:	10bd5004 	addi	r2,r2,-2752
    e570:	18bff62e 	bgeu	r3,r2,e54c <__alt_data_end+0xfffacacc>
        (*ctor) (); 
}
    e574:	e037883a 	mov	sp,fp
    e578:	dfc00117 	ldw	ra,4(sp)
    e57c:	df000017 	ldw	fp,0(sp)
    e580:	dec00204 	addi	sp,sp,8
    e584:	f800283a 	ret

0000e588 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    e588:	defffd04 	addi	sp,sp,-12
    e58c:	dfc00215 	stw	ra,8(sp)
    e590:	df000115 	stw	fp,4(sp)
    e594:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    e598:	00800074 	movhi	r2,1
    e59c:	10bd4f04 	addi	r2,r2,-2756
    e5a0:	e0bfff15 	stw	r2,-4(fp)
    e5a4:	00000606 	br	e5c0 <_do_dtors+0x38>
        (*dtor) (); 
    e5a8:	e0bfff17 	ldw	r2,-4(fp)
    e5ac:	10800017 	ldw	r2,0(r2)
    e5b0:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    e5b4:	e0bfff17 	ldw	r2,-4(fp)
    e5b8:	10bfff04 	addi	r2,r2,-4
    e5bc:	e0bfff15 	stw	r2,-4(fp)
    e5c0:	e0ffff17 	ldw	r3,-4(fp)
    e5c4:	00800074 	movhi	r2,1
    e5c8:	10bd5004 	addi	r2,r2,-2752
    e5cc:	18bff62e 	bgeu	r3,r2,e5a8 <__alt_data_end+0xfffacb28>
        (*dtor) (); 
}
    e5d0:	e037883a 	mov	sp,fp
    e5d4:	dfc00117 	ldw	ra,4(sp)
    e5d8:	df000017 	ldw	fp,0(sp)
    e5dc:	dec00204 	addi	sp,sp,8
    e5e0:	f800283a 	ret

0000e5e4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    e5e4:	deffff04 	addi	sp,sp,-4
    e5e8:	df000015 	stw	fp,0(sp)
    e5ec:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
    e5f0:	e037883a 	mov	sp,fp
    e5f4:	df000017 	ldw	fp,0(sp)
    e5f8:	dec00104 	addi	sp,sp,4
    e5fc:	f800283a 	ret

0000e600 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e600:	defff904 	addi	sp,sp,-28
    e604:	dfc00615 	stw	ra,24(sp)
    e608:	df000515 	stw	fp,20(sp)
    e60c:	df000504 	addi	fp,sp,20
    e610:	e13ffc15 	stw	r4,-16(fp)
    e614:	e17ffd15 	stw	r5,-12(fp)
    e618:	e1bffe15 	stw	r6,-8(fp)
    e61c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    e620:	e0800217 	ldw	r2,8(fp)
    e624:	d8800015 	stw	r2,0(sp)
    e628:	e13ffc17 	ldw	r4,-16(fp)
    e62c:	e17ffd17 	ldw	r5,-12(fp)
    e630:	e1bffe17 	ldw	r6,-8(fp)
    e634:	e1ffff17 	ldw	r7,-4(fp)
    e638:	000e7e00 	call	e7e0 <alt_iic_isr_register>
}  
    e63c:	e037883a 	mov	sp,fp
    e640:	dfc00117 	ldw	ra,4(sp)
    e644:	df000017 	ldw	fp,0(sp)
    e648:	dec00204 	addi	sp,sp,8
    e64c:	f800283a 	ret

0000e650 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    e650:	defff904 	addi	sp,sp,-28
    e654:	df000615 	stw	fp,24(sp)
    e658:	df000604 	addi	fp,sp,24
    e65c:	e13ffe15 	stw	r4,-8(fp)
    e660:	e17fff15 	stw	r5,-4(fp)
    e664:	e0bfff17 	ldw	r2,-4(fp)
    e668:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e66c:	0005303a 	rdctl	r2,status
    e670:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e674:	e0fffb17 	ldw	r3,-20(fp)
    e678:	00bfff84 	movi	r2,-2
    e67c:	1884703a 	and	r2,r3,r2
    e680:	1001703a 	wrctl	status,r2
  
  return context;
    e684:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    e688:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
    e68c:	e0bffa17 	ldw	r2,-24(fp)
    e690:	00c00044 	movi	r3,1
    e694:	1884983a 	sll	r2,r3,r2
    e698:	1007883a 	mov	r3,r2
    e69c:	00800074 	movhi	r2,1
    e6a0:	108b9604 	addi	r2,r2,11864
    e6a4:	10800017 	ldw	r2,0(r2)
    e6a8:	1886b03a 	or	r3,r3,r2
    e6ac:	00800074 	movhi	r2,1
    e6b0:	108b9604 	addi	r2,r2,11864
    e6b4:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    e6b8:	00800074 	movhi	r2,1
    e6bc:	108b9604 	addi	r2,r2,11864
    e6c0:	10800017 	ldw	r2,0(r2)
    e6c4:	100170fa 	wrctl	ienable,r2
    e6c8:	e0bffc17 	ldw	r2,-16(fp)
    e6cc:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e6d0:	e0bffd17 	ldw	r2,-12(fp)
    e6d4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    e6d8:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
    e6dc:	0001883a 	nop
}
    e6e0:	e037883a 	mov	sp,fp
    e6e4:	df000017 	ldw	fp,0(sp)
    e6e8:	dec00104 	addi	sp,sp,4
    e6ec:	f800283a 	ret

0000e6f0 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    e6f0:	defff904 	addi	sp,sp,-28
    e6f4:	df000615 	stw	fp,24(sp)
    e6f8:	df000604 	addi	fp,sp,24
    e6fc:	e13ffe15 	stw	r4,-8(fp)
    e700:	e17fff15 	stw	r5,-4(fp)
    e704:	e0bfff17 	ldw	r2,-4(fp)
    e708:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e70c:	0005303a 	rdctl	r2,status
    e710:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e714:	e0fffb17 	ldw	r3,-20(fp)
    e718:	00bfff84 	movi	r2,-2
    e71c:	1884703a 	and	r2,r3,r2
    e720:	1001703a 	wrctl	status,r2
  
  return context;
    e724:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    e728:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
    e72c:	e0bffa17 	ldw	r2,-24(fp)
    e730:	00c00044 	movi	r3,1
    e734:	1884983a 	sll	r2,r3,r2
    e738:	0084303a 	nor	r2,zero,r2
    e73c:	1007883a 	mov	r3,r2
    e740:	00800074 	movhi	r2,1
    e744:	108b9604 	addi	r2,r2,11864
    e748:	10800017 	ldw	r2,0(r2)
    e74c:	1886703a 	and	r3,r3,r2
    e750:	00800074 	movhi	r2,1
    e754:	108b9604 	addi	r2,r2,11864
    e758:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    e75c:	00800074 	movhi	r2,1
    e760:	108b9604 	addi	r2,r2,11864
    e764:	10800017 	ldw	r2,0(r2)
    e768:	100170fa 	wrctl	ienable,r2
    e76c:	e0bffc17 	ldw	r2,-16(fp)
    e770:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e774:	e0bffd17 	ldw	r2,-12(fp)
    e778:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    e77c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
    e780:	0001883a 	nop
}
    e784:	e037883a 	mov	sp,fp
    e788:	df000017 	ldw	fp,0(sp)
    e78c:	dec00104 	addi	sp,sp,4
    e790:	f800283a 	ret

0000e794 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    e794:	defffc04 	addi	sp,sp,-16
    e798:	df000315 	stw	fp,12(sp)
    e79c:	df000304 	addi	fp,sp,12
    e7a0:	e13ffe15 	stw	r4,-8(fp)
    e7a4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    e7a8:	000530fa 	rdctl	r2,ienable
    e7ac:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
    e7b0:	e0bfff17 	ldw	r2,-4(fp)
    e7b4:	00c00044 	movi	r3,1
    e7b8:	1884983a 	sll	r2,r3,r2
    e7bc:	1007883a 	mov	r3,r2
    e7c0:	e0bffd17 	ldw	r2,-12(fp)
    e7c4:	1884703a 	and	r2,r3,r2
    e7c8:	1004c03a 	cmpne	r2,r2,zero
    e7cc:	10803fcc 	andi	r2,r2,255
}
    e7d0:	e037883a 	mov	sp,fp
    e7d4:	df000017 	ldw	fp,0(sp)
    e7d8:	dec00104 	addi	sp,sp,4
    e7dc:	f800283a 	ret

0000e7e0 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e7e0:	defff504 	addi	sp,sp,-44
    e7e4:	dfc00a15 	stw	ra,40(sp)
    e7e8:	df000915 	stw	fp,36(sp)
    e7ec:	df000904 	addi	fp,sp,36
    e7f0:	e13ffc15 	stw	r4,-16(fp)
    e7f4:	e17ffd15 	stw	r5,-12(fp)
    e7f8:	e1bffe15 	stw	r6,-8(fp)
    e7fc:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
    e800:	00bffa84 	movi	r2,-22
    e804:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
    e808:	e0bffd17 	ldw	r2,-12(fp)
    e80c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    e810:	e0bff817 	ldw	r2,-32(fp)
    e814:	10800808 	cmpgei	r2,r2,32
    e818:	1000271e 	bne	r2,zero,e8b8 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e81c:	0005303a 	rdctl	r2,status
    e820:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e824:	e0fffa17 	ldw	r3,-24(fp)
    e828:	00bfff84 	movi	r2,-2
    e82c:	1884703a 	and	r2,r3,r2
    e830:	1001703a 	wrctl	status,r2
  
  return context;
    e834:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
    e838:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
    e83c:	00800074 	movhi	r2,1
    e840:	108ba404 	addi	r2,r2,11920
    e844:	e0fff817 	ldw	r3,-32(fp)
    e848:	180690fa 	slli	r3,r3,3
    e84c:	10c5883a 	add	r2,r2,r3
    e850:	e0fffe17 	ldw	r3,-8(fp)
    e854:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
    e858:	00800074 	movhi	r2,1
    e85c:	108ba404 	addi	r2,r2,11920
    e860:	e0fff817 	ldw	r3,-32(fp)
    e864:	180690fa 	slli	r3,r3,3
    e868:	10c5883a 	add	r2,r2,r3
    e86c:	10800104 	addi	r2,r2,4
    e870:	e0ffff17 	ldw	r3,-4(fp)
    e874:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    e878:	e0bffe17 	ldw	r2,-8(fp)
    e87c:	10000526 	beq	r2,zero,e894 <alt_iic_isr_register+0xb4>
    e880:	e0bff817 	ldw	r2,-32(fp)
    e884:	e13ffc17 	ldw	r4,-16(fp)
    e888:	100b883a 	mov	r5,r2
    e88c:	000e6500 	call	e650 <alt_ic_irq_enable>
    e890:	00000406 	br	e8a4 <alt_iic_isr_register+0xc4>
    e894:	e0bff817 	ldw	r2,-32(fp)
    e898:	e13ffc17 	ldw	r4,-16(fp)
    e89c:	100b883a 	mov	r5,r2
    e8a0:	000e6f00 	call	e6f0 <alt_ic_irq_disable>
    e8a4:	e0bff715 	stw	r2,-36(fp)
    e8a8:	e0bff917 	ldw	r2,-28(fp)
    e8ac:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e8b0:	e0bffb17 	ldw	r2,-20(fp)
    e8b4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
    e8b8:	e0bff717 	ldw	r2,-36(fp)
}
    e8bc:	e037883a 	mov	sp,fp
    e8c0:	dfc00117 	ldw	ra,4(sp)
    e8c4:	df000017 	ldw	fp,0(sp)
    e8c8:	dec00204 	addi	sp,sp,8
    e8cc:	f800283a 	ret

0000e8d0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    e8d0:	defff804 	addi	sp,sp,-32
    e8d4:	dfc00715 	stw	ra,28(sp)
    e8d8:	df000615 	stw	fp,24(sp)
    e8dc:	dc000515 	stw	r16,20(sp)
    e8e0:	df000604 	addi	fp,sp,24
    e8e4:	e13ffb15 	stw	r4,-20(fp)
    e8e8:	e17ffc15 	stw	r5,-16(fp)
    e8ec:	e1bffd15 	stw	r6,-12(fp)
    e8f0:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
    e8f4:	e13ffc17 	ldw	r4,-16(fp)
    e8f8:	e17ffd17 	ldw	r5,-12(fp)
    e8fc:	e1bffe17 	ldw	r6,-8(fp)
    e900:	000eb6c0 	call	eb6c <open>
    e904:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
    e908:	e0bffa17 	ldw	r2,-24(fp)
    e90c:	10002216 	blt	r2,zero,e998 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
    e910:	04000074 	movhi	r16,1
    e914:	84004904 	addi	r16,r16,292
    e918:	e0bffa17 	ldw	r2,-24(fp)
    e91c:	1009883a 	mov	r4,r2
    e920:	01400304 	movi	r5,12
    e924:	000a5c40 	call	a5c4 <__mulsi3>
    e928:	8085883a 	add	r2,r16,r2
    e92c:	10c00017 	ldw	r3,0(r2)
    e930:	e0bffb17 	ldw	r2,-20(fp)
    e934:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    e938:	04000074 	movhi	r16,1
    e93c:	84004904 	addi	r16,r16,292
    e940:	e0bffa17 	ldw	r2,-24(fp)
    e944:	1009883a 	mov	r4,r2
    e948:	01400304 	movi	r5,12
    e94c:	000a5c40 	call	a5c4 <__mulsi3>
    e950:	8085883a 	add	r2,r16,r2
    e954:	10800104 	addi	r2,r2,4
    e958:	10c00017 	ldw	r3,0(r2)
    e95c:	e0bffb17 	ldw	r2,-20(fp)
    e960:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    e964:	04000074 	movhi	r16,1
    e968:	84004904 	addi	r16,r16,292
    e96c:	e0bffa17 	ldw	r2,-24(fp)
    e970:	1009883a 	mov	r4,r2
    e974:	01400304 	movi	r5,12
    e978:	000a5c40 	call	a5c4 <__mulsi3>
    e97c:	8085883a 	add	r2,r16,r2
    e980:	10800204 	addi	r2,r2,8
    e984:	10c00017 	ldw	r3,0(r2)
    e988:	e0bffb17 	ldw	r2,-20(fp)
    e98c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    e990:	e13ffa17 	ldw	r4,-24(fp)
    e994:	000d55c0 	call	d55c <alt_release_fd>
  }
} 
    e998:	e6ffff04 	addi	sp,fp,-4
    e99c:	dfc00217 	ldw	ra,8(sp)
    e9a0:	df000117 	ldw	fp,4(sp)
    e9a4:	dc000017 	ldw	r16,0(sp)
    e9a8:	dec00304 	addi	sp,sp,12
    e9ac:	f800283a 	ret

0000e9b0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    e9b0:	defffb04 	addi	sp,sp,-20
    e9b4:	dfc00415 	stw	ra,16(sp)
    e9b8:	df000315 	stw	fp,12(sp)
    e9bc:	df000304 	addi	fp,sp,12
    e9c0:	e13ffd15 	stw	r4,-12(fp)
    e9c4:	e17ffe15 	stw	r5,-8(fp)
    e9c8:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    e9cc:	01000074 	movhi	r4,1
    e9d0:	21004c04 	addi	r4,r4,304
    e9d4:	e17ffd17 	ldw	r5,-12(fp)
    e9d8:	01800044 	movi	r6,1
    e9dc:	01c07fc4 	movi	r7,511
    e9e0:	000e8d00 	call	e8d0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    e9e4:	01000074 	movhi	r4,1
    e9e8:	21004904 	addi	r4,r4,292
    e9ec:	e17ffe17 	ldw	r5,-8(fp)
    e9f0:	000d883a 	mov	r6,zero
    e9f4:	01c07fc4 	movi	r7,511
    e9f8:	000e8d00 	call	e8d0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    e9fc:	01000074 	movhi	r4,1
    ea00:	21004f04 	addi	r4,r4,316
    ea04:	e17fff17 	ldw	r5,-4(fp)
    ea08:	01800044 	movi	r6,1
    ea0c:	01c07fc4 	movi	r7,511
    ea10:	000e8d00 	call	e8d0 <alt_open_fd>
}  
    ea14:	e037883a 	mov	sp,fp
    ea18:	dfc00117 	ldw	ra,4(sp)
    ea1c:	df000017 	ldw	fp,0(sp)
    ea20:	dec00204 	addi	sp,sp,8
    ea24:	f800283a 	ret

0000ea28 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    ea28:	defffe04 	addi	sp,sp,-8
    ea2c:	dfc00115 	stw	ra,4(sp)
    ea30:	df000015 	stw	fp,0(sp)
    ea34:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    ea38:	00800074 	movhi	r2,1
    ea3c:	1084cc04 	addi	r2,r2,4912
    ea40:	10800017 	ldw	r2,0(r2)
    ea44:	10000526 	beq	r2,zero,ea5c <alt_get_errno+0x34>
    ea48:	00800074 	movhi	r2,1
    ea4c:	1084cc04 	addi	r2,r2,4912
    ea50:	10800017 	ldw	r2,0(r2)
    ea54:	103ee83a 	callr	r2
    ea58:	00000206 	br	ea64 <alt_get_errno+0x3c>
    ea5c:	00800074 	movhi	r2,1
    ea60:	108b8f04 	addi	r2,r2,11836
}
    ea64:	e037883a 	mov	sp,fp
    ea68:	dfc00117 	ldw	ra,4(sp)
    ea6c:	df000017 	ldw	fp,0(sp)
    ea70:	dec00204 	addi	sp,sp,8
    ea74:	f800283a 	ret

0000ea78 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    ea78:	defffb04 	addi	sp,sp,-20
    ea7c:	dfc00415 	stw	ra,16(sp)
    ea80:	df000315 	stw	fp,12(sp)
    ea84:	dc000215 	stw	r16,8(sp)
    ea88:	df000304 	addi	fp,sp,12
    ea8c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    ea90:	e0bffe17 	ldw	r2,-8(fp)
    ea94:	10800217 	ldw	r2,8(r2)
    ea98:	10d00034 	orhi	r3,r2,16384
    ea9c:	e0bffe17 	ldw	r2,-8(fp)
    eaa0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    eaa4:	e03ffd15 	stw	zero,-12(fp)
    eaa8:	00002306 	br	eb38 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    eaac:	04000074 	movhi	r16,1
    eab0:	84004904 	addi	r16,r16,292
    eab4:	e0bffd17 	ldw	r2,-12(fp)
    eab8:	1009883a 	mov	r4,r2
    eabc:	01400304 	movi	r5,12
    eac0:	000a5c40 	call	a5c4 <__mulsi3>
    eac4:	8085883a 	add	r2,r16,r2
    eac8:	10c00017 	ldw	r3,0(r2)
    eacc:	e0bffe17 	ldw	r2,-8(fp)
    ead0:	10800017 	ldw	r2,0(r2)
    ead4:	1880151e 	bne	r3,r2,eb2c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    ead8:	04000074 	movhi	r16,1
    eadc:	84004904 	addi	r16,r16,292
    eae0:	e0bffd17 	ldw	r2,-12(fp)
    eae4:	1009883a 	mov	r4,r2
    eae8:	01400304 	movi	r5,12
    eaec:	000a5c40 	call	a5c4 <__mulsi3>
    eaf0:	8085883a 	add	r2,r16,r2
    eaf4:	10800204 	addi	r2,r2,8
    eaf8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    eafc:	10000b0e 	bge	r2,zero,eb2c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    eb00:	e13ffd17 	ldw	r4,-12(fp)
    eb04:	01400304 	movi	r5,12
    eb08:	000a5c40 	call	a5c4 <__mulsi3>
    eb0c:	1007883a 	mov	r3,r2
    eb10:	00800074 	movhi	r2,1
    eb14:	10804904 	addi	r2,r2,292
    eb18:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    eb1c:	e0bffe17 	ldw	r2,-8(fp)
    eb20:	18800226 	beq	r3,r2,eb2c <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
    eb24:	00bffcc4 	movi	r2,-13
    eb28:	00000a06 	br	eb54 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    eb2c:	e0bffd17 	ldw	r2,-12(fp)
    eb30:	10800044 	addi	r2,r2,1
    eb34:	e0bffd15 	stw	r2,-12(fp)
    eb38:	00800074 	movhi	r2,1
    eb3c:	1084cb04 	addi	r2,r2,4908
    eb40:	10800017 	ldw	r2,0(r2)
    eb44:	1007883a 	mov	r3,r2
    eb48:	e0bffd17 	ldw	r2,-12(fp)
    eb4c:	18bfd72e 	bgeu	r3,r2,eaac <__alt_data_end+0xfffad02c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    eb50:	0005883a 	mov	r2,zero
}
    eb54:	e6ffff04 	addi	sp,fp,-4
    eb58:	dfc00217 	ldw	ra,8(sp)
    eb5c:	df000117 	ldw	fp,4(sp)
    eb60:	dc000017 	ldw	r16,0(sp)
    eb64:	dec00304 	addi	sp,sp,12
    eb68:	f800283a 	ret

0000eb6c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    eb6c:	defff604 	addi	sp,sp,-40
    eb70:	dfc00915 	stw	ra,36(sp)
    eb74:	df000815 	stw	fp,32(sp)
    eb78:	df000804 	addi	fp,sp,32
    eb7c:	e13ffd15 	stw	r4,-12(fp)
    eb80:	e17ffe15 	stw	r5,-8(fp)
    eb84:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    eb88:	00bfffc4 	movi	r2,-1
    eb8c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
    eb90:	00bffb44 	movi	r2,-19
    eb94:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
    eb98:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    eb9c:	e13ffd17 	ldw	r4,-12(fp)
    eba0:	01400074 	movhi	r5,1
    eba4:	2944c904 	addi	r5,r5,4900
    eba8:	000ee880 	call	ee88 <alt_find_dev>
    ebac:	e0bff815 	stw	r2,-32(fp)
    ebb0:	e0bff817 	ldw	r2,-32(fp)
    ebb4:	1000051e 	bne	r2,zero,ebcc <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    ebb8:	e13ffd17 	ldw	r4,-12(fp)
    ebbc:	000ef180 	call	ef18 <alt_find_file>
    ebc0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
    ebc4:	00800044 	movi	r2,1
    ebc8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    ebcc:	e0bff817 	ldw	r2,-32(fp)
    ebd0:	10002b26 	beq	r2,zero,ec80 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
    ebd4:	e13ff817 	ldw	r4,-32(fp)
    ebd8:	000f02c0 	call	f02c <alt_get_fd>
    ebdc:	e0bff915 	stw	r2,-28(fp)
    ebe0:	e0bff917 	ldw	r2,-28(fp)
    ebe4:	1000030e 	bge	r2,zero,ebf4 <open+0x88>
    {
      status = index;
    ebe8:	e0bff917 	ldw	r2,-28(fp)
    ebec:	e0bffa15 	stw	r2,-24(fp)
    ebf0:	00002506 	br	ec88 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
    ebf4:	e13ff917 	ldw	r4,-28(fp)
    ebf8:	01400304 	movi	r5,12
    ebfc:	000a5c40 	call	a5c4 <__mulsi3>
    ec00:	1007883a 	mov	r3,r2
    ec04:	00800074 	movhi	r2,1
    ec08:	10804904 	addi	r2,r2,292
    ec0c:	1885883a 	add	r2,r3,r2
    ec10:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    ec14:	e0fffe17 	ldw	r3,-8(fp)
    ec18:	00900034 	movhi	r2,16384
    ec1c:	10bfffc4 	addi	r2,r2,-1
    ec20:	1886703a 	and	r3,r3,r2
    ec24:	e0bffc17 	ldw	r2,-16(fp)
    ec28:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    ec2c:	e0bffb17 	ldw	r2,-20(fp)
    ec30:	1000051e 	bne	r2,zero,ec48 <open+0xdc>
    ec34:	e13ffc17 	ldw	r4,-16(fp)
    ec38:	000ea780 	call	ea78 <alt_file_locked>
    ec3c:	e0bffa15 	stw	r2,-24(fp)
    ec40:	e0bffa17 	ldw	r2,-24(fp)
    ec44:	10001016 	blt	r2,zero,ec88 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    ec48:	e0bff817 	ldw	r2,-32(fp)
    ec4c:	10800317 	ldw	r2,12(r2)
    ec50:	10000826 	beq	r2,zero,ec74 <open+0x108>
    ec54:	e0bff817 	ldw	r2,-32(fp)
    ec58:	10800317 	ldw	r2,12(r2)
    ec5c:	e13ffc17 	ldw	r4,-16(fp)
    ec60:	e17ffd17 	ldw	r5,-12(fp)
    ec64:	e1bffe17 	ldw	r6,-8(fp)
    ec68:	e1ffff17 	ldw	r7,-4(fp)
    ec6c:	103ee83a 	callr	r2
    ec70:	00000106 	br	ec78 <open+0x10c>
    ec74:	0005883a 	mov	r2,zero
    ec78:	e0bffa15 	stw	r2,-24(fp)
    ec7c:	00000206 	br	ec88 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
    ec80:	00bffb44 	movi	r2,-19
    ec84:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    ec88:	e0bffa17 	ldw	r2,-24(fp)
    ec8c:	1000090e 	bge	r2,zero,ecb4 <open+0x148>
  {
    alt_release_fd (index);  
    ec90:	e13ff917 	ldw	r4,-28(fp)
    ec94:	000d55c0 	call	d55c <alt_release_fd>
    ALT_ERRNO = -status;
    ec98:	000ea280 	call	ea28 <alt_get_errno>
    ec9c:	1007883a 	mov	r3,r2
    eca0:	e0bffa17 	ldw	r2,-24(fp)
    eca4:	0085c83a 	sub	r2,zero,r2
    eca8:	18800015 	stw	r2,0(r3)
    return -1;
    ecac:	00bfffc4 	movi	r2,-1
    ecb0:	00000106 	br	ecb8 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
    ecb4:	e0bff917 	ldw	r2,-28(fp)
}
    ecb8:	e037883a 	mov	sp,fp
    ecbc:	dfc00117 	ldw	ra,4(sp)
    ecc0:	df000017 	ldw	fp,0(sp)
    ecc4:	dec00204 	addi	sp,sp,8
    ecc8:	f800283a 	ret

0000eccc <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    eccc:	defffa04 	addi	sp,sp,-24
    ecd0:	df000515 	stw	fp,20(sp)
    ecd4:	df000504 	addi	fp,sp,20
    ecd8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ecdc:	0005303a 	rdctl	r2,status
    ece0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ece4:	e0fffc17 	ldw	r3,-16(fp)
    ece8:	00bfff84 	movi	r2,-2
    ecec:	1884703a 	and	r2,r3,r2
    ecf0:	1001703a 	wrctl	status,r2
  
  return context;
    ecf4:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    ecf8:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
    ecfc:	e0bfff17 	ldw	r2,-4(fp)
    ed00:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    ed04:	e0bffd17 	ldw	r2,-12(fp)
    ed08:	10800017 	ldw	r2,0(r2)
    ed0c:	e0fffd17 	ldw	r3,-12(fp)
    ed10:	18c00117 	ldw	r3,4(r3)
    ed14:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    ed18:	e0bffd17 	ldw	r2,-12(fp)
    ed1c:	10800117 	ldw	r2,4(r2)
    ed20:	e0fffd17 	ldw	r3,-12(fp)
    ed24:	18c00017 	ldw	r3,0(r3)
    ed28:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    ed2c:	e0bffd17 	ldw	r2,-12(fp)
    ed30:	e0fffd17 	ldw	r3,-12(fp)
    ed34:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    ed38:	e0bffd17 	ldw	r2,-12(fp)
    ed3c:	e0fffd17 	ldw	r3,-12(fp)
    ed40:	10c00015 	stw	r3,0(r2)
    ed44:	e0bffb17 	ldw	r2,-20(fp)
    ed48:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ed4c:	e0bffe17 	ldw	r2,-8(fp)
    ed50:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    ed54:	e037883a 	mov	sp,fp
    ed58:	df000017 	ldw	fp,0(sp)
    ed5c:	dec00104 	addi	sp,sp,4
    ed60:	f800283a 	ret

0000ed64 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    ed64:	defffb04 	addi	sp,sp,-20
    ed68:	dfc00415 	stw	ra,16(sp)
    ed6c:	df000315 	stw	fp,12(sp)
    ed70:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    ed74:	d0a00e17 	ldw	r2,-32712(gp)
    ed78:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    ed7c:	d0a6d717 	ldw	r2,-25764(gp)
    ed80:	10800044 	addi	r2,r2,1
    ed84:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    ed88:	00002e06 	br	ee44 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    ed8c:	e0bffd17 	ldw	r2,-12(fp)
    ed90:	10800017 	ldw	r2,0(r2)
    ed94:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    ed98:	e0bffd17 	ldw	r2,-12(fp)
    ed9c:	10800403 	ldbu	r2,16(r2)
    eda0:	10803fcc 	andi	r2,r2,255
    eda4:	10000426 	beq	r2,zero,edb8 <alt_tick+0x54>
    eda8:	d0a6d717 	ldw	r2,-25764(gp)
    edac:	1000021e 	bne	r2,zero,edb8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
    edb0:	e0bffd17 	ldw	r2,-12(fp)
    edb4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    edb8:	e0bffd17 	ldw	r2,-12(fp)
    edbc:	10800217 	ldw	r2,8(r2)
    edc0:	d0e6d717 	ldw	r3,-25764(gp)
    edc4:	18801d36 	bltu	r3,r2,ee3c <alt_tick+0xd8>
    edc8:	e0bffd17 	ldw	r2,-12(fp)
    edcc:	10800403 	ldbu	r2,16(r2)
    edd0:	10803fcc 	andi	r2,r2,255
    edd4:	1000191e 	bne	r2,zero,ee3c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    edd8:	e0bffd17 	ldw	r2,-12(fp)
    eddc:	10800317 	ldw	r2,12(r2)
    ede0:	e0fffd17 	ldw	r3,-12(fp)
    ede4:	18c00517 	ldw	r3,20(r3)
    ede8:	1809883a 	mov	r4,r3
    edec:	103ee83a 	callr	r2
    edf0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    edf4:	e0bfff17 	ldw	r2,-4(fp)
    edf8:	1000031e 	bne	r2,zero,ee08 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    edfc:	e13ffd17 	ldw	r4,-12(fp)
    ee00:	000eccc0 	call	eccc <alt_alarm_stop>
    ee04:	00000d06 	br	ee3c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    ee08:	e0bffd17 	ldw	r2,-12(fp)
    ee0c:	10c00217 	ldw	r3,8(r2)
    ee10:	e0bfff17 	ldw	r2,-4(fp)
    ee14:	1887883a 	add	r3,r3,r2
    ee18:	e0bffd17 	ldw	r2,-12(fp)
    ee1c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    ee20:	e0bffd17 	ldw	r2,-12(fp)
    ee24:	10c00217 	ldw	r3,8(r2)
    ee28:	d0a6d717 	ldw	r2,-25764(gp)
    ee2c:	1880032e 	bgeu	r3,r2,ee3c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    ee30:	e0bffd17 	ldw	r2,-12(fp)
    ee34:	00c00044 	movi	r3,1
    ee38:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    ee3c:	e0bffe17 	ldw	r2,-8(fp)
    ee40:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    ee44:	e0fffd17 	ldw	r3,-12(fp)
    ee48:	d0a00e04 	addi	r2,gp,-32712
    ee4c:	18bfcf1e 	bne	r3,r2,ed8c <__alt_data_end+0xfffad30c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    ee50:	0001883a 	nop
}
    ee54:	e037883a 	mov	sp,fp
    ee58:	dfc00117 	ldw	ra,4(sp)
    ee5c:	df000017 	ldw	fp,0(sp)
    ee60:	dec00204 	addi	sp,sp,8
    ee64:	f800283a 	ret

0000ee68 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    ee68:	deffff04 	addi	sp,sp,-4
    ee6c:	df000015 	stw	fp,0(sp)
    ee70:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
    ee74:	000170fa 	wrctl	ienable,zero
}
    ee78:	e037883a 	mov	sp,fp
    ee7c:	df000017 	ldw	fp,0(sp)
    ee80:	dec00104 	addi	sp,sp,4
    ee84:	f800283a 	ret

0000ee88 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    ee88:	defffa04 	addi	sp,sp,-24
    ee8c:	dfc00515 	stw	ra,20(sp)
    ee90:	df000415 	stw	fp,16(sp)
    ee94:	df000404 	addi	fp,sp,16
    ee98:	e13ffe15 	stw	r4,-8(fp)
    ee9c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
    eea0:	e0bfff17 	ldw	r2,-4(fp)
    eea4:	10800017 	ldw	r2,0(r2)
    eea8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    eeac:	e13ffe17 	ldw	r4,-8(fp)
    eeb0:	0006d5c0 	call	6d5c <strlen>
    eeb4:	10800044 	addi	r2,r2,1
    eeb8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    eebc:	00000d06 	br	eef4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    eec0:	e0bffc17 	ldw	r2,-16(fp)
    eec4:	10c00217 	ldw	r3,8(r2)
    eec8:	e0bffd17 	ldw	r2,-12(fp)
    eecc:	1809883a 	mov	r4,r3
    eed0:	e17ffe17 	ldw	r5,-8(fp)
    eed4:	100d883a 	mov	r6,r2
    eed8:	000f1e80 	call	f1e8 <memcmp>
    eedc:	1000021e 	bne	r2,zero,eee8 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    eee0:	e0bffc17 	ldw	r2,-16(fp)
    eee4:	00000706 	br	ef04 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    eee8:	e0bffc17 	ldw	r2,-16(fp)
    eeec:	10800017 	ldw	r2,0(r2)
    eef0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    eef4:	e0fffc17 	ldw	r3,-16(fp)
    eef8:	e0bfff17 	ldw	r2,-4(fp)
    eefc:	18bff01e 	bne	r3,r2,eec0 <__alt_data_end+0xfffad440>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
    ef00:	0005883a 	mov	r2,zero
}
    ef04:	e037883a 	mov	sp,fp
    ef08:	dfc00117 	ldw	ra,4(sp)
    ef0c:	df000017 	ldw	fp,0(sp)
    ef10:	dec00204 	addi	sp,sp,8
    ef14:	f800283a 	ret

0000ef18 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    ef18:	defffb04 	addi	sp,sp,-20
    ef1c:	dfc00415 	stw	ra,16(sp)
    ef20:	df000315 	stw	fp,12(sp)
    ef24:	df000304 	addi	fp,sp,12
    ef28:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    ef2c:	00800074 	movhi	r2,1
    ef30:	1084c704 	addi	r2,r2,4892
    ef34:	10800017 	ldw	r2,0(r2)
    ef38:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    ef3c:	00003106 	br	f004 <alt_find_file+0xec>
  {
    len = strlen(next->name);
    ef40:	e0bffd17 	ldw	r2,-12(fp)
    ef44:	10800217 	ldw	r2,8(r2)
    ef48:	1009883a 	mov	r4,r2
    ef4c:	0006d5c0 	call	6d5c <strlen>
    ef50:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
    ef54:	e0bffd17 	ldw	r2,-12(fp)
    ef58:	10c00217 	ldw	r3,8(r2)
    ef5c:	e0bffe17 	ldw	r2,-8(fp)
    ef60:	10bfffc4 	addi	r2,r2,-1
    ef64:	1885883a 	add	r2,r3,r2
    ef68:	10800003 	ldbu	r2,0(r2)
    ef6c:	10803fcc 	andi	r2,r2,255
    ef70:	1080201c 	xori	r2,r2,128
    ef74:	10bfe004 	addi	r2,r2,-128
    ef78:	10800bd8 	cmpnei	r2,r2,47
    ef7c:	1000031e 	bne	r2,zero,ef8c <alt_find_file+0x74>
    {
      len -= 1;
    ef80:	e0bffe17 	ldw	r2,-8(fp)
    ef84:	10bfffc4 	addi	r2,r2,-1
    ef88:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    ef8c:	e0bffe17 	ldw	r2,-8(fp)
    ef90:	e0ffff17 	ldw	r3,-4(fp)
    ef94:	1885883a 	add	r2,r3,r2
    ef98:	10800003 	ldbu	r2,0(r2)
    ef9c:	10803fcc 	andi	r2,r2,255
    efa0:	1080201c 	xori	r2,r2,128
    efa4:	10bfe004 	addi	r2,r2,-128
    efa8:	10800be0 	cmpeqi	r2,r2,47
    efac:	1000081e 	bne	r2,zero,efd0 <alt_find_file+0xb8>
    efb0:	e0bffe17 	ldw	r2,-8(fp)
    efb4:	e0ffff17 	ldw	r3,-4(fp)
    efb8:	1885883a 	add	r2,r3,r2
    efbc:	10800003 	ldbu	r2,0(r2)
    efc0:	10803fcc 	andi	r2,r2,255
    efc4:	1080201c 	xori	r2,r2,128
    efc8:	10bfe004 	addi	r2,r2,-128
    efcc:	10000a1e 	bne	r2,zero,eff8 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    efd0:	e0bffd17 	ldw	r2,-12(fp)
    efd4:	10c00217 	ldw	r3,8(r2)
    efd8:	e0bffe17 	ldw	r2,-8(fp)
    efdc:	1809883a 	mov	r4,r3
    efe0:	e17fff17 	ldw	r5,-4(fp)
    efe4:	100d883a 	mov	r6,r2
    efe8:	000f1e80 	call	f1e8 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    efec:	1000021e 	bne	r2,zero,eff8 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
    eff0:	e0bffd17 	ldw	r2,-12(fp)
    eff4:	00000806 	br	f018 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
    eff8:	e0bffd17 	ldw	r2,-12(fp)
    effc:	10800017 	ldw	r2,0(r2)
    f000:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    f004:	e0fffd17 	ldw	r3,-12(fp)
    f008:	00800074 	movhi	r2,1
    f00c:	1084c704 	addi	r2,r2,4892
    f010:	18bfcb1e 	bne	r3,r2,ef40 <__alt_data_end+0xfffad4c0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
    f014:	0005883a 	mov	r2,zero
}
    f018:	e037883a 	mov	sp,fp
    f01c:	dfc00117 	ldw	ra,4(sp)
    f020:	df000017 	ldw	fp,0(sp)
    f024:	dec00204 	addi	sp,sp,8
    f028:	f800283a 	ret

0000f02c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    f02c:	defffa04 	addi	sp,sp,-24
    f030:	dfc00515 	stw	ra,20(sp)
    f034:	df000415 	stw	fp,16(sp)
    f038:	dc000315 	stw	r16,12(sp)
    f03c:	df000404 	addi	fp,sp,16
    f040:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
    f044:	00bffa04 	movi	r2,-24
    f048:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    f04c:	e03ffc15 	stw	zero,-16(fp)
    f050:	00002106 	br	f0d8 <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
    f054:	04000074 	movhi	r16,1
    f058:	84004904 	addi	r16,r16,292
    f05c:	e0bffc17 	ldw	r2,-16(fp)
    f060:	1009883a 	mov	r4,r2
    f064:	01400304 	movi	r5,12
    f068:	000a5c40 	call	a5c4 <__mulsi3>
    f06c:	8085883a 	add	r2,r16,r2
    f070:	10800017 	ldw	r2,0(r2)
    f074:	1000151e 	bne	r2,zero,f0cc <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
    f078:	04000074 	movhi	r16,1
    f07c:	84004904 	addi	r16,r16,292
    f080:	e0bffc17 	ldw	r2,-16(fp)
    f084:	1009883a 	mov	r4,r2
    f088:	01400304 	movi	r5,12
    f08c:	000a5c40 	call	a5c4 <__mulsi3>
    f090:	8085883a 	add	r2,r16,r2
    f094:	e0fffe17 	ldw	r3,-8(fp)
    f098:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
    f09c:	00800074 	movhi	r2,1
    f0a0:	1084cb04 	addi	r2,r2,4908
    f0a4:	10c00017 	ldw	r3,0(r2)
    f0a8:	e0bffc17 	ldw	r2,-16(fp)
    f0ac:	1880040e 	bge	r3,r2,f0c0 <alt_get_fd+0x94>
      {
        alt_max_fd = i;
    f0b0:	00800074 	movhi	r2,1
    f0b4:	1084cb04 	addi	r2,r2,4908
    f0b8:	e0fffc17 	ldw	r3,-16(fp)
    f0bc:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
    f0c0:	e0bffc17 	ldw	r2,-16(fp)
    f0c4:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
    f0c8:	00000606 	br	f0e4 <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    f0cc:	e0bffc17 	ldw	r2,-16(fp)
    f0d0:	10800044 	addi	r2,r2,1
    f0d4:	e0bffc15 	stw	r2,-16(fp)
    f0d8:	e0bffc17 	ldw	r2,-16(fp)
    f0dc:	10800810 	cmplti	r2,r2,32
    f0e0:	103fdc1e 	bne	r2,zero,f054 <__alt_data_end+0xfffad5d4>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
    f0e4:	e0bffd17 	ldw	r2,-12(fp)
}
    f0e8:	e6ffff04 	addi	sp,fp,-4
    f0ec:	dfc00217 	ldw	ra,8(sp)
    f0f0:	df000117 	ldw	fp,4(sp)
    f0f4:	dc000017 	ldw	r16,0(sp)
    f0f8:	dec00304 	addi	sp,sp,12
    f0fc:	f800283a 	ret

0000f100 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
    f100:	defffe04 	addi	sp,sp,-8
    f104:	df000115 	stw	fp,4(sp)
    f108:	df000104 	addi	fp,sp,4
    f10c:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
    f110:	e0bfff17 	ldw	r2,-4(fp)
    f114:	10bffe84 	addi	r2,r2,-6
    f118:	10c00428 	cmpgeui	r3,r2,16
    f11c:	18001a1e 	bne	r3,zero,f188 <alt_exception_cause_generated_bad_addr+0x88>
    f120:	100690ba 	slli	r3,r2,2
    f124:	00800074 	movhi	r2,1
    f128:	10bc4e04 	addi	r2,r2,-3784
    f12c:	1885883a 	add	r2,r3,r2
    f130:	10800017 	ldw	r2,0(r2)
    f134:	1000683a 	jmp	r2
    f138:	0000f178 	rdprs	zero,zero,965
    f13c:	0000f178 	rdprs	zero,zero,965
    f140:	0000f188 	cmpgei	zero,zero,966
    f144:	0000f188 	cmpgei	zero,zero,966
    f148:	0000f188 	cmpgei	zero,zero,966
    f14c:	0000f178 	rdprs	zero,zero,965
    f150:	0000f180 	call	f18 <___vfprintf_internal_r+0x164>
    f154:	0000f188 	cmpgei	zero,zero,966
    f158:	0000f178 	rdprs	zero,zero,965
    f15c:	0000f178 	rdprs	zero,zero,965
    f160:	0000f188 	cmpgei	zero,zero,966
    f164:	0000f178 	rdprs	zero,zero,965
    f168:	0000f180 	call	f18 <___vfprintf_internal_r+0x164>
    f16c:	0000f188 	cmpgei	zero,zero,966
    f170:	0000f188 	cmpgei	zero,zero,966
    f174:	0000f178 	rdprs	zero,zero,965
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
    f178:	00800044 	movi	r2,1
    f17c:	00000306 	br	f18c <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
    f180:	0005883a 	mov	r2,zero
    f184:	00000106 	br	f18c <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
    f188:	0005883a 	mov	r2,zero
  }
}
    f18c:	e037883a 	mov	sp,fp
    f190:	df000017 	ldw	fp,0(sp)
    f194:	dec00104 	addi	sp,sp,4
    f198:	f800283a 	ret

0000f19c <atexit>:
    f19c:	200b883a 	mov	r5,r4
    f1a0:	000d883a 	mov	r6,zero
    f1a4:	0009883a 	mov	r4,zero
    f1a8:	000f883a 	mov	r7,zero
    f1ac:	000f2641 	jmpi	f264 <__register_exitproc>

0000f1b0 <exit>:
    f1b0:	defffe04 	addi	sp,sp,-8
    f1b4:	000b883a 	mov	r5,zero
    f1b8:	dc000015 	stw	r16,0(sp)
    f1bc:	dfc00115 	stw	ra,4(sp)
    f1c0:	2021883a 	mov	r16,r4
    f1c4:	000f3780 	call	f378 <__call_exitprocs>
    f1c8:	00800074 	movhi	r2,1
    f1cc:	1084c304 	addi	r2,r2,4876
    f1d0:	11000017 	ldw	r4,0(r2)
    f1d4:	20800f17 	ldw	r2,60(r4)
    f1d8:	10000126 	beq	r2,zero,f1e0 <exit+0x30>
    f1dc:	103ee83a 	callr	r2
    f1e0:	8009883a 	mov	r4,r16
    f1e4:	000f50c0 	call	f50c <_exit>

0000f1e8 <memcmp>:
    f1e8:	01c000c4 	movi	r7,3
    f1ec:	3980192e 	bgeu	r7,r6,f254 <memcmp+0x6c>
    f1f0:	2144b03a 	or	r2,r4,r5
    f1f4:	11c4703a 	and	r2,r2,r7
    f1f8:	10000f26 	beq	r2,zero,f238 <memcmp+0x50>
    f1fc:	20800003 	ldbu	r2,0(r4)
    f200:	28c00003 	ldbu	r3,0(r5)
    f204:	10c0151e 	bne	r2,r3,f25c <memcmp+0x74>
    f208:	31bfff84 	addi	r6,r6,-2
    f20c:	01ffffc4 	movi	r7,-1
    f210:	00000406 	br	f224 <memcmp+0x3c>
    f214:	20800003 	ldbu	r2,0(r4)
    f218:	28c00003 	ldbu	r3,0(r5)
    f21c:	31bfffc4 	addi	r6,r6,-1
    f220:	10c00e1e 	bne	r2,r3,f25c <memcmp+0x74>
    f224:	21000044 	addi	r4,r4,1
    f228:	29400044 	addi	r5,r5,1
    f22c:	31fff91e 	bne	r6,r7,f214 <__alt_data_end+0xfffad794>
    f230:	0005883a 	mov	r2,zero
    f234:	f800283a 	ret
    f238:	20c00017 	ldw	r3,0(r4)
    f23c:	28800017 	ldw	r2,0(r5)
    f240:	1880041e 	bne	r3,r2,f254 <memcmp+0x6c>
    f244:	31bfff04 	addi	r6,r6,-4
    f248:	21000104 	addi	r4,r4,4
    f24c:	29400104 	addi	r5,r5,4
    f250:	39bff936 	bltu	r7,r6,f238 <__alt_data_end+0xfffad7b8>
    f254:	303fe91e 	bne	r6,zero,f1fc <__alt_data_end+0xfffad77c>
    f258:	003ff506 	br	f230 <__alt_data_end+0xfffad7b0>
    f25c:	10c5c83a 	sub	r2,r2,r3
    f260:	f800283a 	ret

0000f264 <__register_exitproc>:
    f264:	00800074 	movhi	r2,1
    f268:	defffa04 	addi	sp,sp,-24
    f26c:	1084c304 	addi	r2,r2,4876
    f270:	dc000315 	stw	r16,12(sp)
    f274:	14000017 	ldw	r16,0(r2)
    f278:	dc400415 	stw	r17,16(sp)
    f27c:	dfc00515 	stw	ra,20(sp)
    f280:	80805217 	ldw	r2,328(r16)
    f284:	2023883a 	mov	r17,r4
    f288:	10003626 	beq	r2,zero,f364 <__register_exitproc+0x100>
    f28c:	10c00117 	ldw	r3,4(r2)
    f290:	010007c4 	movi	r4,31
    f294:	20c00e16 	blt	r4,r3,f2d0 <__register_exitproc+0x6c>
    f298:	1a400044 	addi	r9,r3,1
    f29c:	8800211e 	bne	r17,zero,f324 <__register_exitproc+0xc0>
    f2a0:	18c00084 	addi	r3,r3,2
    f2a4:	18c7883a 	add	r3,r3,r3
    f2a8:	18c7883a 	add	r3,r3,r3
    f2ac:	12400115 	stw	r9,4(r2)
    f2b0:	10c7883a 	add	r3,r2,r3
    f2b4:	19400015 	stw	r5,0(r3)
    f2b8:	0005883a 	mov	r2,zero
    f2bc:	dfc00517 	ldw	ra,20(sp)
    f2c0:	dc400417 	ldw	r17,16(sp)
    f2c4:	dc000317 	ldw	r16,12(sp)
    f2c8:	dec00604 	addi	sp,sp,24
    f2cc:	f800283a 	ret
    f2d0:	00800034 	movhi	r2,0
    f2d4:	10814a04 	addi	r2,r2,1320
    f2d8:	10002526 	beq	r2,zero,f370 <__register_exitproc+0x10c>
    f2dc:	01006404 	movi	r4,400
    f2e0:	d9400015 	stw	r5,0(sp)
    f2e4:	d9800115 	stw	r6,4(sp)
    f2e8:	d9c00215 	stw	r7,8(sp)
    f2ec:	00005280 	call	528 <malloc>
    f2f0:	d9400017 	ldw	r5,0(sp)
    f2f4:	d9800117 	ldw	r6,4(sp)
    f2f8:	d9c00217 	ldw	r7,8(sp)
    f2fc:	10001c26 	beq	r2,zero,f370 <__register_exitproc+0x10c>
    f300:	80c05217 	ldw	r3,328(r16)
    f304:	10000115 	stw	zero,4(r2)
    f308:	02400044 	movi	r9,1
    f30c:	10c00015 	stw	r3,0(r2)
    f310:	80805215 	stw	r2,328(r16)
    f314:	10006215 	stw	zero,392(r2)
    f318:	10006315 	stw	zero,396(r2)
    f31c:	0007883a 	mov	r3,zero
    f320:	883fdf26 	beq	r17,zero,f2a0 <__alt_data_end+0xfffad820>
    f324:	18d1883a 	add	r8,r3,r3
    f328:	4211883a 	add	r8,r8,r8
    f32c:	1211883a 	add	r8,r2,r8
    f330:	41802215 	stw	r6,136(r8)
    f334:	01000044 	movi	r4,1
    f338:	11806217 	ldw	r6,392(r2)
    f33c:	20c8983a 	sll	r4,r4,r3
    f340:	310cb03a 	or	r6,r6,r4
    f344:	11806215 	stw	r6,392(r2)
    f348:	41c04215 	stw	r7,264(r8)
    f34c:	01800084 	movi	r6,2
    f350:	89bfd31e 	bne	r17,r6,f2a0 <__alt_data_end+0xfffad820>
    f354:	11806317 	ldw	r6,396(r2)
    f358:	3108b03a 	or	r4,r6,r4
    f35c:	11006315 	stw	r4,396(r2)
    f360:	003fcf06 	br	f2a0 <__alt_data_end+0xfffad820>
    f364:	80805304 	addi	r2,r16,332
    f368:	80805215 	stw	r2,328(r16)
    f36c:	003fc706 	br	f28c <__alt_data_end+0xfffad80c>
    f370:	00bfffc4 	movi	r2,-1
    f374:	003fd106 	br	f2bc <__alt_data_end+0xfffad83c>

0000f378 <__call_exitprocs>:
    f378:	00800074 	movhi	r2,1
    f37c:	1084c304 	addi	r2,r2,4876
    f380:	10800017 	ldw	r2,0(r2)
    f384:	defff404 	addi	sp,sp,-48
    f388:	dd800815 	stw	r22,32(sp)
    f38c:	d8800015 	stw	r2,0(sp)
    f390:	10805204 	addi	r2,r2,328
    f394:	dd000615 	stw	r20,24(sp)
    f398:	dc800415 	stw	r18,16(sp)
    f39c:	dfc00b15 	stw	ra,44(sp)
    f3a0:	df000a15 	stw	fp,40(sp)
    f3a4:	ddc00915 	stw	r23,36(sp)
    f3a8:	dd400715 	stw	r21,28(sp)
    f3ac:	dcc00515 	stw	r19,20(sp)
    f3b0:	dc400315 	stw	r17,12(sp)
    f3b4:	dc000215 	stw	r16,8(sp)
    f3b8:	2025883a 	mov	r18,r4
    f3bc:	2829883a 	mov	r20,r5
    f3c0:	d8800115 	stw	r2,4(sp)
    f3c4:	05bfffc4 	movi	r22,-1
    f3c8:	d8800017 	ldw	r2,0(sp)
    f3cc:	14c05217 	ldw	r19,328(r2)
    f3d0:	98001d26 	beq	r19,zero,f448 <__call_exitprocs+0xd0>
    f3d4:	dd400117 	ldw	r21,4(sp)
    f3d8:	98800117 	ldw	r2,4(r19)
    f3dc:	173fffc4 	addi	fp,r2,-1
    f3e0:	e0000d16 	blt	fp,zero,f418 <__call_exitprocs+0xa0>
    f3e4:	14000044 	addi	r16,r2,1
    f3e8:	8421883a 	add	r16,r16,r16
    f3ec:	8421883a 	add	r16,r16,r16
    f3f0:	84402004 	addi	r17,r16,128
    f3f4:	9c63883a 	add	r17,r19,r17
    f3f8:	9c21883a 	add	r16,r19,r16
    f3fc:	a0001e26 	beq	r20,zero,f478 <__call_exitprocs+0x100>
    f400:	80804017 	ldw	r2,256(r16)
    f404:	15001c26 	beq	r2,r20,f478 <__call_exitprocs+0x100>
    f408:	e73fffc4 	addi	fp,fp,-1
    f40c:	843fff04 	addi	r16,r16,-4
    f410:	8c7fff04 	addi	r17,r17,-4
    f414:	e5bff91e 	bne	fp,r22,f3fc <__alt_data_end+0xfffad97c>
    f418:	00800034 	movhi	r2,0
    f41c:	10814f04 	addi	r2,r2,1340
    f420:	10000926 	beq	r2,zero,f448 <__call_exitprocs+0xd0>
    f424:	98800117 	ldw	r2,4(r19)
    f428:	1000311e 	bne	r2,zero,f4f0 <__call_exitprocs+0x178>
    f42c:	98800017 	ldw	r2,0(r19)
    f430:	10003426 	beq	r2,zero,f504 <__call_exitprocs+0x18c>
    f434:	9809883a 	mov	r4,r19
    f438:	a8800015 	stw	r2,0(r21)
    f43c:	000053c0 	call	53c <free>
    f440:	acc00017 	ldw	r19,0(r21)
    f444:	983fe41e 	bne	r19,zero,f3d8 <__alt_data_end+0xfffad958>
    f448:	dfc00b17 	ldw	ra,44(sp)
    f44c:	df000a17 	ldw	fp,40(sp)
    f450:	ddc00917 	ldw	r23,36(sp)
    f454:	dd800817 	ldw	r22,32(sp)
    f458:	dd400717 	ldw	r21,28(sp)
    f45c:	dd000617 	ldw	r20,24(sp)
    f460:	dcc00517 	ldw	r19,20(sp)
    f464:	dc800417 	ldw	r18,16(sp)
    f468:	dc400317 	ldw	r17,12(sp)
    f46c:	dc000217 	ldw	r16,8(sp)
    f470:	dec00c04 	addi	sp,sp,48
    f474:	f800283a 	ret
    f478:	98800117 	ldw	r2,4(r19)
    f47c:	80c00017 	ldw	r3,0(r16)
    f480:	10bfffc4 	addi	r2,r2,-1
    f484:	17001526 	beq	r2,fp,f4dc <__call_exitprocs+0x164>
    f488:	80000015 	stw	zero,0(r16)
    f48c:	183fde26 	beq	r3,zero,f408 <__alt_data_end+0xfffad988>
    f490:	00800044 	movi	r2,1
    f494:	1708983a 	sll	r4,r2,fp
    f498:	98806217 	ldw	r2,392(r19)
    f49c:	9dc00117 	ldw	r23,4(r19)
    f4a0:	2084703a 	and	r2,r4,r2
    f4a4:	1000061e 	bne	r2,zero,f4c0 <__call_exitprocs+0x148>
    f4a8:	183ee83a 	callr	r3
    f4ac:	98800117 	ldw	r2,4(r19)
    f4b0:	15ffc51e 	bne	r2,r23,f3c8 <__alt_data_end+0xfffad948>
    f4b4:	a8800017 	ldw	r2,0(r21)
    f4b8:	14ffd326 	beq	r2,r19,f408 <__alt_data_end+0xfffad988>
    f4bc:	003fc206 	br	f3c8 <__alt_data_end+0xfffad948>
    f4c0:	98806317 	ldw	r2,396(r19)
    f4c4:	2084703a 	and	r2,r4,r2
    f4c8:	1000061e 	bne	r2,zero,f4e4 <__call_exitprocs+0x16c>
    f4cc:	89400017 	ldw	r5,0(r17)
    f4d0:	9009883a 	mov	r4,r18
    f4d4:	183ee83a 	callr	r3
    f4d8:	003ff406 	br	f4ac <__alt_data_end+0xfffada2c>
    f4dc:	9f000115 	stw	fp,4(r19)
    f4e0:	003fea06 	br	f48c <__alt_data_end+0xfffada0c>
    f4e4:	89000017 	ldw	r4,0(r17)
    f4e8:	183ee83a 	callr	r3
    f4ec:	003fef06 	br	f4ac <__alt_data_end+0xfffada2c>
    f4f0:	98800017 	ldw	r2,0(r19)
    f4f4:	982b883a 	mov	r21,r19
    f4f8:	1027883a 	mov	r19,r2
    f4fc:	983fb61e 	bne	r19,zero,f3d8 <__alt_data_end+0xfffad958>
    f500:	003fd106 	br	f448 <__alt_data_end+0xfffad9c8>
    f504:	0005883a 	mov	r2,zero
    f508:	003ffa06 	br	f4f4 <__alt_data_end+0xfffada74>

0000f50c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
    f50c:	defffd04 	addi	sp,sp,-12
    f510:	df000215 	stw	fp,8(sp)
    f514:	df000204 	addi	fp,sp,8
    f518:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
    f51c:	0001883a 	nop
    f520:	e0bfff17 	ldw	r2,-4(fp)
    f524:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
    f528:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    f52c:	10000226 	beq	r2,zero,f538 <_exit+0x2c>
    ALT_SIM_FAIL();
    f530:	002af070 	cmpltui	zero,zero,43969
    f534:	00000106 	br	f53c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
    f538:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
    f53c:	003fff06 	br	f53c <__alt_data_end+0xfffadabc>
