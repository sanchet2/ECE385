
Final_Project_Code.elf:     file format elf32-littlenios2
Final_Project_Code.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000022c

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00000020 paddr 0x00000020 align 2**12
         filesz 0x0000f9e8 memsz 0x0000f9e8 flags r-x
    LOAD off    0x00010a08 vaddr 0x0000fa08 paddr 0x000114f4 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00012fe0 vaddr 0x00012fe0 paddr 0x00012fe0 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00000000  00000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   0000020c  00000020  00000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f4c4  0000022c  0000022c  0000122c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000318  0000f6f0  0000f6f0  000106f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0000fa08  000114f4  00010a08  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00012fe0  00012fe0  00012fe0  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00013140  00013140  000124f4  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  000124f4  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000cd0  00000000  00000000  00012518  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000233d9  00000000  00000000  000131e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008dd5  00000000  00000000  000365c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000ad1b  00000000  00000000  0003f396  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002080  00000000  00000000  0004a0b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000366a  00000000  00000000  0004c134  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00016ceb  00000000  00000000  0004f79e  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  0006648c  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001388  00000000  00000000  000664a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006a955  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  0006a958  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006a964  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006a965  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0006a966  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0006a96a  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0006a96e  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   0000000b  00000000  00000000  0006a972  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    0000000b  00000000  00000000  0006a97d  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   0000000b  00000000  00000000  0006a988  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000b  00000000  00000000  0006a993  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000003b  00000000  00000000  0006a99e  2**0
                  CONTENTS, READONLY
 29 .jdi          0000444b  00000000  00000000  0006a9d9  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     00062a96  00000000  00000000  0006ee24  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    d  .entry	00000000 .entry
00000020 l    d  .exceptions	00000000 .exceptions
0000022c l    d  .text	00000000 .text
0000f6f0 l    d  .rodata	00000000 .rodata
0000fa08 l    d  .rwdata	00000000 .rwdata
00012fe0 l    d  .bss	00000000 .bss
00013140 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../Final_Project_Code_bsp//obj/HAL/src/crt0.o
00000264 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000f74e l     O .rodata	00000010 zeroes.4181
0000f75e l     O .rodata	00000010 blanks.4180
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
000031b4 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00004d5c l     F .text	00000008 __fp_lock
00004d64 l     F .text	00000008 __fp_unlock
00004d78 l     F .text	000001a0 __sinit.part.1
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0000fe10 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
00010254 l     O .rwdata	00000020 lc_ctype_charset
00010234 l     O .rwdata	00000020 lc_message_charset
00010274 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0000f790 l     O .rodata	0000000c p05.2678
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00006fa4 l     F .text	000000fc __sprint_r.part.0
0000f8c4 l     O .rodata	00000010 blanks.4125
0000f8b4 l     O .rodata	00000010 zeroes.4126
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0000a648 l     F .text	0000006c udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0000cf98 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0000d0c0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0000d0ec l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0000d1f4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0000d2f0 l     F .text	00000064 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0000d3d4 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0000d5b8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
000114e4 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0000d83c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000d98c l     F .text	00000038 alt_dev_reg
00010454 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0000dc68 l     F .text	00000204 altera_avalon_jtag_uart_irq
0000de6c l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0000e5e8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000ea80 l     F .text	000000e0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0000ebd8 l     F .text	00000050 alt_get_errno
0000ec28 l     F .text	000000f4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00013014 g     O .bss	00000004 alt_instruction_exception_handler
00006b40 g     F .text	00000074 _mprec_log10
00006c2c g     F .text	0000008c __any_on
00008e74 g     F .text	00000054 _isatty_r
0000f79c g     O .rodata	00000028 __mprec_tinytens
0000d500 g     F .text	00000078 alt_main
00013040 g     O .bss	00000100 alt_irq
00008ec8 g     F .text	0000005c _lseek_r
000114f4 g       *ABS*	00000000 __flash_rwdata_start
0000b9b8 g     F .text	00000084 .hidden __eqdf2
00013140 g       *ABS*	00000000 __alt_heap_start
00000ed4 g     F .text	0000003c printf
000097ec g     F .text	0000009c _wcrtomb_r
00006e04 g     F .text	0000005c __sseek
000050c0 g     F .text	00000010 __sinit
0000967c g     F .text	00000154 __swbuf_r
00005694 g     F .text	0000007c _setlocale_r
00004f18 g     F .text	00000078 __sfmoreglue
0000d598 g     F .text	00000020 __malloc_unlock
00008f24 g     F .text	0000015c memmove
000050a8 g     F .text	00000018 _cleanup
00005c70 g     F .text	000000a8 _Balloc
0000ba3c g     F .text	000000e0 .hidden __gtdf2
0000f018 g     F .text	00000020 altera_nios2_gen2_irq_init
00000000  w      *UND*	00000000 __errno
00000000 g     F .entry	0000000c __reset
00000020 g       *ABS*	00000000 __flash_exceptions_start
00008978 g     F .text	00000058 _fstat_r
00012fec g     O .bss	00000004 errno
00006d80 g     F .text	00000008 __seofread
00013000 g     O .bss	00000004 alt_argv
000194b4 g       *ABS*	00000000 _gp
000102d4 g     O .rwdata	00000180 alt_fd_list
0000f038 g     F .text	00000090 alt_find_dev
00005a14 g     F .text	00000138 memcpy
00004d6c g     F .text	0000000c _cleanup_r
0000cdc0 g     F .text	000000d0 .hidden __floatsidf
0000eb60 g     F .text	00000078 alt_io_redirect
0000bb1c g     F .text	000000e0 .hidden __ltdf2
0000f6f0 g       *ABS*	00000000 __DTOR_END__
0000f2b0 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00006cb8 g     F .text	00000074 __fpclassifyd
00006a9c g     F .text	000000a4 __ratio
000084dc g     F .text	00000024 __vfiprintf_internal
0000e068 g     F .text	0000020c altera_avalon_jtag_uart_read
000006d8 g     F .text	00000014 malloc
00000ea8 g     F .text	0000002c _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0000a764 g     F .text	00000008 .hidden __udivsi3
0000d244 g     F .text	000000ac isatty
0000f7ec g     O .rodata	000000c8 __mprec_tens
00005710 g     F .text	0000000c __locale_charset
00012fe8 g     O .bss	00000004 __malloc_top_pad
000114c4 g     O .rwdata	00000004 __mb_cur_max
00005740 g     F .text	0000000c _localeconv_r
000089d0 g     F .text	000004a4 __sfvwrite_r
00006098 g     F .text	0000003c __i2b
00000f10 g     F .text	00000054 _sbrk_r
00009080 g     F .text	0000005c _read_r
000114dc g     O .rwdata	00000004 alt_max_fd
00008688 g     F .text	00000100 _fclose_r
00004d2c g     F .text	00000030 fflush
00012fe4 g     O .bss	00000004 __malloc_max_sbrked_mem
00000384 g     F .text	000000a0 render_shadows
0000a79c g     F .text	0000089c .hidden __adddf3
00006844 g     F .text	0000011c __b2d
0000a02c g     F .text	0000061c .hidden __umoddi3
0000d424 g     F .text	000000dc lseek
000114bc g     O .rwdata	00000004 _global_impure_ptr
000090dc g     F .text	000005a0 _realloc_r
00013140 g       *ABS*	00000000 __bss_end
0000e990 g     F .text	000000f0 alt_iic_isr_register
0000ef14 g     F .text	00000104 alt_tick
000099ec g     F .text	00000640 .hidden __udivdi3
0000879c g     F .text	00000184 _fputwc_r
0000f7c4 g     O .rodata	00000028 __mprec_bigtens
00005e7c g     F .text	00000104 __s2b
0000ce90 g     F .text	000000a4 .hidden __floatunsidf
000065ec g     F .text	00000060 __mcmp
000050e0 g     F .text	00000018 __fp_lock_all
0000e944 g     F .text	0000004c alt_ic_irq_enabled
0000ee7c g     F .text	00000098 alt_alarm_stop
00013008 g     O .bss	00000004 alt_irq_active
000000fc g     F .exceptions	000000d0 alt_irq_handler
000102ac g     O .rwdata	00000028 alt_dev_null
000004cc g     F .text	000000ac init_players
0000e5cc g     F .text	0000001c alt_dcache_flush_all
00005f80 g     F .text	00000068 __hi0bits
0000cd38 g     F .text	00000088 .hidden __fixdfsi
000114f4 g       *ABS*	00000000 __ram_rwdata_end
000114d4 g     O .rwdata	00000008 alt_dev_list
0000d88c g     F .text	00000100 write
0000fa08 g       *ABS*	00000000 __ram_rodata_end
0000d13c g     F .text	000000b8 fstat
0000bb1c g     F .text	000000e0 .hidden __ledf2
00006364 g     F .text	00000140 __pow5mult
000070b8 g     F .text	00001424 ___vfiprintf_internal_r
00012ff8 g     O .bss	00000004 __nlocale_changed
0000a76c g     F .text	00000008 .hidden __umodsi3
00013140 g       *ABS*	00000000 end
0000dba4 g     F .text	000000c4 altera_avalon_jtag_uart_init
000001cc g     F .exceptions	00000060 alt_instruction_exception_entry
0000f6f0 g       *ABS*	00000000 __CTOR_LIST__
0001e848 g       *ABS*	00000000 __alt_stack_pointer
0000cf34 g     F .text	00000064 .hidden __clzsi2
0000e274 g     F .text	00000218 altera_avalon_jtag_uart_write
000050d0 g     F .text	00000004 __sfp_lock_acquire
0000592c g     F .text	000000e8 memchr
00000f64 g     F .text	000020fc ___vfprintf_internal_r
00000424 g     F .text	000000a8 render_sprites
00005234 g     F .text	000002f0 _free_r
0000571c g     F .text	00000010 __locale_mb_cur_max
0000f528 g     F .text	00000194 __call_exitprocs
00012ff4 g     O .bss	00000004 __mlocale_changed
000114b4 g     O .rwdata	00000004 __malloc_sbrk_base
0000022c g     F .text	0000003c _start
0001300c g     O .bss	00000004 _alt_tick_rate
000064a4 g     F .text	00000148 __lshift
00013010 g     O .bss	00000004 _alt_nticks
0000d608 g     F .text	00000104 read
0000d9f8 g     F .text	00000048 alt_sys_init
0000f414 g     F .text	00000114 __register_exitproc
000060d4 g     F .text	00000290 __multiply
0000df14 g     F .text	00000068 altera_avalon_jtag_uart_close
00000268 g     F .text	0000011c renderer
0000a774 g     F .text	00000028 .hidden __mulsi3
0000fa08 g       *ABS*	00000000 __ram_rwdata_start
0000f6f0 g       *ABS*	00000000 __ram_rodata_start
00013018 g     O .bss	00000028 __malloc_current_mallinfo
00006960 g     F .text	0000013c __d2b
0000da40 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0000f1dc g     F .text	000000d4 alt_get_fd
0000855c g     F .text	00000054 _close_r
00000578 g     F .text	000000b0 move_player
0000f398 g     F .text	0000007c memcmp
0000db00 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00013140 g       *ABS*	00000000 __alt_stack_base
0000db50 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00003084 g     F .text	00000130 __swsetup_r
0000b038 g     F .text	00000980 .hidden __divdf3
00004f90 g     F .text	00000118 __sfp
00006bb4 g     F .text	00000078 __copybits
0000fa08 g     O .rwdata	00000408 __malloc_av_
000050dc g     F .text	00000004 __sinit_lock_release
0000bbfc g     F .text	0000086c .hidden __muldf3
00006d2c g     F .text	00000054 __sread
0000f0c8 g     F .text	00000114 alt_find_file
0000e638 g     F .text	000000a4 alt_dev_llist_insert
0000d578 g     F .text	00000020 __malloc_lock
0000d78c g     F .text	000000b0 sbrk
00004b04 g     F .text	00000228 _fflush_r
000085b0 g     F .text	000000d8 _calloc_r
00012fe0 g       *ABS*	00000000 __bss_start
00005b4c g     F .text	00000124 memset
00000628 g     F .text	000000b0 main
00013004 g     O .bss	00000004 alt_envp
00012fe0 g     O .bss	00000004 __malloc_max_total_mem
0000daa0 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
000097d0 g     F .text	0000001c __swbuf
00006e60 g     F .text	00000008 __sclose
0001e848 g       *ABS*	00000000 __alt_heap_limit
00008788 g     F .text	00000014 fclose
000033dc g     F .text	00001728 _dtoa_r
00000700 g     F .text	000007a8 _malloc_r
00009960 g     F .text	00000030 __ascii_wctomb
000114e0 g     O .rwdata	00000004 alt_errno
00005524 g     F .text	000000b8 _fwalk
0000a6b4 g     F .text	00000054 .hidden __divsi3
00005110 g     F .text	00000124 _malloc_trim_r
0000f6f0 g       *ABS*	00000000 __CTOR_END__
00006e68 g     F .text	000000a4 strcmp
0000f6f0 g       *ABS*	00000000 __flash_rodata_start
0000f6f0 g       *ABS*	00000000 __DTOR_LIST__
0000b9b8 g     F .text	00000084 .hidden __nedf2
0000d9c4 g     F .text	00000034 alt_irq_init
0000d70c g     F .text	00000080 alt_release_fd
0000f8d4 g     O .rodata	00000100 .hidden __clz_tab
00012ff0 g     O .bss	00000004 _PathLocale
0000f34c g     F .text	00000014 atexit
00008500 g     F .text	0000005c _write_r
0000574c g     F .text	0000001c setlocale
000114c0 g     O .rwdata	00000004 _impure_ptr
00012ffc g     O .bss	00000004 alt_argc
0000e738 g     F .text	0000005c _do_dtors
00005738 g     F .text	00000008 __locale_cjk_lang
00000020 g       .exceptions	00000000 alt_irq_entry
000067e4 g     F .text	00000060 __ulp
000050f8 g     F .text	00000018 __fp_unlock_all
000114cc g     O .rwdata	00000008 alt_fs_list
00000020 g       *ABS*	00000000 __ram_exceptions_start
00005768 g     F .text	0000000c localeconv
0000e7b0 g     F .text	00000050 alt_ic_isr_register
000114f4 g       *ABS*	00000000 _edata
00013140 g       *ABS*	00000000 _end
0000022c g       *ABS*	00000000 __ram_exceptions_end
0000df7c g     F .text	000000ec altera_avalon_jtag_uart_ioctl
0000e8a0 g     F .text	000000a4 alt_ic_irq_disable
00006d88 g     F .text	0000007c __swrite
000114b8 g     O .rwdata	00000004 __malloc_trim_threshold
0000572c g     F .text	0000000c __locale_msgcharset
0000f360 g     F .text	00000038 exit
000055dc g     F .text	000000b8 _fwalk_reent
0000664c g     F .text	00000198 __mdiff
0000a708 g     F .text	0000005c .hidden __modsi3
0001e848 g       *ABS*	00000000 __alt_data_end
00000020 g     F .exceptions	00000000 alt_exception
000050d4 g     F .text	00000004 __sfp_lock_release
0000f6bc g     F .text	00000034 _exit
0000e48c g     F .text	00000140 alt_alarm_start
00005774 g     F .text	000001b8 __smakebuf_r
00006f0c g     F .text	00000098 strlen
0000ed1c g     F .text	00000160 open
0000ba3c g     F .text	000000e0 .hidden __gedf2
000114c8 g     O .rwdata	00000004 __wctomb
000070a0 g     F .text	00000018 __sprint_r
0000e794 g     F .text	0000001c alt_icache_flush_all
000114e8 g     O .rwdata	00000004 alt_priority_mask
0000e800 g     F .text	000000a0 alt_ic_irq_enable
00003060 g     F .text	00000024 __vfprintf_internal
00009990 g     F .text	0000005c _wctomb_r
0000c468 g     F .text	000008d0 .hidden __subdf3
00005fe8 g     F .text	000000b0 __lo0bits
000114ec g     O .rwdata	00000008 alt_alarm_list
0000e6dc g     F .text	0000005c _do_ctors
00009888 g     F .text	000000d8 wcrtomb
0000cfe8 g     F .text	000000d8 close
0000d354 g     F .text	00000080 alt_load
00008920 g     F .text	00000058 fputwc
000006ec g     F .text	00000014 free
000050d8 g     F .text	00000004 __sinit_lock_acquire
00005d40 g     F .text	0000013c __multadd
00005d18 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   0:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
   4:	08408b14 	ori	at,at,556
    jmp r1
   8:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

00000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  20:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  24:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  28:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  2c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  30:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  34:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  38:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  3c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  40:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  44:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  48:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  4c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  50:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  54:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  58:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  5c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  60:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  64:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  68:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  6c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  70:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  74:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  78:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  7c:	10000326 	beq	r2,zero,8c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  80:	20000226 	beq	r4,zero,8c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  84:	00000fc0 	call	fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  88:	00000706 	br	a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  8c:	df401215 	stw	ea,72(sp)
        ldhu.n  r2, 0(r4)
        ldhu.n  r3, 2(r4)
        slli.n  r3, r3, 16
        or.n    r2, r2, r3 /* Instruction that caused exception */
#else
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  90:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  94:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  98:	00001cc0 	call	1cc <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  9c:	1000021e 	bne	r2,zero,a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  f8:	ef80083a 	eret

000000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  fc:	defff904 	addi	sp,sp,-28
 100:	dfc00615 	stw	ra,24(sp)
 104:	df000515 	stw	fp,20(sp)
 108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 10c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 110:	0005313a 	rdctl	r2,ipending
 114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 11c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 124:	00800044 	movi	r2,1
 128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 12c:	e0fffb17 	ldw	r3,-20(fp)
 130:	e0bffc17 	ldw	r2,-16(fp)
 134:	1884703a 	and	r2,r3,r2
 138:	10001426 	beq	r2,zero,18c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 13c:	00800074 	movhi	r2,1
 140:	108c1004 	addi	r2,r2,12352
 144:	e0fffd17 	ldw	r3,-12(fp)
 148:	180690fa 	slli	r3,r3,3
 14c:	10c5883a 	add	r2,r2,r3
 150:	10c00017 	ldw	r3,0(r2)
 154:	00800074 	movhi	r2,1
 158:	108c1004 	addi	r2,r2,12352
 15c:	e13ffd17 	ldw	r4,-12(fp)
 160:	200890fa 	slli	r4,r4,3
 164:	1105883a 	add	r2,r2,r4
 168:	10800104 	addi	r2,r2,4
 16c:	10800017 	ldw	r2,0(r2)
 170:	1009883a 	mov	r4,r2
 174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 17c:	0005313a 	rdctl	r2,ipending
 180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 184:	e0bfff17 	ldw	r2,-4(fp)
 188:	00000706 	br	1a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 18c:	e0bffc17 	ldw	r2,-16(fp)
 190:	1085883a 	add	r2,r2,r2
 194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 198:	e0bffd17 	ldw	r2,-12(fp)
 19c:	10800044 	addi	r2,r2,1
 1a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 1a4:	003fe106 	br	12c <__alt_data_end+0xfffe18e4>

    active = alt_irq_pending ();
 1a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 1ac:	e0bffb17 	ldw	r2,-20(fp)
 1b0:	103fdb1e 	bne	r2,zero,120 <__alt_data_end+0xfffe18d8>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 1b4:	0001883a 	nop
}
 1b8:	e037883a 	mov	sp,fp
 1bc:	dfc00117 	ldw	ra,4(sp)
 1c0:	df000017 	ldw	fp,0(sp)
 1c4:	dec00204 	addi	sp,sp,8
 1c8:	f800283a 	ret

000001cc <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 1cc:	defffb04 	addi	sp,sp,-20
 1d0:	dfc00415 	stw	ra,16(sp)
 1d4:	df000315 	stw	fp,12(sp)
 1d8:	df000304 	addi	fp,sp,12
 1dc:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 1e0:	00bfffc4 	movi	r2,-1
 1e4:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 1e8:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1ec:	d0a6d817 	ldw	r2,-25760(gp)
 1f0:	10000726 	beq	r2,zero,210 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 1f4:	d0a6d817 	ldw	r2,-25760(gp)
 1f8:	e0fffd17 	ldw	r3,-12(fp)
 1fc:	1809883a 	mov	r4,r3
 200:	e17fff17 	ldw	r5,-4(fp)
 204:	e1bffe17 	ldw	r6,-8(fp)
 208:	103ee83a 	callr	r2
 20c:	00000206 	br	218 <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 210:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 214:	0005883a 	mov	r2,zero
}
 218:	e037883a 	mov	sp,fp
 21c:	dfc00117 	ldw	ra,4(sp)
 220:	df000017 	ldw	fp,0(sp)
 224:	dec00204 	addi	sp,sp,8
 228:	f800283a 	ret

Disassembly of section .text:

0000022c <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
     22c:	06c00074 	movhi	sp,1
    ori sp, sp, %lo(__alt_stack_pointer)
     230:	defa1214 	ori	sp,sp,59464
    movhi gp, %hi(_gp)
     234:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
     238:	d6a52d14 	ori	gp,gp,38068
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
     23c:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
     240:	108bf814 	ori	r2,r2,12256

    movhi r3, %hi(__bss_end)
     244:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
     248:	18cc5014 	ori	r3,r3,12608

    beq r2, r3, 1f
     24c:	10c00326 	beq	r2,r3,25c <_start+0x30>

0:
    stw zero, (r2)
     250:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
     254:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
     258:	10fffd36 	bltu	r2,r3,250 <__alt_data_end+0xfffe1a08>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
     25c:	000d3540 	call	d354 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
     260:	000d5000 	call	d500 <alt_main>

00000264 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
     264:	003fff06 	br	264 <__alt_data_end+0xfffe1a1c>

00000268 <renderer>:




void renderer(int x, int y, int sprite_num, int is_shadow)
{
     268:	defffb04 	addi	sp,sp,-20
     26c:	df000415 	stw	fp,16(sp)
     270:	df000404 	addi	fp,sp,16
     274:	e13ffc15 	stw	r4,-16(fp)
     278:	e17ffd15 	stw	r5,-12(fp)
     27c:	e1bffe15 	stw	r6,-8(fp)
     280:	e1ffff15 	stw	r7,-4(fp)
	if(is_shadow==1)
     284:	e0bfff17 	ldw	r2,-4(fp)
     288:	10800058 	cmpnei	r2,r2,1
     28c:	1000051e 	bne	r2,zero,2a4 <renderer+0x3c>
		*sw_to_hw = 4;
     290:	00800234 	movhi	r2,8
     294:	10840804 	addi	r2,r2,4128
     298:	00c00104 	movi	r3,4
     29c:	10c00015 	stw	r3,0(r2)
     2a0:	00000606 	br	2bc <renderer+0x54>
	else
		*sw_to_hw &= 0;
     2a4:	00800234 	movhi	r2,8
     2a8:	10840804 	addi	r2,r2,4128
     2ac:	10800017 	ldw	r2,0(r2)
     2b0:	00800234 	movhi	r2,8
     2b4:	10840804 	addi	r2,r2,4128
     2b8:	10000015 	stw	zero,0(r2)
	*sprite_number = sprite_num;
     2bc:	00800234 	movhi	r2,8
     2c0:	10841004 	addi	r2,r2,4160
     2c4:	e0fffe17 	ldw	r3,-8(fp)
     2c8:	10c00015 	stw	r3,0(r2)
	*sprite_xy = 1024*x + y;
     2cc:	00800234 	movhi	r2,8
     2d0:	10840c04 	addi	r2,r2,4144
     2d4:	e0fffc17 	ldw	r3,-16(fp)
     2d8:	180892ba 	slli	r4,r3,10
     2dc:	e0fffd17 	ldw	r3,-12(fp)
     2e0:	20c7883a 	add	r3,r4,r3
     2e4:	10c00015 	stw	r3,0(r2)
	*sw_to_hw |= 2;
     2e8:	00800234 	movhi	r2,8
     2ec:	10840804 	addi	r2,r2,4128
     2f0:	00c00234 	movhi	r3,8
     2f4:	18c40804 	addi	r3,r3,4128
     2f8:	18c00017 	ldw	r3,0(r3)
     2fc:	18c00094 	ori	r3,r3,2
     300:	10c00015 	stw	r3,0(r2)
	while(*hw_to_sw%2 != 0)
     304:	0001883a 	nop
     308:	00800234 	movhi	r2,8
     30c:	10840404 	addi	r2,r2,4112
     310:	10800017 	ldw	r2,0(r2)
     314:	1080004c 	andi	r2,r2,1
     318:	103ffb1e 	bne	r2,zero,308 <__alt_data_end+0xfffe1ac0>
	{}
	*sw_to_hw &= ~2;
     31c:	00800234 	movhi	r2,8
     320:	10840804 	addi	r2,r2,4128
     324:	00c00234 	movhi	r3,8
     328:	18c40804 	addi	r3,r3,4128
     32c:	19000017 	ldw	r4,0(r3)
     330:	00ffff44 	movi	r3,-3
     334:	20c6703a 	and	r3,r4,r3
     338:	10c00015 	stw	r3,0(r2)
	while(*hw_to_sw != 1)
     33c:	0001883a 	nop
     340:	00800234 	movhi	r2,8
     344:	10840404 	addi	r2,r2,4112
     348:	10800017 	ldw	r2,0(r2)
     34c:	10800058 	cmpnei	r2,r2,1
     350:	103ffb1e 	bne	r2,zero,340 <__alt_data_end+0xfffe1af8>
	{}
	*sw_to_hw |= 1;
     354:	00800234 	movhi	r2,8
     358:	10840804 	addi	r2,r2,4128
     35c:	00c00234 	movhi	r3,8
     360:	18c40804 	addi	r3,r3,4128
     364:	18c00017 	ldw	r3,0(r3)
     368:	18c00054 	ori	r3,r3,1
     36c:	10c00015 	stw	r3,0(r2)
	return;
     370:	0001883a 	nop
}
     374:	e037883a 	mov	sp,fp
     378:	df000017 	ldw	fp,0(sp)
     37c:	dec00104 	addi	sp,sp,4
     380:	f800283a 	ret

00000384 <render_shadows>:

void render_shadows(player *first,player *second){
     384:	defffc04 	addi	sp,sp,-16
     388:	dfc00315 	stw	ra,12(sp)
     38c:	df000215 	stw	fp,8(sp)
     390:	df000204 	addi	fp,sp,8
     394:	e13ffe15 	stw	r4,-8(fp)
     398:	e17fff15 	stw	r5,-4(fp)
	if(first==NULL || second ==NULL){
     39c:	e0bffe17 	ldw	r2,-8(fp)
     3a0:	10000226 	beq	r2,zero,3ac <render_shadows+0x28>
     3a4:	e0bfff17 	ldw	r2,-4(fp)
     3a8:	1000041e 	bne	r2,zero,3bc <render_shadows+0x38>
			printf("players not instantiated");
     3ac:	01000074 	movhi	r4,1
     3b0:	213dbc04 	addi	r4,r4,-2320
     3b4:	0000ed40 	call	ed4 <printf>
     3b8:	00001406 	br	40c <render_shadows+0x88>
	}
	else{
		renderer(first->old_x,first->old_y,first->id,1);
     3bc:	e0bffe17 	ldw	r2,-8(fp)
     3c0:	11000417 	ldw	r4,16(r2)
     3c4:	e0bffe17 	ldw	r2,-8(fp)
     3c8:	10c00517 	ldw	r3,20(r2)
     3cc:	e0bffe17 	ldw	r2,-8(fp)
     3d0:	10800317 	ldw	r2,12(r2)
     3d4:	180b883a 	mov	r5,r3
     3d8:	100d883a 	mov	r6,r2
     3dc:	01c00044 	movi	r7,1
     3e0:	00002680 	call	268 <renderer>
		renderer(second->old_x,second->old_y,second->id,1);
     3e4:	e0bfff17 	ldw	r2,-4(fp)
     3e8:	11000417 	ldw	r4,16(r2)
     3ec:	e0bfff17 	ldw	r2,-4(fp)
     3f0:	10c00517 	ldw	r3,20(r2)
     3f4:	e0bfff17 	ldw	r2,-4(fp)
     3f8:	10800317 	ldw	r2,12(r2)
     3fc:	180b883a 	mov	r5,r3
     400:	100d883a 	mov	r6,r2
     404:	01c00044 	movi	r7,1
     408:	00002680 	call	268 <renderer>
	}
	return;
     40c:	0001883a 	nop
}
     410:	e037883a 	mov	sp,fp
     414:	dfc00117 	ldw	ra,4(sp)
     418:	df000017 	ldw	fp,0(sp)
     41c:	dec00204 	addi	sp,sp,8
     420:	f800283a 	ret

00000424 <render_sprites>:

void render_sprites(player *first,player *second){
     424:	defffc04 	addi	sp,sp,-16
     428:	dfc00315 	stw	ra,12(sp)
     42c:	df000215 	stw	fp,8(sp)
     430:	df000204 	addi	fp,sp,8
     434:	e13ffe15 	stw	r4,-8(fp)
     438:	e17fff15 	stw	r5,-4(fp)
	render_shadows(first,second);
     43c:	e13ffe17 	ldw	r4,-8(fp)
     440:	e17fff17 	ldw	r5,-4(fp)
     444:	00003840 	call	384 <render_shadows>
	if(first==NULL || second ==NULL){
     448:	e0bffe17 	ldw	r2,-8(fp)
     44c:	10000226 	beq	r2,zero,458 <render_sprites+0x34>
     450:	e0bfff17 	ldw	r2,-4(fp)
     454:	1000041e 	bne	r2,zero,468 <render_sprites+0x44>
		printf("players not instantiated");
     458:	01000074 	movhi	r4,1
     45c:	213dbc04 	addi	r4,r4,-2320
     460:	0000ed40 	call	ed4 <printf>
     464:	00001406 	br	4b8 <render_sprites+0x94>
	}
	else{
		renderer(first->x_pos,first->y_pos,first->id,0);
     468:	e0bffe17 	ldw	r2,-8(fp)
     46c:	11000017 	ldw	r4,0(r2)
     470:	e0bffe17 	ldw	r2,-8(fp)
     474:	10c00117 	ldw	r3,4(r2)
     478:	e0bffe17 	ldw	r2,-8(fp)
     47c:	10800317 	ldw	r2,12(r2)
     480:	180b883a 	mov	r5,r3
     484:	100d883a 	mov	r6,r2
     488:	000f883a 	mov	r7,zero
     48c:	00002680 	call	268 <renderer>
		renderer(second->x_pos,second->y_pos,second->id,0);
     490:	e0bfff17 	ldw	r2,-4(fp)
     494:	11000017 	ldw	r4,0(r2)
     498:	e0bfff17 	ldw	r2,-4(fp)
     49c:	10c00117 	ldw	r3,4(r2)
     4a0:	e0bfff17 	ldw	r2,-4(fp)
     4a4:	10800317 	ldw	r2,12(r2)
     4a8:	180b883a 	mov	r5,r3
     4ac:	100d883a 	mov	r6,r2
     4b0:	000f883a 	mov	r7,zero
     4b4:	00002680 	call	268 <renderer>
	}

}
     4b8:	e037883a 	mov	sp,fp
     4bc:	dfc00117 	ldw	ra,4(sp)
     4c0:	df000017 	ldw	fp,0(sp)
     4c4:	dec00204 	addi	sp,sp,8
     4c8:	f800283a 	ret

000004cc <init_players>:
void init_players(player *first,player *second){
     4cc:	defffc04 	addi	sp,sp,-16
     4d0:	dfc00315 	stw	ra,12(sp)
     4d4:	df000215 	stw	fp,8(sp)
     4d8:	df000204 	addi	fp,sp,8
     4dc:	e13ffe15 	stw	r4,-8(fp)
     4e0:	e17fff15 	stw	r5,-4(fp)
	if(first==NULL || second ==NULL)
     4e4:	e0bffe17 	ldw	r2,-8(fp)
     4e8:	10000226 	beq	r2,zero,4f4 <init_players+0x28>
     4ec:	e0bfff17 	ldw	r2,-4(fp)
     4f0:	1000041e 	bne	r2,zero,504 <init_players+0x38>
	{
		printf("players not instantiated");
     4f4:	01000074 	movhi	r4,1
     4f8:	213dbc04 	addi	r4,r4,-2320
     4fc:	0000ed40 	call	ed4 <printf>
     500:	00001806 	br	564 <init_players+0x98>
	}
	else{
		first->x_pos = 300,
     504:	e0bffe17 	ldw	r2,-8(fp)
     508:	00c04b04 	movi	r3,300
     50c:	10c00015 	stw	r3,0(r2)
		first->y_pos = 400;
     510:	e0bffe17 	ldw	r2,-8(fp)
     514:	00c06404 	movi	r3,400
     518:	10c00115 	stw	r3,4(r2)
		first->health = 3;
     51c:	e0bffe17 	ldw	r2,-8(fp)
     520:	00c000c4 	movi	r3,3
     524:	10c00215 	stw	r3,8(r2)
		first->id=player_sprite1;
     528:	e0bffe17 	ldw	r2,-8(fp)
     52c:	00c00084 	movi	r3,2
     530:	10c00315 	stw	r3,12(r2)
		second->x_pos= 200;
     534:	e0bfff17 	ldw	r2,-4(fp)
     538:	00c03204 	movi	r3,200
     53c:	10c00015 	stw	r3,0(r2)
		second->y_pos= 200;
     540:	e0bfff17 	ldw	r2,-4(fp)
     544:	00c03204 	movi	r3,200
     548:	10c00115 	stw	r3,4(r2)
		second->health=3;
     54c:	e0bfff17 	ldw	r2,-4(fp)
     550:	00c000c4 	movi	r3,3
     554:	10c00215 	stw	r3,8(r2)
		second->id = player_sprite1;
     558:	e0bfff17 	ldw	r2,-4(fp)
     55c:	00c00084 	movi	r3,2
     560:	10c00315 	stw	r3,12(r2)
	}
}
     564:	e037883a 	mov	sp,fp
     568:	dfc00117 	ldw	ra,4(sp)
     56c:	df000017 	ldw	fp,0(sp)
     570:	dec00204 	addi	sp,sp,8
     574:	f800283a 	ret

00000578 <move_player>:

void move_player(player *current, int x_pos, int y_pos){
     578:	defffb04 	addi	sp,sp,-20
     57c:	dfc00415 	stw	ra,16(sp)
     580:	df000315 	stw	fp,12(sp)
     584:	df000304 	addi	fp,sp,12
     588:	e13ffd15 	stw	r4,-12(fp)
     58c:	e17ffe15 	stw	r5,-8(fp)
     590:	e1bfff15 	stw	r6,-4(fp)
	if(current==NULL)
     594:	e0bffd17 	ldw	r2,-12(fp)
     598:	1000041e 	bne	r2,zero,5ac <move_player+0x34>
		{
			printf("players not instantiated");
     59c:	01000074 	movhi	r4,1
     5a0:	213dbc04 	addi	r4,r4,-2320
     5a4:	0000ed40 	call	ed4 <printf>
     5a8:	00001a06 	br	614 <move_player+0x9c>
		}
	else{
		if((x_pos+64) < x_bounds && x_pos > 0 && y_pos > 0 && (y_pos+64)<y_bounds){
     5ac:	e0bffe17 	ldw	r2,-8(fp)
     5b0:	10801004 	addi	r2,r2,64
     5b4:	1080a008 	cmpgei	r2,r2,640
     5b8:	1000161e 	bne	r2,zero,614 <move_player+0x9c>
     5bc:	e0bffe17 	ldw	r2,-8(fp)
     5c0:	0080140e 	bge	zero,r2,614 <move_player+0x9c>
     5c4:	e0bfff17 	ldw	r2,-4(fp)
     5c8:	0080120e 	bge	zero,r2,614 <move_player+0x9c>
     5cc:	e0bfff17 	ldw	r2,-4(fp)
     5d0:	10801004 	addi	r2,r2,64
     5d4:	10807808 	cmpgei	r2,r2,480
     5d8:	10000e1e 	bne	r2,zero,614 <move_player+0x9c>
			current->old_x=current->x_pos;
     5dc:	e0bffd17 	ldw	r2,-12(fp)
     5e0:	10c00017 	ldw	r3,0(r2)
     5e4:	e0bffd17 	ldw	r2,-12(fp)
     5e8:	10c00415 	stw	r3,16(r2)
			current->old_y=current->y_pos;
     5ec:	e0bffd17 	ldw	r2,-12(fp)
     5f0:	10c00117 	ldw	r3,4(r2)
     5f4:	e0bffd17 	ldw	r2,-12(fp)
     5f8:	10c00515 	stw	r3,20(r2)
			current->x_pos = x_pos;
     5fc:	e0bffd17 	ldw	r2,-12(fp)
     600:	e0fffe17 	ldw	r3,-8(fp)
     604:	10c00015 	stw	r3,0(r2)
			current->y_pos = y_pos;
     608:	e0bffd17 	ldw	r2,-12(fp)
     60c:	e0ffff17 	ldw	r3,-4(fp)
     610:	10c00115 	stw	r3,4(r2)
		}
	}
}
     614:	e037883a 	mov	sp,fp
     618:	dfc00117 	ldw	ra,4(sp)
     61c:	df000017 	ldw	fp,0(sp)
     620:	dec00204 	addi	sp,sp,8
     624:	f800283a 	ret

00000628 <main>:

int main()
{
     628:	defffb04 	addi	sp,sp,-20
     62c:	dfc00415 	stw	ra,16(sp)
     630:	df000315 	stw	fp,12(sp)
     634:	df000304 	addi	fp,sp,12
	int i;
	player *first=(player *)malloc(sizeof(player));
     638:	01000604 	movi	r4,24
     63c:	00006d80 	call	6d8 <malloc>
     640:	e0bffe15 	stw	r2,-8(fp)
	player *second=(player *)malloc(sizeof(player));
     644:	01000604 	movi	r4,24
     648:	00006d80 	call	6d8 <malloc>
     64c:	e0bfff15 	stw	r2,-4(fp)
	init_players(first,second);
     650:	e13ffe17 	ldw	r4,-8(fp)
     654:	e17fff17 	ldw	r5,-4(fp)
     658:	00004cc0 	call	4cc <init_players>

	while(1)
	{
		render_sprites(first,second);
     65c:	e13ffe17 	ldw	r4,-8(fp)
     660:	e17fff17 	ldw	r5,-4(fp)
     664:	00004240 	call	424 <render_sprites>
		move_player(first,first->x_pos+5,first->y_pos);
     668:	e0bffe17 	ldw	r2,-8(fp)
     66c:	10800017 	ldw	r2,0(r2)
     670:	10c00144 	addi	r3,r2,5
     674:	e0bffe17 	ldw	r2,-8(fp)
     678:	10800117 	ldw	r2,4(r2)
     67c:	e13ffe17 	ldw	r4,-8(fp)
     680:	180b883a 	mov	r5,r3
     684:	100d883a 	mov	r6,r2
     688:	00005780 	call	578 <move_player>
		move_player(second,second->x_pos,second->y_pos+5);
     68c:	e0bfff17 	ldw	r2,-4(fp)
     690:	10c00017 	ldw	r3,0(r2)
     694:	e0bfff17 	ldw	r2,-4(fp)
     698:	10800117 	ldw	r2,4(r2)
     69c:	10800144 	addi	r2,r2,5
     6a0:	e13fff17 	ldw	r4,-4(fp)
     6a4:	180b883a 	mov	r5,r3
     6a8:	100d883a 	mov	r6,r2
     6ac:	00005780 	call	578 <move_player>
		for(i=0;i<100000;i++);
     6b0:	e03ffd15 	stw	zero,-12(fp)
     6b4:	00000306 	br	6c4 <main+0x9c>
     6b8:	e0bffd17 	ldw	r2,-12(fp)
     6bc:	10800044 	addi	r2,r2,1
     6c0:	e0bffd15 	stw	r2,-12(fp)
     6c4:	e0fffd17 	ldw	r3,-12(fp)
     6c8:	008000b4 	movhi	r2,2
     6cc:	10a1a7c4 	addi	r2,r2,-31073
     6d0:	10fff90e 	bge	r2,r3,6b8 <__alt_data_end+0xfffe1e70>
	}
     6d4:	003fe106 	br	65c <__alt_data_end+0xfffe1e14>

000006d8 <malloc>:
     6d8:	00800074 	movhi	r2,1
     6dc:	10853004 	addi	r2,r2,5312
     6e0:	200b883a 	mov	r5,r4
     6e4:	11000017 	ldw	r4,0(r2)
     6e8:	00007001 	jmpi	700 <_malloc_r>

000006ec <free>:
     6ec:	00800074 	movhi	r2,1
     6f0:	10853004 	addi	r2,r2,5312
     6f4:	200b883a 	mov	r5,r4
     6f8:	11000017 	ldw	r4,0(r2)
     6fc:	00052341 	jmpi	5234 <_free_r>

00000700 <_malloc_r>:
     700:	defff504 	addi	sp,sp,-44
     704:	dc800315 	stw	r18,12(sp)
     708:	dfc00a15 	stw	ra,40(sp)
     70c:	df000915 	stw	fp,36(sp)
     710:	ddc00815 	stw	r23,32(sp)
     714:	dd800715 	stw	r22,28(sp)
     718:	dd400615 	stw	r21,24(sp)
     71c:	dd000515 	stw	r20,20(sp)
     720:	dcc00415 	stw	r19,16(sp)
     724:	dc400215 	stw	r17,8(sp)
     728:	dc000115 	stw	r16,4(sp)
     72c:	288002c4 	addi	r2,r5,11
     730:	00c00584 	movi	r3,22
     734:	2025883a 	mov	r18,r4
     738:	18802a2e 	bgeu	r3,r2,7e4 <_malloc_r+0xe4>
     73c:	047ffe04 	movi	r17,-8
     740:	1462703a 	and	r17,r2,r17
     744:	88009e16 	blt	r17,zero,9c0 <_malloc_r+0x2c0>
     748:	89409d36 	bltu	r17,r5,9c0 <_malloc_r+0x2c0>
     74c:	000d5780 	call	d578 <__malloc_lock>
     750:	00807dc4 	movi	r2,503
     754:	14402736 	bltu	r2,r17,7f4 <_malloc_r+0xf4>
     758:	8806d0fa 	srli	r3,r17,3
     75c:	04c00074 	movhi	r19,1
     760:	9cfe8204 	addi	r19,r19,-1528
     764:	18c5883a 	add	r2,r3,r3
     768:	1085883a 	add	r2,r2,r2
     76c:	1085883a 	add	r2,r2,r2
     770:	9885883a 	add	r2,r19,r2
     774:	14000317 	ldw	r16,12(r2)
     778:	80814a26 	beq	r16,r2,ca4 <_malloc_r+0x5a4>
     77c:	80c00117 	ldw	r3,4(r16)
     780:	81000317 	ldw	r4,12(r16)
     784:	00bfff04 	movi	r2,-4
     788:	1884703a 	and	r2,r3,r2
     78c:	81400217 	ldw	r5,8(r16)
     790:	8085883a 	add	r2,r16,r2
     794:	10c00117 	ldw	r3,4(r2)
     798:	29000315 	stw	r4,12(r5)
     79c:	21400215 	stw	r5,8(r4)
     7a0:	18c00054 	ori	r3,r3,1
     7a4:	10c00115 	stw	r3,4(r2)
     7a8:	9009883a 	mov	r4,r18
     7ac:	000d5980 	call	d598 <__malloc_unlock>
     7b0:	80800204 	addi	r2,r16,8
     7b4:	dfc00a17 	ldw	ra,40(sp)
     7b8:	df000917 	ldw	fp,36(sp)
     7bc:	ddc00817 	ldw	r23,32(sp)
     7c0:	dd800717 	ldw	r22,28(sp)
     7c4:	dd400617 	ldw	r21,24(sp)
     7c8:	dd000517 	ldw	r20,20(sp)
     7cc:	dcc00417 	ldw	r19,16(sp)
     7d0:	dc800317 	ldw	r18,12(sp)
     7d4:	dc400217 	ldw	r17,8(sp)
     7d8:	dc000117 	ldw	r16,4(sp)
     7dc:	dec00b04 	addi	sp,sp,44
     7e0:	f800283a 	ret
     7e4:	04400404 	movi	r17,16
     7e8:	89407536 	bltu	r17,r5,9c0 <_malloc_r+0x2c0>
     7ec:	000d5780 	call	d578 <__malloc_lock>
     7f0:	003fd906 	br	758 <__alt_data_end+0xfffe1f10>
     7f4:	8806d27a 	srli	r3,r17,9
     7f8:	18007526 	beq	r3,zero,9d0 <_malloc_r+0x2d0>
     7fc:	00800104 	movi	r2,4
     800:	10c0ef36 	bltu	r2,r3,bc0 <_malloc_r+0x4c0>
     804:	8806d1ba 	srli	r3,r17,6
     808:	19c00e04 	addi	r7,r3,56
     80c:	39cb883a 	add	r5,r7,r7
     810:	04c00074 	movhi	r19,1
     814:	294b883a 	add	r5,r5,r5
     818:	9cfe8204 	addi	r19,r19,-1528
     81c:	294b883a 	add	r5,r5,r5
     820:	994b883a 	add	r5,r19,r5
     824:	2c000317 	ldw	r16,12(r5)
     828:	2c000e26 	beq	r5,r16,864 <_malloc_r+0x164>
     82c:	80800117 	ldw	r2,4(r16)
     830:	01bfff04 	movi	r6,-4
     834:	010003c4 	movi	r4,15
     838:	1184703a 	and	r2,r2,r6
     83c:	1447c83a 	sub	r3,r2,r17
     840:	20c00716 	blt	r4,r3,860 <_malloc_r+0x160>
     844:	1800650e 	bge	r3,zero,9dc <_malloc_r+0x2dc>
     848:	84000317 	ldw	r16,12(r16)
     84c:	2c000526 	beq	r5,r16,864 <_malloc_r+0x164>
     850:	80800117 	ldw	r2,4(r16)
     854:	1184703a 	and	r2,r2,r6
     858:	1447c83a 	sub	r3,r2,r17
     85c:	20fff90e 	bge	r4,r3,844 <__alt_data_end+0xfffe1ffc>
     860:	39ffffc4 	addi	r7,r7,-1
     864:	38c00044 	addi	r3,r7,1
     868:	01800074 	movhi	r6,1
     86c:	9c000417 	ldw	r16,16(r19)
     870:	31be8204 	addi	r6,r6,-1528
     874:	32400204 	addi	r9,r6,8
     878:	82410326 	beq	r16,r9,c88 <_malloc_r+0x588>
     87c:	81000117 	ldw	r4,4(r16)
     880:	00bfff04 	movi	r2,-4
     884:	208e703a 	and	r7,r4,r2
     888:	3c45c83a 	sub	r2,r7,r17
     88c:	010003c4 	movi	r4,15
     890:	2080ee16 	blt	r4,r2,c4c <_malloc_r+0x54c>
     894:	32400515 	stw	r9,20(r6)
     898:	32400415 	stw	r9,16(r6)
     89c:	1000510e 	bge	r2,zero,9e4 <_malloc_r+0x2e4>
     8a0:	00807fc4 	movi	r2,511
     8a4:	11c0ce36 	bltu	r2,r7,be0 <_malloc_r+0x4e0>
     8a8:	3808d0fa 	srli	r4,r7,3
     8ac:	01c00044 	movi	r7,1
     8b0:	30800117 	ldw	r2,4(r6)
     8b4:	210b883a 	add	r5,r4,r4
     8b8:	294b883a 	add	r5,r5,r5
     8bc:	2009d0ba 	srai	r4,r4,2
     8c0:	294b883a 	add	r5,r5,r5
     8c4:	298b883a 	add	r5,r5,r6
     8c8:	2a000217 	ldw	r8,8(r5)
     8cc:	3908983a 	sll	r4,r7,r4
     8d0:	81400315 	stw	r5,12(r16)
     8d4:	82000215 	stw	r8,8(r16)
     8d8:	2088b03a 	or	r4,r4,r2
     8dc:	2c000215 	stw	r16,8(r5)
     8e0:	31000115 	stw	r4,4(r6)
     8e4:	44000315 	stw	r16,12(r8)
     8e8:	1805d0ba 	srai	r2,r3,2
     8ec:	01400044 	movi	r5,1
     8f0:	288a983a 	sll	r5,r5,r2
     8f4:	21404336 	bltu	r4,r5,a04 <_malloc_r+0x304>
     8f8:	2144703a 	and	r2,r4,r5
     8fc:	10000a1e 	bne	r2,zero,928 <_malloc_r+0x228>
     900:	00bfff04 	movi	r2,-4
     904:	294b883a 	add	r5,r5,r5
     908:	1886703a 	and	r3,r3,r2
     90c:	2144703a 	and	r2,r4,r5
     910:	18c00104 	addi	r3,r3,4
     914:	1000041e 	bne	r2,zero,928 <_malloc_r+0x228>
     918:	294b883a 	add	r5,r5,r5
     91c:	2144703a 	and	r2,r4,r5
     920:	18c00104 	addi	r3,r3,4
     924:	103ffc26 	beq	r2,zero,918 <__alt_data_end+0xfffe20d0>
     928:	023fff04 	movi	r8,-4
     92c:	01c003c4 	movi	r7,15
     930:	18c5883a 	add	r2,r3,r3
     934:	1085883a 	add	r2,r2,r2
     938:	1085883a 	add	r2,r2,r2
     93c:	9895883a 	add	r10,r19,r2
     940:	52c00304 	addi	r11,r10,12
     944:	1819883a 	mov	r12,r3
     948:	5c000017 	ldw	r16,0(r11)
     94c:	59bffd04 	addi	r6,r11,-12
     950:	8180041e 	bne	r16,r6,964 <_malloc_r+0x264>
     954:	0000ce06 	br	c90 <_malloc_r+0x590>
     958:	2000d70e 	bge	r4,zero,cb8 <_malloc_r+0x5b8>
     95c:	84000317 	ldw	r16,12(r16)
     960:	8180cb26 	beq	r16,r6,c90 <_malloc_r+0x590>
     964:	80800117 	ldw	r2,4(r16)
     968:	1204703a 	and	r2,r2,r8
     96c:	1449c83a 	sub	r4,r2,r17
     970:	393ff90e 	bge	r7,r4,958 <__alt_data_end+0xfffe2110>
     974:	80800317 	ldw	r2,12(r16)
     978:	80c00217 	ldw	r3,8(r16)
     97c:	89400054 	ori	r5,r17,1
     980:	81400115 	stw	r5,4(r16)
     984:	18800315 	stw	r2,12(r3)
     988:	10c00215 	stw	r3,8(r2)
     98c:	8463883a 	add	r17,r16,r17
     990:	9c400515 	stw	r17,20(r19)
     994:	9c400415 	stw	r17,16(r19)
     998:	20800054 	ori	r2,r4,1
     99c:	88800115 	stw	r2,4(r17)
     9a0:	8a400315 	stw	r9,12(r17)
     9a4:	8a400215 	stw	r9,8(r17)
     9a8:	8923883a 	add	r17,r17,r4
     9ac:	89000015 	stw	r4,0(r17)
     9b0:	9009883a 	mov	r4,r18
     9b4:	000d5980 	call	d598 <__malloc_unlock>
     9b8:	80800204 	addi	r2,r16,8
     9bc:	003f7d06 	br	7b4 <__alt_data_end+0xfffe1f6c>
     9c0:	00800304 	movi	r2,12
     9c4:	90800015 	stw	r2,0(r18)
     9c8:	0005883a 	mov	r2,zero
     9cc:	003f7906 	br	7b4 <__alt_data_end+0xfffe1f6c>
     9d0:	01401f84 	movi	r5,126
     9d4:	01c00fc4 	movi	r7,63
     9d8:	003f8d06 	br	810 <__alt_data_end+0xfffe1fc8>
     9dc:	81000317 	ldw	r4,12(r16)
     9e0:	003f6a06 	br	78c <__alt_data_end+0xfffe1f44>
     9e4:	81c5883a 	add	r2,r16,r7
     9e8:	10c00117 	ldw	r3,4(r2)
     9ec:	9009883a 	mov	r4,r18
     9f0:	18c00054 	ori	r3,r3,1
     9f4:	10c00115 	stw	r3,4(r2)
     9f8:	000d5980 	call	d598 <__malloc_unlock>
     9fc:	80800204 	addi	r2,r16,8
     a00:	003f6c06 	br	7b4 <__alt_data_end+0xfffe1f6c>
     a04:	9c000217 	ldw	r16,8(r19)
     a08:	00bfff04 	movi	r2,-4
     a0c:	85800117 	ldw	r22,4(r16)
     a10:	b0ac703a 	and	r22,r22,r2
     a14:	b4400336 	bltu	r22,r17,a24 <_malloc_r+0x324>
     a18:	b445c83a 	sub	r2,r22,r17
     a1c:	00c003c4 	movi	r3,15
     a20:	18805d16 	blt	r3,r2,b98 <_malloc_r+0x498>
     a24:	05c00074 	movhi	r23,1
     a28:	00800074 	movhi	r2,1
     a2c:	bdc52d04 	addi	r23,r23,5300
     a30:	108bfa04 	addi	r2,r2,12264
     a34:	15400017 	ldw	r21,0(r2)
     a38:	b9000017 	ldw	r4,0(r23)
     a3c:	00ffffc4 	movi	r3,-1
     a40:	858d883a 	add	r6,r16,r22
     a44:	8d6b883a 	add	r21,r17,r21
     a48:	20c0e426 	beq	r4,r3,ddc <_malloc_r+0x6dc>
     a4c:	ad4403c4 	addi	r21,r21,4111
     a50:	00fc0004 	movi	r3,-4096
     a54:	a8ea703a 	and	r21,r21,r3
     a58:	9009883a 	mov	r4,r18
     a5c:	a80b883a 	mov	r5,r21
     a60:	d9800015 	stw	r6,0(sp)
     a64:	0000f100 	call	f10 <_sbrk_r>
     a68:	00ffffc4 	movi	r3,-1
     a6c:	1029883a 	mov	r20,r2
     a70:	d9800017 	ldw	r6,0(sp)
     a74:	10c0a426 	beq	r2,r3,d08 <_malloc_r+0x608>
     a78:	1180a236 	bltu	r2,r6,d04 <_malloc_r+0x604>
     a7c:	07000074 	movhi	fp,1
     a80:	e70c0604 	addi	fp,fp,12312
     a84:	e0c00017 	ldw	r3,0(fp)
     a88:	a8c7883a 	add	r3,r21,r3
     a8c:	e0c00015 	stw	r3,0(fp)
     a90:	3500da26 	beq	r6,r20,dfc <_malloc_r+0x6fc>
     a94:	b9000017 	ldw	r4,0(r23)
     a98:	00bfffc4 	movi	r2,-1
     a9c:	2080e426 	beq	r4,r2,e30 <_malloc_r+0x730>
     aa0:	a185c83a 	sub	r2,r20,r6
     aa4:	1885883a 	add	r2,r3,r2
     aa8:	e0800015 	stw	r2,0(fp)
     aac:	a0c001cc 	andi	r3,r20,7
     ab0:	1800b526 	beq	r3,zero,d88 <_malloc_r+0x688>
     ab4:	a0e9c83a 	sub	r20,r20,r3
     ab8:	00840204 	movi	r2,4104
     abc:	a5000204 	addi	r20,r20,8
     ac0:	10c7c83a 	sub	r3,r2,r3
     ac4:	a545883a 	add	r2,r20,r21
     ac8:	1083ffcc 	andi	r2,r2,4095
     acc:	18abc83a 	sub	r21,r3,r2
     ad0:	9009883a 	mov	r4,r18
     ad4:	a80b883a 	mov	r5,r21
     ad8:	0000f100 	call	f10 <_sbrk_r>
     adc:	00ffffc4 	movi	r3,-1
     ae0:	10c0d026 	beq	r2,r3,e24 <_malloc_r+0x724>
     ae4:	1507c83a 	sub	r3,r2,r20
     ae8:	a8c7883a 	add	r3,r21,r3
     aec:	18c00054 	ori	r3,r3,1
     af0:	e0800017 	ldw	r2,0(fp)
     af4:	9d000215 	stw	r20,8(r19)
     af8:	a0c00115 	stw	r3,4(r20)
     afc:	a887883a 	add	r3,r21,r2
     b00:	e0c00015 	stw	r3,0(fp)
     b04:	84c00e26 	beq	r16,r19,b40 <_malloc_r+0x440>
     b08:	018003c4 	movi	r6,15
     b0c:	3580a02e 	bgeu	r6,r22,d90 <_malloc_r+0x690>
     b10:	81400117 	ldw	r5,4(r16)
     b14:	013ffe04 	movi	r4,-8
     b18:	b0bffd04 	addi	r2,r22,-12
     b1c:	1104703a 	and	r2,r2,r4
     b20:	2900004c 	andi	r4,r5,1
     b24:	1108b03a 	or	r4,r2,r4
     b28:	81000115 	stw	r4,4(r16)
     b2c:	01400144 	movi	r5,5
     b30:	8089883a 	add	r4,r16,r2
     b34:	21400115 	stw	r5,4(r4)
     b38:	21400215 	stw	r5,8(r4)
     b3c:	3080c036 	bltu	r6,r2,e40 <_malloc_r+0x740>
     b40:	00800074 	movhi	r2,1
     b44:	108bf904 	addi	r2,r2,12260
     b48:	11000017 	ldw	r4,0(r2)
     b4c:	20c0012e 	bgeu	r4,r3,b54 <_malloc_r+0x454>
     b50:	10c00015 	stw	r3,0(r2)
     b54:	00800074 	movhi	r2,1
     b58:	108bf804 	addi	r2,r2,12256
     b5c:	11000017 	ldw	r4,0(r2)
     b60:	9c000217 	ldw	r16,8(r19)
     b64:	20c0012e 	bgeu	r4,r3,b6c <_malloc_r+0x46c>
     b68:	10c00015 	stw	r3,0(r2)
     b6c:	80c00117 	ldw	r3,4(r16)
     b70:	00bfff04 	movi	r2,-4
     b74:	1886703a 	and	r3,r3,r2
     b78:	1c45c83a 	sub	r2,r3,r17
     b7c:	1c400236 	bltu	r3,r17,b88 <_malloc_r+0x488>
     b80:	00c003c4 	movi	r3,15
     b84:	18800416 	blt	r3,r2,b98 <_malloc_r+0x498>
     b88:	9009883a 	mov	r4,r18
     b8c:	000d5980 	call	d598 <__malloc_unlock>
     b90:	0005883a 	mov	r2,zero
     b94:	003f0706 	br	7b4 <__alt_data_end+0xfffe1f6c>
     b98:	88c00054 	ori	r3,r17,1
     b9c:	80c00115 	stw	r3,4(r16)
     ba0:	8463883a 	add	r17,r16,r17
     ba4:	10800054 	ori	r2,r2,1
     ba8:	9c400215 	stw	r17,8(r19)
     bac:	88800115 	stw	r2,4(r17)
     bb0:	9009883a 	mov	r4,r18
     bb4:	000d5980 	call	d598 <__malloc_unlock>
     bb8:	80800204 	addi	r2,r16,8
     bbc:	003efd06 	br	7b4 <__alt_data_end+0xfffe1f6c>
     bc0:	00800504 	movi	r2,20
     bc4:	10c0482e 	bgeu	r2,r3,ce8 <_malloc_r+0x5e8>
     bc8:	00801504 	movi	r2,84
     bcc:	10c06836 	bltu	r2,r3,d70 <_malloc_r+0x670>
     bd0:	8806d33a 	srli	r3,r17,12
     bd4:	19c01b84 	addi	r7,r3,110
     bd8:	39cb883a 	add	r5,r7,r7
     bdc:	003f0c06 	br	810 <__alt_data_end+0xfffe1fc8>
     be0:	3804d27a 	srli	r2,r7,9
     be4:	01000104 	movi	r4,4
     be8:	2080422e 	bgeu	r4,r2,cf4 <_malloc_r+0x5f4>
     bec:	01000504 	movi	r4,20
     bf0:	20807c36 	bltu	r4,r2,de4 <_malloc_r+0x6e4>
     bf4:	110016c4 	addi	r4,r2,91
     bf8:	210b883a 	add	r5,r4,r4
     bfc:	294b883a 	add	r5,r5,r5
     c00:	294b883a 	add	r5,r5,r5
     c04:	994b883a 	add	r5,r19,r5
     c08:	28800217 	ldw	r2,8(r5)
     c0c:	02000074 	movhi	r8,1
     c10:	423e8204 	addi	r8,r8,-1528
     c14:	11406326 	beq	r2,r5,da4 <_malloc_r+0x6a4>
     c18:	01bfff04 	movi	r6,-4
     c1c:	11000117 	ldw	r4,4(r2)
     c20:	2188703a 	and	r4,r4,r6
     c24:	3900022e 	bgeu	r7,r4,c30 <_malloc_r+0x530>
     c28:	10800217 	ldw	r2,8(r2)
     c2c:	28bffb1e 	bne	r5,r2,c1c <__alt_data_end+0xfffe23d4>
     c30:	11800317 	ldw	r6,12(r2)
     c34:	99000117 	ldw	r4,4(r19)
     c38:	81800315 	stw	r6,12(r16)
     c3c:	80800215 	stw	r2,8(r16)
     c40:	34000215 	stw	r16,8(r6)
     c44:	14000315 	stw	r16,12(r2)
     c48:	003f2706 	br	8e8 <__alt_data_end+0xfffe20a0>
     c4c:	88c00054 	ori	r3,r17,1
     c50:	80c00115 	stw	r3,4(r16)
     c54:	8463883a 	add	r17,r16,r17
     c58:	34400515 	stw	r17,20(r6)
     c5c:	34400415 	stw	r17,16(r6)
     c60:	10c00054 	ori	r3,r2,1
     c64:	8a400315 	stw	r9,12(r17)
     c68:	8a400215 	stw	r9,8(r17)
     c6c:	88c00115 	stw	r3,4(r17)
     c70:	88a3883a 	add	r17,r17,r2
     c74:	88800015 	stw	r2,0(r17)
     c78:	9009883a 	mov	r4,r18
     c7c:	000d5980 	call	d598 <__malloc_unlock>
     c80:	80800204 	addi	r2,r16,8
     c84:	003ecb06 	br	7b4 <__alt_data_end+0xfffe1f6c>
     c88:	31000117 	ldw	r4,4(r6)
     c8c:	003f1606 	br	8e8 <__alt_data_end+0xfffe20a0>
     c90:	63000044 	addi	r12,r12,1
     c94:	608000cc 	andi	r2,r12,3
     c98:	5ac00204 	addi	r11,r11,8
     c9c:	103f2a1e 	bne	r2,zero,948 <__alt_data_end+0xfffe2100>
     ca0:	00002106 	br	d28 <_malloc_r+0x628>
     ca4:	80800204 	addi	r2,r16,8
     ca8:	84000517 	ldw	r16,20(r16)
     cac:	143eb31e 	bne	r2,r16,77c <__alt_data_end+0xfffe1f34>
     cb0:	18c00084 	addi	r3,r3,2
     cb4:	003eec06 	br	868 <__alt_data_end+0xfffe2020>
     cb8:	8085883a 	add	r2,r16,r2
     cbc:	10c00117 	ldw	r3,4(r2)
     cc0:	81000317 	ldw	r4,12(r16)
     cc4:	81400217 	ldw	r5,8(r16)
     cc8:	18c00054 	ori	r3,r3,1
     ccc:	10c00115 	stw	r3,4(r2)
     cd0:	29000315 	stw	r4,12(r5)
     cd4:	21400215 	stw	r5,8(r4)
     cd8:	9009883a 	mov	r4,r18
     cdc:	000d5980 	call	d598 <__malloc_unlock>
     ce0:	80800204 	addi	r2,r16,8
     ce4:	003eb306 	br	7b4 <__alt_data_end+0xfffe1f6c>
     ce8:	19c016c4 	addi	r7,r3,91
     cec:	39cb883a 	add	r5,r7,r7
     cf0:	003ec706 	br	810 <__alt_data_end+0xfffe1fc8>
     cf4:	3804d1ba 	srli	r2,r7,6
     cf8:	11000e04 	addi	r4,r2,56
     cfc:	210b883a 	add	r5,r4,r4
     d00:	003fbe06 	br	bfc <__alt_data_end+0xfffe23b4>
     d04:	84ff5d26 	beq	r16,r19,a7c <__alt_data_end+0xfffe2234>
     d08:	9c000217 	ldw	r16,8(r19)
     d0c:	00bfff04 	movi	r2,-4
     d10:	80c00117 	ldw	r3,4(r16)
     d14:	1886703a 	and	r3,r3,r2
     d18:	003f9706 	br	b78 <__alt_data_end+0xfffe2330>
     d1c:	52800017 	ldw	r10,0(r10)
     d20:	18ffffc4 	addi	r3,r3,-1
     d24:	50805c1e 	bne	r10,r2,e98 <_malloc_r+0x798>
     d28:	190000cc 	andi	r4,r3,3
     d2c:	50bffe04 	addi	r2,r10,-8
     d30:	203ffa1e 	bne	r4,zero,d1c <__alt_data_end+0xfffe24d4>
     d34:	98800117 	ldw	r2,4(r19)
     d38:	0146303a 	nor	r3,zero,r5
     d3c:	1884703a 	and	r2,r3,r2
     d40:	98800115 	stw	r2,4(r19)
     d44:	294b883a 	add	r5,r5,r5
     d48:	117f2e36 	bltu	r2,r5,a04 <__alt_data_end+0xfffe21bc>
     d4c:	283f2d26 	beq	r5,zero,a04 <__alt_data_end+0xfffe21bc>
     d50:	1146703a 	and	r3,r2,r5
     d54:	1800521e 	bne	r3,zero,ea0 <_malloc_r+0x7a0>
     d58:	6007883a 	mov	r3,r12
     d5c:	294b883a 	add	r5,r5,r5
     d60:	1148703a 	and	r4,r2,r5
     d64:	18c00104 	addi	r3,r3,4
     d68:	203ffc26 	beq	r4,zero,d5c <__alt_data_end+0xfffe2514>
     d6c:	003ef006 	br	930 <__alt_data_end+0xfffe20e8>
     d70:	00805504 	movi	r2,340
     d74:	10c01336 	bltu	r2,r3,dc4 <_malloc_r+0x6c4>
     d78:	8806d3fa 	srli	r3,r17,15
     d7c:	19c01dc4 	addi	r7,r3,119
     d80:	39cb883a 	add	r5,r7,r7
     d84:	003ea206 	br	810 <__alt_data_end+0xfffe1fc8>
     d88:	00c40004 	movi	r3,4096
     d8c:	003f4d06 	br	ac4 <__alt_data_end+0xfffe227c>
     d90:	00800044 	movi	r2,1
     d94:	a0800115 	stw	r2,4(r20)
     d98:	a021883a 	mov	r16,r20
     d9c:	0007883a 	mov	r3,zero
     da0:	003f7506 	br	b78 <__alt_data_end+0xfffe2330>
     da4:	200bd0ba 	srai	r5,r4,2
     da8:	01800044 	movi	r6,1
     dac:	41000117 	ldw	r4,4(r8)
     db0:	314a983a 	sll	r5,r6,r5
     db4:	100d883a 	mov	r6,r2
     db8:	2908b03a 	or	r4,r5,r4
     dbc:	41000115 	stw	r4,4(r8)
     dc0:	003f9d06 	br	c38 <__alt_data_end+0xfffe23f0>
     dc4:	00815504 	movi	r2,1364
     dc8:	10c01336 	bltu	r2,r3,e18 <_malloc_r+0x718>
     dcc:	8806d4ba 	srli	r3,r17,18
     dd0:	19c01f04 	addi	r7,r3,124
     dd4:	39cb883a 	add	r5,r7,r7
     dd8:	003e8d06 	br	810 <__alt_data_end+0xfffe1fc8>
     ddc:	ad400404 	addi	r21,r21,16
     de0:	003f1d06 	br	a58 <__alt_data_end+0xfffe2210>
     de4:	01001504 	movi	r4,84
     de8:	20801c36 	bltu	r4,r2,e5c <_malloc_r+0x75c>
     dec:	3804d33a 	srli	r2,r7,12
     df0:	11001b84 	addi	r4,r2,110
     df4:	210b883a 	add	r5,r4,r4
     df8:	003f8006 	br	bfc <__alt_data_end+0xfffe23b4>
     dfc:	3083ffcc 	andi	r2,r6,4095
     e00:	103f241e 	bne	r2,zero,a94 <__alt_data_end+0xfffe224c>
     e04:	99000217 	ldw	r4,8(r19)
     e08:	ad85883a 	add	r2,r21,r22
     e0c:	10800054 	ori	r2,r2,1
     e10:	20800115 	stw	r2,4(r4)
     e14:	003f4a06 	br	b40 <__alt_data_end+0xfffe22f8>
     e18:	01403f04 	movi	r5,252
     e1c:	01c01f84 	movi	r7,126
     e20:	003e7b06 	br	810 <__alt_data_end+0xfffe1fc8>
     e24:	00c00044 	movi	r3,1
     e28:	002b883a 	mov	r21,zero
     e2c:	003f3006 	br	af0 <__alt_data_end+0xfffe22a8>
     e30:	00800074 	movhi	r2,1
     e34:	10852d04 	addi	r2,r2,5300
     e38:	15000015 	stw	r20,0(r2)
     e3c:	003f1b06 	br	aac <__alt_data_end+0xfffe2264>
     e40:	9009883a 	mov	r4,r18
     e44:	81400204 	addi	r5,r16,8
     e48:	00052340 	call	5234 <_free_r>
     e4c:	00800074 	movhi	r2,1
     e50:	108c0604 	addi	r2,r2,12312
     e54:	10c00017 	ldw	r3,0(r2)
     e58:	003f3906 	br	b40 <__alt_data_end+0xfffe22f8>
     e5c:	01005504 	movi	r4,340
     e60:	20800436 	bltu	r4,r2,e74 <_malloc_r+0x774>
     e64:	3804d3fa 	srli	r2,r7,15
     e68:	11001dc4 	addi	r4,r2,119
     e6c:	210b883a 	add	r5,r4,r4
     e70:	003f6206 	br	bfc <__alt_data_end+0xfffe23b4>
     e74:	01015504 	movi	r4,1364
     e78:	20800436 	bltu	r4,r2,e8c <_malloc_r+0x78c>
     e7c:	3804d4ba 	srli	r2,r7,18
     e80:	11001f04 	addi	r4,r2,124
     e84:	210b883a 	add	r5,r4,r4
     e88:	003f5c06 	br	bfc <__alt_data_end+0xfffe23b4>
     e8c:	01403f04 	movi	r5,252
     e90:	01001f84 	movi	r4,126
     e94:	003f5906 	br	bfc <__alt_data_end+0xfffe23b4>
     e98:	98800117 	ldw	r2,4(r19)
     e9c:	003fa906 	br	d44 <__alt_data_end+0xfffe24fc>
     ea0:	6007883a 	mov	r3,r12
     ea4:	003ea206 	br	930 <__alt_data_end+0xfffe20e8>

00000ea8 <_printf_r>:
     ea8:	defffd04 	addi	sp,sp,-12
     eac:	dfc00015 	stw	ra,0(sp)
     eb0:	d9800115 	stw	r6,4(sp)
     eb4:	d9c00215 	stw	r7,8(sp)
     eb8:	280d883a 	mov	r6,r5
     ebc:	21400217 	ldw	r5,8(r4)
     ec0:	d9c00104 	addi	r7,sp,4
     ec4:	0000f640 	call	f64 <___vfprintf_internal_r>
     ec8:	dfc00017 	ldw	ra,0(sp)
     ecc:	dec00304 	addi	sp,sp,12
     ed0:	f800283a 	ret

00000ed4 <printf>:
     ed4:	defffc04 	addi	sp,sp,-16
     ed8:	dfc00015 	stw	ra,0(sp)
     edc:	d9400115 	stw	r5,4(sp)
     ee0:	d9800215 	stw	r6,8(sp)
     ee4:	d9c00315 	stw	r7,12(sp)
     ee8:	00800074 	movhi	r2,1
     eec:	10853004 	addi	r2,r2,5312
     ef0:	10800017 	ldw	r2,0(r2)
     ef4:	200b883a 	mov	r5,r4
     ef8:	d9800104 	addi	r6,sp,4
     efc:	11000217 	ldw	r4,8(r2)
     f00:	00030600 	call	3060 <__vfprintf_internal>
     f04:	dfc00017 	ldw	ra,0(sp)
     f08:	dec00404 	addi	sp,sp,16
     f0c:	f800283a 	ret

00000f10 <_sbrk_r>:
     f10:	defffd04 	addi	sp,sp,-12
     f14:	dc000015 	stw	r16,0(sp)
     f18:	04000074 	movhi	r16,1
     f1c:	dc400115 	stw	r17,4(sp)
     f20:	840bfb04 	addi	r16,r16,12268
     f24:	2023883a 	mov	r17,r4
     f28:	2809883a 	mov	r4,r5
     f2c:	dfc00215 	stw	ra,8(sp)
     f30:	80000015 	stw	zero,0(r16)
     f34:	000d78c0 	call	d78c <sbrk>
     f38:	00ffffc4 	movi	r3,-1
     f3c:	10c00526 	beq	r2,r3,f54 <_sbrk_r+0x44>
     f40:	dfc00217 	ldw	ra,8(sp)
     f44:	dc400117 	ldw	r17,4(sp)
     f48:	dc000017 	ldw	r16,0(sp)
     f4c:	dec00304 	addi	sp,sp,12
     f50:	f800283a 	ret
     f54:	80c00017 	ldw	r3,0(r16)
     f58:	183ff926 	beq	r3,zero,f40 <__alt_data_end+0xfffe26f8>
     f5c:	88c00015 	stw	r3,0(r17)
     f60:	003ff706 	br	f40 <__alt_data_end+0xfffe26f8>

00000f64 <___vfprintf_internal_r>:
     f64:	defeb604 	addi	sp,sp,-1320
     f68:	dfc14915 	stw	ra,1316(sp)
     f6c:	ddc14715 	stw	r23,1308(sp)
     f70:	dd814615 	stw	r22,1304(sp)
     f74:	202f883a 	mov	r23,r4
     f78:	282d883a 	mov	r22,r5
     f7c:	d9812a15 	stw	r6,1192(sp)
     f80:	d9c12d15 	stw	r7,1204(sp)
     f84:	df014815 	stw	fp,1312(sp)
     f88:	dd414515 	stw	r21,1300(sp)
     f8c:	dd014415 	stw	r20,1296(sp)
     f90:	dcc14315 	stw	r19,1292(sp)
     f94:	dc814215 	stw	r18,1288(sp)
     f98:	dc414115 	stw	r17,1284(sp)
     f9c:	dc014015 	stw	r16,1280(sp)
     fa0:	00057400 	call	5740 <_localeconv_r>
     fa4:	10800017 	ldw	r2,0(r2)
     fa8:	1009883a 	mov	r4,r2
     fac:	d8813515 	stw	r2,1236(sp)
     fb0:	0006f0c0 	call	6f0c <strlen>
     fb4:	d8813815 	stw	r2,1248(sp)
     fb8:	b8000226 	beq	r23,zero,fc4 <___vfprintf_internal_r+0x60>
     fbc:	b8800e17 	ldw	r2,56(r23)
     fc0:	10010526 	beq	r2,zero,13d8 <___vfprintf_internal_r+0x474>
     fc4:	b0c0030b 	ldhu	r3,12(r22)
     fc8:	1908000c 	andi	r4,r3,8192
     fcc:	1805883a 	mov	r2,r3
     fd0:	2000071e 	bne	r4,zero,ff0 <___vfprintf_internal_r+0x8c>
     fd4:	b1001917 	ldw	r4,100(r22)
     fd8:	18880014 	ori	r2,r3,8192
     fdc:	00f7ffc4 	movi	r3,-8193
     fe0:	20c8703a 	and	r4,r4,r3
     fe4:	b080030d 	sth	r2,12(r22)
     fe8:	1007883a 	mov	r3,r2
     fec:	b1001915 	stw	r4,100(r22)
     ff0:	1100020c 	andi	r4,r2,8
     ff4:	2000a826 	beq	r4,zero,1298 <___vfprintf_internal_r+0x334>
     ff8:	b1000417 	ldw	r4,16(r22)
     ffc:	2000a626 	beq	r4,zero,1298 <___vfprintf_internal_r+0x334>
    1000:	1080068c 	andi	r2,r2,26
    1004:	01000284 	movi	r4,10
    1008:	1100ac26 	beq	r2,r4,12bc <___vfprintf_internal_r+0x358>
    100c:	d8c10e04 	addi	r3,sp,1080
    1010:	d9010dc4 	addi	r4,sp,1079
    1014:	d9400404 	addi	r5,sp,16
    1018:	05000074 	movhi	r20,1
    101c:	1905c83a 	sub	r2,r3,r4
    1020:	a53dd384 	addi	r20,r20,-2226
    1024:	d8c12815 	stw	r3,1184(sp)
    1028:	d9012915 	stw	r4,1188(sp)
    102c:	d9411e15 	stw	r5,1144(sp)
    1030:	d8012015 	stw	zero,1152(sp)
    1034:	d8011f15 	stw	zero,1148(sp)
    1038:	d8013315 	stw	zero,1228(sp)
    103c:	d8013715 	stw	zero,1244(sp)
    1040:	d8013915 	stw	zero,1252(sp)
    1044:	d8013b15 	stw	zero,1260(sp)
    1048:	d8013a15 	stw	zero,1256(sp)
    104c:	d8012f15 	stw	zero,1212(sp)
    1050:	2811883a 	mov	r8,r5
    1054:	d8813c15 	stw	r2,1264(sp)
    1058:	d8c12a17 	ldw	r3,1192(sp)
    105c:	18800007 	ldb	r2,0(r3)
    1060:	10021326 	beq	r2,zero,18b0 <___vfprintf_internal_r+0x94c>
    1064:	00c00944 	movi	r3,37
    1068:	dc012a17 	ldw	r16,1192(sp)
    106c:	10c0021e 	bne	r2,r3,1078 <___vfprintf_internal_r+0x114>
    1070:	00001606 	br	10cc <___vfprintf_internal_r+0x168>
    1074:	10c08526 	beq	r2,r3,128c <___vfprintf_internal_r+0x328>
    1078:	84000044 	addi	r16,r16,1
    107c:	80800007 	ldb	r2,0(r16)
    1080:	103ffc1e 	bne	r2,zero,1074 <__alt_data_end+0xfffe282c>
    1084:	d9012a17 	ldw	r4,1192(sp)
    1088:	8123c83a 	sub	r17,r16,r4
    108c:	88000f26 	beq	r17,zero,10cc <___vfprintf_internal_r+0x168>
    1090:	d8812a17 	ldw	r2,1192(sp)
    1094:	d8c12017 	ldw	r3,1152(sp)
    1098:	44400115 	stw	r17,4(r8)
    109c:	40800015 	stw	r2,0(r8)
    10a0:	d8811f17 	ldw	r2,1148(sp)
    10a4:	1c47883a 	add	r3,r3,r17
    10a8:	d8c12015 	stw	r3,1152(sp)
    10ac:	10800044 	addi	r2,r2,1
    10b0:	d8811f15 	stw	r2,1148(sp)
    10b4:	00c001c4 	movi	r3,7
    10b8:	1880b516 	blt	r3,r2,1390 <___vfprintf_internal_r+0x42c>
    10bc:	42000204 	addi	r8,r8,8
    10c0:	d8c12f17 	ldw	r3,1212(sp)
    10c4:	1c47883a 	add	r3,r3,r17
    10c8:	d8c12f15 	stw	r3,1212(sp)
    10cc:	80800007 	ldb	r2,0(r16)
    10d0:	1000b626 	beq	r2,zero,13ac <___vfprintf_internal_r+0x448>
    10d4:	80800044 	addi	r2,r16,1
    10d8:	84000047 	ldb	r16,1(r16)
    10dc:	0027883a 	mov	r19,zero
    10e0:	0039883a 	mov	fp,zero
    10e4:	dcc12b05 	stb	r19,1196(sp)
    10e8:	d8012785 	stb	zero,1182(sp)
    10ec:	027fffc4 	movi	r9,-1
    10f0:	d8012e15 	stw	zero,1208(sp)
    10f4:	04401604 	movi	r17,88
    10f8:	04800244 	movi	r18,9
    10fc:	da012a15 	stw	r8,1192(sp)
    1100:	e027883a 	mov	r19,fp
    1104:	17000044 	addi	fp,r2,1
    1108:	80bff804 	addi	r2,r16,-32
    110c:	88831236 	bltu	r17,r2,1d58 <___vfprintf_internal_r+0xdf4>
    1110:	100490ba 	slli	r2,r2,2
    1114:	01000034 	movhi	r4,0
    1118:	21044a04 	addi	r4,r4,4392
    111c:	1105883a 	add	r2,r2,r4
    1120:	10800017 	ldw	r2,0(r2)
    1124:	1000683a 	jmp	r2
    1128:	00001c74 	movhi	zero,113
    112c:	00001d58 	cmpnei	zero,zero,117
    1130:	00001d58 	cmpnei	zero,zero,117
    1134:	00001c90 	cmplti	zero,zero,114
    1138:	00001d58 	cmpnei	zero,zero,117
    113c:	00001d58 	cmpnei	zero,zero,117
    1140:	00001d58 	cmpnei	zero,zero,117
    1144:	00001d58 	cmpnei	zero,zero,117
    1148:	00001d58 	cmpnei	zero,zero,117
    114c:	00001d58 	cmpnei	zero,zero,117
    1150:	00001ca0 	cmpeqi	zero,zero,114
    1154:	00001cc8 	cmpgei	zero,zero,115
    1158:	00001d58 	cmpnei	zero,zero,117
    115c:	000013e4 	muli	zero,zero,79
    1160:	000013f4 	movhi	zero,79
    1164:	00001d58 	cmpnei	zero,zero,117
    1168:	00001444 	movi	zero,81
    116c:	00001454 	movui	zero,81
    1170:	00001454 	movui	zero,81
    1174:	00001454 	movui	zero,81
    1178:	00001454 	movui	zero,81
    117c:	00001454 	movui	zero,81
    1180:	00001454 	movui	zero,81
    1184:	00001454 	movui	zero,81
    1188:	00001454 	movui	zero,81
    118c:	00001454 	movui	zero,81
    1190:	00001d58 	cmpnei	zero,zero,117
    1194:	00001d58 	cmpnei	zero,zero,117
    1198:	00001d58 	cmpnei	zero,zero,117
    119c:	00001d58 	cmpnei	zero,zero,117
    11a0:	00001d58 	cmpnei	zero,zero,117
    11a4:	00001d58 	cmpnei	zero,zero,117
    11a8:	00001d58 	cmpnei	zero,zero,117
    11ac:	00001d58 	cmpnei	zero,zero,117
    11b0:	00001d58 	cmpnei	zero,zero,117
    11b4:	00001d58 	cmpnei	zero,zero,117
    11b8:	00001498 	cmpnei	zero,zero,82
    11bc:	000018b8 	rdprs	zero,zero,98
    11c0:	00001d58 	cmpnei	zero,zero,117
    11c4:	000018b8 	rdprs	zero,zero,98
    11c8:	00001d58 	cmpnei	zero,zero,117
    11cc:	00001d58 	cmpnei	zero,zero,117
    11d0:	00001d58 	cmpnei	zero,zero,117
    11d4:	00001d58 	cmpnei	zero,zero,117
    11d8:	00001960 	cmpeqi	zero,zero,101
    11dc:	00001d58 	cmpnei	zero,zero,117
    11e0:	00001d58 	cmpnei	zero,zero,117
    11e4:	00001970 	cmpltui	zero,zero,101
    11e8:	00001d58 	cmpnei	zero,zero,117
    11ec:	00001d58 	cmpnei	zero,zero,117
    11f0:	00001d58 	cmpnei	zero,zero,117
    11f4:	00001d58 	cmpnei	zero,zero,117
    11f8:	00001d58 	cmpnei	zero,zero,117
    11fc:	000019b4 	movhi	zero,102
    1200:	00001d58 	cmpnei	zero,zero,117
    1204:	00001d58 	cmpnei	zero,zero,117
    1208:	000019ec 	andhi	zero,zero,103
    120c:	00001d58 	cmpnei	zero,zero,117
    1210:	00001d58 	cmpnei	zero,zero,117
    1214:	00001d58 	cmpnei	zero,zero,117
    1218:	00001d58 	cmpnei	zero,zero,117
    121c:	00001d58 	cmpnei	zero,zero,117
    1220:	00001d58 	cmpnei	zero,zero,117
    1224:	00001d58 	cmpnei	zero,zero,117
    1228:	00001d58 	cmpnei	zero,zero,117
    122c:	00001d58 	cmpnei	zero,zero,117
    1230:	00001d58 	cmpnei	zero,zero,117
    1234:	00001c28 	cmpgeui	zero,zero,112
    1238:	00001bd4 	movui	zero,111
    123c:	000018b8 	rdprs	zero,zero,98
    1240:	000018b8 	rdprs	zero,zero,98
    1244:	000018b8 	rdprs	zero,zero,98
    1248:	00001c18 	cmpnei	zero,zero,112
    124c:	00001bd4 	movui	zero,111
    1250:	00001d58 	cmpnei	zero,zero,117
    1254:	00001d58 	cmpnei	zero,zero,117
    1258:	00001af0 	cmpltui	zero,zero,107
    125c:	00001d58 	cmpnei	zero,zero,117
    1260:	00001b08 	cmpgei	zero,zero,108
    1264:	00001b48 	cmpgei	zero,zero,109
    1268:	00001b88 	cmpgei	zero,zero,110
    126c:	00001a54 	movui	zero,105
    1270:	00001d58 	cmpnei	zero,zero,117
    1274:	00001cdc 	xori	zero,zero,115
    1278:	00001d58 	cmpnei	zero,zero,117
    127c:	00001a64 	muli	zero,zero,105
    1280:	00001d58 	cmpnei	zero,zero,117
    1284:	00001d58 	cmpnei	zero,zero,117
    1288:	00001aa4 	muli	zero,zero,106
    128c:	d9412a17 	ldw	r5,1192(sp)
    1290:	8163c83a 	sub	r17,r16,r5
    1294:	003f7d06 	br	108c <__alt_data_end+0xfffe2844>
    1298:	b809883a 	mov	r4,r23
    129c:	b00b883a 	mov	r5,r22
    12a0:	00030840 	call	3084 <__swsetup_r>
    12a4:	10002d1e 	bne	r2,zero,135c <___vfprintf_internal_r+0x3f8>
    12a8:	b0c0030b 	ldhu	r3,12(r22)
    12ac:	01000284 	movi	r4,10
    12b0:	1805883a 	mov	r2,r3
    12b4:	1080068c 	andi	r2,r2,26
    12b8:	113f541e 	bne	r2,r4,100c <__alt_data_end+0xfffe27c4>
    12bc:	b080038b 	ldhu	r2,14(r22)
    12c0:	113fffcc 	andi	r4,r2,65535
    12c4:	2120001c 	xori	r4,r4,32768
    12c8:	21200004 	addi	r4,r4,-32768
    12cc:	203f4f16 	blt	r4,zero,100c <__alt_data_end+0xfffe27c4>
    12d0:	b2c01917 	ldw	r11,100(r22)
    12d4:	b2800717 	ldw	r10,28(r22)
    12d8:	b2400917 	ldw	r9,36(r22)
    12dc:	d9812a17 	ldw	r6,1192(sp)
    12e0:	d9c12d17 	ldw	r7,1204(sp)
    12e4:	02010004 	movi	r8,1024
    12e8:	18ffff4c 	andi	r3,r3,65533
    12ec:	d881078d 	sth	r2,1054(sp)
    12f0:	b809883a 	mov	r4,r23
    12f4:	d8800404 	addi	r2,sp,16
    12f8:	d9410404 	addi	r5,sp,1040
    12fc:	d8c1070d 	sth	r3,1052(sp)
    1300:	dac11d15 	stw	r11,1140(sp)
    1304:	da810b15 	stw	r10,1068(sp)
    1308:	da410d15 	stw	r9,1076(sp)
    130c:	d8810415 	stw	r2,1040(sp)
    1310:	d8810815 	stw	r2,1056(sp)
    1314:	da010615 	stw	r8,1048(sp)
    1318:	da010915 	stw	r8,1060(sp)
    131c:	d8010a15 	stw	zero,1064(sp)
    1320:	0000f640 	call	f64 <___vfprintf_internal_r>
    1324:	1021883a 	mov	r16,r2
    1328:	10000416 	blt	r2,zero,133c <___vfprintf_internal_r+0x3d8>
    132c:	b809883a 	mov	r4,r23
    1330:	d9410404 	addi	r5,sp,1040
    1334:	0004b040 	call	4b04 <_fflush_r>
    1338:	1007301e 	bne	r2,zero,2ffc <___vfprintf_internal_r+0x2098>
    133c:	d881070b 	ldhu	r2,1052(sp)
    1340:	1080100c 	andi	r2,r2,64
    1344:	10000326 	beq	r2,zero,1354 <___vfprintf_internal_r+0x3f0>
    1348:	b080030b 	ldhu	r2,12(r22)
    134c:	10801014 	ori	r2,r2,64
    1350:	b080030d 	sth	r2,12(r22)
    1354:	8005883a 	mov	r2,r16
    1358:	00000106 	br	1360 <___vfprintf_internal_r+0x3fc>
    135c:	00bfffc4 	movi	r2,-1
    1360:	dfc14917 	ldw	ra,1316(sp)
    1364:	df014817 	ldw	fp,1312(sp)
    1368:	ddc14717 	ldw	r23,1308(sp)
    136c:	dd814617 	ldw	r22,1304(sp)
    1370:	dd414517 	ldw	r21,1300(sp)
    1374:	dd014417 	ldw	r20,1296(sp)
    1378:	dcc14317 	ldw	r19,1292(sp)
    137c:	dc814217 	ldw	r18,1288(sp)
    1380:	dc414117 	ldw	r17,1284(sp)
    1384:	dc014017 	ldw	r16,1280(sp)
    1388:	dec14a04 	addi	sp,sp,1320
    138c:	f800283a 	ret
    1390:	b809883a 	mov	r4,r23
    1394:	b00b883a 	mov	r5,r22
    1398:	d9811e04 	addi	r6,sp,1144
    139c:	00070a00 	call	70a0 <__sprint_r>
    13a0:	1000081e 	bne	r2,zero,13c4 <___vfprintf_internal_r+0x460>
    13a4:	da000404 	addi	r8,sp,16
    13a8:	003f4506 	br	10c0 <__alt_data_end+0xfffe2878>
    13ac:	d8812017 	ldw	r2,1152(sp)
    13b0:	10000426 	beq	r2,zero,13c4 <___vfprintf_internal_r+0x460>
    13b4:	b809883a 	mov	r4,r23
    13b8:	b00b883a 	mov	r5,r22
    13bc:	d9811e04 	addi	r6,sp,1144
    13c0:	00070a00 	call	70a0 <__sprint_r>
    13c4:	b080030b 	ldhu	r2,12(r22)
    13c8:	1080100c 	andi	r2,r2,64
    13cc:	103fe31e 	bne	r2,zero,135c <__alt_data_end+0xfffe2b14>
    13d0:	d8812f17 	ldw	r2,1212(sp)
    13d4:	003fe206 	br	1360 <__alt_data_end+0xfffe2b18>
    13d8:	b809883a 	mov	r4,r23
    13dc:	00050c00 	call	50c0 <__sinit>
    13e0:	003ef806 	br	fc4 <__alt_data_end+0xfffe277c>
    13e4:	e005883a 	mov	r2,fp
    13e8:	9cc00114 	ori	r19,r19,4
    13ec:	e4000007 	ldb	r16,0(fp)
    13f0:	003f4406 	br	1104 <__alt_data_end+0xfffe28bc>
    13f4:	e4000007 	ldb	r16,0(fp)
    13f8:	01000a84 	movi	r4,42
    13fc:	e0800044 	addi	r2,fp,1
    1400:	8106f626 	beq	r16,r4,2fdc <___vfprintf_internal_r+0x2078>
    1404:	857ff404 	addi	r21,r16,-48
    1408:	1039883a 	mov	fp,r2
    140c:	0013883a 	mov	r9,zero
    1410:	957f3d36 	bltu	r18,r21,1108 <__alt_data_end+0xfffe28c0>
    1414:	0009883a 	mov	r4,zero
    1418:	01400284 	movi	r5,10
    141c:	000a7740 	call	a774 <__mulsi3>
    1420:	e4000007 	ldb	r16,0(fp)
    1424:	a889883a 	add	r4,r21,r2
    1428:	e7000044 	addi	fp,fp,1
    142c:	857ff404 	addi	r21,r16,-48
    1430:	957ff92e 	bgeu	r18,r21,1418 <__alt_data_end+0xfffe2bd0>
    1434:	2013883a 	mov	r9,r4
    1438:	203f330e 	bge	r4,zero,1108 <__alt_data_end+0xfffe28c0>
    143c:	027fffc4 	movi	r9,-1
    1440:	003f3106 	br	1108 <__alt_data_end+0xfffe28c0>
    1444:	9cc02014 	ori	r19,r19,128
    1448:	e005883a 	mov	r2,fp
    144c:	e4000007 	ldb	r16,0(fp)
    1450:	003f2c06 	br	1104 <__alt_data_end+0xfffe28bc>
    1454:	857ff404 	addi	r21,r16,-48
    1458:	d8012e15 	stw	zero,1208(sp)
    145c:	e021883a 	mov	r16,fp
    1460:	0009883a 	mov	r4,zero
    1464:	da412c15 	stw	r9,1200(sp)
    1468:	01400284 	movi	r5,10
    146c:	000a7740 	call	a774 <__mulsi3>
    1470:	81400007 	ldb	r5,0(r16)
    1474:	1549883a 	add	r4,r2,r21
    1478:	e7000044 	addi	fp,fp,1
    147c:	2d7ff404 	addi	r21,r5,-48
    1480:	e021883a 	mov	r16,fp
    1484:	957ff82e 	bgeu	r18,r21,1468 <__alt_data_end+0xfffe2c20>
    1488:	2821883a 	mov	r16,r5
    148c:	d9012e15 	stw	r4,1208(sp)
    1490:	da412c17 	ldw	r9,1200(sp)
    1494:	003f1c06 	br	1108 <__alt_data_end+0xfffe28c0>
    1498:	da012a17 	ldw	r8,1192(sp)
    149c:	df012a15 	stw	fp,1192(sp)
    14a0:	9839883a 	mov	fp,r19
    14a4:	dcc12b03 	ldbu	r19,1196(sp)
    14a8:	e7000414 	ori	fp,fp,16
    14ac:	e080080c 	andi	r2,fp,32
    14b0:	dcc12785 	stb	r19,1182(sp)
    14b4:	d8c12d17 	ldw	r3,1204(sp)
    14b8:	1001ce26 	beq	r2,zero,1bf4 <___vfprintf_internal_r+0xc90>
    14bc:	d9012d17 	ldw	r4,1204(sp)
    14c0:	18800117 	ldw	r2,4(r3)
    14c4:	1c800017 	ldw	r18,0(r3)
    14c8:	21000204 	addi	r4,r4,8
    14cc:	d9012d15 	stw	r4,1204(sp)
    14d0:	102b883a 	mov	r21,r2
    14d4:	10044916 	blt	r2,zero,25fc <___vfprintf_internal_r+0x1698>
    14d8:	dcc12783 	ldbu	r19,1182(sp)
    14dc:	da413215 	stw	r9,1224(sp)
    14e0:	00800044 	movi	r2,1
    14e4:	9546b03a 	or	r3,r18,r21
    14e8:	48000216 	blt	r9,zero,14f4 <___vfprintf_internal_r+0x590>
    14ec:	013fdfc4 	movi	r4,-129
    14f0:	e138703a 	and	fp,fp,r4
    14f4:	1802251e 	bne	r3,zero,1d8c <___vfprintf_internal_r+0xe28>
    14f8:	48031726 	beq	r9,zero,2158 <___vfprintf_internal_r+0x11f4>
    14fc:	10803fcc 	andi	r2,r2,255
    1500:	00c00044 	movi	r3,1
    1504:	10c24526 	beq	r2,r3,1e1c <___vfprintf_internal_r+0xeb8>
    1508:	00c00084 	movi	r3,2
    150c:	10c33426 	beq	r2,r3,21e0 <___vfprintf_internal_r+0x127c>
    1510:	d8c10e04 	addi	r3,sp,1080
    1514:	9008d0fa 	srli	r4,r18,3
    1518:	a80a977a 	slli	r5,r21,29
    151c:	a82ad0fa 	srli	r21,r21,3
    1520:	948001cc 	andi	r18,r18,7
    1524:	90800c04 	addi	r2,r18,48
    1528:	18ffffc4 	addi	r3,r3,-1
    152c:	2924b03a 	or	r18,r5,r4
    1530:	18800005 	stb	r2,0(r3)
    1534:	9548b03a 	or	r4,r18,r21
    1538:	203ff61e 	bne	r4,zero,1514 <__alt_data_end+0xfffe2ccc>
    153c:	e100004c 	andi	r4,fp,1
    1540:	d8c13115 	stw	r3,1220(sp)
    1544:	20039a1e 	bne	r4,zero,23b0 <___vfprintf_internal_r+0x144c>
    1548:	d8812817 	ldw	r2,1184(sp)
    154c:	10e3c83a 	sub	r17,r2,r3
    1550:	8805883a 	mov	r2,r17
    1554:	8a40010e 	bge	r17,r9,155c <___vfprintf_internal_r+0x5f8>
    1558:	4805883a 	mov	r2,r9
    155c:	d8812b15 	stw	r2,1196(sp)
    1560:	d8013415 	stw	zero,1232(sp)
    1564:	98803fcc 	andi	r2,r19,255
    1568:	1080201c 	xori	r2,r2,128
    156c:	10bfe004 	addi	r2,r2,-128
    1570:	10000326 	beq	r2,zero,1580 <___vfprintf_internal_r+0x61c>
    1574:	d8c12b17 	ldw	r3,1196(sp)
    1578:	18c00044 	addi	r3,r3,1
    157c:	d8c12b15 	stw	r3,1196(sp)
    1580:	e0c0008c 	andi	r3,fp,2
    1584:	d8c12c15 	stw	r3,1200(sp)
    1588:	18000326 	beq	r3,zero,1598 <___vfprintf_internal_r+0x634>
    158c:	d8c12b17 	ldw	r3,1196(sp)
    1590:	18c00084 	addi	r3,r3,2
    1594:	d8c12b15 	stw	r3,1196(sp)
    1598:	e0c0210c 	andi	r3,fp,132
    159c:	d8c13015 	stw	r3,1216(sp)
    15a0:	1801f81e 	bne	r3,zero,1d84 <___vfprintf_internal_r+0xe20>
    15a4:	d9012e17 	ldw	r4,1208(sp)
    15a8:	d8c12b17 	ldw	r3,1196(sp)
    15ac:	20ebc83a 	sub	r21,r4,r3
    15b0:	0541f40e 	bge	zero,r21,1d84 <___vfprintf_internal_r+0xe20>
    15b4:	02400404 	movi	r9,16
    15b8:	d8c12017 	ldw	r3,1152(sp)
    15bc:	d8811f17 	ldw	r2,1148(sp)
    15c0:	4d45750e 	bge	r9,r21,2b98 <___vfprintf_internal_r+0x1c34>
    15c4:	01400074 	movhi	r5,1
    15c8:	297dd784 	addi	r5,r5,-2210
    15cc:	d9413615 	stw	r5,1240(sp)
    15d0:	4827883a 	mov	r19,r9
    15d4:	048001c4 	movi	r18,7
    15d8:	00000306 	br	15e8 <___vfprintf_internal_r+0x684>
    15dc:	ad7ffc04 	addi	r21,r21,-16
    15e0:	42000204 	addi	r8,r8,8
    15e4:	9d40130e 	bge	r19,r21,1634 <___vfprintf_internal_r+0x6d0>
    15e8:	01000074 	movhi	r4,1
    15ec:	18c00404 	addi	r3,r3,16
    15f0:	10800044 	addi	r2,r2,1
    15f4:	213dd784 	addi	r4,r4,-2210
    15f8:	41000015 	stw	r4,0(r8)
    15fc:	44c00115 	stw	r19,4(r8)
    1600:	d8c12015 	stw	r3,1152(sp)
    1604:	d8811f15 	stw	r2,1148(sp)
    1608:	90bff40e 	bge	r18,r2,15dc <__alt_data_end+0xfffe2d94>
    160c:	b809883a 	mov	r4,r23
    1610:	b00b883a 	mov	r5,r22
    1614:	d9811e04 	addi	r6,sp,1144
    1618:	00070a00 	call	70a0 <__sprint_r>
    161c:	103f691e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    1620:	ad7ffc04 	addi	r21,r21,-16
    1624:	d8c12017 	ldw	r3,1152(sp)
    1628:	d8811f17 	ldw	r2,1148(sp)
    162c:	da000404 	addi	r8,sp,16
    1630:	9d7fed16 	blt	r19,r21,15e8 <__alt_data_end+0xfffe2da0>
    1634:	d9413617 	ldw	r5,1240(sp)
    1638:	a8c7883a 	add	r3,r21,r3
    163c:	10800044 	addi	r2,r2,1
    1640:	41400015 	stw	r5,0(r8)
    1644:	45400115 	stw	r21,4(r8)
    1648:	d8c12015 	stw	r3,1152(sp)
    164c:	d8811f15 	stw	r2,1148(sp)
    1650:	010001c4 	movi	r4,7
    1654:	20832b16 	blt	r4,r2,2304 <___vfprintf_internal_r+0x13a0>
    1658:	d8812787 	ldb	r2,1182(sp)
    165c:	42000204 	addi	r8,r8,8
    1660:	10000c26 	beq	r2,zero,1694 <___vfprintf_internal_r+0x730>
    1664:	d8811f17 	ldw	r2,1148(sp)
    1668:	d9012784 	addi	r4,sp,1182
    166c:	18c00044 	addi	r3,r3,1
    1670:	10800044 	addi	r2,r2,1
    1674:	41000015 	stw	r4,0(r8)
    1678:	01000044 	movi	r4,1
    167c:	41000115 	stw	r4,4(r8)
    1680:	d8c12015 	stw	r3,1152(sp)
    1684:	d8811f15 	stw	r2,1148(sp)
    1688:	010001c4 	movi	r4,7
    168c:	2082c416 	blt	r4,r2,21a0 <___vfprintf_internal_r+0x123c>
    1690:	42000204 	addi	r8,r8,8
    1694:	d8812c17 	ldw	r2,1200(sp)
    1698:	10000c26 	beq	r2,zero,16cc <___vfprintf_internal_r+0x768>
    169c:	d8811f17 	ldw	r2,1148(sp)
    16a0:	d9012704 	addi	r4,sp,1180
    16a4:	18c00084 	addi	r3,r3,2
    16a8:	10800044 	addi	r2,r2,1
    16ac:	41000015 	stw	r4,0(r8)
    16b0:	01000084 	movi	r4,2
    16b4:	41000115 	stw	r4,4(r8)
    16b8:	d8c12015 	stw	r3,1152(sp)
    16bc:	d8811f15 	stw	r2,1148(sp)
    16c0:	010001c4 	movi	r4,7
    16c4:	2082be16 	blt	r4,r2,21c0 <___vfprintf_internal_r+0x125c>
    16c8:	42000204 	addi	r8,r8,8
    16cc:	d9013017 	ldw	r4,1216(sp)
    16d0:	00802004 	movi	r2,128
    16d4:	20822026 	beq	r4,r2,1f58 <___vfprintf_internal_r+0xff4>
    16d8:	d9413217 	ldw	r5,1224(sp)
    16dc:	2c67c83a 	sub	r19,r5,r17
    16e0:	04c0260e 	bge	zero,r19,177c <___vfprintf_internal_r+0x818>
    16e4:	05400404 	movi	r21,16
    16e8:	d8811f17 	ldw	r2,1148(sp)
    16ec:	acc4720e 	bge	r21,r19,28b8 <___vfprintf_internal_r+0x1954>
    16f0:	01400074 	movhi	r5,1
    16f4:	297dd384 	addi	r5,r5,-2226
    16f8:	d9412c15 	stw	r5,1200(sp)
    16fc:	048001c4 	movi	r18,7
    1700:	00000306 	br	1710 <___vfprintf_internal_r+0x7ac>
    1704:	9cfffc04 	addi	r19,r19,-16
    1708:	42000204 	addi	r8,r8,8
    170c:	acc0110e 	bge	r21,r19,1754 <___vfprintf_internal_r+0x7f0>
    1710:	18c00404 	addi	r3,r3,16
    1714:	10800044 	addi	r2,r2,1
    1718:	45000015 	stw	r20,0(r8)
    171c:	45400115 	stw	r21,4(r8)
    1720:	d8c12015 	stw	r3,1152(sp)
    1724:	d8811f15 	stw	r2,1148(sp)
    1728:	90bff60e 	bge	r18,r2,1704 <__alt_data_end+0xfffe2ebc>
    172c:	b809883a 	mov	r4,r23
    1730:	b00b883a 	mov	r5,r22
    1734:	d9811e04 	addi	r6,sp,1144
    1738:	00070a00 	call	70a0 <__sprint_r>
    173c:	103f211e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    1740:	9cfffc04 	addi	r19,r19,-16
    1744:	d8c12017 	ldw	r3,1152(sp)
    1748:	d8811f17 	ldw	r2,1148(sp)
    174c:	da000404 	addi	r8,sp,16
    1750:	acffef16 	blt	r21,r19,1710 <__alt_data_end+0xfffe2ec8>
    1754:	d9012c17 	ldw	r4,1200(sp)
    1758:	1cc7883a 	add	r3,r3,r19
    175c:	10800044 	addi	r2,r2,1
    1760:	41000015 	stw	r4,0(r8)
    1764:	44c00115 	stw	r19,4(r8)
    1768:	d8c12015 	stw	r3,1152(sp)
    176c:	d8811f15 	stw	r2,1148(sp)
    1770:	010001c4 	movi	r4,7
    1774:	20828216 	blt	r4,r2,2180 <___vfprintf_internal_r+0x121c>
    1778:	42000204 	addi	r8,r8,8
    177c:	e080400c 	andi	r2,fp,256
    1780:	1001ac1e 	bne	r2,zero,1e34 <___vfprintf_internal_r+0xed0>
    1784:	d8811f17 	ldw	r2,1148(sp)
    1788:	d9413117 	ldw	r5,1220(sp)
    178c:	1c47883a 	add	r3,r3,r17
    1790:	10800044 	addi	r2,r2,1
    1794:	41400015 	stw	r5,0(r8)
    1798:	44400115 	stw	r17,4(r8)
    179c:	d8c12015 	stw	r3,1152(sp)
    17a0:	d8811f15 	stw	r2,1148(sp)
    17a4:	010001c4 	movi	r4,7
    17a8:	20825d16 	blt	r4,r2,2120 <___vfprintf_internal_r+0x11bc>
    17ac:	42000204 	addi	r8,r8,8
    17b0:	e080010c 	andi	r2,fp,4
    17b4:	10003126 	beq	r2,zero,187c <___vfprintf_internal_r+0x918>
    17b8:	d8812e17 	ldw	r2,1208(sp)
    17bc:	d9012b17 	ldw	r4,1196(sp)
    17c0:	1121c83a 	sub	r16,r2,r4
    17c4:	04002d0e 	bge	zero,r16,187c <___vfprintf_internal_r+0x918>
    17c8:	04400404 	movi	r17,16
    17cc:	d8811f17 	ldw	r2,1148(sp)
    17d0:	8c05340e 	bge	r17,r16,2ca4 <___vfprintf_internal_r+0x1d40>
    17d4:	01000074 	movhi	r4,1
    17d8:	213dd784 	addi	r4,r4,-2210
    17dc:	d9013615 	stw	r4,1240(sp)
    17e0:	048001c4 	movi	r18,7
    17e4:	00000306 	br	17f4 <___vfprintf_internal_r+0x890>
    17e8:	843ffc04 	addi	r16,r16,-16
    17ec:	42000204 	addi	r8,r8,8
    17f0:	8c00130e 	bge	r17,r16,1840 <___vfprintf_internal_r+0x8dc>
    17f4:	01400074 	movhi	r5,1
    17f8:	18c00404 	addi	r3,r3,16
    17fc:	10800044 	addi	r2,r2,1
    1800:	297dd784 	addi	r5,r5,-2210
    1804:	41400015 	stw	r5,0(r8)
    1808:	44400115 	stw	r17,4(r8)
    180c:	d8c12015 	stw	r3,1152(sp)
    1810:	d8811f15 	stw	r2,1148(sp)
    1814:	90bff40e 	bge	r18,r2,17e8 <__alt_data_end+0xfffe2fa0>
    1818:	b809883a 	mov	r4,r23
    181c:	b00b883a 	mov	r5,r22
    1820:	d9811e04 	addi	r6,sp,1144
    1824:	00070a00 	call	70a0 <__sprint_r>
    1828:	103ee61e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    182c:	843ffc04 	addi	r16,r16,-16
    1830:	d8c12017 	ldw	r3,1152(sp)
    1834:	d8811f17 	ldw	r2,1148(sp)
    1838:	da000404 	addi	r8,sp,16
    183c:	8c3fed16 	blt	r17,r16,17f4 <__alt_data_end+0xfffe2fac>
    1840:	d9013617 	ldw	r4,1240(sp)
    1844:	1c07883a 	add	r3,r3,r16
    1848:	10800044 	addi	r2,r2,1
    184c:	41000015 	stw	r4,0(r8)
    1850:	44000115 	stw	r16,4(r8)
    1854:	d8c12015 	stw	r3,1152(sp)
    1858:	d8811f15 	stw	r2,1148(sp)
    185c:	010001c4 	movi	r4,7
    1860:	2080060e 	bge	r4,r2,187c <___vfprintf_internal_r+0x918>
    1864:	b809883a 	mov	r4,r23
    1868:	b00b883a 	mov	r5,r22
    186c:	d9811e04 	addi	r6,sp,1144
    1870:	00070a00 	call	70a0 <__sprint_r>
    1874:	103ed31e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    1878:	d8c12017 	ldw	r3,1152(sp)
    187c:	df012b17 	ldw	fp,1196(sp)
    1880:	d9412e17 	ldw	r5,1208(sp)
    1884:	e140010e 	bge	fp,r5,188c <___vfprintf_internal_r+0x928>
    1888:	2839883a 	mov	fp,r5
    188c:	d8812f17 	ldw	r2,1212(sp)
    1890:	1705883a 	add	r2,r2,fp
    1894:	d8812f15 	stw	r2,1212(sp)
    1898:	1802291e 	bne	r3,zero,2140 <___vfprintf_internal_r+0x11dc>
    189c:	d8c12a17 	ldw	r3,1192(sp)
    18a0:	d8011f15 	stw	zero,1148(sp)
    18a4:	da000404 	addi	r8,sp,16
    18a8:	18800007 	ldb	r2,0(r3)
    18ac:	103ded1e 	bne	r2,zero,1064 <__alt_data_end+0xfffe281c>
    18b0:	dc012a17 	ldw	r16,1192(sp)
    18b4:	003e0506 	br	10cc <__alt_data_end+0xfffe2884>
    18b8:	d9012d17 	ldw	r4,1204(sp)
    18bc:	d9412d17 	ldw	r5,1204(sp)
    18c0:	da012a17 	ldw	r8,1192(sp)
    18c4:	21000017 	ldw	r4,0(r4)
    18c8:	29400117 	ldw	r5,4(r5)
    18cc:	df012a15 	stw	fp,1192(sp)
    18d0:	9839883a 	mov	fp,r19
    18d4:	dcc12b03 	ldbu	r19,1196(sp)
    18d8:	d9013715 	stw	r4,1244(sp)
    18dc:	d9413915 	stw	r5,1252(sp)
    18e0:	da013f15 	stw	r8,1276(sp)
    18e4:	da413e15 	stw	r9,1272(sp)
    18e8:	dcc12785 	stb	r19,1182(sp)
    18ec:	0006cb80 	call	6cb8 <__fpclassifyd>
    18f0:	d8c12d17 	ldw	r3,1204(sp)
    18f4:	04400044 	movi	r17,1
    18f8:	da013f17 	ldw	r8,1276(sp)
    18fc:	1c800204 	addi	r18,r3,8
    1900:	da413e17 	ldw	r9,1272(sp)
    1904:	d9013717 	ldw	r4,1244(sp)
    1908:	d9413917 	ldw	r5,1252(sp)
    190c:	1443451e 	bne	r2,r17,2624 <___vfprintf_internal_r+0x16c0>
    1910:	000d883a 	mov	r6,zero
    1914:	000f883a 	mov	r7,zero
    1918:	000bb1c0 	call	bb1c <__ledf2>
    191c:	da013f17 	ldw	r8,1276(sp)
    1920:	1004fe16 	blt	r2,zero,2d1c <___vfprintf_internal_r+0x1db8>
    1924:	dcc12783 	ldbu	r19,1182(sp)
    1928:	008011c4 	movi	r2,71
    192c:	14045d0e 	bge	r2,r16,2aa4 <___vfprintf_internal_r+0x1b40>
    1930:	01400074 	movhi	r5,1
    1934:	297dc404 	addi	r5,r5,-2288
    1938:	d9413115 	stw	r5,1220(sp)
    193c:	00c000c4 	movi	r3,3
    1940:	00bfdfc4 	movi	r2,-129
    1944:	d8c12b15 	stw	r3,1196(sp)
    1948:	e0b8703a 	and	fp,fp,r2
    194c:	dc812d15 	stw	r18,1204(sp)
    1950:	1823883a 	mov	r17,r3
    1954:	d8013215 	stw	zero,1224(sp)
    1958:	d8013415 	stw	zero,1232(sp)
    195c:	003f0106 	br	1564 <__alt_data_end+0xfffe2d1c>
    1960:	9cc00214 	ori	r19,r19,8
    1964:	e005883a 	mov	r2,fp
    1968:	e4000007 	ldb	r16,0(fp)
    196c:	003de506 	br	1104 <__alt_data_end+0xfffe28bc>
    1970:	da012a17 	ldw	r8,1192(sp)
    1974:	df012a15 	stw	fp,1192(sp)
    1978:	9f000414 	ori	fp,r19,16
    197c:	e0c0080c 	andi	r3,fp,32
    1980:	d8812d17 	ldw	r2,1204(sp)
    1984:	18007626 	beq	r3,zero,1b60 <___vfprintf_internal_r+0xbfc>
    1988:	d9412d17 	ldw	r5,1204(sp)
    198c:	14800017 	ldw	r18,0(r2)
    1990:	15400117 	ldw	r21,4(r2)
    1994:	29400204 	addi	r5,r5,8
    1998:	d9412d15 	stw	r5,1204(sp)
    199c:	0005883a 	mov	r2,zero
    19a0:	9546b03a 	or	r3,r18,r21
    19a4:	d8012785 	stb	zero,1182(sp)
    19a8:	da413215 	stw	r9,1224(sp)
    19ac:	0027883a 	mov	r19,zero
    19b0:	003ecd06 	br	14e8 <__alt_data_end+0xfffe2ca0>
    19b4:	da012a17 	ldw	r8,1192(sp)
    19b8:	df012a15 	stw	fp,1192(sp)
    19bc:	9f000414 	ori	fp,r19,16
    19c0:	e0c0080c 	andi	r3,fp,32
    19c4:	d8812d17 	ldw	r2,1204(sp)
    19c8:	18002c26 	beq	r3,zero,1a7c <___vfprintf_internal_r+0xb18>
    19cc:	d9012d17 	ldw	r4,1204(sp)
    19d0:	14800017 	ldw	r18,0(r2)
    19d4:	15400117 	ldw	r21,4(r2)
    19d8:	21000204 	addi	r4,r4,8
    19dc:	d9012d15 	stw	r4,1204(sp)
    19e0:	00800044 	movi	r2,1
    19e4:	9546b03a 	or	r3,r18,r21
    19e8:	003fee06 	br	19a4 <__alt_data_end+0xfffe315c>
    19ec:	da012a17 	ldw	r8,1192(sp)
    19f0:	df012a15 	stw	fp,1192(sp)
    19f4:	9839883a 	mov	fp,r19
    19f8:	dcc12b03 	ldbu	r19,1196(sp)
    19fc:	01400074 	movhi	r5,1
    1a00:	297dc704 	addi	r5,r5,-2276
    1a04:	dcc12785 	stb	r19,1182(sp)
    1a08:	d9413b15 	stw	r5,1260(sp)
    1a0c:	e0c0080c 	andi	r3,fp,32
    1a10:	d8812d17 	ldw	r2,1204(sp)
    1a14:	18002e26 	beq	r3,zero,1ad0 <___vfprintf_internal_r+0xb6c>
    1a18:	d9412d17 	ldw	r5,1204(sp)
    1a1c:	14800017 	ldw	r18,0(r2)
    1a20:	15400117 	ldw	r21,4(r2)
    1a24:	29400204 	addi	r5,r5,8
    1a28:	d9412d15 	stw	r5,1204(sp)
    1a2c:	e080004c 	andi	r2,fp,1
    1a30:	10025c26 	beq	r2,zero,23a4 <___vfprintf_internal_r+0x1440>
    1a34:	9546b03a 	or	r3,r18,r21
    1a38:	18038f26 	beq	r3,zero,2878 <___vfprintf_internal_r+0x1914>
    1a3c:	00800c04 	movi	r2,48
    1a40:	d8812705 	stb	r2,1180(sp)
    1a44:	dc012745 	stb	r16,1181(sp)
    1a48:	e7000094 	ori	fp,fp,2
    1a4c:	00800084 	movi	r2,2
    1a50:	003fd406 	br	19a4 <__alt_data_end+0xfffe315c>
    1a54:	9cc00814 	ori	r19,r19,32
    1a58:	e005883a 	mov	r2,fp
    1a5c:	e4000007 	ldb	r16,0(fp)
    1a60:	003da806 	br	1104 <__alt_data_end+0xfffe28bc>
    1a64:	da012a17 	ldw	r8,1192(sp)
    1a68:	df012a15 	stw	fp,1192(sp)
    1a6c:	9839883a 	mov	fp,r19
    1a70:	e0c0080c 	andi	r3,fp,32
    1a74:	d8812d17 	ldw	r2,1204(sp)
    1a78:	183fd41e 	bne	r3,zero,19cc <__alt_data_end+0xfffe3184>
    1a7c:	e0c0040c 	andi	r3,fp,16
    1a80:	18035f26 	beq	r3,zero,2800 <___vfprintf_internal_r+0x189c>
    1a84:	d9412d17 	ldw	r5,1204(sp)
    1a88:	14800017 	ldw	r18,0(r2)
    1a8c:	002b883a 	mov	r21,zero
    1a90:	29400104 	addi	r5,r5,4
    1a94:	d9412d15 	stw	r5,1204(sp)
    1a98:	00800044 	movi	r2,1
    1a9c:	9007883a 	mov	r3,r18
    1aa0:	003fc006 	br	19a4 <__alt_data_end+0xfffe315c>
    1aa4:	da012a17 	ldw	r8,1192(sp)
    1aa8:	df012a15 	stw	fp,1192(sp)
    1aac:	9839883a 	mov	fp,r19
    1ab0:	dcc12b03 	ldbu	r19,1196(sp)
    1ab4:	01000074 	movhi	r4,1
    1ab8:	213dcc04 	addi	r4,r4,-2256
    1abc:	d9013b15 	stw	r4,1260(sp)
    1ac0:	dcc12785 	stb	r19,1182(sp)
    1ac4:	e0c0080c 	andi	r3,fp,32
    1ac8:	d8812d17 	ldw	r2,1204(sp)
    1acc:	183fd21e 	bne	r3,zero,1a18 <__alt_data_end+0xfffe31d0>
    1ad0:	e0c0040c 	andi	r3,fp,16
    1ad4:	18035426 	beq	r3,zero,2828 <___vfprintf_internal_r+0x18c4>
    1ad8:	d8c12d17 	ldw	r3,1204(sp)
    1adc:	14800017 	ldw	r18,0(r2)
    1ae0:	002b883a 	mov	r21,zero
    1ae4:	18c00104 	addi	r3,r3,4
    1ae8:	d8c12d15 	stw	r3,1204(sp)
    1aec:	003fcf06 	br	1a2c <__alt_data_end+0xfffe31e4>
    1af0:	e4000007 	ldb	r16,0(fp)
    1af4:	00801b04 	movi	r2,108
    1af8:	8083f726 	beq	r16,r2,2ad8 <___vfprintf_internal_r+0x1b74>
    1afc:	9cc00414 	ori	r19,r19,16
    1b00:	e005883a 	mov	r2,fp
    1b04:	003d7f06 	br	1104 <__alt_data_end+0xfffe28bc>
    1b08:	da012a17 	ldw	r8,1192(sp)
    1b0c:	df012a15 	stw	fp,1192(sp)
    1b10:	9839883a 	mov	fp,r19
    1b14:	dcc12b03 	ldbu	r19,1196(sp)
    1b18:	e080080c 	andi	r2,fp,32
    1b1c:	dcc12785 	stb	r19,1182(sp)
    1b20:	10032226 	beq	r2,zero,27ac <___vfprintf_internal_r+0x1848>
    1b24:	d9412d17 	ldw	r5,1204(sp)
    1b28:	d9012f17 	ldw	r4,1212(sp)
    1b2c:	28800017 	ldw	r2,0(r5)
    1b30:	2007d7fa 	srai	r3,r4,31
    1b34:	29400104 	addi	r5,r5,4
    1b38:	d9412d15 	stw	r5,1204(sp)
    1b3c:	11000015 	stw	r4,0(r2)
    1b40:	10c00115 	stw	r3,4(r2)
    1b44:	003d4406 	br	1058 <__alt_data_end+0xfffe2810>
    1b48:	da012a17 	ldw	r8,1192(sp)
    1b4c:	df012a15 	stw	fp,1192(sp)
    1b50:	9839883a 	mov	fp,r19
    1b54:	e0c0080c 	andi	r3,fp,32
    1b58:	d8812d17 	ldw	r2,1204(sp)
    1b5c:	183f8a1e 	bne	r3,zero,1988 <__alt_data_end+0xfffe3140>
    1b60:	e0c0040c 	andi	r3,fp,16
    1b64:	18031c26 	beq	r3,zero,27d8 <___vfprintf_internal_r+0x1874>
    1b68:	14800017 	ldw	r18,0(r2)
    1b6c:	d8812d17 	ldw	r2,1204(sp)
    1b70:	002b883a 	mov	r21,zero
    1b74:	9007883a 	mov	r3,r18
    1b78:	10800104 	addi	r2,r2,4
    1b7c:	d8812d15 	stw	r2,1204(sp)
    1b80:	0005883a 	mov	r2,zero
    1b84:	003f8706 	br	19a4 <__alt_data_end+0xfffe315c>
    1b88:	d9412d17 	ldw	r5,1204(sp)
    1b8c:	00800c04 	movi	r2,48
    1b90:	d8812705 	stb	r2,1180(sp)
    1b94:	2c800017 	ldw	r18,0(r5)
    1b98:	00801e04 	movi	r2,120
    1b9c:	d8812745 	stb	r2,1181(sp)
    1ba0:	00800074 	movhi	r2,1
    1ba4:	10bdcc04 	addi	r2,r2,-2256
    1ba8:	29400104 	addi	r5,r5,4
    1bac:	da012a17 	ldw	r8,1192(sp)
    1bb0:	d8813b15 	stw	r2,1260(sp)
    1bb4:	df012a15 	stw	fp,1192(sp)
    1bb8:	002b883a 	mov	r21,zero
    1bbc:	9f000094 	ori	fp,r19,2
    1bc0:	d9412d15 	stw	r5,1204(sp)
    1bc4:	00800084 	movi	r2,2
    1bc8:	04001e04 	movi	r16,120
    1bcc:	9007883a 	mov	r3,r18
    1bd0:	003f7406 	br	19a4 <__alt_data_end+0xfffe315c>
    1bd4:	da012a17 	ldw	r8,1192(sp)
    1bd8:	df012a15 	stw	fp,1192(sp)
    1bdc:	9839883a 	mov	fp,r19
    1be0:	dcc12b03 	ldbu	r19,1196(sp)
    1be4:	e080080c 	andi	r2,fp,32
    1be8:	d8c12d17 	ldw	r3,1204(sp)
    1bec:	dcc12785 	stb	r19,1182(sp)
    1bf0:	103e321e 	bne	r2,zero,14bc <__alt_data_end+0xfffe2c74>
    1bf4:	e080040c 	andi	r2,fp,16
    1bf8:	10031326 	beq	r2,zero,2848 <___vfprintf_internal_r+0x18e4>
    1bfc:	1c800017 	ldw	r18,0(r3)
    1c00:	d9412d17 	ldw	r5,1204(sp)
    1c04:	902bd7fa 	srai	r21,r18,31
    1c08:	29400104 	addi	r5,r5,4
    1c0c:	d9412d15 	stw	r5,1204(sp)
    1c10:	a805883a 	mov	r2,r21
    1c14:	003e2f06 	br	14d4 <__alt_data_end+0xfffe2c8c>
    1c18:	9cc01014 	ori	r19,r19,64
    1c1c:	e005883a 	mov	r2,fp
    1c20:	e4000007 	ldb	r16,0(fp)
    1c24:	003d3706 	br	1104 <__alt_data_end+0xfffe28bc>
    1c28:	d8c12d17 	ldw	r3,1204(sp)
    1c2c:	d9012d17 	ldw	r4,1204(sp)
    1c30:	da012a17 	ldw	r8,1192(sp)
    1c34:	18800017 	ldw	r2,0(r3)
    1c38:	21000104 	addi	r4,r4,4
    1c3c:	00c00044 	movi	r3,1
    1c40:	df012a15 	stw	fp,1192(sp)
    1c44:	d8c12b15 	stw	r3,1196(sp)
    1c48:	9839883a 	mov	fp,r19
    1c4c:	d8012785 	stb	zero,1182(sp)
    1c50:	d8810405 	stb	r2,1040(sp)
    1c54:	d9012d15 	stw	r4,1204(sp)
    1c58:	1823883a 	mov	r17,r3
    1c5c:	d8c10404 	addi	r3,sp,1040
    1c60:	d8013215 	stw	zero,1224(sp)
    1c64:	d8013415 	stw	zero,1232(sp)
    1c68:	d8c13115 	stw	r3,1220(sp)
    1c6c:	0005883a 	mov	r2,zero
    1c70:	003e4306 	br	1580 <__alt_data_end+0xfffe2d38>
    1c74:	d8812b07 	ldb	r2,1196(sp)
    1c78:	1002fc1e 	bne	r2,zero,286c <___vfprintf_internal_r+0x1908>
    1c7c:	00c00804 	movi	r3,32
    1c80:	d8c12b05 	stb	r3,1196(sp)
    1c84:	e005883a 	mov	r2,fp
    1c88:	e4000007 	ldb	r16,0(fp)
    1c8c:	003d1d06 	br	1104 <__alt_data_end+0xfffe28bc>
    1c90:	9cc00054 	ori	r19,r19,1
    1c94:	e005883a 	mov	r2,fp
    1c98:	e4000007 	ldb	r16,0(fp)
    1c9c:	003d1906 	br	1104 <__alt_data_end+0xfffe28bc>
    1ca0:	d9012d17 	ldw	r4,1204(sp)
    1ca4:	d9412d17 	ldw	r5,1204(sp)
    1ca8:	21000017 	ldw	r4,0(r4)
    1cac:	28c00104 	addi	r3,r5,4
    1cb0:	d9012e15 	stw	r4,1208(sp)
    1cb4:	20038c16 	blt	r4,zero,2ae8 <___vfprintf_internal_r+0x1b84>
    1cb8:	d8c12d15 	stw	r3,1204(sp)
    1cbc:	e005883a 	mov	r2,fp
    1cc0:	e4000007 	ldb	r16,0(fp)
    1cc4:	003d0f06 	br	1104 <__alt_data_end+0xfffe28bc>
    1cc8:	00c00ac4 	movi	r3,43
    1ccc:	d8c12b05 	stb	r3,1196(sp)
    1cd0:	e005883a 	mov	r2,fp
    1cd4:	e4000007 	ldb	r16,0(fp)
    1cd8:	003d0a06 	br	1104 <__alt_data_end+0xfffe28bc>
    1cdc:	d8c12d17 	ldw	r3,1204(sp)
    1ce0:	d9012d17 	ldw	r4,1204(sp)
    1ce4:	da012a17 	ldw	r8,1192(sp)
    1ce8:	18c00017 	ldw	r3,0(r3)
    1cec:	df012a15 	stw	fp,1192(sp)
    1cf0:	d8012785 	stb	zero,1182(sp)
    1cf4:	d8c13115 	stw	r3,1220(sp)
    1cf8:	9839883a 	mov	fp,r19
    1cfc:	24800104 	addi	r18,r4,4
    1d00:	1803f726 	beq	r3,zero,2ce0 <___vfprintf_internal_r+0x1d7c>
    1d04:	d9013117 	ldw	r4,1220(sp)
    1d08:	48038916 	blt	r9,zero,2b30 <___vfprintf_internal_r+0x1bcc>
    1d0c:	480d883a 	mov	r6,r9
    1d10:	000b883a 	mov	r5,zero
    1d14:	da013f15 	stw	r8,1276(sp)
    1d18:	da413e15 	stw	r9,1272(sp)
    1d1c:	000592c0 	call	592c <memchr>
    1d20:	da013f17 	ldw	r8,1276(sp)
    1d24:	da413e17 	ldw	r9,1272(sp)
    1d28:	10045926 	beq	r2,zero,2e90 <___vfprintf_internal_r+0x1f2c>
    1d2c:	d8c13117 	ldw	r3,1220(sp)
    1d30:	10e3c83a 	sub	r17,r2,r3
    1d34:	4c433516 	blt	r9,r17,2a0c <___vfprintf_internal_r+0x1aa8>
    1d38:	8805883a 	mov	r2,r17
    1d3c:	88038116 	blt	r17,zero,2b44 <___vfprintf_internal_r+0x1be0>
    1d40:	dcc12783 	ldbu	r19,1182(sp)
    1d44:	d8812b15 	stw	r2,1196(sp)
    1d48:	dc812d15 	stw	r18,1204(sp)
    1d4c:	d8013215 	stw	zero,1224(sp)
    1d50:	d8013415 	stw	zero,1232(sp)
    1d54:	003e0306 	br	1564 <__alt_data_end+0xfffe2d1c>
    1d58:	da012a17 	ldw	r8,1192(sp)
    1d5c:	df012a15 	stw	fp,1192(sp)
    1d60:	9839883a 	mov	fp,r19
    1d64:	dcc12b03 	ldbu	r19,1196(sp)
    1d68:	dcc12785 	stb	r19,1182(sp)
    1d6c:	803d8f26 	beq	r16,zero,13ac <__alt_data_end+0xfffe2b64>
    1d70:	00c00044 	movi	r3,1
    1d74:	d8c12b15 	stw	r3,1196(sp)
    1d78:	dc010405 	stb	r16,1040(sp)
    1d7c:	d8012785 	stb	zero,1182(sp)
    1d80:	003fb506 	br	1c58 <__alt_data_end+0xfffe3410>
    1d84:	d8c12017 	ldw	r3,1152(sp)
    1d88:	003e3506 	br	1660 <__alt_data_end+0xfffe2e18>
    1d8c:	10803fcc 	andi	r2,r2,255
    1d90:	00c00044 	movi	r3,1
    1d94:	10fddc1e 	bne	r2,r3,1508 <__alt_data_end+0xfffe2cc0>
    1d98:	a800021e 	bne	r21,zero,1da4 <___vfprintf_internal_r+0xe40>
    1d9c:	00800244 	movi	r2,9
    1da0:	14801e2e 	bgeu	r2,r18,1e1c <___vfprintf_internal_r+0xeb8>
    1da4:	dc012b15 	stw	r16,1196(sp)
    1da8:	dc410e04 	addi	r17,sp,1080
    1dac:	9021883a 	mov	r16,r18
    1db0:	da012c15 	stw	r8,1200(sp)
    1db4:	a825883a 	mov	r18,r21
    1db8:	482b883a 	mov	r21,r9
    1dbc:	8009883a 	mov	r4,r16
    1dc0:	900b883a 	mov	r5,r18
    1dc4:	01800284 	movi	r6,10
    1dc8:	000f883a 	mov	r7,zero
    1dcc:	000a02c0 	call	a02c <__umoddi3>
    1dd0:	10800c04 	addi	r2,r2,48
    1dd4:	8c7fffc4 	addi	r17,r17,-1
    1dd8:	8009883a 	mov	r4,r16
    1ddc:	900b883a 	mov	r5,r18
    1de0:	01800284 	movi	r6,10
    1de4:	000f883a 	mov	r7,zero
    1de8:	88800005 	stb	r2,0(r17)
    1dec:	00099ec0 	call	99ec <__udivdi3>
    1df0:	1021883a 	mov	r16,r2
    1df4:	10c4b03a 	or	r2,r2,r3
    1df8:	1825883a 	mov	r18,r3
    1dfc:	103fef1e 	bne	r2,zero,1dbc <__alt_data_end+0xfffe3574>
    1e00:	d9012817 	ldw	r4,1184(sp)
    1e04:	dc413115 	stw	r17,1220(sp)
    1e08:	dc012b17 	ldw	r16,1196(sp)
    1e0c:	da012c17 	ldw	r8,1200(sp)
    1e10:	a813883a 	mov	r9,r21
    1e14:	2463c83a 	sub	r17,r4,r17
    1e18:	003dcd06 	br	1550 <__alt_data_end+0xfffe2d08>
    1e1c:	94800c04 	addi	r18,r18,48
    1e20:	d8c10dc4 	addi	r3,sp,1079
    1e24:	dc810dc5 	stb	r18,1079(sp)
    1e28:	dc413c17 	ldw	r17,1264(sp)
    1e2c:	d8c13115 	stw	r3,1220(sp)
    1e30:	003dc706 	br	1550 <__alt_data_end+0xfffe2d08>
    1e34:	00801944 	movi	r2,101
    1e38:	1400720e 	bge	r2,r16,2004 <___vfprintf_internal_r+0x10a0>
    1e3c:	d9013717 	ldw	r4,1244(sp)
    1e40:	d9413917 	ldw	r5,1252(sp)
    1e44:	000d883a 	mov	r6,zero
    1e48:	000f883a 	mov	r7,zero
    1e4c:	d8c13d15 	stw	r3,1268(sp)
    1e50:	da013f15 	stw	r8,1276(sp)
    1e54:	000b9b80 	call	b9b8 <__eqdf2>
    1e58:	d8c13d17 	ldw	r3,1268(sp)
    1e5c:	da013f17 	ldw	r8,1276(sp)
    1e60:	1000f41e 	bne	r2,zero,2234 <___vfprintf_internal_r+0x12d0>
    1e64:	d8811f17 	ldw	r2,1148(sp)
    1e68:	01000074 	movhi	r4,1
    1e6c:	213dd304 	addi	r4,r4,-2228
    1e70:	18c00044 	addi	r3,r3,1
    1e74:	10800044 	addi	r2,r2,1
    1e78:	41000015 	stw	r4,0(r8)
    1e7c:	01000044 	movi	r4,1
    1e80:	41000115 	stw	r4,4(r8)
    1e84:	d8c12015 	stw	r3,1152(sp)
    1e88:	d8811f15 	stw	r2,1148(sp)
    1e8c:	010001c4 	movi	r4,7
    1e90:	20828d16 	blt	r4,r2,28c8 <___vfprintf_internal_r+0x1964>
    1e94:	42000204 	addi	r8,r8,8
    1e98:	d8812617 	ldw	r2,1176(sp)
    1e9c:	d9413317 	ldw	r5,1228(sp)
    1ea0:	11400216 	blt	r2,r5,1eac <___vfprintf_internal_r+0xf48>
    1ea4:	e080004c 	andi	r2,fp,1
    1ea8:	103e4126 	beq	r2,zero,17b0 <__alt_data_end+0xfffe2f68>
    1eac:	d8813817 	ldw	r2,1248(sp)
    1eb0:	d9013517 	ldw	r4,1236(sp)
    1eb4:	d9413817 	ldw	r5,1248(sp)
    1eb8:	1887883a 	add	r3,r3,r2
    1ebc:	d8811f17 	ldw	r2,1148(sp)
    1ec0:	41000015 	stw	r4,0(r8)
    1ec4:	41400115 	stw	r5,4(r8)
    1ec8:	10800044 	addi	r2,r2,1
    1ecc:	d8c12015 	stw	r3,1152(sp)
    1ed0:	d8811f15 	stw	r2,1148(sp)
    1ed4:	010001c4 	movi	r4,7
    1ed8:	20830916 	blt	r4,r2,2b00 <___vfprintf_internal_r+0x1b9c>
    1edc:	42000204 	addi	r8,r8,8
    1ee0:	d8813317 	ldw	r2,1228(sp)
    1ee4:	143fffc4 	addi	r16,r2,-1
    1ee8:	043e310e 	bge	zero,r16,17b0 <__alt_data_end+0xfffe2f68>
    1eec:	04400404 	movi	r17,16
    1ef0:	d8811f17 	ldw	r2,1148(sp)
    1ef4:	8c007e0e 	bge	r17,r16,20f0 <___vfprintf_internal_r+0x118c>
    1ef8:	01400074 	movhi	r5,1
    1efc:	297dd384 	addi	r5,r5,-2226
    1f00:	d9412c15 	stw	r5,1200(sp)
    1f04:	04c001c4 	movi	r19,7
    1f08:	00000306 	br	1f18 <___vfprintf_internal_r+0xfb4>
    1f0c:	42000204 	addi	r8,r8,8
    1f10:	843ffc04 	addi	r16,r16,-16
    1f14:	8c00790e 	bge	r17,r16,20fc <___vfprintf_internal_r+0x1198>
    1f18:	18c00404 	addi	r3,r3,16
    1f1c:	10800044 	addi	r2,r2,1
    1f20:	45000015 	stw	r20,0(r8)
    1f24:	44400115 	stw	r17,4(r8)
    1f28:	d8c12015 	stw	r3,1152(sp)
    1f2c:	d8811f15 	stw	r2,1148(sp)
    1f30:	98bff60e 	bge	r19,r2,1f0c <__alt_data_end+0xfffe36c4>
    1f34:	b809883a 	mov	r4,r23
    1f38:	b00b883a 	mov	r5,r22
    1f3c:	d9811e04 	addi	r6,sp,1144
    1f40:	00070a00 	call	70a0 <__sprint_r>
    1f44:	103d1f1e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    1f48:	d8c12017 	ldw	r3,1152(sp)
    1f4c:	d8811f17 	ldw	r2,1148(sp)
    1f50:	da000404 	addi	r8,sp,16
    1f54:	003fee06 	br	1f10 <__alt_data_end+0xfffe36c8>
    1f58:	d9412e17 	ldw	r5,1208(sp)
    1f5c:	d8812b17 	ldw	r2,1196(sp)
    1f60:	28a7c83a 	sub	r19,r5,r2
    1f64:	04fddc0e 	bge	zero,r19,16d8 <__alt_data_end+0xfffe2e90>
    1f68:	05400404 	movi	r21,16
    1f6c:	d8811f17 	ldw	r2,1148(sp)
    1f70:	acc3870e 	bge	r21,r19,2d90 <___vfprintf_internal_r+0x1e2c>
    1f74:	01400074 	movhi	r5,1
    1f78:	297dd384 	addi	r5,r5,-2226
    1f7c:	d9412c15 	stw	r5,1200(sp)
    1f80:	048001c4 	movi	r18,7
    1f84:	00000306 	br	1f94 <___vfprintf_internal_r+0x1030>
    1f88:	9cfffc04 	addi	r19,r19,-16
    1f8c:	42000204 	addi	r8,r8,8
    1f90:	acc0110e 	bge	r21,r19,1fd8 <___vfprintf_internal_r+0x1074>
    1f94:	18c00404 	addi	r3,r3,16
    1f98:	10800044 	addi	r2,r2,1
    1f9c:	45000015 	stw	r20,0(r8)
    1fa0:	45400115 	stw	r21,4(r8)
    1fa4:	d8c12015 	stw	r3,1152(sp)
    1fa8:	d8811f15 	stw	r2,1148(sp)
    1fac:	90bff60e 	bge	r18,r2,1f88 <__alt_data_end+0xfffe3740>
    1fb0:	b809883a 	mov	r4,r23
    1fb4:	b00b883a 	mov	r5,r22
    1fb8:	d9811e04 	addi	r6,sp,1144
    1fbc:	00070a00 	call	70a0 <__sprint_r>
    1fc0:	103d001e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    1fc4:	9cfffc04 	addi	r19,r19,-16
    1fc8:	d8c12017 	ldw	r3,1152(sp)
    1fcc:	d8811f17 	ldw	r2,1148(sp)
    1fd0:	da000404 	addi	r8,sp,16
    1fd4:	acffef16 	blt	r21,r19,1f94 <__alt_data_end+0xfffe374c>
    1fd8:	d9012c17 	ldw	r4,1200(sp)
    1fdc:	1cc7883a 	add	r3,r3,r19
    1fe0:	10800044 	addi	r2,r2,1
    1fe4:	41000015 	stw	r4,0(r8)
    1fe8:	44c00115 	stw	r19,4(r8)
    1fec:	d8c12015 	stw	r3,1152(sp)
    1ff0:	d8811f15 	stw	r2,1148(sp)
    1ff4:	010001c4 	movi	r4,7
    1ff8:	20817816 	blt	r4,r2,25dc <___vfprintf_internal_r+0x1678>
    1ffc:	42000204 	addi	r8,r8,8
    2000:	003db506 	br	16d8 <__alt_data_end+0xfffe2e90>
    2004:	d9413317 	ldw	r5,1228(sp)
    2008:	00800044 	movi	r2,1
    200c:	18c00044 	addi	r3,r3,1
    2010:	11413e0e 	bge	r2,r5,250c <___vfprintf_internal_r+0x15a8>
    2014:	dc011f17 	ldw	r16,1148(sp)
    2018:	d8813117 	ldw	r2,1220(sp)
    201c:	d8c12015 	stw	r3,1152(sp)
    2020:	84000044 	addi	r16,r16,1
    2024:	40800015 	stw	r2,0(r8)
    2028:	00800044 	movi	r2,1
    202c:	40800115 	stw	r2,4(r8)
    2030:	dc011f15 	stw	r16,1148(sp)
    2034:	008001c4 	movi	r2,7
    2038:	14015616 	blt	r2,r16,2594 <___vfprintf_internal_r+0x1630>
    203c:	42000204 	addi	r8,r8,8
    2040:	d9013817 	ldw	r4,1248(sp)
    2044:	d9413517 	ldw	r5,1236(sp)
    2048:	84000044 	addi	r16,r16,1
    204c:	1907883a 	add	r3,r3,r4
    2050:	41400015 	stw	r5,0(r8)
    2054:	41000115 	stw	r4,4(r8)
    2058:	d8c12015 	stw	r3,1152(sp)
    205c:	dc011f15 	stw	r16,1148(sp)
    2060:	008001c4 	movi	r2,7
    2064:	14015416 	blt	r2,r16,25b8 <___vfprintf_internal_r+0x1654>
    2068:	44400204 	addi	r17,r8,8
    206c:	d9013717 	ldw	r4,1244(sp)
    2070:	d9413917 	ldw	r5,1252(sp)
    2074:	000d883a 	mov	r6,zero
    2078:	000f883a 	mov	r7,zero
    207c:	d8c13d15 	stw	r3,1268(sp)
    2080:	000b9b80 	call	b9b8 <__eqdf2>
    2084:	d8c13d17 	ldw	r3,1268(sp)
    2088:	1000a726 	beq	r2,zero,2328 <___vfprintf_internal_r+0x13c4>
    208c:	d9013317 	ldw	r4,1228(sp)
    2090:	d9413117 	ldw	r5,1220(sp)
    2094:	84000044 	addi	r16,r16,1
    2098:	20bfffc4 	addi	r2,r4,-1
    209c:	1887883a 	add	r3,r3,r2
    20a0:	29000044 	addi	r4,r5,1
    20a4:	88800115 	stw	r2,4(r17)
    20a8:	89000015 	stw	r4,0(r17)
    20ac:	d8c12015 	stw	r3,1152(sp)
    20b0:	dc011f15 	stw	r16,1148(sp)
    20b4:	008001c4 	movi	r2,7
    20b8:	14012d16 	blt	r2,r16,2570 <___vfprintf_internal_r+0x160c>
    20bc:	8c400204 	addi	r17,r17,8
    20c0:	d9413a17 	ldw	r5,1256(sp)
    20c4:	dcc122c4 	addi	r19,sp,1163
    20c8:	84000044 	addi	r16,r16,1
    20cc:	28c7883a 	add	r3,r5,r3
    20d0:	8cc00015 	stw	r19,0(r17)
    20d4:	89400115 	stw	r5,4(r17)
    20d8:	d8c12015 	stw	r3,1152(sp)
    20dc:	dc011f15 	stw	r16,1148(sp)
    20e0:	008001c4 	movi	r2,7
    20e4:	14000e16 	blt	r2,r16,2120 <___vfprintf_internal_r+0x11bc>
    20e8:	8a000204 	addi	r8,r17,8
    20ec:	003db006 	br	17b0 <__alt_data_end+0xfffe2f68>
    20f0:	01000074 	movhi	r4,1
    20f4:	213dd384 	addi	r4,r4,-2226
    20f8:	d9012c15 	stw	r4,1200(sp)
    20fc:	d9012c17 	ldw	r4,1200(sp)
    2100:	1c07883a 	add	r3,r3,r16
    2104:	44000115 	stw	r16,4(r8)
    2108:	41000015 	stw	r4,0(r8)
    210c:	10800044 	addi	r2,r2,1
    2110:	d8c12015 	stw	r3,1152(sp)
    2114:	d8811f15 	stw	r2,1148(sp)
    2118:	010001c4 	movi	r4,7
    211c:	20bda30e 	bge	r4,r2,17ac <__alt_data_end+0xfffe2f64>
    2120:	b809883a 	mov	r4,r23
    2124:	b00b883a 	mov	r5,r22
    2128:	d9811e04 	addi	r6,sp,1144
    212c:	00070a00 	call	70a0 <__sprint_r>
    2130:	103ca41e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    2134:	d8c12017 	ldw	r3,1152(sp)
    2138:	da000404 	addi	r8,sp,16
    213c:	003d9c06 	br	17b0 <__alt_data_end+0xfffe2f68>
    2140:	b809883a 	mov	r4,r23
    2144:	b00b883a 	mov	r5,r22
    2148:	d9811e04 	addi	r6,sp,1144
    214c:	00070a00 	call	70a0 <__sprint_r>
    2150:	103dd226 	beq	r2,zero,189c <__alt_data_end+0xfffe3054>
    2154:	003c9b06 	br	13c4 <__alt_data_end+0xfffe2b7c>
    2158:	10803fcc 	andi	r2,r2,255
    215c:	1000311e 	bne	r2,zero,2224 <___vfprintf_internal_r+0x12c0>
    2160:	e080004c 	andi	r2,fp,1
    2164:	10002f26 	beq	r2,zero,2224 <___vfprintf_internal_r+0x12c0>
    2168:	00800c04 	movi	r2,48
    216c:	d8c10dc4 	addi	r3,sp,1079
    2170:	d8810dc5 	stb	r2,1079(sp)
    2174:	dc413c17 	ldw	r17,1264(sp)
    2178:	d8c13115 	stw	r3,1220(sp)
    217c:	003cf406 	br	1550 <__alt_data_end+0xfffe2d08>
    2180:	b809883a 	mov	r4,r23
    2184:	b00b883a 	mov	r5,r22
    2188:	d9811e04 	addi	r6,sp,1144
    218c:	00070a00 	call	70a0 <__sprint_r>
    2190:	103c8c1e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    2194:	d8c12017 	ldw	r3,1152(sp)
    2198:	da000404 	addi	r8,sp,16
    219c:	003d7706 	br	177c <__alt_data_end+0xfffe2f34>
    21a0:	b809883a 	mov	r4,r23
    21a4:	b00b883a 	mov	r5,r22
    21a8:	d9811e04 	addi	r6,sp,1144
    21ac:	00070a00 	call	70a0 <__sprint_r>
    21b0:	103c841e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    21b4:	d8c12017 	ldw	r3,1152(sp)
    21b8:	da000404 	addi	r8,sp,16
    21bc:	003d3506 	br	1694 <__alt_data_end+0xfffe2e4c>
    21c0:	b809883a 	mov	r4,r23
    21c4:	b00b883a 	mov	r5,r22
    21c8:	d9811e04 	addi	r6,sp,1144
    21cc:	00070a00 	call	70a0 <__sprint_r>
    21d0:	103c7c1e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    21d4:	d8c12017 	ldw	r3,1152(sp)
    21d8:	da000404 	addi	r8,sp,16
    21dc:	003d3b06 	br	16cc <__alt_data_end+0xfffe2e84>
    21e0:	d9413b17 	ldw	r5,1260(sp)
    21e4:	d8c10e04 	addi	r3,sp,1080
    21e8:	908003cc 	andi	r2,r18,15
    21ec:	a808973a 	slli	r4,r21,28
    21f0:	2885883a 	add	r2,r5,r2
    21f4:	9024d13a 	srli	r18,r18,4
    21f8:	10800003 	ldbu	r2,0(r2)
    21fc:	a82ad13a 	srli	r21,r21,4
    2200:	18ffffc4 	addi	r3,r3,-1
    2204:	24a4b03a 	or	r18,r4,r18
    2208:	18800005 	stb	r2,0(r3)
    220c:	9544b03a 	or	r2,r18,r21
    2210:	103ff51e 	bne	r2,zero,21e8 <__alt_data_end+0xfffe39a0>
    2214:	d9412817 	ldw	r5,1184(sp)
    2218:	d8c13115 	stw	r3,1220(sp)
    221c:	28e3c83a 	sub	r17,r5,r3
    2220:	003ccb06 	br	1550 <__alt_data_end+0xfffe2d08>
    2224:	d8c10e04 	addi	r3,sp,1080
    2228:	0023883a 	mov	r17,zero
    222c:	d8c13115 	stw	r3,1220(sp)
    2230:	003cc706 	br	1550 <__alt_data_end+0xfffe2d08>
    2234:	dc012617 	ldw	r16,1176(sp)
    2238:	0401ab0e 	bge	zero,r16,28e8 <___vfprintf_internal_r+0x1984>
    223c:	d8813317 	ldw	r2,1228(sp)
    2240:	d9413117 	ldw	r5,1220(sp)
    2244:	d9013417 	ldw	r4,1232(sp)
    2248:	1023883a 	mov	r17,r2
    224c:	28a1883a 	add	r16,r5,r2
    2250:	2080010e 	bge	r4,r2,2258 <___vfprintf_internal_r+0x12f4>
    2254:	2023883a 	mov	r17,r4
    2258:	04400b0e 	bge	zero,r17,2288 <___vfprintf_internal_r+0x1324>
    225c:	d8811f17 	ldw	r2,1148(sp)
    2260:	d9413117 	ldw	r5,1220(sp)
    2264:	1c47883a 	add	r3,r3,r17
    2268:	10800044 	addi	r2,r2,1
    226c:	41400015 	stw	r5,0(r8)
    2270:	44400115 	stw	r17,4(r8)
    2274:	d8c12015 	stw	r3,1152(sp)
    2278:	d8811f15 	stw	r2,1148(sp)
    227c:	010001c4 	movi	r4,7
    2280:	20826716 	blt	r4,r2,2c20 <___vfprintf_internal_r+0x1cbc>
    2284:	42000204 	addi	r8,r8,8
    2288:	88026316 	blt	r17,zero,2c18 <___vfprintf_internal_r+0x1cb4>
    228c:	d8813417 	ldw	r2,1232(sp)
    2290:	1463c83a 	sub	r17,r2,r17
    2294:	0440590e 	bge	zero,r17,23fc <___vfprintf_internal_r+0x1498>
    2298:	04c00404 	movi	r19,16
    229c:	d8811f17 	ldw	r2,1148(sp)
    22a0:	9c41770e 	bge	r19,r17,2880 <___vfprintf_internal_r+0x191c>
    22a4:	01400074 	movhi	r5,1
    22a8:	297dd384 	addi	r5,r5,-2226
    22ac:	d9412c15 	stw	r5,1200(sp)
    22b0:	054001c4 	movi	r21,7
    22b4:	00000306 	br	22c4 <___vfprintf_internal_r+0x1360>
    22b8:	42000204 	addi	r8,r8,8
    22bc:	8c7ffc04 	addi	r17,r17,-16
    22c0:	9c41720e 	bge	r19,r17,288c <___vfprintf_internal_r+0x1928>
    22c4:	18c00404 	addi	r3,r3,16
    22c8:	10800044 	addi	r2,r2,1
    22cc:	45000015 	stw	r20,0(r8)
    22d0:	44c00115 	stw	r19,4(r8)
    22d4:	d8c12015 	stw	r3,1152(sp)
    22d8:	d8811f15 	stw	r2,1148(sp)
    22dc:	a8bff60e 	bge	r21,r2,22b8 <__alt_data_end+0xfffe3a70>
    22e0:	b809883a 	mov	r4,r23
    22e4:	b00b883a 	mov	r5,r22
    22e8:	d9811e04 	addi	r6,sp,1144
    22ec:	00070a00 	call	70a0 <__sprint_r>
    22f0:	103c341e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    22f4:	d8c12017 	ldw	r3,1152(sp)
    22f8:	d8811f17 	ldw	r2,1148(sp)
    22fc:	da000404 	addi	r8,sp,16
    2300:	003fee06 	br	22bc <__alt_data_end+0xfffe3a74>
    2304:	b809883a 	mov	r4,r23
    2308:	b00b883a 	mov	r5,r22
    230c:	d9811e04 	addi	r6,sp,1144
    2310:	00070a00 	call	70a0 <__sprint_r>
    2314:	103c2b1e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    2318:	d8c12017 	ldw	r3,1152(sp)
    231c:	d8812787 	ldb	r2,1182(sp)
    2320:	da000404 	addi	r8,sp,16
    2324:	003cce06 	br	1660 <__alt_data_end+0xfffe2e18>
    2328:	d8813317 	ldw	r2,1228(sp)
    232c:	14ffffc4 	addi	r19,r2,-1
    2330:	04ff630e 	bge	zero,r19,20c0 <__alt_data_end+0xfffe3878>
    2334:	05400404 	movi	r21,16
    2338:	acc0810e 	bge	r21,r19,2540 <___vfprintf_internal_r+0x15dc>
    233c:	01400074 	movhi	r5,1
    2340:	297dd384 	addi	r5,r5,-2226
    2344:	d9412c15 	stw	r5,1200(sp)
    2348:	01c001c4 	movi	r7,7
    234c:	00000306 	br	235c <___vfprintf_internal_r+0x13f8>
    2350:	8c400204 	addi	r17,r17,8
    2354:	9cfffc04 	addi	r19,r19,-16
    2358:	acc07c0e 	bge	r21,r19,254c <___vfprintf_internal_r+0x15e8>
    235c:	18c00404 	addi	r3,r3,16
    2360:	84000044 	addi	r16,r16,1
    2364:	8d000015 	stw	r20,0(r17)
    2368:	8d400115 	stw	r21,4(r17)
    236c:	d8c12015 	stw	r3,1152(sp)
    2370:	dc011f15 	stw	r16,1148(sp)
    2374:	3c3ff60e 	bge	r7,r16,2350 <__alt_data_end+0xfffe3b08>
    2378:	b809883a 	mov	r4,r23
    237c:	b00b883a 	mov	r5,r22
    2380:	d9811e04 	addi	r6,sp,1144
    2384:	d9c13d15 	stw	r7,1268(sp)
    2388:	00070a00 	call	70a0 <__sprint_r>
    238c:	d9c13d17 	ldw	r7,1268(sp)
    2390:	103c0c1e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    2394:	d8c12017 	ldw	r3,1152(sp)
    2398:	dc011f17 	ldw	r16,1148(sp)
    239c:	dc400404 	addi	r17,sp,16
    23a0:	003fec06 	br	2354 <__alt_data_end+0xfffe3b0c>
    23a4:	00800084 	movi	r2,2
    23a8:	9546b03a 	or	r3,r18,r21
    23ac:	003d7d06 	br	19a4 <__alt_data_end+0xfffe315c>
    23b0:	10803fcc 	andi	r2,r2,255
    23b4:	1080201c 	xori	r2,r2,128
    23b8:	10bfe004 	addi	r2,r2,-128
    23bc:	01000c04 	movi	r4,48
    23c0:	1101d726 	beq	r2,r4,2b20 <___vfprintf_internal_r+0x1bbc>
    23c4:	d9413117 	ldw	r5,1220(sp)
    23c8:	d8812817 	ldw	r2,1184(sp)
    23cc:	193fffc5 	stb	r4,-1(r3)
    23d0:	297fffc4 	addi	r5,r5,-1
    23d4:	d9413115 	stw	r5,1220(sp)
    23d8:	1163c83a 	sub	r17,r2,r5
    23dc:	003c5c06 	br	1550 <__alt_data_end+0xfffe2d08>
    23e0:	b809883a 	mov	r4,r23
    23e4:	b00b883a 	mov	r5,r22
    23e8:	d9811e04 	addi	r6,sp,1144
    23ec:	00070a00 	call	70a0 <__sprint_r>
    23f0:	103bf41e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    23f4:	d8c12017 	ldw	r3,1152(sp)
    23f8:	da000404 	addi	r8,sp,16
    23fc:	d9413117 	ldw	r5,1220(sp)
    2400:	d9013417 	ldw	r4,1232(sp)
    2404:	d8812617 	ldw	r2,1176(sp)
    2408:	2923883a 	add	r17,r5,r4
    240c:	d9413317 	ldw	r5,1228(sp)
    2410:	11400216 	blt	r2,r5,241c <___vfprintf_internal_r+0x14b8>
    2414:	e100004c 	andi	r4,fp,1
    2418:	20000d26 	beq	r4,zero,2450 <___vfprintf_internal_r+0x14ec>
    241c:	d9013817 	ldw	r4,1248(sp)
    2420:	d9413517 	ldw	r5,1236(sp)
    2424:	1907883a 	add	r3,r3,r4
    2428:	d9011f17 	ldw	r4,1148(sp)
    242c:	41400015 	stw	r5,0(r8)
    2430:	d9413817 	ldw	r5,1248(sp)
    2434:	21000044 	addi	r4,r4,1
    2438:	d8c12015 	stw	r3,1152(sp)
    243c:	41400115 	stw	r5,4(r8)
    2440:	d9011f15 	stw	r4,1148(sp)
    2444:	014001c4 	movi	r5,7
    2448:	2901fd16 	blt	r5,r4,2c40 <___vfprintf_internal_r+0x1cdc>
    244c:	42000204 	addi	r8,r8,8
    2450:	d9013317 	ldw	r4,1228(sp)
    2454:	2085c83a 	sub	r2,r4,r2
    2458:	8449c83a 	sub	r4,r16,r17
    245c:	1021883a 	mov	r16,r2
    2460:	2080010e 	bge	r4,r2,2468 <___vfprintf_internal_r+0x1504>
    2464:	2021883a 	mov	r16,r4
    2468:	04000a0e 	bge	zero,r16,2494 <___vfprintf_internal_r+0x1530>
    246c:	d9011f17 	ldw	r4,1148(sp)
    2470:	1c07883a 	add	r3,r3,r16
    2474:	44400015 	stw	r17,0(r8)
    2478:	21000044 	addi	r4,r4,1
    247c:	44000115 	stw	r16,4(r8)
    2480:	d8c12015 	stw	r3,1152(sp)
    2484:	d9011f15 	stw	r4,1148(sp)
    2488:	014001c4 	movi	r5,7
    248c:	29020916 	blt	r5,r4,2cb4 <___vfprintf_internal_r+0x1d50>
    2490:	42000204 	addi	r8,r8,8
    2494:	80020116 	blt	r16,zero,2c9c <___vfprintf_internal_r+0x1d38>
    2498:	1421c83a 	sub	r16,r2,r16
    249c:	043cc40e 	bge	zero,r16,17b0 <__alt_data_end+0xfffe2f68>
    24a0:	04400404 	movi	r17,16
    24a4:	d8811f17 	ldw	r2,1148(sp)
    24a8:	8c3f110e 	bge	r17,r16,20f0 <__alt_data_end+0xfffe38a8>
    24ac:	01400074 	movhi	r5,1
    24b0:	297dd384 	addi	r5,r5,-2226
    24b4:	d9412c15 	stw	r5,1200(sp)
    24b8:	04c001c4 	movi	r19,7
    24bc:	00000306 	br	24cc <___vfprintf_internal_r+0x1568>
    24c0:	42000204 	addi	r8,r8,8
    24c4:	843ffc04 	addi	r16,r16,-16
    24c8:	8c3f0c0e 	bge	r17,r16,20fc <__alt_data_end+0xfffe38b4>
    24cc:	18c00404 	addi	r3,r3,16
    24d0:	10800044 	addi	r2,r2,1
    24d4:	45000015 	stw	r20,0(r8)
    24d8:	44400115 	stw	r17,4(r8)
    24dc:	d8c12015 	stw	r3,1152(sp)
    24e0:	d8811f15 	stw	r2,1148(sp)
    24e4:	98bff60e 	bge	r19,r2,24c0 <__alt_data_end+0xfffe3c78>
    24e8:	b809883a 	mov	r4,r23
    24ec:	b00b883a 	mov	r5,r22
    24f0:	d9811e04 	addi	r6,sp,1144
    24f4:	00070a00 	call	70a0 <__sprint_r>
    24f8:	103bb21e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    24fc:	d8c12017 	ldw	r3,1152(sp)
    2500:	d8811f17 	ldw	r2,1148(sp)
    2504:	da000404 	addi	r8,sp,16
    2508:	003fee06 	br	24c4 <__alt_data_end+0xfffe3c7c>
    250c:	e088703a 	and	r4,fp,r2
    2510:	203ec01e 	bne	r4,zero,2014 <__alt_data_end+0xfffe37cc>
    2514:	dc011f17 	ldw	r16,1148(sp)
    2518:	d9013117 	ldw	r4,1220(sp)
    251c:	40800115 	stw	r2,4(r8)
    2520:	84000044 	addi	r16,r16,1
    2524:	41000015 	stw	r4,0(r8)
    2528:	d8c12015 	stw	r3,1152(sp)
    252c:	dc011f15 	stw	r16,1148(sp)
    2530:	008001c4 	movi	r2,7
    2534:	14000e16 	blt	r2,r16,2570 <___vfprintf_internal_r+0x160c>
    2538:	44400204 	addi	r17,r8,8
    253c:	003ee006 	br	20c0 <__alt_data_end+0xfffe3878>
    2540:	01000074 	movhi	r4,1
    2544:	213dd384 	addi	r4,r4,-2226
    2548:	d9012c15 	stw	r4,1200(sp)
    254c:	d8812c17 	ldw	r2,1200(sp)
    2550:	1cc7883a 	add	r3,r3,r19
    2554:	84000044 	addi	r16,r16,1
    2558:	88800015 	stw	r2,0(r17)
    255c:	8cc00115 	stw	r19,4(r17)
    2560:	d8c12015 	stw	r3,1152(sp)
    2564:	dc011f15 	stw	r16,1148(sp)
    2568:	008001c4 	movi	r2,7
    256c:	143ed30e 	bge	r2,r16,20bc <__alt_data_end+0xfffe3874>
    2570:	b809883a 	mov	r4,r23
    2574:	b00b883a 	mov	r5,r22
    2578:	d9811e04 	addi	r6,sp,1144
    257c:	00070a00 	call	70a0 <__sprint_r>
    2580:	103b901e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    2584:	d8c12017 	ldw	r3,1152(sp)
    2588:	dc011f17 	ldw	r16,1148(sp)
    258c:	dc400404 	addi	r17,sp,16
    2590:	003ecb06 	br	20c0 <__alt_data_end+0xfffe3878>
    2594:	b809883a 	mov	r4,r23
    2598:	b00b883a 	mov	r5,r22
    259c:	d9811e04 	addi	r6,sp,1144
    25a0:	00070a00 	call	70a0 <__sprint_r>
    25a4:	103b871e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    25a8:	d8c12017 	ldw	r3,1152(sp)
    25ac:	dc011f17 	ldw	r16,1148(sp)
    25b0:	da000404 	addi	r8,sp,16
    25b4:	003ea206 	br	2040 <__alt_data_end+0xfffe37f8>
    25b8:	b809883a 	mov	r4,r23
    25bc:	b00b883a 	mov	r5,r22
    25c0:	d9811e04 	addi	r6,sp,1144
    25c4:	00070a00 	call	70a0 <__sprint_r>
    25c8:	103b7e1e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    25cc:	d8c12017 	ldw	r3,1152(sp)
    25d0:	dc011f17 	ldw	r16,1148(sp)
    25d4:	dc400404 	addi	r17,sp,16
    25d8:	003ea406 	br	206c <__alt_data_end+0xfffe3824>
    25dc:	b809883a 	mov	r4,r23
    25e0:	b00b883a 	mov	r5,r22
    25e4:	d9811e04 	addi	r6,sp,1144
    25e8:	00070a00 	call	70a0 <__sprint_r>
    25ec:	103b751e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    25f0:	d8c12017 	ldw	r3,1152(sp)
    25f4:	da000404 	addi	r8,sp,16
    25f8:	003c3706 	br	16d8 <__alt_data_end+0xfffe2e90>
    25fc:	04a5c83a 	sub	r18,zero,r18
    2600:	9004c03a 	cmpne	r2,r18,zero
    2604:	056bc83a 	sub	r21,zero,r21
    2608:	a8abc83a 	sub	r21,r21,r2
    260c:	04c00b44 	movi	r19,45
    2610:	dcc12785 	stb	r19,1182(sp)
    2614:	da413215 	stw	r9,1224(sp)
    2618:	00800044 	movi	r2,1
    261c:	9546b03a 	or	r3,r18,r21
    2620:	003bb106 	br	14e8 <__alt_data_end+0xfffe2ca0>
    2624:	da013f15 	stw	r8,1276(sp)
    2628:	da413e15 	stw	r9,1272(sp)
    262c:	0006cb80 	call	6cb8 <__fpclassifyd>
    2630:	da013f17 	ldw	r8,1276(sp)
    2634:	da413e17 	ldw	r9,1272(sp)
    2638:	1000e526 	beq	r2,zero,29d0 <___vfprintf_internal_r+0x1a6c>
    263c:	04fff7c4 	movi	r19,-33
    2640:	00bfffc4 	movi	r2,-1
    2644:	84e6703a 	and	r19,r16,r19
    2648:	48822926 	beq	r9,r2,2ef0 <___vfprintf_internal_r+0x1f8c>
    264c:	008011c4 	movi	r2,71
    2650:	98821626 	beq	r19,r2,2eac <___vfprintf_internal_r+0x1f48>
    2654:	d9013917 	ldw	r4,1252(sp)
    2658:	e0c04014 	ori	r3,fp,256
    265c:	d8c12d15 	stw	r3,1204(sp)
    2660:	20021f16 	blt	r4,zero,2ee0 <___vfprintf_internal_r+0x1f7c>
    2664:	dc413917 	ldw	r17,1252(sp)
    2668:	d8012b05 	stb	zero,1196(sp)
    266c:	00801984 	movi	r2,102
    2670:	80814d26 	beq	r16,r2,2ba8 <___vfprintf_internal_r+0x1c44>
    2674:	00801184 	movi	r2,70
    2678:	80814b26 	beq	r16,r2,2ba8 <___vfprintf_internal_r+0x1c44>
    267c:	00801144 	movi	r2,69
    2680:	98821d26 	beq	r19,r2,2ef8 <___vfprintf_internal_r+0x1f94>
    2684:	482b883a 	mov	r21,r9
    2688:	d8812604 	addi	r2,sp,1176
    268c:	d8800115 	stw	r2,4(sp)
    2690:	d9413717 	ldw	r5,1244(sp)
    2694:	d8812504 	addi	r2,sp,1172
    2698:	d8800215 	stw	r2,8(sp)
    269c:	d8812104 	addi	r2,sp,1156
    26a0:	dd400015 	stw	r21,0(sp)
    26a4:	d8800315 	stw	r2,12(sp)
    26a8:	b809883a 	mov	r4,r23
    26ac:	880d883a 	mov	r6,r17
    26b0:	01c00084 	movi	r7,2
    26b4:	da013f15 	stw	r8,1276(sp)
    26b8:	da413e15 	stw	r9,1272(sp)
    26bc:	00033dc0 	call	33dc <_dtoa_r>
    26c0:	d8813115 	stw	r2,1220(sp)
    26c4:	008019c4 	movi	r2,103
    26c8:	da013f17 	ldw	r8,1276(sp)
    26cc:	da413e17 	ldw	r9,1272(sp)
    26d0:	80800226 	beq	r16,r2,26dc <___vfprintf_internal_r+0x1778>
    26d4:	008011c4 	movi	r2,71
    26d8:	8081451e 	bne	r16,r2,2bf0 <___vfprintf_internal_r+0x1c8c>
    26dc:	e080004c 	andi	r2,fp,1
    26e0:	10021e26 	beq	r2,zero,2f5c <___vfprintf_internal_r+0x1ff8>
    26e4:	d8c13117 	ldw	r3,1220(sp)
    26e8:	1d55883a 	add	r10,r3,r21
    26ec:	d9013717 	ldw	r4,1244(sp)
    26f0:	880b883a 	mov	r5,r17
    26f4:	000d883a 	mov	r6,zero
    26f8:	000f883a 	mov	r7,zero
    26fc:	da013f15 	stw	r8,1276(sp)
    2700:	da413e15 	stw	r9,1272(sp)
    2704:	da813d15 	stw	r10,1268(sp)
    2708:	000b9b80 	call	b9b8 <__eqdf2>
    270c:	da013f17 	ldw	r8,1276(sp)
    2710:	da413e17 	ldw	r9,1272(sp)
    2714:	da813d17 	ldw	r10,1268(sp)
    2718:	1001a126 	beq	r2,zero,2da0 <___vfprintf_internal_r+0x1e3c>
    271c:	d8812117 	ldw	r2,1156(sp)
    2720:	1280062e 	bgeu	r2,r10,273c <___vfprintf_internal_r+0x17d8>
    2724:	01000c04 	movi	r4,48
    2728:	10c00044 	addi	r3,r2,1
    272c:	d8c12115 	stw	r3,1156(sp)
    2730:	11000005 	stb	r4,0(r2)
    2734:	d8812117 	ldw	r2,1156(sp)
    2738:	12bffb36 	bltu	r2,r10,2728 <__alt_data_end+0xfffe3ee0>
    273c:	d8c13117 	ldw	r3,1220(sp)
    2740:	10c5c83a 	sub	r2,r2,r3
    2744:	d8813315 	stw	r2,1228(sp)
    2748:	008011c4 	movi	r2,71
    274c:	98818926 	beq	r19,r2,2d74 <___vfprintf_internal_r+0x1e10>
    2750:	00801944 	movi	r2,101
    2754:	14023c0e 	bge	r2,r16,3048 <___vfprintf_internal_r+0x20e4>
    2758:	d8c12617 	ldw	r3,1176(sp)
    275c:	00801984 	movi	r2,102
    2760:	d8c13415 	stw	r3,1232(sp)
    2764:	8081ef26 	beq	r16,r2,2f24 <___vfprintf_internal_r+0x1fc0>
    2768:	d8c13417 	ldw	r3,1232(sp)
    276c:	d9013317 	ldw	r4,1228(sp)
    2770:	1901e316 	blt	r3,r4,2f00 <___vfprintf_internal_r+0x1f9c>
    2774:	e080004c 	andi	r2,fp,1
    2778:	1001f426 	beq	r2,zero,2f4c <___vfprintf_internal_r+0x1fe8>
    277c:	d8c13417 	ldw	r3,1232(sp)
    2780:	1c400044 	addi	r17,r3,1
    2784:	8839883a 	mov	fp,r17
    2788:	8801e416 	blt	r17,zero,2f1c <___vfprintf_internal_r+0x1fb8>
    278c:	dd412b07 	ldb	r21,1196(sp)
    2790:	a801701e 	bne	r21,zero,2d54 <___vfprintf_internal_r+0x1df0>
    2794:	df012b15 	stw	fp,1196(sp)
    2798:	dcc12783 	ldbu	r19,1182(sp)
    279c:	df012d17 	ldw	fp,1204(sp)
    27a0:	d8013215 	stw	zero,1224(sp)
    27a4:	dc812d15 	stw	r18,1204(sp)
    27a8:	003b6e06 	br	1564 <__alt_data_end+0xfffe2d1c>
    27ac:	e080040c 	andi	r2,fp,16
    27b0:	1000b51e 	bne	r2,zero,2a88 <___vfprintf_internal_r+0x1b24>
    27b4:	e080100c 	andi	r2,fp,64
    27b8:	10015b26 	beq	r2,zero,2d28 <___vfprintf_internal_r+0x1dc4>
    27bc:	d9012d17 	ldw	r4,1204(sp)
    27c0:	d9412f17 	ldw	r5,1212(sp)
    27c4:	20800017 	ldw	r2,0(r4)
    27c8:	21000104 	addi	r4,r4,4
    27cc:	d9012d15 	stw	r4,1204(sp)
    27d0:	1140000d 	sth	r5,0(r2)
    27d4:	003a2006 	br	1058 <__alt_data_end+0xfffe2810>
    27d8:	e0c0100c 	andi	r3,fp,64
    27dc:	1800a226 	beq	r3,zero,2a68 <___vfprintf_internal_r+0x1b04>
    27e0:	d8c12d17 	ldw	r3,1204(sp)
    27e4:	1480000b 	ldhu	r18,0(r2)
    27e8:	002b883a 	mov	r21,zero
    27ec:	18c00104 	addi	r3,r3,4
    27f0:	d8c12d15 	stw	r3,1204(sp)
    27f4:	0005883a 	mov	r2,zero
    27f8:	9007883a 	mov	r3,r18
    27fc:	003c6906 	br	19a4 <__alt_data_end+0xfffe315c>
    2800:	e0c0100c 	andi	r3,fp,64
    2804:	18009026 	beq	r3,zero,2a48 <___vfprintf_internal_r+0x1ae4>
    2808:	1480000b 	ldhu	r18,0(r2)
    280c:	d8812d17 	ldw	r2,1204(sp)
    2810:	002b883a 	mov	r21,zero
    2814:	9007883a 	mov	r3,r18
    2818:	10800104 	addi	r2,r2,4
    281c:	d8812d15 	stw	r2,1204(sp)
    2820:	00800044 	movi	r2,1
    2824:	003c5f06 	br	19a4 <__alt_data_end+0xfffe315c>
    2828:	e0c0100c 	andi	r3,fp,64
    282c:	18008026 	beq	r3,zero,2a30 <___vfprintf_internal_r+0x1acc>
    2830:	d9012d17 	ldw	r4,1204(sp)
    2834:	1480000b 	ldhu	r18,0(r2)
    2838:	002b883a 	mov	r21,zero
    283c:	21000104 	addi	r4,r4,4
    2840:	d9012d15 	stw	r4,1204(sp)
    2844:	003c7906 	br	1a2c <__alt_data_end+0xfffe31e4>
    2848:	e080100c 	andi	r2,fp,64
    284c:	10007126 	beq	r2,zero,2a14 <___vfprintf_internal_r+0x1ab0>
    2850:	1c80000f 	ldh	r18,0(r3)
    2854:	d8812d17 	ldw	r2,1204(sp)
    2858:	902bd7fa 	srai	r21,r18,31
    285c:	10800104 	addi	r2,r2,4
    2860:	d8812d15 	stw	r2,1204(sp)
    2864:	a805883a 	mov	r2,r21
    2868:	003b1a06 	br	14d4 <__alt_data_end+0xfffe2c8c>
    286c:	e4000007 	ldb	r16,0(fp)
    2870:	e005883a 	mov	r2,fp
    2874:	003a2306 	br	1104 <__alt_data_end+0xfffe28bc>
    2878:	00800084 	movi	r2,2
    287c:	003c4906 	br	19a4 <__alt_data_end+0xfffe315c>
    2880:	01000074 	movhi	r4,1
    2884:	213dd384 	addi	r4,r4,-2226
    2888:	d9012c15 	stw	r4,1200(sp)
    288c:	d9012c17 	ldw	r4,1200(sp)
    2890:	1c47883a 	add	r3,r3,r17
    2894:	10800044 	addi	r2,r2,1
    2898:	41000015 	stw	r4,0(r8)
    289c:	44400115 	stw	r17,4(r8)
    28a0:	d8c12015 	stw	r3,1152(sp)
    28a4:	d8811f15 	stw	r2,1148(sp)
    28a8:	010001c4 	movi	r4,7
    28ac:	20becc16 	blt	r4,r2,23e0 <__alt_data_end+0xfffe3b98>
    28b0:	42000204 	addi	r8,r8,8
    28b4:	003ed106 	br	23fc <__alt_data_end+0xfffe3bb4>
    28b8:	01000074 	movhi	r4,1
    28bc:	213dd384 	addi	r4,r4,-2226
    28c0:	d9012c15 	stw	r4,1200(sp)
    28c4:	003ba306 	br	1754 <__alt_data_end+0xfffe2f0c>
    28c8:	b809883a 	mov	r4,r23
    28cc:	b00b883a 	mov	r5,r22
    28d0:	d9811e04 	addi	r6,sp,1144
    28d4:	00070a00 	call	70a0 <__sprint_r>
    28d8:	103aba1e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    28dc:	d8c12017 	ldw	r3,1152(sp)
    28e0:	da000404 	addi	r8,sp,16
    28e4:	003d6c06 	br	1e98 <__alt_data_end+0xfffe3650>
    28e8:	d8811f17 	ldw	r2,1148(sp)
    28ec:	01400074 	movhi	r5,1
    28f0:	01000044 	movi	r4,1
    28f4:	18c00044 	addi	r3,r3,1
    28f8:	10800044 	addi	r2,r2,1
    28fc:	297dd304 	addi	r5,r5,-2228
    2900:	41000115 	stw	r4,4(r8)
    2904:	41400015 	stw	r5,0(r8)
    2908:	d8c12015 	stw	r3,1152(sp)
    290c:	d8811f15 	stw	r2,1148(sp)
    2910:	010001c4 	movi	r4,7
    2914:	20806716 	blt	r4,r2,2ab4 <___vfprintf_internal_r+0x1b50>
    2918:	42000204 	addi	r8,r8,8
    291c:	8000041e 	bne	r16,zero,2930 <___vfprintf_internal_r+0x19cc>
    2920:	d8813317 	ldw	r2,1228(sp)
    2924:	1000021e 	bne	r2,zero,2930 <___vfprintf_internal_r+0x19cc>
    2928:	e080004c 	andi	r2,fp,1
    292c:	103ba026 	beq	r2,zero,17b0 <__alt_data_end+0xfffe2f68>
    2930:	d9013817 	ldw	r4,1248(sp)
    2934:	d8811f17 	ldw	r2,1148(sp)
    2938:	d9413517 	ldw	r5,1236(sp)
    293c:	1907883a 	add	r3,r3,r4
    2940:	10800044 	addi	r2,r2,1
    2944:	41000115 	stw	r4,4(r8)
    2948:	41400015 	stw	r5,0(r8)
    294c:	d8c12015 	stw	r3,1152(sp)
    2950:	d8811f15 	stw	r2,1148(sp)
    2954:	010001c4 	movi	r4,7
    2958:	20815716 	blt	r4,r2,2eb8 <___vfprintf_internal_r+0x1f54>
    295c:	42000204 	addi	r8,r8,8
    2960:	0421c83a 	sub	r16,zero,r16
    2964:	0400810e 	bge	zero,r16,2b6c <___vfprintf_internal_r+0x1c08>
    2968:	04400404 	movi	r17,16
    296c:	8c00bd0e 	bge	r17,r16,2c64 <___vfprintf_internal_r+0x1d00>
    2970:	01400074 	movhi	r5,1
    2974:	297dd384 	addi	r5,r5,-2226
    2978:	d9412c15 	stw	r5,1200(sp)
    297c:	04c001c4 	movi	r19,7
    2980:	00000306 	br	2990 <___vfprintf_internal_r+0x1a2c>
    2984:	42000204 	addi	r8,r8,8
    2988:	843ffc04 	addi	r16,r16,-16
    298c:	8c00b80e 	bge	r17,r16,2c70 <___vfprintf_internal_r+0x1d0c>
    2990:	18c00404 	addi	r3,r3,16
    2994:	10800044 	addi	r2,r2,1
    2998:	45000015 	stw	r20,0(r8)
    299c:	44400115 	stw	r17,4(r8)
    29a0:	d8c12015 	stw	r3,1152(sp)
    29a4:	d8811f15 	stw	r2,1148(sp)
    29a8:	98bff60e 	bge	r19,r2,2984 <__alt_data_end+0xfffe413c>
    29ac:	b809883a 	mov	r4,r23
    29b0:	b00b883a 	mov	r5,r22
    29b4:	d9811e04 	addi	r6,sp,1144
    29b8:	00070a00 	call	70a0 <__sprint_r>
    29bc:	103a811e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    29c0:	d8c12017 	ldw	r3,1152(sp)
    29c4:	d8811f17 	ldw	r2,1148(sp)
    29c8:	da000404 	addi	r8,sp,16
    29cc:	003fee06 	br	2988 <__alt_data_end+0xfffe4140>
    29d0:	008011c4 	movi	r2,71
    29d4:	1400db16 	blt	r2,r16,2d44 <___vfprintf_internal_r+0x1de0>
    29d8:	01000074 	movhi	r4,1
    29dc:	213dc504 	addi	r4,r4,-2284
    29e0:	d9013115 	stw	r4,1220(sp)
    29e4:	00c000c4 	movi	r3,3
    29e8:	00bfdfc4 	movi	r2,-129
    29ec:	d8c12b15 	stw	r3,1196(sp)
    29f0:	e0b8703a 	and	fp,fp,r2
    29f4:	dcc12783 	ldbu	r19,1182(sp)
    29f8:	dc812d15 	stw	r18,1204(sp)
    29fc:	1823883a 	mov	r17,r3
    2a00:	d8013215 	stw	zero,1224(sp)
    2a04:	d8013415 	stw	zero,1232(sp)
    2a08:	003ad606 	br	1564 <__alt_data_end+0xfffe2d1c>
    2a0c:	4823883a 	mov	r17,r9
    2a10:	003cc906 	br	1d38 <__alt_data_end+0xfffe34f0>
    2a14:	1c800017 	ldw	r18,0(r3)
    2a18:	d8c12d17 	ldw	r3,1204(sp)
    2a1c:	902bd7fa 	srai	r21,r18,31
    2a20:	18c00104 	addi	r3,r3,4
    2a24:	d8c12d15 	stw	r3,1204(sp)
    2a28:	a805883a 	mov	r2,r21
    2a2c:	003aa906 	br	14d4 <__alt_data_end+0xfffe2c8c>
    2a30:	d9412d17 	ldw	r5,1204(sp)
    2a34:	14800017 	ldw	r18,0(r2)
    2a38:	002b883a 	mov	r21,zero
    2a3c:	29400104 	addi	r5,r5,4
    2a40:	d9412d15 	stw	r5,1204(sp)
    2a44:	003bf906 	br	1a2c <__alt_data_end+0xfffe31e4>
    2a48:	d8c12d17 	ldw	r3,1204(sp)
    2a4c:	14800017 	ldw	r18,0(r2)
    2a50:	002b883a 	mov	r21,zero
    2a54:	18c00104 	addi	r3,r3,4
    2a58:	d8c12d15 	stw	r3,1204(sp)
    2a5c:	00800044 	movi	r2,1
    2a60:	9007883a 	mov	r3,r18
    2a64:	003bcf06 	br	19a4 <__alt_data_end+0xfffe315c>
    2a68:	d9012d17 	ldw	r4,1204(sp)
    2a6c:	14800017 	ldw	r18,0(r2)
    2a70:	002b883a 	mov	r21,zero
    2a74:	21000104 	addi	r4,r4,4
    2a78:	d9012d15 	stw	r4,1204(sp)
    2a7c:	0005883a 	mov	r2,zero
    2a80:	9007883a 	mov	r3,r18
    2a84:	003bc706 	br	19a4 <__alt_data_end+0xfffe315c>
    2a88:	d9412d17 	ldw	r5,1204(sp)
    2a8c:	d8c12f17 	ldw	r3,1212(sp)
    2a90:	28800017 	ldw	r2,0(r5)
    2a94:	29400104 	addi	r5,r5,4
    2a98:	d9412d15 	stw	r5,1204(sp)
    2a9c:	10c00015 	stw	r3,0(r2)
    2aa0:	00396d06 	br	1058 <__alt_data_end+0xfffe2810>
    2aa4:	01000074 	movhi	r4,1
    2aa8:	213dc304 	addi	r4,r4,-2292
    2aac:	d9013115 	stw	r4,1220(sp)
    2ab0:	003ba206 	br	193c <__alt_data_end+0xfffe30f4>
    2ab4:	b809883a 	mov	r4,r23
    2ab8:	b00b883a 	mov	r5,r22
    2abc:	d9811e04 	addi	r6,sp,1144
    2ac0:	00070a00 	call	70a0 <__sprint_r>
    2ac4:	103a3f1e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    2ac8:	dc012617 	ldw	r16,1176(sp)
    2acc:	d8c12017 	ldw	r3,1152(sp)
    2ad0:	da000404 	addi	r8,sp,16
    2ad4:	003f9106 	br	291c <__alt_data_end+0xfffe40d4>
    2ad8:	e0800044 	addi	r2,fp,1
    2adc:	9cc00814 	ori	r19,r19,32
    2ae0:	e4000047 	ldb	r16,1(fp)
    2ae4:	00398706 	br	1104 <__alt_data_end+0xfffe28bc>
    2ae8:	d8812e17 	ldw	r2,1208(sp)
    2aec:	d8c12d15 	stw	r3,1204(sp)
    2af0:	0085c83a 	sub	r2,zero,r2
    2af4:	d8812e15 	stw	r2,1208(sp)
    2af8:	e005883a 	mov	r2,fp
    2afc:	003a3a06 	br	13e8 <__alt_data_end+0xfffe2ba0>
    2b00:	b809883a 	mov	r4,r23
    2b04:	b00b883a 	mov	r5,r22
    2b08:	d9811e04 	addi	r6,sp,1144
    2b0c:	00070a00 	call	70a0 <__sprint_r>
    2b10:	103a2c1e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    2b14:	d8c12017 	ldw	r3,1152(sp)
    2b18:	da000404 	addi	r8,sp,16
    2b1c:	003cf006 	br	1ee0 <__alt_data_end+0xfffe3698>
    2b20:	d8c12817 	ldw	r3,1184(sp)
    2b24:	d9013117 	ldw	r4,1220(sp)
    2b28:	1923c83a 	sub	r17,r3,r4
    2b2c:	003a8806 	br	1550 <__alt_data_end+0xfffe2d08>
    2b30:	da013f15 	stw	r8,1276(sp)
    2b34:	0006f0c0 	call	6f0c <strlen>
    2b38:	1023883a 	mov	r17,r2
    2b3c:	da013f17 	ldw	r8,1276(sp)
    2b40:	883c7f0e 	bge	r17,zero,1d40 <__alt_data_end+0xfffe34f8>
    2b44:	0005883a 	mov	r2,zero
    2b48:	003c7d06 	br	1d40 <__alt_data_end+0xfffe34f8>
    2b4c:	b809883a 	mov	r4,r23
    2b50:	b00b883a 	mov	r5,r22
    2b54:	d9811e04 	addi	r6,sp,1144
    2b58:	00070a00 	call	70a0 <__sprint_r>
    2b5c:	103a191e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    2b60:	d8c12017 	ldw	r3,1152(sp)
    2b64:	d8811f17 	ldw	r2,1148(sp)
    2b68:	da000404 	addi	r8,sp,16
    2b6c:	d9413317 	ldw	r5,1228(sp)
    2b70:	d9013117 	ldw	r4,1220(sp)
    2b74:	10800044 	addi	r2,r2,1
    2b78:	28c7883a 	add	r3,r5,r3
    2b7c:	41000015 	stw	r4,0(r8)
    2b80:	41400115 	stw	r5,4(r8)
    2b84:	d8c12015 	stw	r3,1152(sp)
    2b88:	d8811f15 	stw	r2,1148(sp)
    2b8c:	010001c4 	movi	r4,7
    2b90:	20bb060e 	bge	r4,r2,17ac <__alt_data_end+0xfffe2f64>
    2b94:	003d6206 	br	2120 <__alt_data_end+0xfffe38d8>
    2b98:	01000074 	movhi	r4,1
    2b9c:	213dd784 	addi	r4,r4,-2210
    2ba0:	d9013615 	stw	r4,1240(sp)
    2ba4:	003aa306 	br	1634 <__alt_data_end+0xfffe2dec>
    2ba8:	d8812604 	addi	r2,sp,1176
    2bac:	d8800115 	stw	r2,4(sp)
    2bb0:	d9413717 	ldw	r5,1244(sp)
    2bb4:	d8812504 	addi	r2,sp,1172
    2bb8:	d8800215 	stw	r2,8(sp)
    2bbc:	d8812104 	addi	r2,sp,1156
    2bc0:	da400015 	stw	r9,0(sp)
    2bc4:	d8800315 	stw	r2,12(sp)
    2bc8:	b809883a 	mov	r4,r23
    2bcc:	880d883a 	mov	r6,r17
    2bd0:	01c000c4 	movi	r7,3
    2bd4:	da013f15 	stw	r8,1276(sp)
    2bd8:	da413e15 	stw	r9,1272(sp)
    2bdc:	00033dc0 	call	33dc <_dtoa_r>
    2be0:	da413e17 	ldw	r9,1272(sp)
    2be4:	da013f17 	ldw	r8,1276(sp)
    2be8:	d8813115 	stw	r2,1220(sp)
    2bec:	482b883a 	mov	r21,r9
    2bf0:	d8c13117 	ldw	r3,1220(sp)
    2bf4:	00801184 	movi	r2,70
    2bf8:	1d55883a 	add	r10,r3,r21
    2bfc:	98bebb1e 	bne	r19,r2,26ec <__alt_data_end+0xfffe3ea4>
    2c00:	19000007 	ldb	r4,0(r3)
    2c04:	00800c04 	movi	r2,48
    2c08:	2080dd26 	beq	r4,r2,2f80 <___vfprintf_internal_r+0x201c>
    2c0c:	d8c12617 	ldw	r3,1176(sp)
    2c10:	50d5883a 	add	r10,r10,r3
    2c14:	003eb506 	br	26ec <__alt_data_end+0xfffe3ea4>
    2c18:	0023883a 	mov	r17,zero
    2c1c:	003d9b06 	br	228c <__alt_data_end+0xfffe3a44>
    2c20:	b809883a 	mov	r4,r23
    2c24:	b00b883a 	mov	r5,r22
    2c28:	d9811e04 	addi	r6,sp,1144
    2c2c:	00070a00 	call	70a0 <__sprint_r>
    2c30:	1039e41e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    2c34:	d8c12017 	ldw	r3,1152(sp)
    2c38:	da000404 	addi	r8,sp,16
    2c3c:	003d9206 	br	2288 <__alt_data_end+0xfffe3a40>
    2c40:	b809883a 	mov	r4,r23
    2c44:	b00b883a 	mov	r5,r22
    2c48:	d9811e04 	addi	r6,sp,1144
    2c4c:	00070a00 	call	70a0 <__sprint_r>
    2c50:	1039dc1e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    2c54:	d8812617 	ldw	r2,1176(sp)
    2c58:	d8c12017 	ldw	r3,1152(sp)
    2c5c:	da000404 	addi	r8,sp,16
    2c60:	003dfb06 	br	2450 <__alt_data_end+0xfffe3c08>
    2c64:	01000074 	movhi	r4,1
    2c68:	213dd384 	addi	r4,r4,-2226
    2c6c:	d9012c15 	stw	r4,1200(sp)
    2c70:	d9012c17 	ldw	r4,1200(sp)
    2c74:	1c07883a 	add	r3,r3,r16
    2c78:	10800044 	addi	r2,r2,1
    2c7c:	41000015 	stw	r4,0(r8)
    2c80:	44000115 	stw	r16,4(r8)
    2c84:	d8c12015 	stw	r3,1152(sp)
    2c88:	d8811f15 	stw	r2,1148(sp)
    2c8c:	010001c4 	movi	r4,7
    2c90:	20bfae16 	blt	r4,r2,2b4c <__alt_data_end+0xfffe4304>
    2c94:	42000204 	addi	r8,r8,8
    2c98:	003fb406 	br	2b6c <__alt_data_end+0xfffe4324>
    2c9c:	0021883a 	mov	r16,zero
    2ca0:	003dfd06 	br	2498 <__alt_data_end+0xfffe3c50>
    2ca4:	01400074 	movhi	r5,1
    2ca8:	297dd784 	addi	r5,r5,-2210
    2cac:	d9413615 	stw	r5,1240(sp)
    2cb0:	003ae306 	br	1840 <__alt_data_end+0xfffe2ff8>
    2cb4:	b809883a 	mov	r4,r23
    2cb8:	b00b883a 	mov	r5,r22
    2cbc:	d9811e04 	addi	r6,sp,1144
    2cc0:	00070a00 	call	70a0 <__sprint_r>
    2cc4:	1039bf1e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    2cc8:	d8812617 	ldw	r2,1176(sp)
    2ccc:	d9413317 	ldw	r5,1228(sp)
    2cd0:	d8c12017 	ldw	r3,1152(sp)
    2cd4:	da000404 	addi	r8,sp,16
    2cd8:	2885c83a 	sub	r2,r5,r2
    2cdc:	003ded06 	br	2494 <__alt_data_end+0xfffe3c4c>
    2ce0:	00800184 	movi	r2,6
    2ce4:	1240012e 	bgeu	r2,r9,2cec <___vfprintf_internal_r+0x1d88>
    2ce8:	1013883a 	mov	r9,r2
    2cec:	4823883a 	mov	r17,r9
    2cf0:	4805883a 	mov	r2,r9
    2cf4:	4800b216 	blt	r9,zero,2fc0 <___vfprintf_internal_r+0x205c>
    2cf8:	01400074 	movhi	r5,1
    2cfc:	297dd104 	addi	r5,r5,-2236
    2d00:	d8812b15 	stw	r2,1196(sp)
    2d04:	dc812d15 	stw	r18,1204(sp)
    2d08:	d8013215 	stw	zero,1224(sp)
    2d0c:	d8013415 	stw	zero,1232(sp)
    2d10:	d9413115 	stw	r5,1220(sp)
    2d14:	0005883a 	mov	r2,zero
    2d18:	003a1906 	br	1580 <__alt_data_end+0xfffe2d38>
    2d1c:	04c00b44 	movi	r19,45
    2d20:	dcc12785 	stb	r19,1182(sp)
    2d24:	003b0006 	br	1928 <__alt_data_end+0xfffe30e0>
    2d28:	d8c12d17 	ldw	r3,1204(sp)
    2d2c:	d9012f17 	ldw	r4,1212(sp)
    2d30:	18800017 	ldw	r2,0(r3)
    2d34:	18c00104 	addi	r3,r3,4
    2d38:	d8c12d15 	stw	r3,1204(sp)
    2d3c:	11000015 	stw	r4,0(r2)
    2d40:	0038c506 	br	1058 <__alt_data_end+0xfffe2810>
    2d44:	01400074 	movhi	r5,1
    2d48:	297dc604 	addi	r5,r5,-2280
    2d4c:	d9413115 	stw	r5,1220(sp)
    2d50:	003f2406 	br	29e4 <__alt_data_end+0xfffe419c>
    2d54:	00800b44 	movi	r2,45
    2d58:	d8812785 	stb	r2,1182(sp)
    2d5c:	df012b15 	stw	fp,1196(sp)
    2d60:	d8013215 	stw	zero,1224(sp)
    2d64:	df012d17 	ldw	fp,1204(sp)
    2d68:	00800b44 	movi	r2,45
    2d6c:	dc812d15 	stw	r18,1204(sp)
    2d70:	003a0006 	br	1574 <__alt_data_end+0xfffe2d2c>
    2d74:	d8c12617 	ldw	r3,1176(sp)
    2d78:	00bfff44 	movi	r2,-3
    2d7c:	18800a16 	blt	r3,r2,2da8 <___vfprintf_internal_r+0x1e44>
    2d80:	48c00916 	blt	r9,r3,2da8 <___vfprintf_internal_r+0x1e44>
    2d84:	d8c13415 	stw	r3,1232(sp)
    2d88:	040019c4 	movi	r16,103
    2d8c:	003e7606 	br	2768 <__alt_data_end+0xfffe3f20>
    2d90:	01000074 	movhi	r4,1
    2d94:	213dd384 	addi	r4,r4,-2226
    2d98:	d9012c15 	stw	r4,1200(sp)
    2d9c:	003c8e06 	br	1fd8 <__alt_data_end+0xfffe3790>
    2da0:	5005883a 	mov	r2,r10
    2da4:	003e6506 	br	273c <__alt_data_end+0xfffe3ef4>
    2da8:	843fff84 	addi	r16,r16,-2
    2dac:	1d7fffc4 	addi	r21,r3,-1
    2db0:	dd412615 	stw	r21,1176(sp)
    2db4:	dc0122c5 	stb	r16,1163(sp)
    2db8:	a8009216 	blt	r21,zero,3004 <___vfprintf_internal_r+0x20a0>
    2dbc:	00800ac4 	movi	r2,43
    2dc0:	d8812305 	stb	r2,1164(sp)
    2dc4:	00800244 	movi	r2,9
    2dc8:	1540660e 	bge	r2,r21,2f64 <___vfprintf_internal_r+0x2000>
    2dcc:	dcc122c4 	addi	r19,sp,1163
    2dd0:	dc012c15 	stw	r16,1200(sp)
    2dd4:	4023883a 	mov	r17,r8
    2dd8:	9821883a 	mov	r16,r19
    2ddc:	a809883a 	mov	r4,r21
    2de0:	01400284 	movi	r5,10
    2de4:	000a7080 	call	a708 <__modsi3>
    2de8:	10800c04 	addi	r2,r2,48
    2dec:	843fffc4 	addi	r16,r16,-1
    2df0:	a809883a 	mov	r4,r21
    2df4:	01400284 	movi	r5,10
    2df8:	80800005 	stb	r2,0(r16)
    2dfc:	000a6b40 	call	a6b4 <__divsi3>
    2e00:	01000244 	movi	r4,9
    2e04:	102b883a 	mov	r21,r2
    2e08:	20bff416 	blt	r4,r2,2ddc <__alt_data_end+0xfffe4594>
    2e0c:	8811883a 	mov	r8,r17
    2e10:	10800c04 	addi	r2,r2,48
    2e14:	8023883a 	mov	r17,r16
    2e18:	897fffc4 	addi	r5,r17,-1
    2e1c:	88bfffc5 	stb	r2,-1(r17)
    2e20:	dc012c17 	ldw	r16,1200(sp)
    2e24:	2cc08a2e 	bgeu	r5,r19,3050 <___vfprintf_internal_r+0x20ec>
    2e28:	d9812384 	addi	r6,sp,1166
    2e2c:	344dc83a 	sub	r6,r6,r17
    2e30:	d9012344 	addi	r4,sp,1165
    2e34:	998d883a 	add	r6,r19,r6
    2e38:	00000106 	br	2e40 <___vfprintf_internal_r+0x1edc>
    2e3c:	28800003 	ldbu	r2,0(r5)
    2e40:	20800005 	stb	r2,0(r4)
    2e44:	21000044 	addi	r4,r4,1
    2e48:	29400044 	addi	r5,r5,1
    2e4c:	21bffb1e 	bne	r4,r6,2e3c <__alt_data_end+0xfffe45f4>
    2e50:	d8812304 	addi	r2,sp,1164
    2e54:	1445c83a 	sub	r2,r2,r17
    2e58:	d9412344 	addi	r5,sp,1165
    2e5c:	2885883a 	add	r2,r5,r2
    2e60:	14e7c83a 	sub	r19,r2,r19
    2e64:	d8813317 	ldw	r2,1228(sp)
    2e68:	d8c13317 	ldw	r3,1228(sp)
    2e6c:	dcc13a15 	stw	r19,1256(sp)
    2e70:	14e3883a 	add	r17,r2,r19
    2e74:	00800044 	movi	r2,1
    2e78:	10c0550e 	bge	r2,r3,2fd0 <___vfprintf_internal_r+0x206c>
    2e7c:	8c400044 	addi	r17,r17,1
    2e80:	8839883a 	mov	fp,r17
    2e84:	88005016 	blt	r17,zero,2fc8 <___vfprintf_internal_r+0x2064>
    2e88:	d8013415 	stw	zero,1232(sp)
    2e8c:	003e3f06 	br	278c <__alt_data_end+0xfffe3f44>
    2e90:	da412b15 	stw	r9,1196(sp)
    2e94:	dcc12783 	ldbu	r19,1182(sp)
    2e98:	4823883a 	mov	r17,r9
    2e9c:	dc812d15 	stw	r18,1204(sp)
    2ea0:	d8013215 	stw	zero,1224(sp)
    2ea4:	d8013415 	stw	zero,1232(sp)
    2ea8:	0039ae06 	br	1564 <__alt_data_end+0xfffe2d1c>
    2eac:	483de91e 	bne	r9,zero,2654 <__alt_data_end+0xfffe3e0c>
    2eb0:	8813883a 	mov	r9,r17
    2eb4:	003de706 	br	2654 <__alt_data_end+0xfffe3e0c>
    2eb8:	b809883a 	mov	r4,r23
    2ebc:	b00b883a 	mov	r5,r22
    2ec0:	d9811e04 	addi	r6,sp,1144
    2ec4:	00070a00 	call	70a0 <__sprint_r>
    2ec8:	10393e1e 	bne	r2,zero,13c4 <__alt_data_end+0xfffe2b7c>
    2ecc:	dc012617 	ldw	r16,1176(sp)
    2ed0:	d8c12017 	ldw	r3,1152(sp)
    2ed4:	d8811f17 	ldw	r2,1148(sp)
    2ed8:	da000404 	addi	r8,sp,16
    2edc:	003ea006 	br	2960 <__alt_data_end+0xfffe4118>
    2ee0:	00c00b44 	movi	r3,45
    2ee4:	2460003c 	xorhi	r17,r4,32768
    2ee8:	d8c12b05 	stb	r3,1196(sp)
    2eec:	003ddf06 	br	266c <__alt_data_end+0xfffe3e24>
    2ef0:	02400184 	movi	r9,6
    2ef4:	003dd706 	br	2654 <__alt_data_end+0xfffe3e0c>
    2ef8:	4d400044 	addi	r21,r9,1
    2efc:	003de206 	br	2688 <__alt_data_end+0xfffe3e40>
    2f00:	d8c13417 	ldw	r3,1232(sp)
    2f04:	00c0490e 	bge	zero,r3,302c <___vfprintf_internal_r+0x20c8>
    2f08:	04400044 	movi	r17,1
    2f0c:	d9013317 	ldw	r4,1228(sp)
    2f10:	8923883a 	add	r17,r17,r4
    2f14:	8839883a 	mov	fp,r17
    2f18:	883e1c0e 	bge	r17,zero,278c <__alt_data_end+0xfffe3f44>
    2f1c:	0039883a 	mov	fp,zero
    2f20:	003e1a06 	br	278c <__alt_data_end+0xfffe3f44>
    2f24:	00c03b0e 	bge	zero,r3,3014 <___vfprintf_internal_r+0x20b0>
    2f28:	4800021e 	bne	r9,zero,2f34 <___vfprintf_internal_r+0x1fd0>
    2f2c:	e080004c 	andi	r2,fp,1
    2f30:	10000626 	beq	r2,zero,2f4c <___vfprintf_internal_r+0x1fe8>
    2f34:	d8c13417 	ldw	r3,1232(sp)
    2f38:	4a400044 	addi	r9,r9,1
    2f3c:	1a63883a 	add	r17,r3,r9
    2f40:	8839883a 	mov	fp,r17
    2f44:	883e110e 	bge	r17,zero,278c <__alt_data_end+0xfffe3f44>
    2f48:	003ff406 	br	2f1c <__alt_data_end+0xfffe46d4>
    2f4c:	1839883a 	mov	fp,r3
    2f50:	18004116 	blt	r3,zero,3058 <___vfprintf_internal_r+0x20f4>
    2f54:	dc413417 	ldw	r17,1232(sp)
    2f58:	003e0c06 	br	278c <__alt_data_end+0xfffe3f44>
    2f5c:	d8812117 	ldw	r2,1156(sp)
    2f60:	003df606 	br	273c <__alt_data_end+0xfffe3ef4>
    2f64:	00800c04 	movi	r2,48
    2f68:	a8c00c04 	addi	r3,r21,48
    2f6c:	d8812345 	stb	r2,1165(sp)
    2f70:	d8c12385 	stb	r3,1166(sp)
    2f74:	d88123c4 	addi	r2,sp,1167
    2f78:	dcc122c4 	addi	r19,sp,1163
    2f7c:	003fb806 	br	2e60 <__alt_data_end+0xfffe4618>
    2f80:	d9013717 	ldw	r4,1244(sp)
    2f84:	880b883a 	mov	r5,r17
    2f88:	000d883a 	mov	r6,zero
    2f8c:	000f883a 	mov	r7,zero
    2f90:	da013f15 	stw	r8,1276(sp)
    2f94:	da413e15 	stw	r9,1272(sp)
    2f98:	da813d15 	stw	r10,1268(sp)
    2f9c:	000b9b80 	call	b9b8 <__eqdf2>
    2fa0:	da013f17 	ldw	r8,1276(sp)
    2fa4:	da413e17 	ldw	r9,1272(sp)
    2fa8:	da813d17 	ldw	r10,1268(sp)
    2fac:	103f1726 	beq	r2,zero,2c0c <__alt_data_end+0xfffe43c4>
    2fb0:	00800044 	movi	r2,1
    2fb4:	1547c83a 	sub	r3,r2,r21
    2fb8:	d8c12615 	stw	r3,1176(sp)
    2fbc:	003f1406 	br	2c10 <__alt_data_end+0xfffe43c8>
    2fc0:	0005883a 	mov	r2,zero
    2fc4:	003f4c06 	br	2cf8 <__alt_data_end+0xfffe44b0>
    2fc8:	0039883a 	mov	fp,zero
    2fcc:	003fae06 	br	2e88 <__alt_data_end+0xfffe4640>
    2fd0:	e084703a 	and	r2,fp,r2
    2fd4:	103faa26 	beq	r2,zero,2e80 <__alt_data_end+0xfffe4638>
    2fd8:	003fa806 	br	2e7c <__alt_data_end+0xfffe4634>
    2fdc:	d9412d17 	ldw	r5,1204(sp)
    2fe0:	2a400017 	ldw	r9,0(r5)
    2fe4:	28c00104 	addi	r3,r5,4
    2fe8:	d8c12d15 	stw	r3,1204(sp)
    2fec:	483ebc0e 	bge	r9,zero,2ae0 <__alt_data_end+0xfffe4298>
    2ff0:	027fffc4 	movi	r9,-1
    2ff4:	e4000047 	ldb	r16,1(fp)
    2ff8:	00384206 	br	1104 <__alt_data_end+0xfffe28bc>
    2ffc:	043fffc4 	movi	r16,-1
    3000:	0038ce06 	br	133c <__alt_data_end+0xfffe2af4>
    3004:	00800b44 	movi	r2,45
    3008:	056bc83a 	sub	r21,zero,r21
    300c:	d8812305 	stb	r2,1164(sp)
    3010:	003f6c06 	br	2dc4 <__alt_data_end+0xfffe457c>
    3014:	4800081e 	bne	r9,zero,3038 <___vfprintf_internal_r+0x20d4>
    3018:	e080004c 	andi	r2,fp,1
    301c:	1000061e 	bne	r2,zero,3038 <___vfprintf_internal_r+0x20d4>
    3020:	07000044 	movi	fp,1
    3024:	e023883a 	mov	r17,fp
    3028:	003dd806 	br	278c <__alt_data_end+0xfffe3f44>
    302c:	04400084 	movi	r17,2
    3030:	88e3c83a 	sub	r17,r17,r3
    3034:	003fb506 	br	2f0c <__alt_data_end+0xfffe46c4>
    3038:	4c400084 	addi	r17,r9,2
    303c:	8839883a 	mov	fp,r17
    3040:	883dd20e 	bge	r17,zero,278c <__alt_data_end+0xfffe3f44>
    3044:	003fb506 	br	2f1c <__alt_data_end+0xfffe46d4>
    3048:	d8c12617 	ldw	r3,1176(sp)
    304c:	003f5706 	br	2dac <__alt_data_end+0xfffe4564>
    3050:	d8812344 	addi	r2,sp,1165
    3054:	003f8206 	br	2e60 <__alt_data_end+0xfffe4618>
    3058:	0039883a 	mov	fp,zero
    305c:	003fbd06 	br	2f54 <__alt_data_end+0xfffe470c>

00003060 <__vfprintf_internal>:
    3060:	2007883a 	mov	r3,r4
    3064:	01000074 	movhi	r4,1
    3068:	21053004 	addi	r4,r4,5312
    306c:	21000017 	ldw	r4,0(r4)
    3070:	2805883a 	mov	r2,r5
    3074:	300f883a 	mov	r7,r6
    3078:	180b883a 	mov	r5,r3
    307c:	100d883a 	mov	r6,r2
    3080:	0000f641 	jmpi	f64 <___vfprintf_internal_r>

00003084 <__swsetup_r>:
    3084:	00800074 	movhi	r2,1
    3088:	defffd04 	addi	sp,sp,-12
    308c:	10853004 	addi	r2,r2,5312
    3090:	dc400115 	stw	r17,4(sp)
    3094:	2023883a 	mov	r17,r4
    3098:	11000017 	ldw	r4,0(r2)
    309c:	dc000015 	stw	r16,0(sp)
    30a0:	dfc00215 	stw	ra,8(sp)
    30a4:	2821883a 	mov	r16,r5
    30a8:	20000226 	beq	r4,zero,30b4 <__swsetup_r+0x30>
    30ac:	20c00e17 	ldw	r3,56(r4)
    30b0:	18002e26 	beq	r3,zero,316c <__swsetup_r+0xe8>
    30b4:	8080030b 	ldhu	r2,12(r16)
    30b8:	10c0020c 	andi	r3,r2,8
    30bc:	100d883a 	mov	r6,r2
    30c0:	18000f26 	beq	r3,zero,3100 <__swsetup_r+0x7c>
    30c4:	80c00417 	ldw	r3,16(r16)
    30c8:	18001526 	beq	r3,zero,3120 <__swsetup_r+0x9c>
    30cc:	1100004c 	andi	r4,r2,1
    30d0:	20001c1e 	bne	r4,zero,3144 <__swsetup_r+0xc0>
    30d4:	1080008c 	andi	r2,r2,2
    30d8:	1000261e 	bne	r2,zero,3174 <__swsetup_r+0xf0>
    30dc:	80800517 	ldw	r2,20(r16)
    30e0:	80800215 	stw	r2,8(r16)
    30e4:	18001c26 	beq	r3,zero,3158 <__swsetup_r+0xd4>
    30e8:	0005883a 	mov	r2,zero
    30ec:	dfc00217 	ldw	ra,8(sp)
    30f0:	dc400117 	ldw	r17,4(sp)
    30f4:	dc000017 	ldw	r16,0(sp)
    30f8:	dec00304 	addi	sp,sp,12
    30fc:	f800283a 	ret
    3100:	3080040c 	andi	r2,r6,16
    3104:	10001726 	beq	r2,zero,3164 <__swsetup_r+0xe0>
    3108:	3080010c 	andi	r2,r6,4
    310c:	10001b1e 	bne	r2,zero,317c <__swsetup_r+0xf8>
    3110:	80c00417 	ldw	r3,16(r16)
    3114:	30800214 	ori	r2,r6,8
    3118:	8080030d 	sth	r2,12(r16)
    311c:	183feb1e 	bne	r3,zero,30cc <__alt_data_end+0xfffe4884>
    3120:	1140a00c 	andi	r5,r2,640
    3124:	01008004 	movi	r4,512
    3128:	293fe826 	beq	r5,r4,30cc <__alt_data_end+0xfffe4884>
    312c:	8809883a 	mov	r4,r17
    3130:	800b883a 	mov	r5,r16
    3134:	00057740 	call	5774 <__smakebuf_r>
    3138:	8080030b 	ldhu	r2,12(r16)
    313c:	80c00417 	ldw	r3,16(r16)
    3140:	003fe206 	br	30cc <__alt_data_end+0xfffe4884>
    3144:	80800517 	ldw	r2,20(r16)
    3148:	80000215 	stw	zero,8(r16)
    314c:	0085c83a 	sub	r2,zero,r2
    3150:	80800615 	stw	r2,24(r16)
    3154:	183fe41e 	bne	r3,zero,30e8 <__alt_data_end+0xfffe48a0>
    3158:	8080030b 	ldhu	r2,12(r16)
    315c:	1080200c 	andi	r2,r2,128
    3160:	103fe226 	beq	r2,zero,30ec <__alt_data_end+0xfffe48a4>
    3164:	00bfffc4 	movi	r2,-1
    3168:	003fe006 	br	30ec <__alt_data_end+0xfffe48a4>
    316c:	00050c00 	call	50c0 <__sinit>
    3170:	003fd006 	br	30b4 <__alt_data_end+0xfffe486c>
    3174:	0005883a 	mov	r2,zero
    3178:	003fd906 	br	30e0 <__alt_data_end+0xfffe4898>
    317c:	81400c17 	ldw	r5,48(r16)
    3180:	28000626 	beq	r5,zero,319c <__swsetup_r+0x118>
    3184:	80801004 	addi	r2,r16,64
    3188:	28800326 	beq	r5,r2,3198 <__swsetup_r+0x114>
    318c:	8809883a 	mov	r4,r17
    3190:	00052340 	call	5234 <_free_r>
    3194:	8180030b 	ldhu	r6,12(r16)
    3198:	80000c15 	stw	zero,48(r16)
    319c:	80c00417 	ldw	r3,16(r16)
    31a0:	00bff6c4 	movi	r2,-37
    31a4:	118c703a 	and	r6,r2,r6
    31a8:	80000115 	stw	zero,4(r16)
    31ac:	80c00015 	stw	r3,0(r16)
    31b0:	003fd806 	br	3114 <__alt_data_end+0xfffe48cc>

000031b4 <quorem>:
    31b4:	defff204 	addi	sp,sp,-56
    31b8:	ddc00b15 	stw	r23,44(sp)
    31bc:	20800417 	ldw	r2,16(r4)
    31c0:	2dc00417 	ldw	r23,16(r5)
    31c4:	dfc00d15 	stw	ra,52(sp)
    31c8:	df000c15 	stw	fp,48(sp)
    31cc:	dd800a15 	stw	r22,40(sp)
    31d0:	dd400915 	stw	r21,36(sp)
    31d4:	dd000815 	stw	r20,32(sp)
    31d8:	dcc00715 	stw	r19,28(sp)
    31dc:	dc800615 	stw	r18,24(sp)
    31e0:	dc400515 	stw	r17,20(sp)
    31e4:	dc000415 	stw	r16,16(sp)
    31e8:	15c07a16 	blt	r2,r23,33d4 <quorem+0x220>
    31ec:	bdffffc4 	addi	r23,r23,-1
    31f0:	bde9883a 	add	r20,r23,r23
    31f4:	28c00504 	addi	r3,r5,20
    31f8:	a529883a 	add	r20,r20,r20
    31fc:	1d39883a 	add	fp,r3,r20
    3200:	24c00504 	addi	r19,r4,20
    3204:	d9400215 	stw	r5,8(sp)
    3208:	9d29883a 	add	r20,r19,r20
    320c:	e1400017 	ldw	r5,0(fp)
    3210:	d9000015 	stw	r4,0(sp)
    3214:	a1000017 	ldw	r4,0(r20)
    3218:	29400044 	addi	r5,r5,1
    321c:	d8c00115 	stw	r3,4(sp)
    3220:	dd000315 	stw	r20,12(sp)
    3224:	000a7640 	call	a764 <__udivsi3>
    3228:	1025883a 	mov	r18,r2
    322c:	10003026 	beq	r2,zero,32f0 <quorem+0x13c>
    3230:	dc400117 	ldw	r17,4(sp)
    3234:	9829883a 	mov	r20,r19
    3238:	002d883a 	mov	r22,zero
    323c:	0021883a 	mov	r16,zero
    3240:	8d400017 	ldw	r21,0(r17)
    3244:	900b883a 	mov	r5,r18
    3248:	8c400104 	addi	r17,r17,4
    324c:	a93fffcc 	andi	r4,r21,65535
    3250:	000a7740 	call	a774 <__mulsi3>
    3254:	a808d43a 	srli	r4,r21,16
    3258:	900b883a 	mov	r5,r18
    325c:	b0ad883a 	add	r22,r22,r2
    3260:	000a7740 	call	a774 <__mulsi3>
    3264:	a1000017 	ldw	r4,0(r20)
    3268:	b00cd43a 	srli	r6,r22,16
    326c:	b0ffffcc 	andi	r3,r22,65535
    3270:	217fffcc 	andi	r5,r4,65535
    3274:	2c21883a 	add	r16,r5,r16
    3278:	80c7c83a 	sub	r3,r16,r3
    327c:	2008d43a 	srli	r4,r4,16
    3280:	3085883a 	add	r2,r6,r2
    3284:	1821d43a 	srai	r16,r3,16
    3288:	117fffcc 	andi	r5,r2,65535
    328c:	2149c83a 	sub	r4,r4,r5
    3290:	2421883a 	add	r16,r4,r16
    3294:	8008943a 	slli	r4,r16,16
    3298:	18ffffcc 	andi	r3,r3,65535
    329c:	102cd43a 	srli	r22,r2,16
    32a0:	20c8b03a 	or	r4,r4,r3
    32a4:	a1000015 	stw	r4,0(r20)
    32a8:	8021d43a 	srai	r16,r16,16
    32ac:	a5000104 	addi	r20,r20,4
    32b0:	e47fe32e 	bgeu	fp,r17,3240 <__alt_data_end+0xfffe49f8>
    32b4:	d8c00317 	ldw	r3,12(sp)
    32b8:	18800017 	ldw	r2,0(r3)
    32bc:	10000c1e 	bne	r2,zero,32f0 <quorem+0x13c>
    32c0:	18bfff04 	addi	r2,r3,-4
    32c4:	9880082e 	bgeu	r19,r2,32e8 <quorem+0x134>
    32c8:	18ffff17 	ldw	r3,-4(r3)
    32cc:	18000326 	beq	r3,zero,32dc <quorem+0x128>
    32d0:	00000506 	br	32e8 <quorem+0x134>
    32d4:	10c00017 	ldw	r3,0(r2)
    32d8:	1800031e 	bne	r3,zero,32e8 <quorem+0x134>
    32dc:	10bfff04 	addi	r2,r2,-4
    32e0:	bdffffc4 	addi	r23,r23,-1
    32e4:	98bffb36 	bltu	r19,r2,32d4 <__alt_data_end+0xfffe4a8c>
    32e8:	d8c00017 	ldw	r3,0(sp)
    32ec:	1dc00415 	stw	r23,16(r3)
    32f0:	d9000017 	ldw	r4,0(sp)
    32f4:	d9400217 	ldw	r5,8(sp)
    32f8:	00065ec0 	call	65ec <__mcmp>
    32fc:	10002816 	blt	r2,zero,33a0 <quorem+0x1ec>
    3300:	dc400117 	ldw	r17,4(sp)
    3304:	94800044 	addi	r18,r18,1
    3308:	980d883a 	mov	r6,r19
    330c:	0007883a 	mov	r3,zero
    3310:	31000017 	ldw	r4,0(r6)
    3314:	89400017 	ldw	r5,0(r17)
    3318:	31800104 	addi	r6,r6,4
    331c:	20bfffcc 	andi	r2,r4,65535
    3320:	10c7883a 	add	r3,r2,r3
    3324:	28bfffcc 	andi	r2,r5,65535
    3328:	1885c83a 	sub	r2,r3,r2
    332c:	280ad43a 	srli	r5,r5,16
    3330:	2008d43a 	srli	r4,r4,16
    3334:	1007d43a 	srai	r3,r2,16
    3338:	10bfffcc 	andi	r2,r2,65535
    333c:	2149c83a 	sub	r4,r4,r5
    3340:	20c9883a 	add	r4,r4,r3
    3344:	200a943a 	slli	r5,r4,16
    3348:	8c400104 	addi	r17,r17,4
    334c:	2007d43a 	srai	r3,r4,16
    3350:	2884b03a 	or	r2,r5,r2
    3354:	30bfff15 	stw	r2,-4(r6)
    3358:	e47fed2e 	bgeu	fp,r17,3310 <__alt_data_end+0xfffe4ac8>
    335c:	bdc5883a 	add	r2,r23,r23
    3360:	1085883a 	add	r2,r2,r2
    3364:	9887883a 	add	r3,r19,r2
    3368:	18800017 	ldw	r2,0(r3)
    336c:	10000c1e 	bne	r2,zero,33a0 <quorem+0x1ec>
    3370:	18bfff04 	addi	r2,r3,-4
    3374:	9880082e 	bgeu	r19,r2,3398 <quorem+0x1e4>
    3378:	18ffff17 	ldw	r3,-4(r3)
    337c:	18000326 	beq	r3,zero,338c <quorem+0x1d8>
    3380:	00000506 	br	3398 <quorem+0x1e4>
    3384:	10c00017 	ldw	r3,0(r2)
    3388:	1800031e 	bne	r3,zero,3398 <quorem+0x1e4>
    338c:	10bfff04 	addi	r2,r2,-4
    3390:	bdffffc4 	addi	r23,r23,-1
    3394:	98bffb36 	bltu	r19,r2,3384 <__alt_data_end+0xfffe4b3c>
    3398:	d8c00017 	ldw	r3,0(sp)
    339c:	1dc00415 	stw	r23,16(r3)
    33a0:	9005883a 	mov	r2,r18
    33a4:	dfc00d17 	ldw	ra,52(sp)
    33a8:	df000c17 	ldw	fp,48(sp)
    33ac:	ddc00b17 	ldw	r23,44(sp)
    33b0:	dd800a17 	ldw	r22,40(sp)
    33b4:	dd400917 	ldw	r21,36(sp)
    33b8:	dd000817 	ldw	r20,32(sp)
    33bc:	dcc00717 	ldw	r19,28(sp)
    33c0:	dc800617 	ldw	r18,24(sp)
    33c4:	dc400517 	ldw	r17,20(sp)
    33c8:	dc000417 	ldw	r16,16(sp)
    33cc:	dec00e04 	addi	sp,sp,56
    33d0:	f800283a 	ret
    33d4:	0005883a 	mov	r2,zero
    33d8:	003ff206 	br	33a4 <__alt_data_end+0xfffe4b5c>

000033dc <_dtoa_r>:
    33dc:	20801017 	ldw	r2,64(r4)
    33e0:	deffde04 	addi	sp,sp,-136
    33e4:	dd401d15 	stw	r21,116(sp)
    33e8:	dcc01b15 	stw	r19,108(sp)
    33ec:	dc801a15 	stw	r18,104(sp)
    33f0:	dc401915 	stw	r17,100(sp)
    33f4:	dc001815 	stw	r16,96(sp)
    33f8:	dfc02115 	stw	ra,132(sp)
    33fc:	df002015 	stw	fp,128(sp)
    3400:	ddc01f15 	stw	r23,124(sp)
    3404:	dd801e15 	stw	r22,120(sp)
    3408:	dd001c15 	stw	r20,112(sp)
    340c:	d9c00315 	stw	r7,12(sp)
    3410:	2021883a 	mov	r16,r4
    3414:	302b883a 	mov	r21,r6
    3418:	2825883a 	mov	r18,r5
    341c:	dc402417 	ldw	r17,144(sp)
    3420:	3027883a 	mov	r19,r6
    3424:	10000826 	beq	r2,zero,3448 <_dtoa_r+0x6c>
    3428:	21801117 	ldw	r6,68(r4)
    342c:	00c00044 	movi	r3,1
    3430:	100b883a 	mov	r5,r2
    3434:	1986983a 	sll	r3,r3,r6
    3438:	11800115 	stw	r6,4(r2)
    343c:	10c00215 	stw	r3,8(r2)
    3440:	0005d180 	call	5d18 <_Bfree>
    3444:	80001015 	stw	zero,64(r16)
    3448:	a8002d16 	blt	r21,zero,3500 <_dtoa_r+0x124>
    344c:	88000015 	stw	zero,0(r17)
    3450:	a8dffc2c 	andhi	r3,r21,32752
    3454:	009ffc34 	movhi	r2,32752
    3458:	18801b26 	beq	r3,r2,34c8 <_dtoa_r+0xec>
    345c:	9009883a 	mov	r4,r18
    3460:	980b883a 	mov	r5,r19
    3464:	000d883a 	mov	r6,zero
    3468:	000f883a 	mov	r7,zero
    346c:	000b9b80 	call	b9b8 <__eqdf2>
    3470:	10002a1e 	bne	r2,zero,351c <_dtoa_r+0x140>
    3474:	d8c02317 	ldw	r3,140(sp)
    3478:	d9002517 	ldw	r4,148(sp)
    347c:	00800044 	movi	r2,1
    3480:	18800015 	stw	r2,0(r3)
    3484:	2001a226 	beq	r4,zero,3b10 <_dtoa_r+0x734>
    3488:	00800074 	movhi	r2,1
    348c:	10bdd344 	addi	r2,r2,-2227
    3490:	20800015 	stw	r2,0(r4)
    3494:	10bfffc4 	addi	r2,r2,-1
    3498:	dfc02117 	ldw	ra,132(sp)
    349c:	df002017 	ldw	fp,128(sp)
    34a0:	ddc01f17 	ldw	r23,124(sp)
    34a4:	dd801e17 	ldw	r22,120(sp)
    34a8:	dd401d17 	ldw	r21,116(sp)
    34ac:	dd001c17 	ldw	r20,112(sp)
    34b0:	dcc01b17 	ldw	r19,108(sp)
    34b4:	dc801a17 	ldw	r18,104(sp)
    34b8:	dc401917 	ldw	r17,100(sp)
    34bc:	dc001817 	ldw	r16,96(sp)
    34c0:	dec02204 	addi	sp,sp,136
    34c4:	f800283a 	ret
    34c8:	d8c02317 	ldw	r3,140(sp)
    34cc:	0089c3c4 	movi	r2,9999
    34d0:	18800015 	stw	r2,0(r3)
    34d4:	90017c26 	beq	r18,zero,3ac8 <_dtoa_r+0x6ec>
    34d8:	00800074 	movhi	r2,1
    34dc:	10bddf04 	addi	r2,r2,-2180
    34e0:	d9002517 	ldw	r4,148(sp)
    34e4:	203fec26 	beq	r4,zero,3498 <__alt_data_end+0xfffe4c50>
    34e8:	10c000c7 	ldb	r3,3(r2)
    34ec:	18017d1e 	bne	r3,zero,3ae4 <_dtoa_r+0x708>
    34f0:	10c000c4 	addi	r3,r2,3
    34f4:	d9802517 	ldw	r6,148(sp)
    34f8:	30c00015 	stw	r3,0(r6)
    34fc:	003fe606 	br	3498 <__alt_data_end+0xfffe4c50>
    3500:	04e00034 	movhi	r19,32768
    3504:	9cffffc4 	addi	r19,r19,-1
    3508:	00800044 	movi	r2,1
    350c:	ace6703a 	and	r19,r21,r19
    3510:	88800015 	stw	r2,0(r17)
    3514:	982b883a 	mov	r21,r19
    3518:	003fcd06 	br	3450 <__alt_data_end+0xfffe4c08>
    351c:	d8800204 	addi	r2,sp,8
    3520:	a822d53a 	srli	r17,r21,20
    3524:	d8800015 	stw	r2,0(sp)
    3528:	8009883a 	mov	r4,r16
    352c:	900b883a 	mov	r5,r18
    3530:	980d883a 	mov	r6,r19
    3534:	d9c00104 	addi	r7,sp,4
    3538:	00069600 	call	6960 <__d2b>
    353c:	1039883a 	mov	fp,r2
    3540:	88016a1e 	bne	r17,zero,3aec <_dtoa_r+0x710>
    3544:	dd000217 	ldw	r20,8(sp)
    3548:	dc400117 	ldw	r17,4(sp)
    354c:	00befbc4 	movi	r2,-1041
    3550:	a463883a 	add	r17,r20,r17
    3554:	8882ea16 	blt	r17,r2,4100 <_dtoa_r+0xd24>
    3558:	00bf0384 	movi	r2,-1010
    355c:	1445c83a 	sub	r2,r2,r17
    3560:	89010484 	addi	r4,r17,1042
    3564:	a8aa983a 	sll	r21,r21,r2
    3568:	9108d83a 	srl	r4,r18,r4
    356c:	a908b03a 	or	r4,r21,r4
    3570:	000ce900 	call	ce90 <__floatunsidf>
    3574:	017f8434 	movhi	r5,65040
    3578:	01800044 	movi	r6,1
    357c:	1009883a 	mov	r4,r2
    3580:	194b883a 	add	r5,r3,r5
    3584:	8c7fffc4 	addi	r17,r17,-1
    3588:	d9800f15 	stw	r6,60(sp)
    358c:	000d883a 	mov	r6,zero
    3590:	01cffe34 	movhi	r7,16376
    3594:	000c4680 	call	c468 <__subdf3>
    3598:	0198dbf4 	movhi	r6,25455
    359c:	01cff4f4 	movhi	r7,16339
    35a0:	1009883a 	mov	r4,r2
    35a4:	180b883a 	mov	r5,r3
    35a8:	3190d844 	addi	r6,r6,17249
    35ac:	39e1e9c4 	addi	r7,r7,-30809
    35b0:	000bbfc0 	call	bbfc <__muldf3>
    35b4:	01a2d874 	movhi	r6,35681
    35b8:	01cff1f4 	movhi	r7,16327
    35bc:	180b883a 	mov	r5,r3
    35c0:	31b22cc4 	addi	r6,r6,-14157
    35c4:	39e28a04 	addi	r7,r7,-30168
    35c8:	1009883a 	mov	r4,r2
    35cc:	000a79c0 	call	a79c <__adddf3>
    35d0:	8809883a 	mov	r4,r17
    35d4:	102d883a 	mov	r22,r2
    35d8:	182b883a 	mov	r21,r3
    35dc:	000cdc00 	call	cdc0 <__floatsidf>
    35e0:	019427f4 	movhi	r6,20639
    35e4:	01cff4f4 	movhi	r7,16339
    35e8:	1009883a 	mov	r4,r2
    35ec:	180b883a 	mov	r5,r3
    35f0:	319e7ec4 	addi	r6,r6,31227
    35f4:	39d104c4 	addi	r7,r7,17427
    35f8:	000bbfc0 	call	bbfc <__muldf3>
    35fc:	b009883a 	mov	r4,r22
    3600:	a80b883a 	mov	r5,r21
    3604:	100d883a 	mov	r6,r2
    3608:	180f883a 	mov	r7,r3
    360c:	000a79c0 	call	a79c <__adddf3>
    3610:	1009883a 	mov	r4,r2
    3614:	180b883a 	mov	r5,r3
    3618:	102d883a 	mov	r22,r2
    361c:	182b883a 	mov	r21,r3
    3620:	000cd380 	call	cd38 <__fixdfsi>
    3624:	b009883a 	mov	r4,r22
    3628:	a80b883a 	mov	r5,r21
    362c:	000d883a 	mov	r6,zero
    3630:	000f883a 	mov	r7,zero
    3634:	d8800515 	stw	r2,20(sp)
    3638:	000bb1c0 	call	bb1c <__ledf2>
    363c:	10023116 	blt	r2,zero,3f04 <_dtoa_r+0xb28>
    3640:	d8c00517 	ldw	r3,20(sp)
    3644:	00800584 	movi	r2,22
    3648:	10c21f36 	bltu	r2,r3,3ec8 <_dtoa_r+0xaec>
    364c:	180490fa 	slli	r2,r3,3
    3650:	00c00074 	movhi	r3,1
    3654:	18fdfb04 	addi	r3,r3,-2068
    3658:	1885883a 	add	r2,r3,r2
    365c:	11000017 	ldw	r4,0(r2)
    3660:	11400117 	ldw	r5,4(r2)
    3664:	900d883a 	mov	r6,r18
    3668:	980f883a 	mov	r7,r19
    366c:	000ba3c0 	call	ba3c <__gedf2>
    3670:	0082a70e 	bge	zero,r2,4110 <_dtoa_r+0xd34>
    3674:	d9000517 	ldw	r4,20(sp)
    3678:	d8000c15 	stw	zero,48(sp)
    367c:	213fffc4 	addi	r4,r4,-1
    3680:	d9000515 	stw	r4,20(sp)
    3684:	a463c83a 	sub	r17,r20,r17
    3688:	8dbfffc4 	addi	r22,r17,-1
    368c:	b0021916 	blt	r22,zero,3ef4 <_dtoa_r+0xb18>
    3690:	d8000815 	stw	zero,32(sp)
    3694:	d8800517 	ldw	r2,20(sp)
    3698:	10020e16 	blt	r2,zero,3ed4 <_dtoa_r+0xaf8>
    369c:	b0ad883a 	add	r22,r22,r2
    36a0:	d8800a15 	stw	r2,40(sp)
    36a4:	d8000915 	stw	zero,36(sp)
    36a8:	d8c00317 	ldw	r3,12(sp)
    36ac:	00800244 	movi	r2,9
    36b0:	10c11a36 	bltu	r2,r3,3b1c <_dtoa_r+0x740>
    36b4:	00800144 	movi	r2,5
    36b8:	10c4fc0e 	bge	r2,r3,4aac <_dtoa_r+0x16d0>
    36bc:	18ffff04 	addi	r3,r3,-4
    36c0:	d8c00315 	stw	r3,12(sp)
    36c4:	0029883a 	mov	r20,zero
    36c8:	d9800317 	ldw	r6,12(sp)
    36cc:	008000c4 	movi	r2,3
    36d0:	3083bd26 	beq	r6,r2,45c8 <_dtoa_r+0x11ec>
    36d4:	1183670e 	bge	r2,r6,4474 <_dtoa_r+0x1098>
    36d8:	d8c00317 	ldw	r3,12(sp)
    36dc:	00800104 	movi	r2,4
    36e0:	1882e726 	beq	r3,r2,4280 <_dtoa_r+0xea4>
    36e4:	00800144 	movi	r2,5
    36e8:	1884f21e 	bne	r3,r2,4ab4 <_dtoa_r+0x16d8>
    36ec:	00800044 	movi	r2,1
    36f0:	d8800b15 	stw	r2,44(sp)
    36f4:	d8c02217 	ldw	r3,136(sp)
    36f8:	d9000517 	ldw	r4,20(sp)
    36fc:	1907883a 	add	r3,r3,r4
    3700:	19800044 	addi	r6,r3,1
    3704:	d8c00d15 	stw	r3,52(sp)
    3708:	d9800615 	stw	r6,24(sp)
    370c:	0183c30e 	bge	zero,r6,461c <_dtoa_r+0x1240>
    3710:	d9800617 	ldw	r6,24(sp)
    3714:	3023883a 	mov	r17,r6
    3718:	80001115 	stw	zero,68(r16)
    371c:	008005c4 	movi	r2,23
    3720:	1184f62e 	bgeu	r2,r6,4afc <_dtoa_r+0x1720>
    3724:	00c00044 	movi	r3,1
    3728:	00800104 	movi	r2,4
    372c:	1085883a 	add	r2,r2,r2
    3730:	11000504 	addi	r4,r2,20
    3734:	180b883a 	mov	r5,r3
    3738:	18c00044 	addi	r3,r3,1
    373c:	313ffb2e 	bgeu	r6,r4,372c <__alt_data_end+0xfffe4ee4>
    3740:	81401115 	stw	r5,68(r16)
    3744:	8009883a 	mov	r4,r16
    3748:	0005c700 	call	5c70 <_Balloc>
    374c:	d8800715 	stw	r2,28(sp)
    3750:	80801015 	stw	r2,64(r16)
    3754:	00800384 	movi	r2,14
    3758:	1440fd36 	bltu	r2,r17,3b50 <_dtoa_r+0x774>
    375c:	a000fc26 	beq	r20,zero,3b50 <_dtoa_r+0x774>
    3760:	d8800517 	ldw	r2,20(sp)
    3764:	0083b90e 	bge	zero,r2,464c <_dtoa_r+0x1270>
    3768:	d8c00517 	ldw	r3,20(sp)
    376c:	108003cc 	andi	r2,r2,15
    3770:	100490fa 	slli	r2,r2,3
    3774:	182fd13a 	srai	r23,r3,4
    3778:	00c00074 	movhi	r3,1
    377c:	18fdfb04 	addi	r3,r3,-2068
    3780:	1885883a 	add	r2,r3,r2
    3784:	b8c0040c 	andi	r3,r23,16
    3788:	12c00017 	ldw	r11,0(r2)
    378c:	12800117 	ldw	r10,4(r2)
    3790:	18039726 	beq	r3,zero,45f0 <_dtoa_r+0x1214>
    3794:	00800074 	movhi	r2,1
    3798:	10bdf104 	addi	r2,r2,-2108
    379c:	11800817 	ldw	r6,32(r2)
    37a0:	11c00917 	ldw	r7,36(r2)
    37a4:	9009883a 	mov	r4,r18
    37a8:	980b883a 	mov	r5,r19
    37ac:	da801615 	stw	r10,88(sp)
    37b0:	dac01515 	stw	r11,84(sp)
    37b4:	000b0380 	call	b038 <__divdf3>
    37b8:	da801617 	ldw	r10,88(sp)
    37bc:	dac01517 	ldw	r11,84(sp)
    37c0:	bdc003cc 	andi	r23,r23,15
    37c4:	044000c4 	movi	r17,3
    37c8:	d8800e15 	stw	r2,56(sp)
    37cc:	182b883a 	mov	r21,r3
    37d0:	b8001126 	beq	r23,zero,3818 <_dtoa_r+0x43c>
    37d4:	05000074 	movhi	r20,1
    37d8:	a53df104 	addi	r20,r20,-2108
    37dc:	5805883a 	mov	r2,r11
    37e0:	5007883a 	mov	r3,r10
    37e4:	b980004c 	andi	r6,r23,1
    37e8:	1009883a 	mov	r4,r2
    37ec:	b82fd07a 	srai	r23,r23,1
    37f0:	180b883a 	mov	r5,r3
    37f4:	30000426 	beq	r6,zero,3808 <_dtoa_r+0x42c>
    37f8:	a1800017 	ldw	r6,0(r20)
    37fc:	a1c00117 	ldw	r7,4(r20)
    3800:	8c400044 	addi	r17,r17,1
    3804:	000bbfc0 	call	bbfc <__muldf3>
    3808:	a5000204 	addi	r20,r20,8
    380c:	b83ff51e 	bne	r23,zero,37e4 <__alt_data_end+0xfffe4f9c>
    3810:	1017883a 	mov	r11,r2
    3814:	1815883a 	mov	r10,r3
    3818:	d9000e17 	ldw	r4,56(sp)
    381c:	a80b883a 	mov	r5,r21
    3820:	580d883a 	mov	r6,r11
    3824:	500f883a 	mov	r7,r10
    3828:	000b0380 	call	b038 <__divdf3>
    382c:	1029883a 	mov	r20,r2
    3830:	182b883a 	mov	r21,r3
    3834:	d9800c17 	ldw	r6,48(sp)
    3838:	30000626 	beq	r6,zero,3854 <_dtoa_r+0x478>
    383c:	a009883a 	mov	r4,r20
    3840:	a80b883a 	mov	r5,r21
    3844:	000d883a 	mov	r6,zero
    3848:	01cffc34 	movhi	r7,16368
    384c:	000bb1c0 	call	bb1c <__ledf2>
    3850:	10043216 	blt	r2,zero,491c <_dtoa_r+0x1540>
    3854:	8809883a 	mov	r4,r17
    3858:	000cdc00 	call	cdc0 <__floatsidf>
    385c:	1009883a 	mov	r4,r2
    3860:	180b883a 	mov	r5,r3
    3864:	a00d883a 	mov	r6,r20
    3868:	a80f883a 	mov	r7,r21
    386c:	000bbfc0 	call	bbfc <__muldf3>
    3870:	000d883a 	mov	r6,zero
    3874:	1009883a 	mov	r4,r2
    3878:	180b883a 	mov	r5,r3
    387c:	01d00734 	movhi	r7,16412
    3880:	000a79c0 	call	a79c <__adddf3>
    3884:	1023883a 	mov	r17,r2
    3888:	d9800617 	ldw	r6,24(sp)
    388c:	00bf3034 	movhi	r2,64704
    3890:	1885883a 	add	r2,r3,r2
    3894:	d8800e15 	stw	r2,56(sp)
    3898:	30032e26 	beq	r6,zero,4554 <_dtoa_r+0x1178>
    389c:	d8c00517 	ldw	r3,20(sp)
    38a0:	da800617 	ldw	r10,24(sp)
    38a4:	d8c01215 	stw	r3,72(sp)
    38a8:	d9000b17 	ldw	r4,44(sp)
    38ac:	2003b026 	beq	r4,zero,4770 <_dtoa_r+0x1394>
    38b0:	50bfffc4 	addi	r2,r10,-1
    38b4:	100490fa 	slli	r2,r2,3
    38b8:	00c00074 	movhi	r3,1
    38bc:	18fdfb04 	addi	r3,r3,-2068
    38c0:	1885883a 	add	r2,r3,r2
    38c4:	11800017 	ldw	r6,0(r2)
    38c8:	11c00117 	ldw	r7,4(r2)
    38cc:	d8800717 	ldw	r2,28(sp)
    38d0:	0009883a 	mov	r4,zero
    38d4:	014ff834 	movhi	r5,16352
    38d8:	da801615 	stw	r10,88(sp)
    38dc:	15c00044 	addi	r23,r2,1
    38e0:	000b0380 	call	b038 <__divdf3>
    38e4:	d9c00e17 	ldw	r7,56(sp)
    38e8:	880d883a 	mov	r6,r17
    38ec:	1009883a 	mov	r4,r2
    38f0:	180b883a 	mov	r5,r3
    38f4:	000c4680 	call	c468 <__subdf3>
    38f8:	a80b883a 	mov	r5,r21
    38fc:	a009883a 	mov	r4,r20
    3900:	d8c01015 	stw	r3,64(sp)
    3904:	d8800e15 	stw	r2,56(sp)
    3908:	000cd380 	call	cd38 <__fixdfsi>
    390c:	1009883a 	mov	r4,r2
    3910:	d8801715 	stw	r2,92(sp)
    3914:	000cdc00 	call	cdc0 <__floatsidf>
    3918:	a009883a 	mov	r4,r20
    391c:	a80b883a 	mov	r5,r21
    3920:	100d883a 	mov	r6,r2
    3924:	180f883a 	mov	r7,r3
    3928:	000c4680 	call	c468 <__subdf3>
    392c:	da001717 	ldw	r8,92(sp)
    3930:	1829883a 	mov	r20,r3
    3934:	d8c00717 	ldw	r3,28(sp)
    3938:	d9000e17 	ldw	r4,56(sp)
    393c:	d9401017 	ldw	r5,64(sp)
    3940:	42000c04 	addi	r8,r8,48
    3944:	1023883a 	mov	r17,r2
    3948:	1a000005 	stb	r8,0(r3)
    394c:	880d883a 	mov	r6,r17
    3950:	a00f883a 	mov	r7,r20
    3954:	402b883a 	mov	r21,r8
    3958:	000ba3c0 	call	ba3c <__gedf2>
    395c:	00844516 	blt	zero,r2,4a74 <_dtoa_r+0x1698>
    3960:	0009883a 	mov	r4,zero
    3964:	014ffc34 	movhi	r5,16368
    3968:	880d883a 	mov	r6,r17
    396c:	a00f883a 	mov	r7,r20
    3970:	000c4680 	call	c468 <__subdf3>
    3974:	d9000e17 	ldw	r4,56(sp)
    3978:	d9401017 	ldw	r5,64(sp)
    397c:	100d883a 	mov	r6,r2
    3980:	180f883a 	mov	r7,r3
    3984:	000ba3c0 	call	ba3c <__gedf2>
    3988:	da801617 	ldw	r10,88(sp)
    398c:	00843616 	blt	zero,r2,4a68 <_dtoa_r+0x168c>
    3990:	00800044 	movi	r2,1
    3994:	12806e0e 	bge	r2,r10,3b50 <_dtoa_r+0x774>
    3998:	d9000717 	ldw	r4,28(sp)
    399c:	dd801315 	stw	r22,76(sp)
    39a0:	dc001115 	stw	r16,68(sp)
    39a4:	2295883a 	add	r10,r4,r10
    39a8:	dcc01415 	stw	r19,80(sp)
    39ac:	502d883a 	mov	r22,r10
    39b0:	dcc01017 	ldw	r19,64(sp)
    39b4:	b821883a 	mov	r16,r23
    39b8:	dc801015 	stw	r18,64(sp)
    39bc:	dc800e17 	ldw	r18,56(sp)
    39c0:	00000906 	br	39e8 <_dtoa_r+0x60c>
    39c4:	000c4680 	call	c468 <__subdf3>
    39c8:	1009883a 	mov	r4,r2
    39cc:	180b883a 	mov	r5,r3
    39d0:	900d883a 	mov	r6,r18
    39d4:	980f883a 	mov	r7,r19
    39d8:	000bb1c0 	call	bb1c <__ledf2>
    39dc:	10040e16 	blt	r2,zero,4a18 <_dtoa_r+0x163c>
    39e0:	b821883a 	mov	r16,r23
    39e4:	bd841026 	beq	r23,r22,4a28 <_dtoa_r+0x164c>
    39e8:	9009883a 	mov	r4,r18
    39ec:	980b883a 	mov	r5,r19
    39f0:	000d883a 	mov	r6,zero
    39f4:	01d00934 	movhi	r7,16420
    39f8:	000bbfc0 	call	bbfc <__muldf3>
    39fc:	000d883a 	mov	r6,zero
    3a00:	01d00934 	movhi	r7,16420
    3a04:	8809883a 	mov	r4,r17
    3a08:	a00b883a 	mov	r5,r20
    3a0c:	1025883a 	mov	r18,r2
    3a10:	1827883a 	mov	r19,r3
    3a14:	000bbfc0 	call	bbfc <__muldf3>
    3a18:	180b883a 	mov	r5,r3
    3a1c:	1009883a 	mov	r4,r2
    3a20:	1823883a 	mov	r17,r3
    3a24:	1029883a 	mov	r20,r2
    3a28:	000cd380 	call	cd38 <__fixdfsi>
    3a2c:	1009883a 	mov	r4,r2
    3a30:	102b883a 	mov	r21,r2
    3a34:	000cdc00 	call	cdc0 <__floatsidf>
    3a38:	a009883a 	mov	r4,r20
    3a3c:	880b883a 	mov	r5,r17
    3a40:	100d883a 	mov	r6,r2
    3a44:	180f883a 	mov	r7,r3
    3a48:	000c4680 	call	c468 <__subdf3>
    3a4c:	ad400c04 	addi	r21,r21,48
    3a50:	1009883a 	mov	r4,r2
    3a54:	180b883a 	mov	r5,r3
    3a58:	900d883a 	mov	r6,r18
    3a5c:	980f883a 	mov	r7,r19
    3a60:	85400005 	stb	r21,0(r16)
    3a64:	1023883a 	mov	r17,r2
    3a68:	1829883a 	mov	r20,r3
    3a6c:	000bb1c0 	call	bb1c <__ledf2>
    3a70:	bdc00044 	addi	r23,r23,1
    3a74:	0009883a 	mov	r4,zero
    3a78:	014ffc34 	movhi	r5,16368
    3a7c:	880d883a 	mov	r6,r17
    3a80:	a00f883a 	mov	r7,r20
    3a84:	103fcf0e 	bge	r2,zero,39c4 <__alt_data_end+0xfffe517c>
    3a88:	d9801217 	ldw	r6,72(sp)
    3a8c:	dc001117 	ldw	r16,68(sp)
    3a90:	d9800515 	stw	r6,20(sp)
    3a94:	8009883a 	mov	r4,r16
    3a98:	e00b883a 	mov	r5,fp
    3a9c:	0005d180 	call	5d18 <_Bfree>
    3aa0:	d8c00517 	ldw	r3,20(sp)
    3aa4:	d9002317 	ldw	r4,140(sp)
    3aa8:	d9802517 	ldw	r6,148(sp)
    3aac:	b8000005 	stb	zero,0(r23)
    3ab0:	18800044 	addi	r2,r3,1
    3ab4:	20800015 	stw	r2,0(r4)
    3ab8:	30027226 	beq	r6,zero,4484 <_dtoa_r+0x10a8>
    3abc:	35c00015 	stw	r23,0(r6)
    3ac0:	d8800717 	ldw	r2,28(sp)
    3ac4:	003e7406 	br	3498 <__alt_data_end+0xfffe4c50>
    3ac8:	00800434 	movhi	r2,16
    3acc:	10bfffc4 	addi	r2,r2,-1
    3ad0:	a8aa703a 	and	r21,r21,r2
    3ad4:	a83e801e 	bne	r21,zero,34d8 <__alt_data_end+0xfffe4c90>
    3ad8:	00800074 	movhi	r2,1
    3adc:	10bddc04 	addi	r2,r2,-2192
    3ae0:	003e7f06 	br	34e0 <__alt_data_end+0xfffe4c98>
    3ae4:	10c00204 	addi	r3,r2,8
    3ae8:	003e8206 	br	34f4 <__alt_data_end+0xfffe4cac>
    3aec:	01400434 	movhi	r5,16
    3af0:	297fffc4 	addi	r5,r5,-1
    3af4:	994a703a 	and	r5,r19,r5
    3af8:	9009883a 	mov	r4,r18
    3afc:	8c7f0044 	addi	r17,r17,-1023
    3b00:	294ffc34 	orhi	r5,r5,16368
    3b04:	dd000217 	ldw	r20,8(sp)
    3b08:	d8000f15 	stw	zero,60(sp)
    3b0c:	003e9f06 	br	358c <__alt_data_end+0xfffe4d44>
    3b10:	00800074 	movhi	r2,1
    3b14:	10bdd304 	addi	r2,r2,-2228
    3b18:	003e5f06 	br	3498 <__alt_data_end+0xfffe4c50>
    3b1c:	80001115 	stw	zero,68(r16)
    3b20:	8009883a 	mov	r4,r16
    3b24:	000b883a 	mov	r5,zero
    3b28:	0005c700 	call	5c70 <_Balloc>
    3b2c:	01bfffc4 	movi	r6,-1
    3b30:	d8800715 	stw	r2,28(sp)
    3b34:	80801015 	stw	r2,64(r16)
    3b38:	00800044 	movi	r2,1
    3b3c:	d9800615 	stw	r6,24(sp)
    3b40:	d8800b15 	stw	r2,44(sp)
    3b44:	d8002215 	stw	zero,136(sp)
    3b48:	d9800d15 	stw	r6,52(sp)
    3b4c:	d8000315 	stw	zero,12(sp)
    3b50:	d8800117 	ldw	r2,4(sp)
    3b54:	10008e16 	blt	r2,zero,3d90 <_dtoa_r+0x9b4>
    3b58:	d9000517 	ldw	r4,20(sp)
    3b5c:	00c00384 	movi	r3,14
    3b60:	19008b16 	blt	r3,r4,3d90 <_dtoa_r+0x9b4>
    3b64:	200490fa 	slli	r2,r4,3
    3b68:	00c00074 	movhi	r3,1
    3b6c:	d9802217 	ldw	r6,136(sp)
    3b70:	18fdfb04 	addi	r3,r3,-2068
    3b74:	1885883a 	add	r2,r3,r2
    3b78:	14400017 	ldw	r17,0(r2)
    3b7c:	15000117 	ldw	r20,4(r2)
    3b80:	3001c716 	blt	r6,zero,42a0 <_dtoa_r+0xec4>
    3b84:	880d883a 	mov	r6,r17
    3b88:	a00f883a 	mov	r7,r20
    3b8c:	9009883a 	mov	r4,r18
    3b90:	980b883a 	mov	r5,r19
    3b94:	000b0380 	call	b038 <__divdf3>
    3b98:	180b883a 	mov	r5,r3
    3b9c:	1009883a 	mov	r4,r2
    3ba0:	000cd380 	call	cd38 <__fixdfsi>
    3ba4:	1009883a 	mov	r4,r2
    3ba8:	102d883a 	mov	r22,r2
    3bac:	000cdc00 	call	cdc0 <__floatsidf>
    3bb0:	1009883a 	mov	r4,r2
    3bb4:	180b883a 	mov	r5,r3
    3bb8:	880d883a 	mov	r6,r17
    3bbc:	a00f883a 	mov	r7,r20
    3bc0:	000bbfc0 	call	bbfc <__muldf3>
    3bc4:	9009883a 	mov	r4,r18
    3bc8:	980b883a 	mov	r5,r19
    3bcc:	100d883a 	mov	r6,r2
    3bd0:	180f883a 	mov	r7,r3
    3bd4:	000c4680 	call	c468 <__subdf3>
    3bd8:	d9000717 	ldw	r4,28(sp)
    3bdc:	d9800617 	ldw	r6,24(sp)
    3be0:	180b883a 	mov	r5,r3
    3be4:	b0c00c04 	addi	r3,r22,48
    3be8:	20c00005 	stb	r3,0(r4)
    3bec:	25c00044 	addi	r23,r4,1
    3bf0:	01000044 	movi	r4,1
    3bf4:	1011883a 	mov	r8,r2
    3bf8:	2807883a 	mov	r3,r5
    3bfc:	31003d26 	beq	r6,r4,3cf4 <_dtoa_r+0x918>
    3c00:	000d883a 	mov	r6,zero
    3c04:	01d00934 	movhi	r7,16420
    3c08:	1009883a 	mov	r4,r2
    3c0c:	000bbfc0 	call	bbfc <__muldf3>
    3c10:	1009883a 	mov	r4,r2
    3c14:	180b883a 	mov	r5,r3
    3c18:	000d883a 	mov	r6,zero
    3c1c:	000f883a 	mov	r7,zero
    3c20:	1027883a 	mov	r19,r2
    3c24:	182b883a 	mov	r21,r3
    3c28:	000b9b80 	call	b9b8 <__eqdf2>
    3c2c:	103f9926 	beq	r2,zero,3a94 <__alt_data_end+0xfffe524c>
    3c30:	d8c00617 	ldw	r3,24(sp)
    3c34:	d9000717 	ldw	r4,28(sp)
    3c38:	b825883a 	mov	r18,r23
    3c3c:	18bfffc4 	addi	r2,r3,-1
    3c40:	20ad883a 	add	r22,r4,r2
    3c44:	dc000315 	stw	r16,12(sp)
    3c48:	00000a06 	br	3c74 <_dtoa_r+0x898>
    3c4c:	000bbfc0 	call	bbfc <__muldf3>
    3c50:	1009883a 	mov	r4,r2
    3c54:	180b883a 	mov	r5,r3
    3c58:	000d883a 	mov	r6,zero
    3c5c:	000f883a 	mov	r7,zero
    3c60:	1027883a 	mov	r19,r2
    3c64:	182b883a 	mov	r21,r3
    3c68:	b825883a 	mov	r18,r23
    3c6c:	000b9b80 	call	b9b8 <__eqdf2>
    3c70:	10022626 	beq	r2,zero,450c <_dtoa_r+0x1130>
    3c74:	880d883a 	mov	r6,r17
    3c78:	a00f883a 	mov	r7,r20
    3c7c:	9809883a 	mov	r4,r19
    3c80:	a80b883a 	mov	r5,r21
    3c84:	000b0380 	call	b038 <__divdf3>
    3c88:	180b883a 	mov	r5,r3
    3c8c:	1009883a 	mov	r4,r2
    3c90:	000cd380 	call	cd38 <__fixdfsi>
    3c94:	1009883a 	mov	r4,r2
    3c98:	1021883a 	mov	r16,r2
    3c9c:	000cdc00 	call	cdc0 <__floatsidf>
    3ca0:	1009883a 	mov	r4,r2
    3ca4:	180b883a 	mov	r5,r3
    3ca8:	880d883a 	mov	r6,r17
    3cac:	a00f883a 	mov	r7,r20
    3cb0:	000bbfc0 	call	bbfc <__muldf3>
    3cb4:	9809883a 	mov	r4,r19
    3cb8:	a80b883a 	mov	r5,r21
    3cbc:	100d883a 	mov	r6,r2
    3cc0:	180f883a 	mov	r7,r3
    3cc4:	000c4680 	call	c468 <__subdf3>
    3cc8:	82000c04 	addi	r8,r16,48
    3ccc:	92000005 	stb	r8,0(r18)
    3cd0:	1009883a 	mov	r4,r2
    3cd4:	180b883a 	mov	r5,r3
    3cd8:	000d883a 	mov	r6,zero
    3cdc:	01d00934 	movhi	r7,16420
    3ce0:	1011883a 	mov	r8,r2
    3ce4:	bdc00044 	addi	r23,r23,1
    3ce8:	95bfd81e 	bne	r18,r22,3c4c <__alt_data_end+0xfffe5404>
    3cec:	802d883a 	mov	r22,r16
    3cf0:	dc000317 	ldw	r16,12(sp)
    3cf4:	4009883a 	mov	r4,r8
    3cf8:	180b883a 	mov	r5,r3
    3cfc:	400d883a 	mov	r6,r8
    3d00:	180f883a 	mov	r7,r3
    3d04:	000a79c0 	call	a79c <__adddf3>
    3d08:	8809883a 	mov	r4,r17
    3d0c:	a00b883a 	mov	r5,r20
    3d10:	100d883a 	mov	r6,r2
    3d14:	180f883a 	mov	r7,r3
    3d18:	1027883a 	mov	r19,r2
    3d1c:	1825883a 	mov	r18,r3
    3d20:	000bb1c0 	call	bb1c <__ledf2>
    3d24:	10000816 	blt	r2,zero,3d48 <_dtoa_r+0x96c>
    3d28:	8809883a 	mov	r4,r17
    3d2c:	a00b883a 	mov	r5,r20
    3d30:	980d883a 	mov	r6,r19
    3d34:	900f883a 	mov	r7,r18
    3d38:	000b9b80 	call	b9b8 <__eqdf2>
    3d3c:	103f551e 	bne	r2,zero,3a94 <__alt_data_end+0xfffe524c>
    3d40:	b580004c 	andi	r22,r22,1
    3d44:	b03f5326 	beq	r22,zero,3a94 <__alt_data_end+0xfffe524c>
    3d48:	bd7fffc3 	ldbu	r21,-1(r23)
    3d4c:	b8bfffc4 	addi	r2,r23,-1
    3d50:	1007883a 	mov	r3,r2
    3d54:	01400e44 	movi	r5,57
    3d58:	d9800717 	ldw	r6,28(sp)
    3d5c:	00000506 	br	3d74 <_dtoa_r+0x998>
    3d60:	18ffffc4 	addi	r3,r3,-1
    3d64:	30825e26 	beq	r6,r2,46e0 <_dtoa_r+0x1304>
    3d68:	1d400003 	ldbu	r21,0(r3)
    3d6c:	102f883a 	mov	r23,r2
    3d70:	10bfffc4 	addi	r2,r2,-1
    3d74:	a9003fcc 	andi	r4,r21,255
    3d78:	2100201c 	xori	r4,r4,128
    3d7c:	213fe004 	addi	r4,r4,-128
    3d80:	217ff726 	beq	r4,r5,3d60 <__alt_data_end+0xfffe5518>
    3d84:	aa000044 	addi	r8,r21,1
    3d88:	12000005 	stb	r8,0(r2)
    3d8c:	003f4106 	br	3a94 <__alt_data_end+0xfffe524c>
    3d90:	d8c00b17 	ldw	r3,44(sp)
    3d94:	18006726 	beq	r3,zero,3f34 <_dtoa_r+0xb58>
    3d98:	d9000317 	ldw	r4,12(sp)
    3d9c:	00c00044 	movi	r3,1
    3da0:	19016a0e 	bge	r3,r4,434c <_dtoa_r+0xf70>
    3da4:	d8800617 	ldw	r2,24(sp)
    3da8:	d8c00917 	ldw	r3,36(sp)
    3dac:	157fffc4 	addi	r21,r2,-1
    3db0:	1d420716 	blt	r3,r21,45d0 <_dtoa_r+0x11f4>
    3db4:	1d6bc83a 	sub	r21,r3,r21
    3db8:	d8800617 	ldw	r2,24(sp)
    3dbc:	1002c716 	blt	r2,zero,48dc <_dtoa_r+0x1500>
    3dc0:	dd000817 	ldw	r20,32(sp)
    3dc4:	d8800617 	ldw	r2,24(sp)
    3dc8:	d9800817 	ldw	r6,32(sp)
    3dcc:	8009883a 	mov	r4,r16
    3dd0:	01400044 	movi	r5,1
    3dd4:	308d883a 	add	r6,r6,r2
    3dd8:	d9800815 	stw	r6,32(sp)
    3ddc:	b0ad883a 	add	r22,r22,r2
    3de0:	00060980 	call	6098 <__i2b>
    3de4:	1023883a 	mov	r17,r2
    3de8:	a0000826 	beq	r20,zero,3e0c <_dtoa_r+0xa30>
    3dec:	0580070e 	bge	zero,r22,3e0c <_dtoa_r+0xa30>
    3df0:	b005883a 	mov	r2,r22
    3df4:	a5812016 	blt	r20,r22,4278 <_dtoa_r+0xe9c>
    3df8:	d8c00817 	ldw	r3,32(sp)
    3dfc:	a0a9c83a 	sub	r20,r20,r2
    3e00:	b0adc83a 	sub	r22,r22,r2
    3e04:	1887c83a 	sub	r3,r3,r2
    3e08:	d8c00815 	stw	r3,32(sp)
    3e0c:	d9000917 	ldw	r4,36(sp)
    3e10:	0100140e 	bge	zero,r4,3e64 <_dtoa_r+0xa88>
    3e14:	d9800b17 	ldw	r6,44(sp)
    3e18:	3001e526 	beq	r6,zero,45b0 <_dtoa_r+0x11d4>
    3e1c:	05400e0e 	bge	zero,r21,3e58 <_dtoa_r+0xa7c>
    3e20:	880b883a 	mov	r5,r17
    3e24:	8009883a 	mov	r4,r16
    3e28:	a80d883a 	mov	r6,r21
    3e2c:	00063640 	call	6364 <__pow5mult>
    3e30:	e00d883a 	mov	r6,fp
    3e34:	8009883a 	mov	r4,r16
    3e38:	100b883a 	mov	r5,r2
    3e3c:	1023883a 	mov	r17,r2
    3e40:	00060d40 	call	60d4 <__multiply>
    3e44:	102f883a 	mov	r23,r2
    3e48:	e00b883a 	mov	r5,fp
    3e4c:	8009883a 	mov	r4,r16
    3e50:	0005d180 	call	5d18 <_Bfree>
    3e54:	b839883a 	mov	fp,r23
    3e58:	d8800917 	ldw	r2,36(sp)
    3e5c:	154dc83a 	sub	r6,r2,r21
    3e60:	3001281e 	bne	r6,zero,4304 <_dtoa_r+0xf28>
    3e64:	05c00044 	movi	r23,1
    3e68:	8009883a 	mov	r4,r16
    3e6c:	b80b883a 	mov	r5,r23
    3e70:	00060980 	call	6098 <__i2b>
    3e74:	d8c00a17 	ldw	r3,40(sp)
    3e78:	102b883a 	mov	r21,r2
    3e7c:	00c0310e 	bge	zero,r3,3f44 <_dtoa_r+0xb68>
    3e80:	8009883a 	mov	r4,r16
    3e84:	100b883a 	mov	r5,r2
    3e88:	180d883a 	mov	r6,r3
    3e8c:	00063640 	call	6364 <__pow5mult>
    3e90:	d9000317 	ldw	r4,12(sp)
    3e94:	102b883a 	mov	r21,r2
    3e98:	b9011f0e 	bge	r23,r4,4318 <_dtoa_r+0xf3c>
    3e9c:	0027883a 	mov	r19,zero
    3ea0:	a8800417 	ldw	r2,16(r21)
    3ea4:	10800104 	addi	r2,r2,4
    3ea8:	1085883a 	add	r2,r2,r2
    3eac:	1085883a 	add	r2,r2,r2
    3eb0:	a885883a 	add	r2,r21,r2
    3eb4:	11000017 	ldw	r4,0(r2)
    3eb8:	0005f800 	call	5f80 <__hi0bits>
    3ebc:	00c00804 	movi	r3,32
    3ec0:	1885c83a 	sub	r2,r3,r2
    3ec4:	00002506 	br	3f5c <_dtoa_r+0xb80>
    3ec8:	01800044 	movi	r6,1
    3ecc:	d9800c15 	stw	r6,48(sp)
    3ed0:	003dec06 	br	3684 <__alt_data_end+0xfffe4e3c>
    3ed4:	d8c00817 	ldw	r3,32(sp)
    3ed8:	d9000517 	ldw	r4,20(sp)
    3edc:	d8000a15 	stw	zero,40(sp)
    3ee0:	1907c83a 	sub	r3,r3,r4
    3ee4:	010dc83a 	sub	r6,zero,r4
    3ee8:	d8c00815 	stw	r3,32(sp)
    3eec:	d9800915 	stw	r6,36(sp)
    3ef0:	003ded06 	br	36a8 <__alt_data_end+0xfffe4e60>
    3ef4:	05adc83a 	sub	r22,zero,r22
    3ef8:	dd800815 	stw	r22,32(sp)
    3efc:	002d883a 	mov	r22,zero
    3f00:	003de406 	br	3694 <__alt_data_end+0xfffe4e4c>
    3f04:	d9000517 	ldw	r4,20(sp)
    3f08:	000cdc00 	call	cdc0 <__floatsidf>
    3f0c:	1009883a 	mov	r4,r2
    3f10:	180b883a 	mov	r5,r3
    3f14:	b00d883a 	mov	r6,r22
    3f18:	a80f883a 	mov	r7,r21
    3f1c:	000b9b80 	call	b9b8 <__eqdf2>
    3f20:	103dc726 	beq	r2,zero,3640 <__alt_data_end+0xfffe4df8>
    3f24:	d8800517 	ldw	r2,20(sp)
    3f28:	10bfffc4 	addi	r2,r2,-1
    3f2c:	d8800515 	stw	r2,20(sp)
    3f30:	003dc306 	br	3640 <__alt_data_end+0xfffe4df8>
    3f34:	dd400917 	ldw	r21,36(sp)
    3f38:	dd000817 	ldw	r20,32(sp)
    3f3c:	0023883a 	mov	r17,zero
    3f40:	003fa906 	br	3de8 <__alt_data_end+0xfffe55a0>
    3f44:	d9800317 	ldw	r6,12(sp)
    3f48:	b981670e 	bge	r23,r6,44e8 <_dtoa_r+0x110c>
    3f4c:	0027883a 	mov	r19,zero
    3f50:	d8c00a17 	ldw	r3,40(sp)
    3f54:	183fd21e 	bne	r3,zero,3ea0 <__alt_data_end+0xfffe5658>
    3f58:	00800044 	movi	r2,1
    3f5c:	1585883a 	add	r2,r2,r22
    3f60:	108007cc 	andi	r2,r2,31
    3f64:	10005f26 	beq	r2,zero,40e4 <_dtoa_r+0xd08>
    3f68:	00c00804 	movi	r3,32
    3f6c:	1887c83a 	sub	r3,r3,r2
    3f70:	01000104 	movi	r4,4
    3f74:	20c2dd0e 	bge	r4,r3,4aec <_dtoa_r+0x1710>
    3f78:	d9000817 	ldw	r4,32(sp)
    3f7c:	00c00704 	movi	r3,28
    3f80:	1885c83a 	sub	r2,r3,r2
    3f84:	2089883a 	add	r4,r4,r2
    3f88:	d9000815 	stw	r4,32(sp)
    3f8c:	a0a9883a 	add	r20,r20,r2
    3f90:	b0ad883a 	add	r22,r22,r2
    3f94:	d8800817 	ldw	r2,32(sp)
    3f98:	0080050e 	bge	zero,r2,3fb0 <_dtoa_r+0xbd4>
    3f9c:	e00b883a 	mov	r5,fp
    3fa0:	8009883a 	mov	r4,r16
    3fa4:	100d883a 	mov	r6,r2
    3fa8:	00064a40 	call	64a4 <__lshift>
    3fac:	1039883a 	mov	fp,r2
    3fb0:	0580050e 	bge	zero,r22,3fc8 <_dtoa_r+0xbec>
    3fb4:	a80b883a 	mov	r5,r21
    3fb8:	8009883a 	mov	r4,r16
    3fbc:	b00d883a 	mov	r6,r22
    3fc0:	00064a40 	call	64a4 <__lshift>
    3fc4:	102b883a 	mov	r21,r2
    3fc8:	d8c00c17 	ldw	r3,48(sp)
    3fcc:	1801161e 	bne	r3,zero,4428 <_dtoa_r+0x104c>
    3fd0:	d8c00617 	ldw	r3,24(sp)
    3fd4:	00c12d0e 	bge	zero,r3,448c <_dtoa_r+0x10b0>
    3fd8:	d8c00b17 	ldw	r3,44(sp)
    3fdc:	1800571e 	bne	r3,zero,413c <_dtoa_r+0xd60>
    3fe0:	dc800717 	ldw	r18,28(sp)
    3fe4:	dcc00617 	ldw	r19,24(sp)
    3fe8:	9029883a 	mov	r20,r18
    3fec:	00000206 	br	3ff8 <_dtoa_r+0xc1c>
    3ff0:	0005d400 	call	5d40 <__multadd>
    3ff4:	1039883a 	mov	fp,r2
    3ff8:	e009883a 	mov	r4,fp
    3ffc:	a80b883a 	mov	r5,r21
    4000:	00031b40 	call	31b4 <quorem>
    4004:	10800c04 	addi	r2,r2,48
    4008:	90800005 	stb	r2,0(r18)
    400c:	94800044 	addi	r18,r18,1
    4010:	9507c83a 	sub	r3,r18,r20
    4014:	8009883a 	mov	r4,r16
    4018:	e00b883a 	mov	r5,fp
    401c:	01800284 	movi	r6,10
    4020:	000f883a 	mov	r7,zero
    4024:	1cfff216 	blt	r3,r19,3ff0 <__alt_data_end+0xfffe57a8>
    4028:	1011883a 	mov	r8,r2
    402c:	d8800617 	ldw	r2,24(sp)
    4030:	00822e0e 	bge	zero,r2,48ec <_dtoa_r+0x1510>
    4034:	d9000717 	ldw	r4,28(sp)
    4038:	0025883a 	mov	r18,zero
    403c:	20af883a 	add	r23,r4,r2
    4040:	e00b883a 	mov	r5,fp
    4044:	01800044 	movi	r6,1
    4048:	8009883a 	mov	r4,r16
    404c:	da001715 	stw	r8,92(sp)
    4050:	00064a40 	call	64a4 <__lshift>
    4054:	1009883a 	mov	r4,r2
    4058:	a80b883a 	mov	r5,r21
    405c:	1039883a 	mov	fp,r2
    4060:	00065ec0 	call	65ec <__mcmp>
    4064:	da001717 	ldw	r8,92(sp)
    4068:	00816e0e 	bge	zero,r2,4624 <_dtoa_r+0x1248>
    406c:	b93fffc3 	ldbu	r4,-1(r23)
    4070:	b8bfffc4 	addi	r2,r23,-1
    4074:	1007883a 	mov	r3,r2
    4078:	01800e44 	movi	r6,57
    407c:	d9c00717 	ldw	r7,28(sp)
    4080:	00000506 	br	4098 <_dtoa_r+0xcbc>
    4084:	18ffffc4 	addi	r3,r3,-1
    4088:	38811926 	beq	r7,r2,44f0 <_dtoa_r+0x1114>
    408c:	19000003 	ldbu	r4,0(r3)
    4090:	102f883a 	mov	r23,r2
    4094:	10bfffc4 	addi	r2,r2,-1
    4098:	21403fcc 	andi	r5,r4,255
    409c:	2940201c 	xori	r5,r5,128
    40a0:	297fe004 	addi	r5,r5,-128
    40a4:	29bff726 	beq	r5,r6,4084 <__alt_data_end+0xfffe583c>
    40a8:	21000044 	addi	r4,r4,1
    40ac:	11000005 	stb	r4,0(r2)
    40b0:	8009883a 	mov	r4,r16
    40b4:	a80b883a 	mov	r5,r21
    40b8:	0005d180 	call	5d18 <_Bfree>
    40bc:	883e7526 	beq	r17,zero,3a94 <__alt_data_end+0xfffe524c>
    40c0:	90000426 	beq	r18,zero,40d4 <_dtoa_r+0xcf8>
    40c4:	94400326 	beq	r18,r17,40d4 <_dtoa_r+0xcf8>
    40c8:	8009883a 	mov	r4,r16
    40cc:	900b883a 	mov	r5,r18
    40d0:	0005d180 	call	5d18 <_Bfree>
    40d4:	8009883a 	mov	r4,r16
    40d8:	880b883a 	mov	r5,r17
    40dc:	0005d180 	call	5d18 <_Bfree>
    40e0:	003e6c06 	br	3a94 <__alt_data_end+0xfffe524c>
    40e4:	00800704 	movi	r2,28
    40e8:	d9800817 	ldw	r6,32(sp)
    40ec:	a0a9883a 	add	r20,r20,r2
    40f0:	b0ad883a 	add	r22,r22,r2
    40f4:	308d883a 	add	r6,r6,r2
    40f8:	d9800815 	stw	r6,32(sp)
    40fc:	003fa506 	br	3f94 <__alt_data_end+0xfffe574c>
    4100:	013efb84 	movi	r4,-1042
    4104:	246bc83a 	sub	r21,r4,r17
    4108:	9548983a 	sll	r4,r18,r21
    410c:	003d1806 	br	3570 <__alt_data_end+0xfffe4d28>
    4110:	d8000c15 	stw	zero,48(sp)
    4114:	003d5b06 	br	3684 <__alt_data_end+0xfffe4e3c>
    4118:	880b883a 	mov	r5,r17
    411c:	8009883a 	mov	r4,r16
    4120:	01800284 	movi	r6,10
    4124:	000f883a 	mov	r7,zero
    4128:	0005d400 	call	5d40 <__multadd>
    412c:	1023883a 	mov	r17,r2
    4130:	d8800d17 	ldw	r2,52(sp)
    4134:	0082550e 	bge	zero,r2,4a8c <_dtoa_r+0x16b0>
    4138:	d8800615 	stw	r2,24(sp)
    413c:	0500050e 	bge	zero,r20,4154 <_dtoa_r+0xd78>
    4140:	880b883a 	mov	r5,r17
    4144:	8009883a 	mov	r4,r16
    4148:	a00d883a 	mov	r6,r20
    414c:	00064a40 	call	64a4 <__lshift>
    4150:	1023883a 	mov	r17,r2
    4154:	98016a1e 	bne	r19,zero,4700 <_dtoa_r+0x1324>
    4158:	8829883a 	mov	r20,r17
    415c:	d9000617 	ldw	r4,24(sp)
    4160:	dcc00717 	ldw	r19,28(sp)
    4164:	9480004c 	andi	r18,r18,1
    4168:	20bfffc4 	addi	r2,r4,-1
    416c:	9885883a 	add	r2,r19,r2
    4170:	d8800415 	stw	r2,16(sp)
    4174:	dc800615 	stw	r18,24(sp)
    4178:	e009883a 	mov	r4,fp
    417c:	a80b883a 	mov	r5,r21
    4180:	00031b40 	call	31b4 <quorem>
    4184:	e009883a 	mov	r4,fp
    4188:	880b883a 	mov	r5,r17
    418c:	102f883a 	mov	r23,r2
    4190:	00065ec0 	call	65ec <__mcmp>
    4194:	8009883a 	mov	r4,r16
    4198:	a80b883a 	mov	r5,r21
    419c:	a00d883a 	mov	r6,r20
    41a0:	102d883a 	mov	r22,r2
    41a4:	000664c0 	call	664c <__mdiff>
    41a8:	1007883a 	mov	r3,r2
    41ac:	10800317 	ldw	r2,12(r2)
    41b0:	bc800c04 	addi	r18,r23,48
    41b4:	1000971e 	bne	r2,zero,4414 <_dtoa_r+0x1038>
    41b8:	180b883a 	mov	r5,r3
    41bc:	e009883a 	mov	r4,fp
    41c0:	d8c01515 	stw	r3,84(sp)
    41c4:	00065ec0 	call	65ec <__mcmp>
    41c8:	d8c01517 	ldw	r3,84(sp)
    41cc:	8009883a 	mov	r4,r16
    41d0:	d8801515 	stw	r2,84(sp)
    41d4:	180b883a 	mov	r5,r3
    41d8:	0005d180 	call	5d18 <_Bfree>
    41dc:	d8801517 	ldw	r2,84(sp)
    41e0:	1000041e 	bne	r2,zero,41f4 <_dtoa_r+0xe18>
    41e4:	d9800317 	ldw	r6,12(sp)
    41e8:	3000021e 	bne	r6,zero,41f4 <_dtoa_r+0xe18>
    41ec:	d8c00617 	ldw	r3,24(sp)
    41f0:	18007626 	beq	r3,zero,43cc <_dtoa_r+0xff0>
    41f4:	b0005b16 	blt	r22,zero,4364 <_dtoa_r+0xf88>
    41f8:	b000041e 	bne	r22,zero,420c <_dtoa_r+0xe30>
    41fc:	d9000317 	ldw	r4,12(sp)
    4200:	2000021e 	bne	r4,zero,420c <_dtoa_r+0xe30>
    4204:	d8c00617 	ldw	r3,24(sp)
    4208:	18005626 	beq	r3,zero,4364 <_dtoa_r+0xf88>
    420c:	00814d16 	blt	zero,r2,4744 <_dtoa_r+0x1368>
    4210:	d8c00417 	ldw	r3,16(sp)
    4214:	9d800044 	addi	r22,r19,1
    4218:	9c800005 	stb	r18,0(r19)
    421c:	b02f883a 	mov	r23,r22
    4220:	98c14c26 	beq	r19,r3,4754 <_dtoa_r+0x1378>
    4224:	e00b883a 	mov	r5,fp
    4228:	8009883a 	mov	r4,r16
    422c:	01800284 	movi	r6,10
    4230:	000f883a 	mov	r7,zero
    4234:	0005d400 	call	5d40 <__multadd>
    4238:	1039883a 	mov	fp,r2
    423c:	8d006d26 	beq	r17,r20,43f4 <_dtoa_r+0x1018>
    4240:	880b883a 	mov	r5,r17
    4244:	01800284 	movi	r6,10
    4248:	000f883a 	mov	r7,zero
    424c:	8009883a 	mov	r4,r16
    4250:	0005d400 	call	5d40 <__multadd>
    4254:	a00b883a 	mov	r5,r20
    4258:	8009883a 	mov	r4,r16
    425c:	01800284 	movi	r6,10
    4260:	000f883a 	mov	r7,zero
    4264:	1023883a 	mov	r17,r2
    4268:	0005d400 	call	5d40 <__multadd>
    426c:	1029883a 	mov	r20,r2
    4270:	b027883a 	mov	r19,r22
    4274:	003fc006 	br	4178 <__alt_data_end+0xfffe5930>
    4278:	a005883a 	mov	r2,r20
    427c:	003ede06 	br	3df8 <__alt_data_end+0xfffe55b0>
    4280:	01000044 	movi	r4,1
    4284:	d9000b15 	stw	r4,44(sp)
    4288:	d9802217 	ldw	r6,136(sp)
    428c:	0180dc0e 	bge	zero,r6,4600 <_dtoa_r+0x1224>
    4290:	3023883a 	mov	r17,r6
    4294:	d9800d15 	stw	r6,52(sp)
    4298:	d9800615 	stw	r6,24(sp)
    429c:	003d1e06 	br	3718 <__alt_data_end+0xfffe4ed0>
    42a0:	d8800617 	ldw	r2,24(sp)
    42a4:	00be3716 	blt	zero,r2,3b84 <__alt_data_end+0xfffe533c>
    42a8:	1000be1e 	bne	r2,zero,45a4 <_dtoa_r+0x11c8>
    42ac:	8809883a 	mov	r4,r17
    42b0:	a00b883a 	mov	r5,r20
    42b4:	000d883a 	mov	r6,zero
    42b8:	01d00534 	movhi	r7,16404
    42bc:	000bbfc0 	call	bbfc <__muldf3>
    42c0:	1009883a 	mov	r4,r2
    42c4:	180b883a 	mov	r5,r3
    42c8:	900d883a 	mov	r6,r18
    42cc:	980f883a 	mov	r7,r19
    42d0:	000ba3c0 	call	ba3c <__gedf2>
    42d4:	002b883a 	mov	r21,zero
    42d8:	0023883a 	mov	r17,zero
    42dc:	10007a16 	blt	r2,zero,44c8 <_dtoa_r+0x10ec>
    42e0:	d9002217 	ldw	r4,136(sp)
    42e4:	ddc00717 	ldw	r23,28(sp)
    42e8:	0108303a 	nor	r4,zero,r4
    42ec:	d9000515 	stw	r4,20(sp)
    42f0:	8009883a 	mov	r4,r16
    42f4:	a80b883a 	mov	r5,r21
    42f8:	0005d180 	call	5d18 <_Bfree>
    42fc:	883f751e 	bne	r17,zero,40d4 <__alt_data_end+0xfffe588c>
    4300:	003de406 	br	3a94 <__alt_data_end+0xfffe524c>
    4304:	e00b883a 	mov	r5,fp
    4308:	8009883a 	mov	r4,r16
    430c:	00063640 	call	6364 <__pow5mult>
    4310:	1039883a 	mov	fp,r2
    4314:	003ed306 	br	3e64 <__alt_data_end+0xfffe561c>
    4318:	903ee01e 	bne	r18,zero,3e9c <__alt_data_end+0xfffe5654>
    431c:	00800434 	movhi	r2,16
    4320:	10bfffc4 	addi	r2,r2,-1
    4324:	9884703a 	and	r2,r19,r2
    4328:	103f081e 	bne	r2,zero,3f4c <__alt_data_end+0xfffe5704>
    432c:	9cdffc2c 	andhi	r19,r19,32752
    4330:	983f0626 	beq	r19,zero,3f4c <__alt_data_end+0xfffe5704>
    4334:	d8800817 	ldw	r2,32(sp)
    4338:	b5800044 	addi	r22,r22,1
    433c:	04c00044 	movi	r19,1
    4340:	10800044 	addi	r2,r2,1
    4344:	d8800815 	stw	r2,32(sp)
    4348:	003f0106 	br	3f50 <__alt_data_end+0xfffe5708>
    434c:	d9800f17 	ldw	r6,60(sp)
    4350:	30016826 	beq	r6,zero,48f4 <_dtoa_r+0x1518>
    4354:	10810cc4 	addi	r2,r2,1075
    4358:	dd400917 	ldw	r21,36(sp)
    435c:	dd000817 	ldw	r20,32(sp)
    4360:	003e9906 	br	3dc8 <__alt_data_end+0xfffe5580>
    4364:	9011883a 	mov	r8,r18
    4368:	4007883a 	mov	r3,r8
    436c:	e02d883a 	mov	r22,fp
    4370:	0080100e 	bge	zero,r2,43b4 <_dtoa_r+0xfd8>
    4374:	01800044 	movi	r6,1
    4378:	8009883a 	mov	r4,r16
    437c:	e00b883a 	mov	r5,fp
    4380:	da001515 	stw	r8,84(sp)
    4384:	da001715 	stw	r8,92(sp)
    4388:	00064a40 	call	64a4 <__lshift>
    438c:	1009883a 	mov	r4,r2
    4390:	a80b883a 	mov	r5,r21
    4394:	102d883a 	mov	r22,r2
    4398:	00065ec0 	call	65ec <__mcmp>
    439c:	d8c01517 	ldw	r3,84(sp)
    43a0:	da001717 	ldw	r8,92(sp)
    43a4:	0081a50e 	bge	zero,r2,4a3c <_dtoa_r+0x1660>
    43a8:	00800e44 	movi	r2,57
    43ac:	40817b26 	beq	r8,r2,499c <_dtoa_r+0x15c0>
    43b0:	40c00044 	addi	r3,r8,1
    43b4:	8825883a 	mov	r18,r17
    43b8:	9dc00044 	addi	r23,r19,1
    43bc:	98c00005 	stb	r3,0(r19)
    43c0:	a023883a 	mov	r17,r20
    43c4:	b039883a 	mov	fp,r22
    43c8:	003f3906 	br	40b0 <__alt_data_end+0xfffe5868>
    43cc:	00800e44 	movi	r2,57
    43d0:	9011883a 	mov	r8,r18
    43d4:	90817226 	beq	r18,r2,49a0 <_dtoa_r+0x15c4>
    43d8:	0580010e 	bge	zero,r22,43e0 <_dtoa_r+0x1004>
    43dc:	ba000c44 	addi	r8,r23,49
    43e0:	8825883a 	mov	r18,r17
    43e4:	9dc00044 	addi	r23,r19,1
    43e8:	9a000005 	stb	r8,0(r19)
    43ec:	a023883a 	mov	r17,r20
    43f0:	003f2f06 	br	40b0 <__alt_data_end+0xfffe5868>
    43f4:	880b883a 	mov	r5,r17
    43f8:	8009883a 	mov	r4,r16
    43fc:	01800284 	movi	r6,10
    4400:	000f883a 	mov	r7,zero
    4404:	0005d400 	call	5d40 <__multadd>
    4408:	1023883a 	mov	r17,r2
    440c:	1029883a 	mov	r20,r2
    4410:	003f9706 	br	4270 <__alt_data_end+0xfffe5a28>
    4414:	8009883a 	mov	r4,r16
    4418:	180b883a 	mov	r5,r3
    441c:	0005d180 	call	5d18 <_Bfree>
    4420:	00800044 	movi	r2,1
    4424:	003f7306 	br	41f4 <__alt_data_end+0xfffe59ac>
    4428:	e009883a 	mov	r4,fp
    442c:	a80b883a 	mov	r5,r21
    4430:	00065ec0 	call	65ec <__mcmp>
    4434:	103ee60e 	bge	r2,zero,3fd0 <__alt_data_end+0xfffe5788>
    4438:	8009883a 	mov	r4,r16
    443c:	e00b883a 	mov	r5,fp
    4440:	01800284 	movi	r6,10
    4444:	000f883a 	mov	r7,zero
    4448:	0005d400 	call	5d40 <__multadd>
    444c:	d9000517 	ldw	r4,20(sp)
    4450:	d9800b17 	ldw	r6,44(sp)
    4454:	1039883a 	mov	fp,r2
    4458:	213fffc4 	addi	r4,r4,-1
    445c:	d9000515 	stw	r4,20(sp)
    4460:	303f2d1e 	bne	r6,zero,4118 <__alt_data_end+0xfffe58d0>
    4464:	d9000d17 	ldw	r4,52(sp)
    4468:	0101780e 	bge	zero,r4,4a4c <_dtoa_r+0x1670>
    446c:	d9000615 	stw	r4,24(sp)
    4470:	003edb06 	br	3fe0 <__alt_data_end+0xfffe5798>
    4474:	00800084 	movi	r2,2
    4478:	30818e1e 	bne	r6,r2,4ab4 <_dtoa_r+0x16d8>
    447c:	d8000b15 	stw	zero,44(sp)
    4480:	003f8106 	br	4288 <__alt_data_end+0xfffe5a40>
    4484:	d8800717 	ldw	r2,28(sp)
    4488:	003c0306 	br	3498 <__alt_data_end+0xfffe4c50>
    448c:	d9000317 	ldw	r4,12(sp)
    4490:	00800084 	movi	r2,2
    4494:	113ed00e 	bge	r2,r4,3fd8 <__alt_data_end+0xfffe5790>
    4498:	d8c00617 	ldw	r3,24(sp)
    449c:	183f901e 	bne	r3,zero,42e0 <__alt_data_end+0xfffe5a98>
    44a0:	a80b883a 	mov	r5,r21
    44a4:	8009883a 	mov	r4,r16
    44a8:	01800144 	movi	r6,5
    44ac:	000f883a 	mov	r7,zero
    44b0:	0005d400 	call	5d40 <__multadd>
    44b4:	e009883a 	mov	r4,fp
    44b8:	100b883a 	mov	r5,r2
    44bc:	102b883a 	mov	r21,r2
    44c0:	00065ec0 	call	65ec <__mcmp>
    44c4:	00bf860e 	bge	zero,r2,42e0 <__alt_data_end+0xfffe5a98>
    44c8:	d9800717 	ldw	r6,28(sp)
    44cc:	00800c44 	movi	r2,49
    44d0:	30800005 	stb	r2,0(r6)
    44d4:	d8800517 	ldw	r2,20(sp)
    44d8:	35c00044 	addi	r23,r6,1
    44dc:	10800044 	addi	r2,r2,1
    44e0:	d8800515 	stw	r2,20(sp)
    44e4:	003f8206 	br	42f0 <__alt_data_end+0xfffe5aa8>
    44e8:	903e981e 	bne	r18,zero,3f4c <__alt_data_end+0xfffe5704>
    44ec:	003f8b06 	br	431c <__alt_data_end+0xfffe5ad4>
    44f0:	d9800517 	ldw	r6,20(sp)
    44f4:	d8c00717 	ldw	r3,28(sp)
    44f8:	00800c44 	movi	r2,49
    44fc:	31800044 	addi	r6,r6,1
    4500:	d9800515 	stw	r6,20(sp)
    4504:	18800005 	stb	r2,0(r3)
    4508:	003ee906 	br	40b0 <__alt_data_end+0xfffe5868>
    450c:	dc000317 	ldw	r16,12(sp)
    4510:	003d6006 	br	3a94 <__alt_data_end+0xfffe524c>
    4514:	8809883a 	mov	r4,r17
    4518:	000cdc00 	call	cdc0 <__floatsidf>
    451c:	a009883a 	mov	r4,r20
    4520:	a80b883a 	mov	r5,r21
    4524:	100d883a 	mov	r6,r2
    4528:	180f883a 	mov	r7,r3
    452c:	000bbfc0 	call	bbfc <__muldf3>
    4530:	1009883a 	mov	r4,r2
    4534:	180b883a 	mov	r5,r3
    4538:	000d883a 	mov	r6,zero
    453c:	01d00734 	movhi	r7,16412
    4540:	000a79c0 	call	a79c <__adddf3>
    4544:	1023883a 	mov	r17,r2
    4548:	00bf3034 	movhi	r2,64704
    454c:	1885883a 	add	r2,r3,r2
    4550:	d8800e15 	stw	r2,56(sp)
    4554:	a009883a 	mov	r4,r20
    4558:	a80b883a 	mov	r5,r21
    455c:	000d883a 	mov	r6,zero
    4560:	01d00534 	movhi	r7,16404
    4564:	000c4680 	call	c468 <__subdf3>
    4568:	d9c00e17 	ldw	r7,56(sp)
    456c:	1009883a 	mov	r4,r2
    4570:	180b883a 	mov	r5,r3
    4574:	880d883a 	mov	r6,r17
    4578:	102b883a 	mov	r21,r2
    457c:	1829883a 	mov	r20,r3
    4580:	000ba3c0 	call	ba3c <__gedf2>
    4584:	00807716 	blt	zero,r2,4764 <_dtoa_r+0x1388>
    4588:	d8800e17 	ldw	r2,56(sp)
    458c:	a809883a 	mov	r4,r21
    4590:	a00b883a 	mov	r5,r20
    4594:	11e0003c 	xorhi	r7,r2,32768
    4598:	880d883a 	mov	r6,r17
    459c:	000bb1c0 	call	bb1c <__ledf2>
    45a0:	103d6b0e 	bge	r2,zero,3b50 <__alt_data_end+0xfffe5308>
    45a4:	002b883a 	mov	r21,zero
    45a8:	0023883a 	mov	r17,zero
    45ac:	003f4c06 	br	42e0 <__alt_data_end+0xfffe5a98>
    45b0:	d9800917 	ldw	r6,36(sp)
    45b4:	e00b883a 	mov	r5,fp
    45b8:	8009883a 	mov	r4,r16
    45bc:	00063640 	call	6364 <__pow5mult>
    45c0:	1039883a 	mov	fp,r2
    45c4:	003e2706 	br	3e64 <__alt_data_end+0xfffe561c>
    45c8:	d8000b15 	stw	zero,44(sp)
    45cc:	003c4906 	br	36f4 <__alt_data_end+0xfffe4eac>
    45d0:	d9000917 	ldw	r4,36(sp)
    45d4:	d9800a17 	ldw	r6,40(sp)
    45d8:	dd400915 	stw	r21,36(sp)
    45dc:	a905c83a 	sub	r2,r21,r4
    45e0:	308d883a 	add	r6,r6,r2
    45e4:	d9800a15 	stw	r6,40(sp)
    45e8:	002b883a 	mov	r21,zero
    45ec:	003df206 	br	3db8 <__alt_data_end+0xfffe5570>
    45f0:	dc800e15 	stw	r18,56(sp)
    45f4:	982b883a 	mov	r21,r19
    45f8:	04400084 	movi	r17,2
    45fc:	003c7406 	br	37d0 <__alt_data_end+0xfffe4f88>
    4600:	04400044 	movi	r17,1
    4604:	dc400d15 	stw	r17,52(sp)
    4608:	dc400615 	stw	r17,24(sp)
    460c:	dc402215 	stw	r17,136(sp)
    4610:	80001115 	stw	zero,68(r16)
    4614:	000b883a 	mov	r5,zero
    4618:	003c4a06 	br	3744 <__alt_data_end+0xfffe4efc>
    461c:	3023883a 	mov	r17,r6
    4620:	003ffb06 	br	4610 <__alt_data_end+0xfffe5dc8>
    4624:	1000021e 	bne	r2,zero,4630 <_dtoa_r+0x1254>
    4628:	4200004c 	andi	r8,r8,1
    462c:	403e8f1e 	bne	r8,zero,406c <__alt_data_end+0xfffe5824>
    4630:	01000c04 	movi	r4,48
    4634:	00000106 	br	463c <_dtoa_r+0x1260>
    4638:	102f883a 	mov	r23,r2
    463c:	b8bfffc4 	addi	r2,r23,-1
    4640:	10c00007 	ldb	r3,0(r2)
    4644:	193ffc26 	beq	r3,r4,4638 <__alt_data_end+0xfffe5df0>
    4648:	003e9906 	br	40b0 <__alt_data_end+0xfffe5868>
    464c:	d9000517 	ldw	r4,20(sp)
    4650:	012fc83a 	sub	r23,zero,r4
    4654:	b800ad26 	beq	r23,zero,490c <_dtoa_r+0x1530>
    4658:	b88003cc 	andi	r2,r23,15
    465c:	100490fa 	slli	r2,r2,3
    4660:	00c00074 	movhi	r3,1
    4664:	18fdfb04 	addi	r3,r3,-2068
    4668:	1885883a 	add	r2,r3,r2
    466c:	11800017 	ldw	r6,0(r2)
    4670:	11c00117 	ldw	r7,4(r2)
    4674:	b82fd13a 	srai	r23,r23,4
    4678:	9009883a 	mov	r4,r18
    467c:	980b883a 	mov	r5,r19
    4680:	000bbfc0 	call	bbfc <__muldf3>
    4684:	1029883a 	mov	r20,r2
    4688:	182b883a 	mov	r21,r3
    468c:	b800f426 	beq	r23,zero,4a60 <_dtoa_r+0x1684>
    4690:	02000074 	movhi	r8,1
    4694:	423df104 	addi	r8,r8,-2108
    4698:	8029883a 	mov	r20,r16
    469c:	04400084 	movi	r17,2
    46a0:	4021883a 	mov	r16,r8
    46a4:	b980004c 	andi	r6,r23,1
    46a8:	1009883a 	mov	r4,r2
    46ac:	b82fd07a 	srai	r23,r23,1
    46b0:	180b883a 	mov	r5,r3
    46b4:	30000426 	beq	r6,zero,46c8 <_dtoa_r+0x12ec>
    46b8:	81800017 	ldw	r6,0(r16)
    46bc:	81c00117 	ldw	r7,4(r16)
    46c0:	8c400044 	addi	r17,r17,1
    46c4:	000bbfc0 	call	bbfc <__muldf3>
    46c8:	84000204 	addi	r16,r16,8
    46cc:	b83ff51e 	bne	r23,zero,46a4 <__alt_data_end+0xfffe5e5c>
    46d0:	a021883a 	mov	r16,r20
    46d4:	182b883a 	mov	r21,r3
    46d8:	1029883a 	mov	r20,r2
    46dc:	003c5506 	br	3834 <__alt_data_end+0xfffe4fec>
    46e0:	d9800517 	ldw	r6,20(sp)
    46e4:	d9000717 	ldw	r4,28(sp)
    46e8:	00c00c04 	movi	r3,48
    46ec:	31800044 	addi	r6,r6,1
    46f0:	d9800515 	stw	r6,20(sp)
    46f4:	20c00005 	stb	r3,0(r4)
    46f8:	02000c44 	movi	r8,49
    46fc:	003da206 	br	3d88 <__alt_data_end+0xfffe5540>
    4700:	89400117 	ldw	r5,4(r17)
    4704:	8009883a 	mov	r4,r16
    4708:	0005c700 	call	5c70 <_Balloc>
    470c:	89800417 	ldw	r6,16(r17)
    4710:	11000304 	addi	r4,r2,12
    4714:	89400304 	addi	r5,r17,12
    4718:	31800084 	addi	r6,r6,2
    471c:	318d883a 	add	r6,r6,r6
    4720:	318d883a 	add	r6,r6,r6
    4724:	1027883a 	mov	r19,r2
    4728:	0005a140 	call	5a14 <memcpy>
    472c:	8009883a 	mov	r4,r16
    4730:	980b883a 	mov	r5,r19
    4734:	01800044 	movi	r6,1
    4738:	00064a40 	call	64a4 <__lshift>
    473c:	1029883a 	mov	r20,r2
    4740:	003e8606 	br	415c <__alt_data_end+0xfffe5914>
    4744:	00800e44 	movi	r2,57
    4748:	90809526 	beq	r18,r2,49a0 <_dtoa_r+0x15c4>
    474c:	92000044 	addi	r8,r18,1
    4750:	003f2306 	br	43e0 <__alt_data_end+0xfffe5b98>
    4754:	9011883a 	mov	r8,r18
    4758:	8825883a 	mov	r18,r17
    475c:	a023883a 	mov	r17,r20
    4760:	003e3706 	br	4040 <__alt_data_end+0xfffe57f8>
    4764:	002b883a 	mov	r21,zero
    4768:	0023883a 	mov	r17,zero
    476c:	003f5606 	br	44c8 <__alt_data_end+0xfffe5c80>
    4770:	51bfffc4 	addi	r6,r10,-1
    4774:	300490fa 	slli	r2,r6,3
    4778:	00c00074 	movhi	r3,1
    477c:	18fdfb04 	addi	r3,r3,-2068
    4780:	1885883a 	add	r2,r3,r2
    4784:	d9c00e17 	ldw	r7,56(sp)
    4788:	11000017 	ldw	r4,0(r2)
    478c:	11400117 	ldw	r5,4(r2)
    4790:	d8800717 	ldw	r2,28(sp)
    4794:	d9801015 	stw	r6,64(sp)
    4798:	880d883a 	mov	r6,r17
    479c:	da801615 	stw	r10,88(sp)
    47a0:	15c00044 	addi	r23,r2,1
    47a4:	000bbfc0 	call	bbfc <__muldf3>
    47a8:	a80b883a 	mov	r5,r21
    47ac:	a009883a 	mov	r4,r20
    47b0:	d8c01115 	stw	r3,68(sp)
    47b4:	d8800e15 	stw	r2,56(sp)
    47b8:	000cd380 	call	cd38 <__fixdfsi>
    47bc:	1009883a 	mov	r4,r2
    47c0:	1023883a 	mov	r17,r2
    47c4:	000cdc00 	call	cdc0 <__floatsidf>
    47c8:	a009883a 	mov	r4,r20
    47cc:	a80b883a 	mov	r5,r21
    47d0:	100d883a 	mov	r6,r2
    47d4:	180f883a 	mov	r7,r3
    47d8:	000c4680 	call	c468 <__subdf3>
    47dc:	1813883a 	mov	r9,r3
    47e0:	d8c00717 	ldw	r3,28(sp)
    47e4:	8c400c04 	addi	r17,r17,48
    47e8:	1011883a 	mov	r8,r2
    47ec:	1c400005 	stb	r17,0(r3)
    47f0:	da801617 	ldw	r10,88(sp)
    47f4:	00800044 	movi	r2,1
    47f8:	50802326 	beq	r10,r2,4888 <_dtoa_r+0x14ac>
    47fc:	d8800717 	ldw	r2,28(sp)
    4800:	b82b883a 	mov	r21,r23
    4804:	dc001315 	stw	r16,76(sp)
    4808:	12a9883a 	add	r20,r2,r10
    480c:	4807883a 	mov	r3,r9
    4810:	4005883a 	mov	r2,r8
    4814:	dc801415 	stw	r18,80(sp)
    4818:	000d883a 	mov	r6,zero
    481c:	01d00934 	movhi	r7,16420
    4820:	1009883a 	mov	r4,r2
    4824:	180b883a 	mov	r5,r3
    4828:	000bbfc0 	call	bbfc <__muldf3>
    482c:	180b883a 	mov	r5,r3
    4830:	1009883a 	mov	r4,r2
    4834:	1821883a 	mov	r16,r3
    4838:	1025883a 	mov	r18,r2
    483c:	000cd380 	call	cd38 <__fixdfsi>
    4840:	1009883a 	mov	r4,r2
    4844:	1023883a 	mov	r17,r2
    4848:	000cdc00 	call	cdc0 <__floatsidf>
    484c:	9009883a 	mov	r4,r18
    4850:	800b883a 	mov	r5,r16
    4854:	100d883a 	mov	r6,r2
    4858:	180f883a 	mov	r7,r3
    485c:	8c400c04 	addi	r17,r17,48
    4860:	000c4680 	call	c468 <__subdf3>
    4864:	ad400044 	addi	r21,r21,1
    4868:	ac7fffc5 	stb	r17,-1(r21)
    486c:	ad3fea1e 	bne	r21,r20,4818 <__alt_data_end+0xfffe5fd0>
    4870:	1813883a 	mov	r9,r3
    4874:	d8c01017 	ldw	r3,64(sp)
    4878:	dc001317 	ldw	r16,76(sp)
    487c:	dc801417 	ldw	r18,80(sp)
    4880:	1011883a 	mov	r8,r2
    4884:	b8ef883a 	add	r23,r23,r3
    4888:	d9000e17 	ldw	r4,56(sp)
    488c:	d9401117 	ldw	r5,68(sp)
    4890:	000d883a 	mov	r6,zero
    4894:	01cff834 	movhi	r7,16352
    4898:	da001715 	stw	r8,92(sp)
    489c:	da401515 	stw	r9,84(sp)
    48a0:	000a79c0 	call	a79c <__adddf3>
    48a4:	da001717 	ldw	r8,92(sp)
    48a8:	da401517 	ldw	r9,84(sp)
    48ac:	1009883a 	mov	r4,r2
    48b0:	400d883a 	mov	r6,r8
    48b4:	480f883a 	mov	r7,r9
    48b8:	180b883a 	mov	r5,r3
    48bc:	000bb1c0 	call	bb1c <__ledf2>
    48c0:	da001717 	ldw	r8,92(sp)
    48c4:	da401517 	ldw	r9,84(sp)
    48c8:	10003b0e 	bge	r2,zero,49b8 <_dtoa_r+0x15dc>
    48cc:	d9001217 	ldw	r4,72(sp)
    48d0:	bd7fffc3 	ldbu	r21,-1(r23)
    48d4:	d9000515 	stw	r4,20(sp)
    48d8:	003d1c06 	br	3d4c <__alt_data_end+0xfffe5504>
    48dc:	d8c00817 	ldw	r3,32(sp)
    48e0:	18a9c83a 	sub	r20,r3,r2
    48e4:	0005883a 	mov	r2,zero
    48e8:	003d3706 	br	3dc8 <__alt_data_end+0xfffe5580>
    48ec:	00800044 	movi	r2,1
    48f0:	003dd006 	br	4034 <__alt_data_end+0xfffe57ec>
    48f4:	d8c00217 	ldw	r3,8(sp)
    48f8:	00800d84 	movi	r2,54
    48fc:	dd400917 	ldw	r21,36(sp)
    4900:	10c5c83a 	sub	r2,r2,r3
    4904:	dd000817 	ldw	r20,32(sp)
    4908:	003d2f06 	br	3dc8 <__alt_data_end+0xfffe5580>
    490c:	9029883a 	mov	r20,r18
    4910:	982b883a 	mov	r21,r19
    4914:	04400084 	movi	r17,2
    4918:	003bc606 	br	3834 <__alt_data_end+0xfffe4fec>
    491c:	d8800617 	ldw	r2,24(sp)
    4920:	103efc26 	beq	r2,zero,4514 <__alt_data_end+0xfffe5ccc>
    4924:	d8c00d17 	ldw	r3,52(sp)
    4928:	00fc890e 	bge	zero,r3,3b50 <__alt_data_end+0xfffe5308>
    492c:	a80b883a 	mov	r5,r21
    4930:	a009883a 	mov	r4,r20
    4934:	000d883a 	mov	r6,zero
    4938:	01d00934 	movhi	r7,16420
    493c:	000bbfc0 	call	bbfc <__muldf3>
    4940:	89000044 	addi	r4,r17,1
    4944:	1029883a 	mov	r20,r2
    4948:	182b883a 	mov	r21,r3
    494c:	000cdc00 	call	cdc0 <__floatsidf>
    4950:	a009883a 	mov	r4,r20
    4954:	a80b883a 	mov	r5,r21
    4958:	100d883a 	mov	r6,r2
    495c:	180f883a 	mov	r7,r3
    4960:	000bbfc0 	call	bbfc <__muldf3>
    4964:	1009883a 	mov	r4,r2
    4968:	180b883a 	mov	r5,r3
    496c:	000d883a 	mov	r6,zero
    4970:	01d00734 	movhi	r7,16412
    4974:	000a79c0 	call	a79c <__adddf3>
    4978:	d9000517 	ldw	r4,20(sp)
    497c:	1023883a 	mov	r17,r2
    4980:	00bf3034 	movhi	r2,64704
    4984:	213fffc4 	addi	r4,r4,-1
    4988:	1885883a 	add	r2,r3,r2
    498c:	d9001215 	stw	r4,72(sp)
    4990:	d8800e15 	stw	r2,56(sp)
    4994:	da800d17 	ldw	r10,52(sp)
    4998:	003bc306 	br	38a8 <__alt_data_end+0xfffe5060>
    499c:	b039883a 	mov	fp,r22
    49a0:	01000e44 	movi	r4,57
    49a4:	8825883a 	mov	r18,r17
    49a8:	9dc00044 	addi	r23,r19,1
    49ac:	99000005 	stb	r4,0(r19)
    49b0:	a023883a 	mov	r17,r20
    49b4:	003dae06 	br	4070 <__alt_data_end+0xfffe5828>
    49b8:	d9800e17 	ldw	r6,56(sp)
    49bc:	d9c01117 	ldw	r7,68(sp)
    49c0:	0009883a 	mov	r4,zero
    49c4:	014ff834 	movhi	r5,16352
    49c8:	da001715 	stw	r8,92(sp)
    49cc:	da401515 	stw	r9,84(sp)
    49d0:	000c4680 	call	c468 <__subdf3>
    49d4:	da001717 	ldw	r8,92(sp)
    49d8:	da401517 	ldw	r9,84(sp)
    49dc:	1009883a 	mov	r4,r2
    49e0:	180b883a 	mov	r5,r3
    49e4:	400d883a 	mov	r6,r8
    49e8:	480f883a 	mov	r7,r9
    49ec:	000ba3c0 	call	ba3c <__gedf2>
    49f0:	00bc570e 	bge	zero,r2,3b50 <__alt_data_end+0xfffe5308>
    49f4:	01000c04 	movi	r4,48
    49f8:	00000106 	br	4a00 <_dtoa_r+0x1624>
    49fc:	102f883a 	mov	r23,r2
    4a00:	b8bfffc4 	addi	r2,r23,-1
    4a04:	10c00007 	ldb	r3,0(r2)
    4a08:	193ffc26 	beq	r3,r4,49fc <__alt_data_end+0xfffe61b4>
    4a0c:	d9801217 	ldw	r6,72(sp)
    4a10:	d9800515 	stw	r6,20(sp)
    4a14:	003c1f06 	br	3a94 <__alt_data_end+0xfffe524c>
    4a18:	d8801217 	ldw	r2,72(sp)
    4a1c:	dc001117 	ldw	r16,68(sp)
    4a20:	d8800515 	stw	r2,20(sp)
    4a24:	003cc906 	br	3d4c <__alt_data_end+0xfffe5504>
    4a28:	dd801317 	ldw	r22,76(sp)
    4a2c:	dc001117 	ldw	r16,68(sp)
    4a30:	dcc01417 	ldw	r19,80(sp)
    4a34:	dc801017 	ldw	r18,64(sp)
    4a38:	003c4506 	br	3b50 <__alt_data_end+0xfffe5308>
    4a3c:	103e5d1e 	bne	r2,zero,43b4 <__alt_data_end+0xfffe5b6c>
    4a40:	4080004c 	andi	r2,r8,1
    4a44:	103e5b26 	beq	r2,zero,43b4 <__alt_data_end+0xfffe5b6c>
    4a48:	003e5706 	br	43a8 <__alt_data_end+0xfffe5b60>
    4a4c:	d8c00317 	ldw	r3,12(sp)
    4a50:	00800084 	movi	r2,2
    4a54:	10c00a16 	blt	r2,r3,4a80 <_dtoa_r+0x16a4>
    4a58:	d9000d17 	ldw	r4,52(sp)
    4a5c:	003e8306 	br	446c <__alt_data_end+0xfffe5c24>
    4a60:	04400084 	movi	r17,2
    4a64:	003b7306 	br	3834 <__alt_data_end+0xfffe4fec>
    4a68:	d9801217 	ldw	r6,72(sp)
    4a6c:	d9800515 	stw	r6,20(sp)
    4a70:	003cb606 	br	3d4c <__alt_data_end+0xfffe5504>
    4a74:	d9001217 	ldw	r4,72(sp)
    4a78:	d9000515 	stw	r4,20(sp)
    4a7c:	003c0506 	br	3a94 <__alt_data_end+0xfffe524c>
    4a80:	d9800d17 	ldw	r6,52(sp)
    4a84:	d9800615 	stw	r6,24(sp)
    4a88:	003e8306 	br	4498 <__alt_data_end+0xfffe5c50>
    4a8c:	d9800317 	ldw	r6,12(sp)
    4a90:	00800084 	movi	r2,2
    4a94:	11800216 	blt	r2,r6,4aa0 <_dtoa_r+0x16c4>
    4a98:	d8800d17 	ldw	r2,52(sp)
    4a9c:	003da606 	br	4138 <__alt_data_end+0xfffe58f0>
    4aa0:	d8800d17 	ldw	r2,52(sp)
    4aa4:	d8800615 	stw	r2,24(sp)
    4aa8:	003e7b06 	br	4498 <__alt_data_end+0xfffe5c50>
    4aac:	05000044 	movi	r20,1
    4ab0:	003b0506 	br	36c8 <__alt_data_end+0xfffe4e80>
    4ab4:	8009883a 	mov	r4,r16
    4ab8:	80001115 	stw	zero,68(r16)
    4abc:	000b883a 	mov	r5,zero
    4ac0:	0005c700 	call	5c70 <_Balloc>
    4ac4:	d8800715 	stw	r2,28(sp)
    4ac8:	d8c00717 	ldw	r3,28(sp)
    4acc:	00bfffc4 	movi	r2,-1
    4ad0:	01000044 	movi	r4,1
    4ad4:	d8800615 	stw	r2,24(sp)
    4ad8:	80c01015 	stw	r3,64(r16)
    4adc:	d9000b15 	stw	r4,44(sp)
    4ae0:	d8002215 	stw	zero,136(sp)
    4ae4:	d8800d15 	stw	r2,52(sp)
    4ae8:	003c1906 	br	3b50 <__alt_data_end+0xfffe5308>
    4aec:	193d2926 	beq	r3,r4,3f94 <__alt_data_end+0xfffe574c>
    4af0:	00c00f04 	movi	r3,60
    4af4:	1885c83a 	sub	r2,r3,r2
    4af8:	003d7b06 	br	40e8 <__alt_data_end+0xfffe58a0>
    4afc:	000b883a 	mov	r5,zero
    4b00:	003b1006 	br	3744 <__alt_data_end+0xfffe4efc>

00004b04 <_fflush_r>:
    4b04:	defffb04 	addi	sp,sp,-20
    4b08:	dcc00315 	stw	r19,12(sp)
    4b0c:	dc000015 	stw	r16,0(sp)
    4b10:	dfc00415 	stw	ra,16(sp)
    4b14:	dc800215 	stw	r18,8(sp)
    4b18:	dc400115 	stw	r17,4(sp)
    4b1c:	2027883a 	mov	r19,r4
    4b20:	2821883a 	mov	r16,r5
    4b24:	20000226 	beq	r4,zero,4b30 <_fflush_r+0x2c>
    4b28:	20800e17 	ldw	r2,56(r4)
    4b2c:	10005326 	beq	r2,zero,4c7c <_fflush_r+0x178>
    4b30:	8080030b 	ldhu	r2,12(r16)
    4b34:	10ffffcc 	andi	r3,r2,65535
    4b38:	18e0001c 	xori	r3,r3,32768
    4b3c:	18e00004 	addi	r3,r3,-32768
    4b40:	18002c26 	beq	r3,zero,4bf4 <_fflush_r+0xf0>
    4b44:	10c0020c 	andi	r3,r2,8
    4b48:	1800321e 	bne	r3,zero,4c14 <_fflush_r+0x110>
    4b4c:	80c00117 	ldw	r3,4(r16)
    4b50:	10820014 	ori	r2,r2,2048
    4b54:	8080030d 	sth	r2,12(r16)
    4b58:	00c0570e 	bge	zero,r3,4cb8 <_fflush_r+0x1b4>
    4b5c:	82000a17 	ldw	r8,40(r16)
    4b60:	40002426 	beq	r8,zero,4bf4 <_fflush_r+0xf0>
    4b64:	9c400017 	ldw	r17,0(r19)
    4b68:	10c4000c 	andi	r3,r2,4096
    4b6c:	98000015 	stw	zero,0(r19)
    4b70:	18004626 	beq	r3,zero,4c8c <_fflush_r+0x188>
    4b74:	81801417 	ldw	r6,80(r16)
    4b78:	10c0010c 	andi	r3,r2,4
    4b7c:	18000626 	beq	r3,zero,4b98 <_fflush_r+0x94>
    4b80:	80c00117 	ldw	r3,4(r16)
    4b84:	80800c17 	ldw	r2,48(r16)
    4b88:	30cdc83a 	sub	r6,r6,r3
    4b8c:	10000226 	beq	r2,zero,4b98 <_fflush_r+0x94>
    4b90:	80800f17 	ldw	r2,60(r16)
    4b94:	308dc83a 	sub	r6,r6,r2
    4b98:	81400717 	ldw	r5,28(r16)
    4b9c:	9809883a 	mov	r4,r19
    4ba0:	000f883a 	mov	r7,zero
    4ba4:	403ee83a 	callr	r8
    4ba8:	00ffffc4 	movi	r3,-1
    4bac:	10c04526 	beq	r2,r3,4cc4 <_fflush_r+0x1c0>
    4bb0:	80c0030b 	ldhu	r3,12(r16)
    4bb4:	81000417 	ldw	r4,16(r16)
    4bb8:	80000115 	stw	zero,4(r16)
    4bbc:	197dffcc 	andi	r5,r3,63487
    4bc0:	8140030d 	sth	r5,12(r16)
    4bc4:	81000015 	stw	r4,0(r16)
    4bc8:	18c4000c 	andi	r3,r3,4096
    4bcc:	18000126 	beq	r3,zero,4bd4 <_fflush_r+0xd0>
    4bd0:	80801415 	stw	r2,80(r16)
    4bd4:	81400c17 	ldw	r5,48(r16)
    4bd8:	9c400015 	stw	r17,0(r19)
    4bdc:	28000526 	beq	r5,zero,4bf4 <_fflush_r+0xf0>
    4be0:	80801004 	addi	r2,r16,64
    4be4:	28800226 	beq	r5,r2,4bf0 <_fflush_r+0xec>
    4be8:	9809883a 	mov	r4,r19
    4bec:	00052340 	call	5234 <_free_r>
    4bf0:	80000c15 	stw	zero,48(r16)
    4bf4:	0005883a 	mov	r2,zero
    4bf8:	dfc00417 	ldw	ra,16(sp)
    4bfc:	dcc00317 	ldw	r19,12(sp)
    4c00:	dc800217 	ldw	r18,8(sp)
    4c04:	dc400117 	ldw	r17,4(sp)
    4c08:	dc000017 	ldw	r16,0(sp)
    4c0c:	dec00504 	addi	sp,sp,20
    4c10:	f800283a 	ret
    4c14:	84800417 	ldw	r18,16(r16)
    4c18:	903ff626 	beq	r18,zero,4bf4 <__alt_data_end+0xfffe63ac>
    4c1c:	84400017 	ldw	r17,0(r16)
    4c20:	108000cc 	andi	r2,r2,3
    4c24:	84800015 	stw	r18,0(r16)
    4c28:	8ca3c83a 	sub	r17,r17,r18
    4c2c:	10001526 	beq	r2,zero,4c84 <_fflush_r+0x180>
    4c30:	0005883a 	mov	r2,zero
    4c34:	80800215 	stw	r2,8(r16)
    4c38:	04400316 	blt	zero,r17,4c48 <_fflush_r+0x144>
    4c3c:	003fed06 	br	4bf4 <__alt_data_end+0xfffe63ac>
    4c40:	90a5883a 	add	r18,r18,r2
    4c44:	047feb0e 	bge	zero,r17,4bf4 <__alt_data_end+0xfffe63ac>
    4c48:	80800917 	ldw	r2,36(r16)
    4c4c:	81400717 	ldw	r5,28(r16)
    4c50:	880f883a 	mov	r7,r17
    4c54:	900d883a 	mov	r6,r18
    4c58:	9809883a 	mov	r4,r19
    4c5c:	103ee83a 	callr	r2
    4c60:	88a3c83a 	sub	r17,r17,r2
    4c64:	00bff616 	blt	zero,r2,4c40 <__alt_data_end+0xfffe63f8>
    4c68:	80c0030b 	ldhu	r3,12(r16)
    4c6c:	00bfffc4 	movi	r2,-1
    4c70:	18c01014 	ori	r3,r3,64
    4c74:	80c0030d 	sth	r3,12(r16)
    4c78:	003fdf06 	br	4bf8 <__alt_data_end+0xfffe63b0>
    4c7c:	00050c00 	call	50c0 <__sinit>
    4c80:	003fab06 	br	4b30 <__alt_data_end+0xfffe62e8>
    4c84:	80800517 	ldw	r2,20(r16)
    4c88:	003fea06 	br	4c34 <__alt_data_end+0xfffe63ec>
    4c8c:	81400717 	ldw	r5,28(r16)
    4c90:	000d883a 	mov	r6,zero
    4c94:	9809883a 	mov	r4,r19
    4c98:	01c00044 	movi	r7,1
    4c9c:	403ee83a 	callr	r8
    4ca0:	100d883a 	mov	r6,r2
    4ca4:	00bfffc4 	movi	r2,-1
    4ca8:	30801326 	beq	r6,r2,4cf8 <_fflush_r+0x1f4>
    4cac:	8080030b 	ldhu	r2,12(r16)
    4cb0:	82000a17 	ldw	r8,40(r16)
    4cb4:	003fb006 	br	4b78 <__alt_data_end+0xfffe6330>
    4cb8:	80c00f17 	ldw	r3,60(r16)
    4cbc:	00ffa716 	blt	zero,r3,4b5c <__alt_data_end+0xfffe6314>
    4cc0:	003fcc06 	br	4bf4 <__alt_data_end+0xfffe63ac>
    4cc4:	98c00017 	ldw	r3,0(r19)
    4cc8:	183fb926 	beq	r3,zero,4bb0 <__alt_data_end+0xfffe6368>
    4ccc:	01000744 	movi	r4,29
    4cd0:	19000226 	beq	r3,r4,4cdc <_fflush_r+0x1d8>
    4cd4:	01000584 	movi	r4,22
    4cd8:	1900101e 	bne	r3,r4,4d1c <_fflush_r+0x218>
    4cdc:	8080030b 	ldhu	r2,12(r16)
    4ce0:	80c00417 	ldw	r3,16(r16)
    4ce4:	80000115 	stw	zero,4(r16)
    4ce8:	10bdffcc 	andi	r2,r2,63487
    4cec:	8080030d 	sth	r2,12(r16)
    4cf0:	80c00015 	stw	r3,0(r16)
    4cf4:	003fb706 	br	4bd4 <__alt_data_end+0xfffe638c>
    4cf8:	98800017 	ldw	r2,0(r19)
    4cfc:	103feb26 	beq	r2,zero,4cac <__alt_data_end+0xfffe6464>
    4d00:	00c00744 	movi	r3,29
    4d04:	10c00226 	beq	r2,r3,4d10 <_fflush_r+0x20c>
    4d08:	00c00584 	movi	r3,22
    4d0c:	10ffd61e 	bne	r2,r3,4c68 <__alt_data_end+0xfffe6420>
    4d10:	9c400015 	stw	r17,0(r19)
    4d14:	0005883a 	mov	r2,zero
    4d18:	003fb706 	br	4bf8 <__alt_data_end+0xfffe63b0>
    4d1c:	80c0030b 	ldhu	r3,12(r16)
    4d20:	18c01014 	ori	r3,r3,64
    4d24:	80c0030d 	sth	r3,12(r16)
    4d28:	003fb306 	br	4bf8 <__alt_data_end+0xfffe63b0>

00004d2c <fflush>:
    4d2c:	20000526 	beq	r4,zero,4d44 <fflush+0x18>
    4d30:	00800074 	movhi	r2,1
    4d34:	10853004 	addi	r2,r2,5312
    4d38:	200b883a 	mov	r5,r4
    4d3c:	11000017 	ldw	r4,0(r2)
    4d40:	0004b041 	jmpi	4b04 <_fflush_r>
    4d44:	00800074 	movhi	r2,1
    4d48:	10852f04 	addi	r2,r2,5308
    4d4c:	11000017 	ldw	r4,0(r2)
    4d50:	01400034 	movhi	r5,0
    4d54:	2952c104 	addi	r5,r5,19204
    4d58:	00055dc1 	jmpi	55dc <_fwalk_reent>

00004d5c <__fp_lock>:
    4d5c:	0005883a 	mov	r2,zero
    4d60:	f800283a 	ret

00004d64 <__fp_unlock>:
    4d64:	0005883a 	mov	r2,zero
    4d68:	f800283a 	ret

00004d6c <_cleanup_r>:
    4d6c:	01400074 	movhi	r5,1
    4d70:	2961e204 	addi	r5,r5,-30840
    4d74:	00055241 	jmpi	5524 <_fwalk>

00004d78 <__sinit.part.1>:
    4d78:	defff604 	addi	sp,sp,-40
    4d7c:	00c00034 	movhi	r3,0
    4d80:	dfc00915 	stw	ra,36(sp)
    4d84:	df000815 	stw	fp,32(sp)
    4d88:	ddc00715 	stw	r23,28(sp)
    4d8c:	dd800615 	stw	r22,24(sp)
    4d90:	dd400515 	stw	r21,20(sp)
    4d94:	dd000415 	stw	r20,16(sp)
    4d98:	dcc00315 	stw	r19,12(sp)
    4d9c:	dc800215 	stw	r18,8(sp)
    4da0:	dc400115 	stw	r17,4(sp)
    4da4:	dc000015 	stw	r16,0(sp)
    4da8:	18d35b04 	addi	r3,r3,19820
    4dac:	24000117 	ldw	r16,4(r4)
    4db0:	20c00f15 	stw	r3,60(r4)
    4db4:	07000044 	movi	fp,1
    4db8:	00c000c4 	movi	r3,3
    4dbc:	2080bb04 	addi	r2,r4,748
    4dc0:	20c0b915 	stw	r3,740(r4)
    4dc4:	27000e15 	stw	fp,56(r4)
    4dc8:	2080ba15 	stw	r2,744(r4)
    4dcc:	2000b815 	stw	zero,736(r4)
    4dd0:	05c00204 	movi	r23,8
    4dd4:	00800104 	movi	r2,4
    4dd8:	2025883a 	mov	r18,r4
    4ddc:	b80d883a 	mov	r6,r23
    4de0:	81001704 	addi	r4,r16,92
    4de4:	000b883a 	mov	r5,zero
    4de8:	80000015 	stw	zero,0(r16)
    4dec:	80000115 	stw	zero,4(r16)
    4df0:	80000215 	stw	zero,8(r16)
    4df4:	8080030d 	sth	r2,12(r16)
    4df8:	80001915 	stw	zero,100(r16)
    4dfc:	8000038d 	sth	zero,14(r16)
    4e00:	80000415 	stw	zero,16(r16)
    4e04:	80000515 	stw	zero,20(r16)
    4e08:	80000615 	stw	zero,24(r16)
    4e0c:	0005b4c0 	call	5b4c <memset>
    4e10:	05800034 	movhi	r22,0
    4e14:	94400217 	ldw	r17,8(r18)
    4e18:	05400034 	movhi	r21,0
    4e1c:	05000034 	movhi	r20,0
    4e20:	04c00034 	movhi	r19,0
    4e24:	b59b4b04 	addi	r22,r22,27948
    4e28:	ad5b6204 	addi	r21,r21,28040
    4e2c:	a51b8104 	addi	r20,r20,28164
    4e30:	9cdb9804 	addi	r19,r19,28256
    4e34:	85800815 	stw	r22,32(r16)
    4e38:	85400915 	stw	r21,36(r16)
    4e3c:	85000a15 	stw	r20,40(r16)
    4e40:	84c00b15 	stw	r19,44(r16)
    4e44:	84000715 	stw	r16,28(r16)
    4e48:	00800284 	movi	r2,10
    4e4c:	89001704 	addi	r4,r17,92
    4e50:	b80d883a 	mov	r6,r23
    4e54:	000b883a 	mov	r5,zero
    4e58:	88000015 	stw	zero,0(r17)
    4e5c:	88000115 	stw	zero,4(r17)
    4e60:	88000215 	stw	zero,8(r17)
    4e64:	8880030d 	sth	r2,12(r17)
    4e68:	88001915 	stw	zero,100(r17)
    4e6c:	8f00038d 	sth	fp,14(r17)
    4e70:	88000415 	stw	zero,16(r17)
    4e74:	88000515 	stw	zero,20(r17)
    4e78:	88000615 	stw	zero,24(r17)
    4e7c:	0005b4c0 	call	5b4c <memset>
    4e80:	94000317 	ldw	r16,12(r18)
    4e84:	00800484 	movi	r2,18
    4e88:	8c400715 	stw	r17,28(r17)
    4e8c:	8d800815 	stw	r22,32(r17)
    4e90:	8d400915 	stw	r21,36(r17)
    4e94:	8d000a15 	stw	r20,40(r17)
    4e98:	8cc00b15 	stw	r19,44(r17)
    4e9c:	8080030d 	sth	r2,12(r16)
    4ea0:	00800084 	movi	r2,2
    4ea4:	80000015 	stw	zero,0(r16)
    4ea8:	80000115 	stw	zero,4(r16)
    4eac:	80000215 	stw	zero,8(r16)
    4eb0:	80001915 	stw	zero,100(r16)
    4eb4:	8080038d 	sth	r2,14(r16)
    4eb8:	80000415 	stw	zero,16(r16)
    4ebc:	80000515 	stw	zero,20(r16)
    4ec0:	80000615 	stw	zero,24(r16)
    4ec4:	81001704 	addi	r4,r16,92
    4ec8:	000b883a 	mov	r5,zero
    4ecc:	b80d883a 	mov	r6,r23
    4ed0:	0005b4c0 	call	5b4c <memset>
    4ed4:	84000715 	stw	r16,28(r16)
    4ed8:	85800815 	stw	r22,32(r16)
    4edc:	85400915 	stw	r21,36(r16)
    4ee0:	85000a15 	stw	r20,40(r16)
    4ee4:	84c00b15 	stw	r19,44(r16)
    4ee8:	dfc00917 	ldw	ra,36(sp)
    4eec:	df000817 	ldw	fp,32(sp)
    4ef0:	ddc00717 	ldw	r23,28(sp)
    4ef4:	dd800617 	ldw	r22,24(sp)
    4ef8:	dd400517 	ldw	r21,20(sp)
    4efc:	dd000417 	ldw	r20,16(sp)
    4f00:	dcc00317 	ldw	r19,12(sp)
    4f04:	dc800217 	ldw	r18,8(sp)
    4f08:	dc400117 	ldw	r17,4(sp)
    4f0c:	dc000017 	ldw	r16,0(sp)
    4f10:	dec00a04 	addi	sp,sp,40
    4f14:	f800283a 	ret

00004f18 <__sfmoreglue>:
    4f18:	defffc04 	addi	sp,sp,-16
    4f1c:	dc800215 	stw	r18,8(sp)
    4f20:	2825883a 	mov	r18,r5
    4f24:	dc000015 	stw	r16,0(sp)
    4f28:	01401a04 	movi	r5,104
    4f2c:	2021883a 	mov	r16,r4
    4f30:	9009883a 	mov	r4,r18
    4f34:	dfc00315 	stw	ra,12(sp)
    4f38:	dc400115 	stw	r17,4(sp)
    4f3c:	000a7740 	call	a774 <__mulsi3>
    4f40:	8009883a 	mov	r4,r16
    4f44:	11400304 	addi	r5,r2,12
    4f48:	1023883a 	mov	r17,r2
    4f4c:	00007000 	call	700 <_malloc_r>
    4f50:	1021883a 	mov	r16,r2
    4f54:	10000726 	beq	r2,zero,4f74 <__sfmoreglue+0x5c>
    4f58:	11000304 	addi	r4,r2,12
    4f5c:	10000015 	stw	zero,0(r2)
    4f60:	14800115 	stw	r18,4(r2)
    4f64:	11000215 	stw	r4,8(r2)
    4f68:	000b883a 	mov	r5,zero
    4f6c:	880d883a 	mov	r6,r17
    4f70:	0005b4c0 	call	5b4c <memset>
    4f74:	8005883a 	mov	r2,r16
    4f78:	dfc00317 	ldw	ra,12(sp)
    4f7c:	dc800217 	ldw	r18,8(sp)
    4f80:	dc400117 	ldw	r17,4(sp)
    4f84:	dc000017 	ldw	r16,0(sp)
    4f88:	dec00404 	addi	sp,sp,16
    4f8c:	f800283a 	ret

00004f90 <__sfp>:
    4f90:	00800074 	movhi	r2,1
    4f94:	defffb04 	addi	sp,sp,-20
    4f98:	10852f04 	addi	r2,r2,5308
    4f9c:	dc800215 	stw	r18,8(sp)
    4fa0:	14800017 	ldw	r18,0(r2)
    4fa4:	dcc00315 	stw	r19,12(sp)
    4fa8:	dfc00415 	stw	ra,16(sp)
    4fac:	90800e17 	ldw	r2,56(r18)
    4fb0:	dc400115 	stw	r17,4(sp)
    4fb4:	dc000015 	stw	r16,0(sp)
    4fb8:	2027883a 	mov	r19,r4
    4fbc:	1000021e 	bne	r2,zero,4fc8 <__sfp+0x38>
    4fc0:	9009883a 	mov	r4,r18
    4fc4:	0004d780 	call	4d78 <__sinit.part.1>
    4fc8:	9480b804 	addi	r18,r18,736
    4fcc:	047fffc4 	movi	r17,-1
    4fd0:	91400117 	ldw	r5,4(r18)
    4fd4:	94000217 	ldw	r16,8(r18)
    4fd8:	297fffc4 	addi	r5,r5,-1
    4fdc:	28000a16 	blt	r5,zero,5008 <__sfp+0x78>
    4fe0:	8080030f 	ldh	r2,12(r16)
    4fe4:	10000c26 	beq	r2,zero,5018 <__sfp+0x88>
    4fe8:	80c01d04 	addi	r3,r16,116
    4fec:	00000206 	br	4ff8 <__sfp+0x68>
    4ff0:	18bfe60f 	ldh	r2,-104(r3)
    4ff4:	10000826 	beq	r2,zero,5018 <__sfp+0x88>
    4ff8:	297fffc4 	addi	r5,r5,-1
    4ffc:	1c3ffd04 	addi	r16,r3,-12
    5000:	18c01a04 	addi	r3,r3,104
    5004:	2c7ffa1e 	bne	r5,r17,4ff0 <__alt_data_end+0xfffe67a8>
    5008:	90800017 	ldw	r2,0(r18)
    500c:	10001d26 	beq	r2,zero,5084 <__sfp+0xf4>
    5010:	1025883a 	mov	r18,r2
    5014:	003fee06 	br	4fd0 <__alt_data_end+0xfffe6788>
    5018:	00bfffc4 	movi	r2,-1
    501c:	8080038d 	sth	r2,14(r16)
    5020:	00800044 	movi	r2,1
    5024:	8080030d 	sth	r2,12(r16)
    5028:	80001915 	stw	zero,100(r16)
    502c:	80000015 	stw	zero,0(r16)
    5030:	80000215 	stw	zero,8(r16)
    5034:	80000115 	stw	zero,4(r16)
    5038:	80000415 	stw	zero,16(r16)
    503c:	80000515 	stw	zero,20(r16)
    5040:	80000615 	stw	zero,24(r16)
    5044:	81001704 	addi	r4,r16,92
    5048:	000b883a 	mov	r5,zero
    504c:	01800204 	movi	r6,8
    5050:	0005b4c0 	call	5b4c <memset>
    5054:	8005883a 	mov	r2,r16
    5058:	80000c15 	stw	zero,48(r16)
    505c:	80000d15 	stw	zero,52(r16)
    5060:	80001115 	stw	zero,68(r16)
    5064:	80001215 	stw	zero,72(r16)
    5068:	dfc00417 	ldw	ra,16(sp)
    506c:	dcc00317 	ldw	r19,12(sp)
    5070:	dc800217 	ldw	r18,8(sp)
    5074:	dc400117 	ldw	r17,4(sp)
    5078:	dc000017 	ldw	r16,0(sp)
    507c:	dec00504 	addi	sp,sp,20
    5080:	f800283a 	ret
    5084:	9809883a 	mov	r4,r19
    5088:	01400104 	movi	r5,4
    508c:	0004f180 	call	4f18 <__sfmoreglue>
    5090:	90800015 	stw	r2,0(r18)
    5094:	103fde1e 	bne	r2,zero,5010 <__alt_data_end+0xfffe67c8>
    5098:	00800304 	movi	r2,12
    509c:	98800015 	stw	r2,0(r19)
    50a0:	0005883a 	mov	r2,zero
    50a4:	003ff006 	br	5068 <__alt_data_end+0xfffe6820>

000050a8 <_cleanup>:
    50a8:	00800074 	movhi	r2,1
    50ac:	10852f04 	addi	r2,r2,5308
    50b0:	11000017 	ldw	r4,0(r2)
    50b4:	01400074 	movhi	r5,1
    50b8:	2961e204 	addi	r5,r5,-30840
    50bc:	00055241 	jmpi	5524 <_fwalk>

000050c0 <__sinit>:
    50c0:	20800e17 	ldw	r2,56(r4)
    50c4:	10000126 	beq	r2,zero,50cc <__sinit+0xc>
    50c8:	f800283a 	ret
    50cc:	0004d781 	jmpi	4d78 <__sinit.part.1>

000050d0 <__sfp_lock_acquire>:
    50d0:	f800283a 	ret

000050d4 <__sfp_lock_release>:
    50d4:	f800283a 	ret

000050d8 <__sinit_lock_acquire>:
    50d8:	f800283a 	ret

000050dc <__sinit_lock_release>:
    50dc:	f800283a 	ret

000050e0 <__fp_lock_all>:
    50e0:	00800074 	movhi	r2,1
    50e4:	10853004 	addi	r2,r2,5312
    50e8:	11000017 	ldw	r4,0(r2)
    50ec:	01400034 	movhi	r5,0
    50f0:	29535704 	addi	r5,r5,19804
    50f4:	00055241 	jmpi	5524 <_fwalk>

000050f8 <__fp_unlock_all>:
    50f8:	00800074 	movhi	r2,1
    50fc:	10853004 	addi	r2,r2,5312
    5100:	11000017 	ldw	r4,0(r2)
    5104:	01400034 	movhi	r5,0
    5108:	29535904 	addi	r5,r5,19812
    510c:	00055241 	jmpi	5524 <_fwalk>

00005110 <_malloc_trim_r>:
    5110:	defffb04 	addi	sp,sp,-20
    5114:	dcc00315 	stw	r19,12(sp)
    5118:	04c00074 	movhi	r19,1
    511c:	dc800215 	stw	r18,8(sp)
    5120:	dc400115 	stw	r17,4(sp)
    5124:	dc000015 	stw	r16,0(sp)
    5128:	dfc00415 	stw	ra,16(sp)
    512c:	2821883a 	mov	r16,r5
    5130:	9cfe8204 	addi	r19,r19,-1528
    5134:	2025883a 	mov	r18,r4
    5138:	000d5780 	call	d578 <__malloc_lock>
    513c:	98800217 	ldw	r2,8(r19)
    5140:	14400117 	ldw	r17,4(r2)
    5144:	00bfff04 	movi	r2,-4
    5148:	88a2703a 	and	r17,r17,r2
    514c:	8c21c83a 	sub	r16,r17,r16
    5150:	8403fbc4 	addi	r16,r16,4079
    5154:	8020d33a 	srli	r16,r16,12
    5158:	0083ffc4 	movi	r2,4095
    515c:	843fffc4 	addi	r16,r16,-1
    5160:	8020933a 	slli	r16,r16,12
    5164:	1400060e 	bge	r2,r16,5180 <_malloc_trim_r+0x70>
    5168:	9009883a 	mov	r4,r18
    516c:	000b883a 	mov	r5,zero
    5170:	0000f100 	call	f10 <_sbrk_r>
    5174:	98c00217 	ldw	r3,8(r19)
    5178:	1c47883a 	add	r3,r3,r17
    517c:	10c00a26 	beq	r2,r3,51a8 <_malloc_trim_r+0x98>
    5180:	9009883a 	mov	r4,r18
    5184:	000d5980 	call	d598 <__malloc_unlock>
    5188:	0005883a 	mov	r2,zero
    518c:	dfc00417 	ldw	ra,16(sp)
    5190:	dcc00317 	ldw	r19,12(sp)
    5194:	dc800217 	ldw	r18,8(sp)
    5198:	dc400117 	ldw	r17,4(sp)
    519c:	dc000017 	ldw	r16,0(sp)
    51a0:	dec00504 	addi	sp,sp,20
    51a4:	f800283a 	ret
    51a8:	9009883a 	mov	r4,r18
    51ac:	040bc83a 	sub	r5,zero,r16
    51b0:	0000f100 	call	f10 <_sbrk_r>
    51b4:	00ffffc4 	movi	r3,-1
    51b8:	10c00d26 	beq	r2,r3,51f0 <_malloc_trim_r+0xe0>
    51bc:	00c00074 	movhi	r3,1
    51c0:	18cc0604 	addi	r3,r3,12312
    51c4:	18800017 	ldw	r2,0(r3)
    51c8:	99000217 	ldw	r4,8(r19)
    51cc:	8c23c83a 	sub	r17,r17,r16
    51d0:	8c400054 	ori	r17,r17,1
    51d4:	1421c83a 	sub	r16,r2,r16
    51d8:	24400115 	stw	r17,4(r4)
    51dc:	9009883a 	mov	r4,r18
    51e0:	1c000015 	stw	r16,0(r3)
    51e4:	000d5980 	call	d598 <__malloc_unlock>
    51e8:	00800044 	movi	r2,1
    51ec:	003fe706 	br	518c <__alt_data_end+0xfffe6944>
    51f0:	9009883a 	mov	r4,r18
    51f4:	000b883a 	mov	r5,zero
    51f8:	0000f100 	call	f10 <_sbrk_r>
    51fc:	99000217 	ldw	r4,8(r19)
    5200:	014003c4 	movi	r5,15
    5204:	1107c83a 	sub	r3,r2,r4
    5208:	28ffdd0e 	bge	r5,r3,5180 <__alt_data_end+0xfffe6938>
    520c:	01400074 	movhi	r5,1
    5210:	29452d04 	addi	r5,r5,5300
    5214:	29400017 	ldw	r5,0(r5)
    5218:	18c00054 	ori	r3,r3,1
    521c:	20c00115 	stw	r3,4(r4)
    5220:	00c00074 	movhi	r3,1
    5224:	1145c83a 	sub	r2,r2,r5
    5228:	18cc0604 	addi	r3,r3,12312
    522c:	18800015 	stw	r2,0(r3)
    5230:	003fd306 	br	5180 <__alt_data_end+0xfffe6938>

00005234 <_free_r>:
    5234:	28004c26 	beq	r5,zero,5368 <_free_r+0x134>
    5238:	defffd04 	addi	sp,sp,-12
    523c:	dc400115 	stw	r17,4(sp)
    5240:	dc000015 	stw	r16,0(sp)
    5244:	2023883a 	mov	r17,r4
    5248:	2821883a 	mov	r16,r5
    524c:	dfc00215 	stw	ra,8(sp)
    5250:	000d5780 	call	d578 <__malloc_lock>
    5254:	813fff17 	ldw	r4,-4(r16)
    5258:	00bfff84 	movi	r2,-2
    525c:	02400074 	movhi	r9,1
    5260:	81bffe04 	addi	r6,r16,-8
    5264:	2084703a 	and	r2,r4,r2
    5268:	4a7e8204 	addi	r9,r9,-1528
    526c:	308b883a 	add	r5,r6,r2
    5270:	2a000117 	ldw	r8,4(r5)
    5274:	49c00217 	ldw	r7,8(r9)
    5278:	00ffff04 	movi	r3,-4
    527c:	40c6703a 	and	r3,r8,r3
    5280:	39405326 	beq	r7,r5,53d0 <_free_r+0x19c>
    5284:	28c00115 	stw	r3,4(r5)
    5288:	2100004c 	andi	r4,r4,1
    528c:	2000091e 	bne	r4,zero,52b4 <_free_r+0x80>
    5290:	81fffe17 	ldw	r7,-8(r16)
    5294:	4a000204 	addi	r8,r9,8
    5298:	31cdc83a 	sub	r6,r6,r7
    529c:	31000217 	ldw	r4,8(r6)
    52a0:	11c5883a 	add	r2,r2,r7
    52a4:	22006126 	beq	r4,r8,542c <_free_r+0x1f8>
    52a8:	31c00317 	ldw	r7,12(r6)
    52ac:	21c00315 	stw	r7,12(r4)
    52b0:	39000215 	stw	r4,8(r7)
    52b4:	28c9883a 	add	r4,r5,r3
    52b8:	21c00117 	ldw	r7,4(r4)
    52bc:	39c0004c 	andi	r7,r7,1
    52c0:	38000d1e 	bne	r7,zero,52f8 <_free_r+0xc4>
    52c4:	29000217 	ldw	r4,8(r5)
    52c8:	10c5883a 	add	r2,r2,r3
    52cc:	00c00074 	movhi	r3,1
    52d0:	18fe8404 	addi	r3,r3,-1520
    52d4:	20c07526 	beq	r4,r3,54ac <_free_r+0x278>
    52d8:	29c00317 	ldw	r7,12(r5)
    52dc:	11400054 	ori	r5,r2,1
    52e0:	3087883a 	add	r3,r6,r2
    52e4:	21c00315 	stw	r7,12(r4)
    52e8:	39000215 	stw	r4,8(r7)
    52ec:	31400115 	stw	r5,4(r6)
    52f0:	18800015 	stw	r2,0(r3)
    52f4:	00000406 	br	5308 <_free_r+0xd4>
    52f8:	10c00054 	ori	r3,r2,1
    52fc:	30c00115 	stw	r3,4(r6)
    5300:	3087883a 	add	r3,r6,r2
    5304:	18800015 	stw	r2,0(r3)
    5308:	00c07fc4 	movi	r3,511
    530c:	18801736 	bltu	r3,r2,536c <_free_r+0x138>
    5310:	1004d0fa 	srli	r2,r2,3
    5314:	01400044 	movi	r5,1
    5318:	49000117 	ldw	r4,4(r9)
    531c:	1087883a 	add	r3,r2,r2
    5320:	18c7883a 	add	r3,r3,r3
    5324:	1005d0ba 	srai	r2,r2,2
    5328:	18c7883a 	add	r3,r3,r3
    532c:	1a47883a 	add	r3,r3,r9
    5330:	19c00217 	ldw	r7,8(r3)
    5334:	2884983a 	sll	r2,r5,r2
    5338:	30c00315 	stw	r3,12(r6)
    533c:	31c00215 	stw	r7,8(r6)
    5340:	1104b03a 	or	r2,r2,r4
    5344:	19800215 	stw	r6,8(r3)
    5348:	48800115 	stw	r2,4(r9)
    534c:	39800315 	stw	r6,12(r7)
    5350:	8809883a 	mov	r4,r17
    5354:	dfc00217 	ldw	ra,8(sp)
    5358:	dc400117 	ldw	r17,4(sp)
    535c:	dc000017 	ldw	r16,0(sp)
    5360:	dec00304 	addi	sp,sp,12
    5364:	000d5981 	jmpi	d598 <__malloc_unlock>
    5368:	f800283a 	ret
    536c:	1006d27a 	srli	r3,r2,9
    5370:	01000104 	movi	r4,4
    5374:	20c04036 	bltu	r4,r3,5478 <_free_r+0x244>
    5378:	1006d1ba 	srli	r3,r2,6
    537c:	19400e04 	addi	r5,r3,56
    5380:	2947883a 	add	r3,r5,r5
    5384:	18c7883a 	add	r3,r3,r3
    5388:	18c7883a 	add	r3,r3,r3
    538c:	1a49883a 	add	r4,r3,r9
    5390:	20c00217 	ldw	r3,8(r4)
    5394:	01c00074 	movhi	r7,1
    5398:	39fe8204 	addi	r7,r7,-1528
    539c:	19003b26 	beq	r3,r4,548c <_free_r+0x258>
    53a0:	01ffff04 	movi	r7,-4
    53a4:	19400117 	ldw	r5,4(r3)
    53a8:	29ca703a 	and	r5,r5,r7
    53ac:	1140022e 	bgeu	r2,r5,53b8 <_free_r+0x184>
    53b0:	18c00217 	ldw	r3,8(r3)
    53b4:	20fffb1e 	bne	r4,r3,53a4 <__alt_data_end+0xfffe6b5c>
    53b8:	18800317 	ldw	r2,12(r3)
    53bc:	30800315 	stw	r2,12(r6)
    53c0:	30c00215 	stw	r3,8(r6)
    53c4:	11800215 	stw	r6,8(r2)
    53c8:	19800315 	stw	r6,12(r3)
    53cc:	003fe006 	br	5350 <__alt_data_end+0xfffe6b08>
    53d0:	2100004c 	andi	r4,r4,1
    53d4:	1885883a 	add	r2,r3,r2
    53d8:	2000071e 	bne	r4,zero,53f8 <_free_r+0x1c4>
    53dc:	817ffe17 	ldw	r5,-8(r16)
    53e0:	314dc83a 	sub	r6,r6,r5
    53e4:	30c00317 	ldw	r3,12(r6)
    53e8:	31000217 	ldw	r4,8(r6)
    53ec:	1145883a 	add	r2,r2,r5
    53f0:	20c00315 	stw	r3,12(r4)
    53f4:	19000215 	stw	r4,8(r3)
    53f8:	10c00054 	ori	r3,r2,1
    53fc:	30c00115 	stw	r3,4(r6)
    5400:	00c00074 	movhi	r3,1
    5404:	18c52e04 	addi	r3,r3,5304
    5408:	18c00017 	ldw	r3,0(r3)
    540c:	49800215 	stw	r6,8(r9)
    5410:	10ffcf36 	bltu	r2,r3,5350 <__alt_data_end+0xfffe6b08>
    5414:	00800074 	movhi	r2,1
    5418:	108bfa04 	addi	r2,r2,12264
    541c:	11400017 	ldw	r5,0(r2)
    5420:	8809883a 	mov	r4,r17
    5424:	00051100 	call	5110 <_malloc_trim_r>
    5428:	003fc906 	br	5350 <__alt_data_end+0xfffe6b08>
    542c:	28c9883a 	add	r4,r5,r3
    5430:	21000117 	ldw	r4,4(r4)
    5434:	2100004c 	andi	r4,r4,1
    5438:	20000a1e 	bne	r4,zero,5464 <_free_r+0x230>
    543c:	29000317 	ldw	r4,12(r5)
    5440:	29400217 	ldw	r5,8(r5)
    5444:	10c5883a 	add	r2,r2,r3
    5448:	10c00054 	ori	r3,r2,1
    544c:	29000315 	stw	r4,12(r5)
    5450:	21400215 	stw	r5,8(r4)
    5454:	30c00115 	stw	r3,4(r6)
    5458:	308d883a 	add	r6,r6,r2
    545c:	30800015 	stw	r2,0(r6)
    5460:	003fbb06 	br	5350 <__alt_data_end+0xfffe6b08>
    5464:	10c00054 	ori	r3,r2,1
    5468:	30c00115 	stw	r3,4(r6)
    546c:	308d883a 	add	r6,r6,r2
    5470:	30800015 	stw	r2,0(r6)
    5474:	003fb606 	br	5350 <__alt_data_end+0xfffe6b08>
    5478:	01000504 	movi	r4,20
    547c:	20c01436 	bltu	r4,r3,54d0 <_free_r+0x29c>
    5480:	194016c4 	addi	r5,r3,91
    5484:	2947883a 	add	r3,r5,r5
    5488:	003fbe06 	br	5384 <__alt_data_end+0xfffe6b3c>
    548c:	280bd0ba 	srai	r5,r5,2
    5490:	00800044 	movi	r2,1
    5494:	39000117 	ldw	r4,4(r7)
    5498:	114a983a 	sll	r5,r2,r5
    549c:	1805883a 	mov	r2,r3
    54a0:	2908b03a 	or	r4,r5,r4
    54a4:	39000115 	stw	r4,4(r7)
    54a8:	003fc406 	br	53bc <__alt_data_end+0xfffe6b74>
    54ac:	49800515 	stw	r6,20(r9)
    54b0:	49800415 	stw	r6,16(r9)
    54b4:	10c00054 	ori	r3,r2,1
    54b8:	31000315 	stw	r4,12(r6)
    54bc:	31000215 	stw	r4,8(r6)
    54c0:	30c00115 	stw	r3,4(r6)
    54c4:	308d883a 	add	r6,r6,r2
    54c8:	30800015 	stw	r2,0(r6)
    54cc:	003fa006 	br	5350 <__alt_data_end+0xfffe6b08>
    54d0:	01001504 	movi	r4,84
    54d4:	20c00436 	bltu	r4,r3,54e8 <_free_r+0x2b4>
    54d8:	1006d33a 	srli	r3,r2,12
    54dc:	19401b84 	addi	r5,r3,110
    54e0:	2947883a 	add	r3,r5,r5
    54e4:	003fa706 	br	5384 <__alt_data_end+0xfffe6b3c>
    54e8:	01005504 	movi	r4,340
    54ec:	20c00436 	bltu	r4,r3,5500 <_free_r+0x2cc>
    54f0:	1006d3fa 	srli	r3,r2,15
    54f4:	19401dc4 	addi	r5,r3,119
    54f8:	2947883a 	add	r3,r5,r5
    54fc:	003fa106 	br	5384 <__alt_data_end+0xfffe6b3c>
    5500:	01015504 	movi	r4,1364
    5504:	20c00436 	bltu	r4,r3,5518 <_free_r+0x2e4>
    5508:	1006d4ba 	srli	r3,r2,18
    550c:	19401f04 	addi	r5,r3,124
    5510:	2947883a 	add	r3,r5,r5
    5514:	003f9b06 	br	5384 <__alt_data_end+0xfffe6b3c>
    5518:	00c03f04 	movi	r3,252
    551c:	01401f84 	movi	r5,126
    5520:	003f9806 	br	5384 <__alt_data_end+0xfffe6b3c>

00005524 <_fwalk>:
    5524:	defff804 	addi	sp,sp,-32
    5528:	dd400515 	stw	r21,20(sp)
    552c:	2540b804 	addi	r21,r4,736
    5530:	dd800615 	stw	r22,24(sp)
    5534:	dd000415 	stw	r20,16(sp)
    5538:	dfc00715 	stw	ra,28(sp)
    553c:	dcc00315 	stw	r19,12(sp)
    5540:	dc800215 	stw	r18,8(sp)
    5544:	dc400115 	stw	r17,4(sp)
    5548:	dc000015 	stw	r16,0(sp)
    554c:	2829883a 	mov	r20,r5
    5550:	002d883a 	mov	r22,zero
    5554:	00050d00 	call	50d0 <__sfp_lock_acquire>
    5558:	a8001426 	beq	r21,zero,55ac <_fwalk+0x88>
    555c:	04ffffc4 	movi	r19,-1
    5560:	ac400117 	ldw	r17,4(r21)
    5564:	ac800217 	ldw	r18,8(r21)
    5568:	8c7fffc4 	addi	r17,r17,-1
    556c:	88000d16 	blt	r17,zero,55a4 <_fwalk+0x80>
    5570:	94000304 	addi	r16,r18,12
    5574:	94800384 	addi	r18,r18,14
    5578:	80c0000f 	ldh	r3,0(r16)
    557c:	8c7fffc4 	addi	r17,r17,-1
    5580:	813ffd04 	addi	r4,r16,-12
    5584:	18000426 	beq	r3,zero,5598 <_fwalk+0x74>
    5588:	90c0000f 	ldh	r3,0(r18)
    558c:	1cc00226 	beq	r3,r19,5598 <_fwalk+0x74>
    5590:	a03ee83a 	callr	r20
    5594:	b0acb03a 	or	r22,r22,r2
    5598:	84001a04 	addi	r16,r16,104
    559c:	94801a04 	addi	r18,r18,104
    55a0:	8cfff51e 	bne	r17,r19,5578 <__alt_data_end+0xfffe6d30>
    55a4:	ad400017 	ldw	r21,0(r21)
    55a8:	a83fed1e 	bne	r21,zero,5560 <__alt_data_end+0xfffe6d18>
    55ac:	00050d40 	call	50d4 <__sfp_lock_release>
    55b0:	b005883a 	mov	r2,r22
    55b4:	dfc00717 	ldw	ra,28(sp)
    55b8:	dd800617 	ldw	r22,24(sp)
    55bc:	dd400517 	ldw	r21,20(sp)
    55c0:	dd000417 	ldw	r20,16(sp)
    55c4:	dcc00317 	ldw	r19,12(sp)
    55c8:	dc800217 	ldw	r18,8(sp)
    55cc:	dc400117 	ldw	r17,4(sp)
    55d0:	dc000017 	ldw	r16,0(sp)
    55d4:	dec00804 	addi	sp,sp,32
    55d8:	f800283a 	ret

000055dc <_fwalk_reent>:
    55dc:	defff804 	addi	sp,sp,-32
    55e0:	dd400515 	stw	r21,20(sp)
    55e4:	2540b804 	addi	r21,r4,736
    55e8:	dd800615 	stw	r22,24(sp)
    55ec:	dd000415 	stw	r20,16(sp)
    55f0:	dcc00315 	stw	r19,12(sp)
    55f4:	dfc00715 	stw	ra,28(sp)
    55f8:	dc800215 	stw	r18,8(sp)
    55fc:	dc400115 	stw	r17,4(sp)
    5600:	dc000015 	stw	r16,0(sp)
    5604:	2027883a 	mov	r19,r4
    5608:	2829883a 	mov	r20,r5
    560c:	002d883a 	mov	r22,zero
    5610:	00050d00 	call	50d0 <__sfp_lock_acquire>
    5614:	a8001326 	beq	r21,zero,5664 <_fwalk_reent+0x88>
    5618:	04bfffc4 	movi	r18,-1
    561c:	ac400117 	ldw	r17,4(r21)
    5620:	ac000217 	ldw	r16,8(r21)
    5624:	8c7fffc4 	addi	r17,r17,-1
    5628:	88000c16 	blt	r17,zero,565c <_fwalk_reent+0x80>
    562c:	84000304 	addi	r16,r16,12
    5630:	80c0000f 	ldh	r3,0(r16)
    5634:	8c7fffc4 	addi	r17,r17,-1
    5638:	817ffd04 	addi	r5,r16,-12
    563c:	18000526 	beq	r3,zero,5654 <_fwalk_reent+0x78>
    5640:	80c0008f 	ldh	r3,2(r16)
    5644:	9809883a 	mov	r4,r19
    5648:	1c800226 	beq	r3,r18,5654 <_fwalk_reent+0x78>
    564c:	a03ee83a 	callr	r20
    5650:	b0acb03a 	or	r22,r22,r2
    5654:	84001a04 	addi	r16,r16,104
    5658:	8cbff51e 	bne	r17,r18,5630 <__alt_data_end+0xfffe6de8>
    565c:	ad400017 	ldw	r21,0(r21)
    5660:	a83fee1e 	bne	r21,zero,561c <__alt_data_end+0xfffe6dd4>
    5664:	00050d40 	call	50d4 <__sfp_lock_release>
    5668:	b005883a 	mov	r2,r22
    566c:	dfc00717 	ldw	ra,28(sp)
    5670:	dd800617 	ldw	r22,24(sp)
    5674:	dd400517 	ldw	r21,20(sp)
    5678:	dd000417 	ldw	r20,16(sp)
    567c:	dcc00317 	ldw	r19,12(sp)
    5680:	dc800217 	ldw	r18,8(sp)
    5684:	dc400117 	ldw	r17,4(sp)
    5688:	dc000017 	ldw	r16,0(sp)
    568c:	dec00804 	addi	sp,sp,32
    5690:	f800283a 	ret

00005694 <_setlocale_r>:
    5694:	30001b26 	beq	r6,zero,5704 <_setlocale_r+0x70>
    5698:	01400074 	movhi	r5,1
    569c:	defffe04 	addi	sp,sp,-8
    56a0:	297de104 	addi	r5,r5,-2172
    56a4:	3009883a 	mov	r4,r6
    56a8:	dc000015 	stw	r16,0(sp)
    56ac:	dfc00115 	stw	ra,4(sp)
    56b0:	3021883a 	mov	r16,r6
    56b4:	0006e680 	call	6e68 <strcmp>
    56b8:	1000061e 	bne	r2,zero,56d4 <_setlocale_r+0x40>
    56bc:	00800074 	movhi	r2,1
    56c0:	10bde004 	addi	r2,r2,-2176
    56c4:	dfc00117 	ldw	ra,4(sp)
    56c8:	dc000017 	ldw	r16,0(sp)
    56cc:	dec00204 	addi	sp,sp,8
    56d0:	f800283a 	ret
    56d4:	01400074 	movhi	r5,1
    56d8:	297de004 	addi	r5,r5,-2176
    56dc:	8009883a 	mov	r4,r16
    56e0:	0006e680 	call	6e68 <strcmp>
    56e4:	103ff526 	beq	r2,zero,56bc <__alt_data_end+0xfffe6e74>
    56e8:	01400074 	movhi	r5,1
    56ec:	297dcb04 	addi	r5,r5,-2260
    56f0:	8009883a 	mov	r4,r16
    56f4:	0006e680 	call	6e68 <strcmp>
    56f8:	103ff026 	beq	r2,zero,56bc <__alt_data_end+0xfffe6e74>
    56fc:	0005883a 	mov	r2,zero
    5700:	003ff006 	br	56c4 <__alt_data_end+0xfffe6e7c>
    5704:	00800074 	movhi	r2,1
    5708:	10bde004 	addi	r2,r2,-2176
    570c:	f800283a 	ret

00005710 <__locale_charset>:
    5710:	00800074 	movhi	r2,1
    5714:	10809504 	addi	r2,r2,596
    5718:	f800283a 	ret

0000571c <__locale_mb_cur_max>:
    571c:	00800074 	movhi	r2,1
    5720:	10853104 	addi	r2,r2,5316
    5724:	10800017 	ldw	r2,0(r2)
    5728:	f800283a 	ret

0000572c <__locale_msgcharset>:
    572c:	00800074 	movhi	r2,1
    5730:	10808d04 	addi	r2,r2,564
    5734:	f800283a 	ret

00005738 <__locale_cjk_lang>:
    5738:	0005883a 	mov	r2,zero
    573c:	f800283a 	ret

00005740 <_localeconv_r>:
    5740:	00800074 	movhi	r2,1
    5744:	10809d04 	addi	r2,r2,628
    5748:	f800283a 	ret

0000574c <setlocale>:
    574c:	00c00074 	movhi	r3,1
    5750:	18c53004 	addi	r3,r3,5312
    5754:	2005883a 	mov	r2,r4
    5758:	19000017 	ldw	r4,0(r3)
    575c:	280d883a 	mov	r6,r5
    5760:	100b883a 	mov	r5,r2
    5764:	00056941 	jmpi	5694 <_setlocale_r>

00005768 <localeconv>:
    5768:	00800074 	movhi	r2,1
    576c:	10809d04 	addi	r2,r2,628
    5770:	f800283a 	ret

00005774 <__smakebuf_r>:
    5774:	2880030b 	ldhu	r2,12(r5)
    5778:	10c0008c 	andi	r3,r2,2
    577c:	1800401e 	bne	r3,zero,5880 <__smakebuf_r+0x10c>
    5780:	deffec04 	addi	sp,sp,-80
    5784:	dc000f15 	stw	r16,60(sp)
    5788:	2821883a 	mov	r16,r5
    578c:	2940038f 	ldh	r5,14(r5)
    5790:	dc401015 	stw	r17,64(sp)
    5794:	dfc01315 	stw	ra,76(sp)
    5798:	dcc01215 	stw	r19,72(sp)
    579c:	dc801115 	stw	r18,68(sp)
    57a0:	2023883a 	mov	r17,r4
    57a4:	28001b16 	blt	r5,zero,5814 <__smakebuf_r+0xa0>
    57a8:	d80d883a 	mov	r6,sp
    57ac:	00089780 	call	8978 <_fstat_r>
    57b0:	10001716 	blt	r2,zero,5810 <__smakebuf_r+0x9c>
    57b4:	d8800117 	ldw	r2,4(sp)
    57b8:	00e00014 	movui	r3,32768
    57bc:	10bc000c 	andi	r2,r2,61440
    57c0:	10c03726 	beq	r2,r3,58a0 <__smakebuf_r+0x12c>
    57c4:	80c0030b 	ldhu	r3,12(r16)
    57c8:	18c20014 	ori	r3,r3,2048
    57cc:	80c0030d 	sth	r3,12(r16)
    57d0:	00c80004 	movi	r3,8192
    57d4:	10c03c1e 	bne	r2,r3,58c8 <__smakebuf_r+0x154>
    57d8:	8140038f 	ldh	r5,14(r16)
    57dc:	8809883a 	mov	r4,r17
    57e0:	0008e740 	call	8e74 <_isatty_r>
    57e4:	10004e26 	beq	r2,zero,5920 <__smakebuf_r+0x1ac>
    57e8:	8080030b 	ldhu	r2,12(r16)
    57ec:	04c00044 	movi	r19,1
    57f0:	80c010c4 	addi	r3,r16,67
    57f4:	14c4b03a 	or	r2,r2,r19
    57f8:	8080030d 	sth	r2,12(r16)
    57fc:	80c00015 	stw	r3,0(r16)
    5800:	80c00415 	stw	r3,16(r16)
    5804:	84c00515 	stw	r19,20(r16)
    5808:	04810004 	movi	r18,1024
    580c:	00000706 	br	582c <__smakebuf_r+0xb8>
    5810:	8080030b 	ldhu	r2,12(r16)
    5814:	10c0200c 	andi	r3,r2,128
    5818:	18001f1e 	bne	r3,zero,5898 <__smakebuf_r+0x124>
    581c:	04810004 	movi	r18,1024
    5820:	10820014 	ori	r2,r2,2048
    5824:	8080030d 	sth	r2,12(r16)
    5828:	0027883a 	mov	r19,zero
    582c:	8809883a 	mov	r4,r17
    5830:	900b883a 	mov	r5,r18
    5834:	00007000 	call	700 <_malloc_r>
    5838:	10002e26 	beq	r2,zero,58f4 <__smakebuf_r+0x180>
    583c:	80c0030b 	ldhu	r3,12(r16)
    5840:	01000034 	movhi	r4,0
    5844:	21135b04 	addi	r4,r4,19820
    5848:	89000f15 	stw	r4,60(r17)
    584c:	18c02014 	ori	r3,r3,128
    5850:	80c0030d 	sth	r3,12(r16)
    5854:	80800015 	stw	r2,0(r16)
    5858:	80800415 	stw	r2,16(r16)
    585c:	84800515 	stw	r18,20(r16)
    5860:	98001c1e 	bne	r19,zero,58d4 <__smakebuf_r+0x160>
    5864:	dfc01317 	ldw	ra,76(sp)
    5868:	dcc01217 	ldw	r19,72(sp)
    586c:	dc801117 	ldw	r18,68(sp)
    5870:	dc401017 	ldw	r17,64(sp)
    5874:	dc000f17 	ldw	r16,60(sp)
    5878:	dec01404 	addi	sp,sp,80
    587c:	f800283a 	ret
    5880:	288010c4 	addi	r2,r5,67
    5884:	28800015 	stw	r2,0(r5)
    5888:	28800415 	stw	r2,16(r5)
    588c:	00800044 	movi	r2,1
    5890:	28800515 	stw	r2,20(r5)
    5894:	f800283a 	ret
    5898:	04801004 	movi	r18,64
    589c:	003fe006 	br	5820 <__alt_data_end+0xfffe6fd8>
    58a0:	81000a17 	ldw	r4,40(r16)
    58a4:	00c00034 	movhi	r3,0
    58a8:	18db8104 	addi	r3,r3,28164
    58ac:	20ffc51e 	bne	r4,r3,57c4 <__alt_data_end+0xfffe6f7c>
    58b0:	80c0030b 	ldhu	r3,12(r16)
    58b4:	01010004 	movi	r4,1024
    58b8:	81001315 	stw	r4,76(r16)
    58bc:	1906b03a 	or	r3,r3,r4
    58c0:	80c0030d 	sth	r3,12(r16)
    58c4:	003fc206 	br	57d0 <__alt_data_end+0xfffe6f88>
    58c8:	0027883a 	mov	r19,zero
    58cc:	04810004 	movi	r18,1024
    58d0:	003fd606 	br	582c <__alt_data_end+0xfffe6fe4>
    58d4:	8140038f 	ldh	r5,14(r16)
    58d8:	8809883a 	mov	r4,r17
    58dc:	0008e740 	call	8e74 <_isatty_r>
    58e0:	103fe026 	beq	r2,zero,5864 <__alt_data_end+0xfffe701c>
    58e4:	8080030b 	ldhu	r2,12(r16)
    58e8:	10800054 	ori	r2,r2,1
    58ec:	8080030d 	sth	r2,12(r16)
    58f0:	003fdc06 	br	5864 <__alt_data_end+0xfffe701c>
    58f4:	8080030b 	ldhu	r2,12(r16)
    58f8:	10c0800c 	andi	r3,r2,512
    58fc:	183fd91e 	bne	r3,zero,5864 <__alt_data_end+0xfffe701c>
    5900:	10800094 	ori	r2,r2,2
    5904:	80c010c4 	addi	r3,r16,67
    5908:	8080030d 	sth	r2,12(r16)
    590c:	00800044 	movi	r2,1
    5910:	80c00015 	stw	r3,0(r16)
    5914:	80c00415 	stw	r3,16(r16)
    5918:	80800515 	stw	r2,20(r16)
    591c:	003fd106 	br	5864 <__alt_data_end+0xfffe701c>
    5920:	04c00044 	movi	r19,1
    5924:	04810004 	movi	r18,1024
    5928:	003fc006 	br	582c <__alt_data_end+0xfffe6fe4>

0000592c <memchr>:
    592c:	208000cc 	andi	r2,r4,3
    5930:	280f883a 	mov	r7,r5
    5934:	10003526 	beq	r2,zero,5a0c <memchr+0xe0>
    5938:	30bfffc4 	addi	r2,r6,-1
    593c:	30001b26 	beq	r6,zero,59ac <memchr+0x80>
    5940:	21800003 	ldbu	r6,0(r4)
    5944:	28c03fcc 	andi	r3,r5,255
    5948:	30c01a26 	beq	r6,r3,59b4 <memchr+0x88>
    594c:	180d883a 	mov	r6,r3
    5950:	00000406 	br	5964 <memchr+0x38>
    5954:	10001526 	beq	r2,zero,59ac <memchr+0x80>
    5958:	20c00003 	ldbu	r3,0(r4)
    595c:	10bfffc4 	addi	r2,r2,-1
    5960:	19801426 	beq	r3,r6,59b4 <memchr+0x88>
    5964:	21000044 	addi	r4,r4,1
    5968:	20c000cc 	andi	r3,r4,3
    596c:	183ff91e 	bne	r3,zero,5954 <__alt_data_end+0xfffe710c>
    5970:	024000c4 	movi	r9,3
    5974:	48801136 	bltu	r9,r2,59bc <memchr+0x90>
    5978:	10000c26 	beq	r2,zero,59ac <memchr+0x80>
    597c:	20c00003 	ldbu	r3,0(r4)
    5980:	29403fcc 	andi	r5,r5,255
    5984:	19400b26 	beq	r3,r5,59b4 <memchr+0x88>
    5988:	20c00044 	addi	r3,r4,1
    598c:	2085883a 	add	r2,r4,r2
    5990:	39803fcc 	andi	r6,r7,255
    5994:	00000306 	br	59a4 <memchr+0x78>
    5998:	18c00044 	addi	r3,r3,1
    599c:	197fffc3 	ldbu	r5,-1(r3)
    59a0:	29800426 	beq	r5,r6,59b4 <memchr+0x88>
    59a4:	1809883a 	mov	r4,r3
    59a8:	18bffb1e 	bne	r3,r2,5998 <__alt_data_end+0xfffe7150>
    59ac:	0005883a 	mov	r2,zero
    59b0:	f800283a 	ret
    59b4:	2005883a 	mov	r2,r4
    59b8:	f800283a 	ret
    59bc:	28c03fcc 	andi	r3,r5,255
    59c0:	1810923a 	slli	r8,r3,8
    59c4:	02ffbff4 	movhi	r11,65279
    59c8:	02a02074 	movhi	r10,32897
    59cc:	40c6b03a 	or	r3,r8,r3
    59d0:	1810943a 	slli	r8,r3,16
    59d4:	5affbfc4 	addi	r11,r11,-257
    59d8:	52a02004 	addi	r10,r10,-32640
    59dc:	40d0b03a 	or	r8,r8,r3
    59e0:	20c00017 	ldw	r3,0(r4)
    59e4:	40c6f03a 	xor	r3,r8,r3
    59e8:	1acd883a 	add	r6,r3,r11
    59ec:	00c6303a 	nor	r3,zero,r3
    59f0:	30c6703a 	and	r3,r6,r3
    59f4:	1a86703a 	and	r3,r3,r10
    59f8:	183fdf1e 	bne	r3,zero,5978 <__alt_data_end+0xfffe7130>
    59fc:	10bfff04 	addi	r2,r2,-4
    5a00:	21000104 	addi	r4,r4,4
    5a04:	48bff636 	bltu	r9,r2,59e0 <__alt_data_end+0xfffe7198>
    5a08:	003fdb06 	br	5978 <__alt_data_end+0xfffe7130>
    5a0c:	3005883a 	mov	r2,r6
    5a10:	003fd706 	br	5970 <__alt_data_end+0xfffe7128>

00005a14 <memcpy>:
    5a14:	deffff04 	addi	sp,sp,-4
    5a18:	dc000015 	stw	r16,0(sp)
    5a1c:	00c003c4 	movi	r3,15
    5a20:	2005883a 	mov	r2,r4
    5a24:	1980432e 	bgeu	r3,r6,5b34 <memcpy+0x120>
    5a28:	2146b03a 	or	r3,r4,r5
    5a2c:	18c000cc 	andi	r3,r3,3
    5a30:	1800421e 	bne	r3,zero,5b3c <memcpy+0x128>
    5a34:	343ffc04 	addi	r16,r6,-16
    5a38:	8020d13a 	srli	r16,r16,4
    5a3c:	28c00104 	addi	r3,r5,4
    5a40:	23400104 	addi	r13,r4,4
    5a44:	801e913a 	slli	r15,r16,4
    5a48:	2b000204 	addi	r12,r5,8
    5a4c:	22c00204 	addi	r11,r4,8
    5a50:	7bc00504 	addi	r15,r15,20
    5a54:	2a800304 	addi	r10,r5,12
    5a58:	22400304 	addi	r9,r4,12
    5a5c:	2bdf883a 	add	r15,r5,r15
    5a60:	2811883a 	mov	r8,r5
    5a64:	200f883a 	mov	r7,r4
    5a68:	41000017 	ldw	r4,0(r8)
    5a6c:	39c00404 	addi	r7,r7,16
    5a70:	18c00404 	addi	r3,r3,16
    5a74:	393ffc15 	stw	r4,-16(r7)
    5a78:	1bbffc17 	ldw	r14,-16(r3)
    5a7c:	6b400404 	addi	r13,r13,16
    5a80:	5ac00404 	addi	r11,r11,16
    5a84:	6bbffc15 	stw	r14,-16(r13)
    5a88:	63800017 	ldw	r14,0(r12)
    5a8c:	4a400404 	addi	r9,r9,16
    5a90:	42000404 	addi	r8,r8,16
    5a94:	5bbffc15 	stw	r14,-16(r11)
    5a98:	53800017 	ldw	r14,0(r10)
    5a9c:	63000404 	addi	r12,r12,16
    5aa0:	52800404 	addi	r10,r10,16
    5aa4:	4bbffc15 	stw	r14,-16(r9)
    5aa8:	1bffef1e 	bne	r3,r15,5a68 <__alt_data_end+0xfffe7220>
    5aac:	81c00044 	addi	r7,r16,1
    5ab0:	380e913a 	slli	r7,r7,4
    5ab4:	310003cc 	andi	r4,r6,15
    5ab8:	02c000c4 	movi	r11,3
    5abc:	11c7883a 	add	r3,r2,r7
    5ac0:	29cb883a 	add	r5,r5,r7
    5ac4:	59001f2e 	bgeu	r11,r4,5b44 <memcpy+0x130>
    5ac8:	1813883a 	mov	r9,r3
    5acc:	2811883a 	mov	r8,r5
    5ad0:	200f883a 	mov	r7,r4
    5ad4:	42800017 	ldw	r10,0(r8)
    5ad8:	4a400104 	addi	r9,r9,4
    5adc:	39ffff04 	addi	r7,r7,-4
    5ae0:	4abfff15 	stw	r10,-4(r9)
    5ae4:	42000104 	addi	r8,r8,4
    5ae8:	59fffa36 	bltu	r11,r7,5ad4 <__alt_data_end+0xfffe728c>
    5aec:	213fff04 	addi	r4,r4,-4
    5af0:	2008d0ba 	srli	r4,r4,2
    5af4:	318000cc 	andi	r6,r6,3
    5af8:	21000044 	addi	r4,r4,1
    5afc:	2109883a 	add	r4,r4,r4
    5b00:	2109883a 	add	r4,r4,r4
    5b04:	1907883a 	add	r3,r3,r4
    5b08:	290b883a 	add	r5,r5,r4
    5b0c:	30000626 	beq	r6,zero,5b28 <memcpy+0x114>
    5b10:	198d883a 	add	r6,r3,r6
    5b14:	29c00003 	ldbu	r7,0(r5)
    5b18:	18c00044 	addi	r3,r3,1
    5b1c:	29400044 	addi	r5,r5,1
    5b20:	19ffffc5 	stb	r7,-1(r3)
    5b24:	19bffb1e 	bne	r3,r6,5b14 <__alt_data_end+0xfffe72cc>
    5b28:	dc000017 	ldw	r16,0(sp)
    5b2c:	dec00104 	addi	sp,sp,4
    5b30:	f800283a 	ret
    5b34:	2007883a 	mov	r3,r4
    5b38:	003ff406 	br	5b0c <__alt_data_end+0xfffe72c4>
    5b3c:	2007883a 	mov	r3,r4
    5b40:	003ff306 	br	5b10 <__alt_data_end+0xfffe72c8>
    5b44:	200d883a 	mov	r6,r4
    5b48:	003ff006 	br	5b0c <__alt_data_end+0xfffe72c4>

00005b4c <memset>:
    5b4c:	20c000cc 	andi	r3,r4,3
    5b50:	2005883a 	mov	r2,r4
    5b54:	18004326 	beq	r3,zero,5c64 <memset+0x118>
    5b58:	31ffffc4 	addi	r7,r6,-1
    5b5c:	30004026 	beq	r6,zero,5c60 <memset+0x114>
    5b60:	2813883a 	mov	r9,r5
    5b64:	200d883a 	mov	r6,r4
    5b68:	2007883a 	mov	r3,r4
    5b6c:	00000406 	br	5b80 <memset+0x34>
    5b70:	3a3fffc4 	addi	r8,r7,-1
    5b74:	31800044 	addi	r6,r6,1
    5b78:	38003926 	beq	r7,zero,5c60 <memset+0x114>
    5b7c:	400f883a 	mov	r7,r8
    5b80:	18c00044 	addi	r3,r3,1
    5b84:	32400005 	stb	r9,0(r6)
    5b88:	1a0000cc 	andi	r8,r3,3
    5b8c:	403ff81e 	bne	r8,zero,5b70 <__alt_data_end+0xfffe7328>
    5b90:	010000c4 	movi	r4,3
    5b94:	21c02d2e 	bgeu	r4,r7,5c4c <memset+0x100>
    5b98:	29803fcc 	andi	r6,r5,255
    5b9c:	3008923a 	slli	r4,r6,8
    5ba0:	218cb03a 	or	r6,r4,r6
    5ba4:	3008943a 	slli	r4,r6,16
    5ba8:	218cb03a 	or	r6,r4,r6
    5bac:	010003c4 	movi	r4,15
    5bb0:	21c0182e 	bgeu	r4,r7,5c14 <memset+0xc8>
    5bb4:	3b3ffc04 	addi	r12,r7,-16
    5bb8:	6018d13a 	srli	r12,r12,4
    5bbc:	1a000104 	addi	r8,r3,4
    5bc0:	1ac00204 	addi	r11,r3,8
    5bc4:	6008913a 	slli	r4,r12,4
    5bc8:	1a800304 	addi	r10,r3,12
    5bcc:	1813883a 	mov	r9,r3
    5bd0:	21000504 	addi	r4,r4,20
    5bd4:	1909883a 	add	r4,r3,r4
    5bd8:	49800015 	stw	r6,0(r9)
    5bdc:	41800015 	stw	r6,0(r8)
    5be0:	59800015 	stw	r6,0(r11)
    5be4:	51800015 	stw	r6,0(r10)
    5be8:	42000404 	addi	r8,r8,16
    5bec:	4a400404 	addi	r9,r9,16
    5bf0:	5ac00404 	addi	r11,r11,16
    5bf4:	52800404 	addi	r10,r10,16
    5bf8:	413ff71e 	bne	r8,r4,5bd8 <__alt_data_end+0xfffe7390>
    5bfc:	63000044 	addi	r12,r12,1
    5c00:	6018913a 	slli	r12,r12,4
    5c04:	39c003cc 	andi	r7,r7,15
    5c08:	010000c4 	movi	r4,3
    5c0c:	1b07883a 	add	r3,r3,r12
    5c10:	21c00e2e 	bgeu	r4,r7,5c4c <memset+0x100>
    5c14:	1813883a 	mov	r9,r3
    5c18:	3811883a 	mov	r8,r7
    5c1c:	010000c4 	movi	r4,3
    5c20:	49800015 	stw	r6,0(r9)
    5c24:	423fff04 	addi	r8,r8,-4
    5c28:	4a400104 	addi	r9,r9,4
    5c2c:	223ffc36 	bltu	r4,r8,5c20 <__alt_data_end+0xfffe73d8>
    5c30:	393fff04 	addi	r4,r7,-4
    5c34:	2008d0ba 	srli	r4,r4,2
    5c38:	39c000cc 	andi	r7,r7,3
    5c3c:	21000044 	addi	r4,r4,1
    5c40:	2109883a 	add	r4,r4,r4
    5c44:	2109883a 	add	r4,r4,r4
    5c48:	1907883a 	add	r3,r3,r4
    5c4c:	38000426 	beq	r7,zero,5c60 <memset+0x114>
    5c50:	19cf883a 	add	r7,r3,r7
    5c54:	19400005 	stb	r5,0(r3)
    5c58:	18c00044 	addi	r3,r3,1
    5c5c:	19fffd1e 	bne	r3,r7,5c54 <__alt_data_end+0xfffe740c>
    5c60:	f800283a 	ret
    5c64:	2007883a 	mov	r3,r4
    5c68:	300f883a 	mov	r7,r6
    5c6c:	003fc806 	br	5b90 <__alt_data_end+0xfffe7348>

00005c70 <_Balloc>:
    5c70:	20801317 	ldw	r2,76(r4)
    5c74:	defffc04 	addi	sp,sp,-16
    5c78:	dc400115 	stw	r17,4(sp)
    5c7c:	dc000015 	stw	r16,0(sp)
    5c80:	dfc00315 	stw	ra,12(sp)
    5c84:	dc800215 	stw	r18,8(sp)
    5c88:	2023883a 	mov	r17,r4
    5c8c:	2821883a 	mov	r16,r5
    5c90:	10000f26 	beq	r2,zero,5cd0 <_Balloc+0x60>
    5c94:	8407883a 	add	r3,r16,r16
    5c98:	18c7883a 	add	r3,r3,r3
    5c9c:	10c7883a 	add	r3,r2,r3
    5ca0:	18800017 	ldw	r2,0(r3)
    5ca4:	10001126 	beq	r2,zero,5cec <_Balloc+0x7c>
    5ca8:	11000017 	ldw	r4,0(r2)
    5cac:	19000015 	stw	r4,0(r3)
    5cb0:	10000415 	stw	zero,16(r2)
    5cb4:	10000315 	stw	zero,12(r2)
    5cb8:	dfc00317 	ldw	ra,12(sp)
    5cbc:	dc800217 	ldw	r18,8(sp)
    5cc0:	dc400117 	ldw	r17,4(sp)
    5cc4:	dc000017 	ldw	r16,0(sp)
    5cc8:	dec00404 	addi	sp,sp,16
    5ccc:	f800283a 	ret
    5cd0:	01400104 	movi	r5,4
    5cd4:	01800844 	movi	r6,33
    5cd8:	00085b00 	call	85b0 <_calloc_r>
    5cdc:	88801315 	stw	r2,76(r17)
    5ce0:	103fec1e 	bne	r2,zero,5c94 <__alt_data_end+0xfffe744c>
    5ce4:	0005883a 	mov	r2,zero
    5ce8:	003ff306 	br	5cb8 <__alt_data_end+0xfffe7470>
    5cec:	01400044 	movi	r5,1
    5cf0:	2c24983a 	sll	r18,r5,r16
    5cf4:	8809883a 	mov	r4,r17
    5cf8:	91800144 	addi	r6,r18,5
    5cfc:	318d883a 	add	r6,r6,r6
    5d00:	318d883a 	add	r6,r6,r6
    5d04:	00085b00 	call	85b0 <_calloc_r>
    5d08:	103ff626 	beq	r2,zero,5ce4 <__alt_data_end+0xfffe749c>
    5d0c:	14000115 	stw	r16,4(r2)
    5d10:	14800215 	stw	r18,8(r2)
    5d14:	003fe606 	br	5cb0 <__alt_data_end+0xfffe7468>

00005d18 <_Bfree>:
    5d18:	28000826 	beq	r5,zero,5d3c <_Bfree+0x24>
    5d1c:	28c00117 	ldw	r3,4(r5)
    5d20:	20801317 	ldw	r2,76(r4)
    5d24:	18c7883a 	add	r3,r3,r3
    5d28:	18c7883a 	add	r3,r3,r3
    5d2c:	10c5883a 	add	r2,r2,r3
    5d30:	10c00017 	ldw	r3,0(r2)
    5d34:	28c00015 	stw	r3,0(r5)
    5d38:	11400015 	stw	r5,0(r2)
    5d3c:	f800283a 	ret

00005d40 <__multadd>:
    5d40:	defff704 	addi	sp,sp,-36
    5d44:	dc800215 	stw	r18,8(sp)
    5d48:	2c800417 	ldw	r18,16(r5)
    5d4c:	ddc00715 	stw	r23,28(sp)
    5d50:	dd800615 	stw	r22,24(sp)
    5d54:	dd000415 	stw	r20,16(sp)
    5d58:	dcc00315 	stw	r19,12(sp)
    5d5c:	dc400115 	stw	r17,4(sp)
    5d60:	dc000015 	stw	r16,0(sp)
    5d64:	dfc00815 	stw	ra,32(sp)
    5d68:	dd400515 	stw	r21,20(sp)
    5d6c:	2827883a 	mov	r19,r5
    5d70:	2029883a 	mov	r20,r4
    5d74:	3023883a 	mov	r17,r6
    5d78:	3821883a 	mov	r16,r7
    5d7c:	2d800504 	addi	r22,r5,20
    5d80:	002f883a 	mov	r23,zero
    5d84:	b5400017 	ldw	r21,0(r22)
    5d88:	880b883a 	mov	r5,r17
    5d8c:	bdc00044 	addi	r23,r23,1
    5d90:	a93fffcc 	andi	r4,r21,65535
    5d94:	000a7740 	call	a774 <__mulsi3>
    5d98:	1421883a 	add	r16,r2,r16
    5d9c:	a808d43a 	srli	r4,r21,16
    5da0:	802ad43a 	srli	r21,r16,16
    5da4:	880b883a 	mov	r5,r17
    5da8:	000a7740 	call	a774 <__mulsi3>
    5dac:	a88f883a 	add	r7,r21,r2
    5db0:	3804943a 	slli	r2,r7,16
    5db4:	80ffffcc 	andi	r3,r16,65535
    5db8:	b5800104 	addi	r22,r22,4
    5dbc:	10c7883a 	add	r3,r2,r3
    5dc0:	b0ffff15 	stw	r3,-4(r22)
    5dc4:	3820d43a 	srli	r16,r7,16
    5dc8:	bcbfee16 	blt	r23,r18,5d84 <__alt_data_end+0xfffe753c>
    5dcc:	80000926 	beq	r16,zero,5df4 <__multadd+0xb4>
    5dd0:	98800217 	ldw	r2,8(r19)
    5dd4:	9080130e 	bge	r18,r2,5e24 <__multadd+0xe4>
    5dd8:	90800144 	addi	r2,r18,5
    5ddc:	1085883a 	add	r2,r2,r2
    5de0:	1085883a 	add	r2,r2,r2
    5de4:	9885883a 	add	r2,r19,r2
    5de8:	14000015 	stw	r16,0(r2)
    5dec:	94800044 	addi	r18,r18,1
    5df0:	9c800415 	stw	r18,16(r19)
    5df4:	9805883a 	mov	r2,r19
    5df8:	dfc00817 	ldw	ra,32(sp)
    5dfc:	ddc00717 	ldw	r23,28(sp)
    5e00:	dd800617 	ldw	r22,24(sp)
    5e04:	dd400517 	ldw	r21,20(sp)
    5e08:	dd000417 	ldw	r20,16(sp)
    5e0c:	dcc00317 	ldw	r19,12(sp)
    5e10:	dc800217 	ldw	r18,8(sp)
    5e14:	dc400117 	ldw	r17,4(sp)
    5e18:	dc000017 	ldw	r16,0(sp)
    5e1c:	dec00904 	addi	sp,sp,36
    5e20:	f800283a 	ret
    5e24:	99400117 	ldw	r5,4(r19)
    5e28:	a009883a 	mov	r4,r20
    5e2c:	29400044 	addi	r5,r5,1
    5e30:	0005c700 	call	5c70 <_Balloc>
    5e34:	99800417 	ldw	r6,16(r19)
    5e38:	99400304 	addi	r5,r19,12
    5e3c:	11000304 	addi	r4,r2,12
    5e40:	31800084 	addi	r6,r6,2
    5e44:	318d883a 	add	r6,r6,r6
    5e48:	318d883a 	add	r6,r6,r6
    5e4c:	1023883a 	mov	r17,r2
    5e50:	0005a140 	call	5a14 <memcpy>
    5e54:	99000117 	ldw	r4,4(r19)
    5e58:	a0c01317 	ldw	r3,76(r20)
    5e5c:	2109883a 	add	r4,r4,r4
    5e60:	2109883a 	add	r4,r4,r4
    5e64:	1907883a 	add	r3,r3,r4
    5e68:	18800017 	ldw	r2,0(r3)
    5e6c:	98800015 	stw	r2,0(r19)
    5e70:	1cc00015 	stw	r19,0(r3)
    5e74:	8827883a 	mov	r19,r17
    5e78:	003fd706 	br	5dd8 <__alt_data_end+0xfffe7590>

00005e7c <__s2b>:
    5e7c:	defff904 	addi	sp,sp,-28
    5e80:	dc400115 	stw	r17,4(sp)
    5e84:	dc000015 	stw	r16,0(sp)
    5e88:	2023883a 	mov	r17,r4
    5e8c:	2821883a 	mov	r16,r5
    5e90:	39000204 	addi	r4,r7,8
    5e94:	01400244 	movi	r5,9
    5e98:	dcc00315 	stw	r19,12(sp)
    5e9c:	dc800215 	stw	r18,8(sp)
    5ea0:	dfc00615 	stw	ra,24(sp)
    5ea4:	dd400515 	stw	r21,20(sp)
    5ea8:	dd000415 	stw	r20,16(sp)
    5eac:	3825883a 	mov	r18,r7
    5eb0:	3027883a 	mov	r19,r6
    5eb4:	000a6b40 	call	a6b4 <__divsi3>
    5eb8:	00c00044 	movi	r3,1
    5ebc:	000b883a 	mov	r5,zero
    5ec0:	1880030e 	bge	r3,r2,5ed0 <__s2b+0x54>
    5ec4:	18c7883a 	add	r3,r3,r3
    5ec8:	29400044 	addi	r5,r5,1
    5ecc:	18bffd16 	blt	r3,r2,5ec4 <__alt_data_end+0xfffe767c>
    5ed0:	8809883a 	mov	r4,r17
    5ed4:	0005c700 	call	5c70 <_Balloc>
    5ed8:	d8c00717 	ldw	r3,28(sp)
    5edc:	10c00515 	stw	r3,20(r2)
    5ee0:	00c00044 	movi	r3,1
    5ee4:	10c00415 	stw	r3,16(r2)
    5ee8:	00c00244 	movi	r3,9
    5eec:	1cc0210e 	bge	r3,r19,5f74 <__s2b+0xf8>
    5ef0:	80eb883a 	add	r21,r16,r3
    5ef4:	a829883a 	mov	r20,r21
    5ef8:	84e1883a 	add	r16,r16,r19
    5efc:	a1c00007 	ldb	r7,0(r20)
    5f00:	8809883a 	mov	r4,r17
    5f04:	a5000044 	addi	r20,r20,1
    5f08:	100b883a 	mov	r5,r2
    5f0c:	01800284 	movi	r6,10
    5f10:	39fff404 	addi	r7,r7,-48
    5f14:	0005d400 	call	5d40 <__multadd>
    5f18:	a43ff81e 	bne	r20,r16,5efc <__alt_data_end+0xfffe76b4>
    5f1c:	ace1883a 	add	r16,r21,r19
    5f20:	843ffe04 	addi	r16,r16,-8
    5f24:	9c800a0e 	bge	r19,r18,5f50 <__s2b+0xd4>
    5f28:	94e5c83a 	sub	r18,r18,r19
    5f2c:	84a5883a 	add	r18,r16,r18
    5f30:	81c00007 	ldb	r7,0(r16)
    5f34:	8809883a 	mov	r4,r17
    5f38:	84000044 	addi	r16,r16,1
    5f3c:	100b883a 	mov	r5,r2
    5f40:	01800284 	movi	r6,10
    5f44:	39fff404 	addi	r7,r7,-48
    5f48:	0005d400 	call	5d40 <__multadd>
    5f4c:	84bff81e 	bne	r16,r18,5f30 <__alt_data_end+0xfffe76e8>
    5f50:	dfc00617 	ldw	ra,24(sp)
    5f54:	dd400517 	ldw	r21,20(sp)
    5f58:	dd000417 	ldw	r20,16(sp)
    5f5c:	dcc00317 	ldw	r19,12(sp)
    5f60:	dc800217 	ldw	r18,8(sp)
    5f64:	dc400117 	ldw	r17,4(sp)
    5f68:	dc000017 	ldw	r16,0(sp)
    5f6c:	dec00704 	addi	sp,sp,28
    5f70:	f800283a 	ret
    5f74:	84000284 	addi	r16,r16,10
    5f78:	1827883a 	mov	r19,r3
    5f7c:	003fe906 	br	5f24 <__alt_data_end+0xfffe76dc>

00005f80 <__hi0bits>:
    5f80:	20bfffec 	andhi	r2,r4,65535
    5f84:	1000141e 	bne	r2,zero,5fd8 <__hi0bits+0x58>
    5f88:	2008943a 	slli	r4,r4,16
    5f8c:	00800404 	movi	r2,16
    5f90:	20ffc02c 	andhi	r3,r4,65280
    5f94:	1800021e 	bne	r3,zero,5fa0 <__hi0bits+0x20>
    5f98:	2008923a 	slli	r4,r4,8
    5f9c:	10800204 	addi	r2,r2,8
    5fa0:	20fc002c 	andhi	r3,r4,61440
    5fa4:	1800021e 	bne	r3,zero,5fb0 <__hi0bits+0x30>
    5fa8:	2008913a 	slli	r4,r4,4
    5fac:	10800104 	addi	r2,r2,4
    5fb0:	20f0002c 	andhi	r3,r4,49152
    5fb4:	1800031e 	bne	r3,zero,5fc4 <__hi0bits+0x44>
    5fb8:	2109883a 	add	r4,r4,r4
    5fbc:	10800084 	addi	r2,r2,2
    5fc0:	2109883a 	add	r4,r4,r4
    5fc4:	20000316 	blt	r4,zero,5fd4 <__hi0bits+0x54>
    5fc8:	2110002c 	andhi	r4,r4,16384
    5fcc:	2000041e 	bne	r4,zero,5fe0 <__hi0bits+0x60>
    5fd0:	00800804 	movi	r2,32
    5fd4:	f800283a 	ret
    5fd8:	0005883a 	mov	r2,zero
    5fdc:	003fec06 	br	5f90 <__alt_data_end+0xfffe7748>
    5fe0:	10800044 	addi	r2,r2,1
    5fe4:	f800283a 	ret

00005fe8 <__lo0bits>:
    5fe8:	20c00017 	ldw	r3,0(r4)
    5fec:	188001cc 	andi	r2,r3,7
    5ff0:	10000826 	beq	r2,zero,6014 <__lo0bits+0x2c>
    5ff4:	1880004c 	andi	r2,r3,1
    5ff8:	1000211e 	bne	r2,zero,6080 <__lo0bits+0x98>
    5ffc:	1880008c 	andi	r2,r3,2
    6000:	1000211e 	bne	r2,zero,6088 <__lo0bits+0xa0>
    6004:	1806d0ba 	srli	r3,r3,2
    6008:	00800084 	movi	r2,2
    600c:	20c00015 	stw	r3,0(r4)
    6010:	f800283a 	ret
    6014:	18bfffcc 	andi	r2,r3,65535
    6018:	10001326 	beq	r2,zero,6068 <__lo0bits+0x80>
    601c:	0005883a 	mov	r2,zero
    6020:	19403fcc 	andi	r5,r3,255
    6024:	2800021e 	bne	r5,zero,6030 <__lo0bits+0x48>
    6028:	1806d23a 	srli	r3,r3,8
    602c:	10800204 	addi	r2,r2,8
    6030:	194003cc 	andi	r5,r3,15
    6034:	2800021e 	bne	r5,zero,6040 <__lo0bits+0x58>
    6038:	1806d13a 	srli	r3,r3,4
    603c:	10800104 	addi	r2,r2,4
    6040:	194000cc 	andi	r5,r3,3
    6044:	2800021e 	bne	r5,zero,6050 <__lo0bits+0x68>
    6048:	1806d0ba 	srli	r3,r3,2
    604c:	10800084 	addi	r2,r2,2
    6050:	1940004c 	andi	r5,r3,1
    6054:	2800081e 	bne	r5,zero,6078 <__lo0bits+0x90>
    6058:	1806d07a 	srli	r3,r3,1
    605c:	1800051e 	bne	r3,zero,6074 <__lo0bits+0x8c>
    6060:	00800804 	movi	r2,32
    6064:	f800283a 	ret
    6068:	1806d43a 	srli	r3,r3,16
    606c:	00800404 	movi	r2,16
    6070:	003feb06 	br	6020 <__alt_data_end+0xfffe77d8>
    6074:	10800044 	addi	r2,r2,1
    6078:	20c00015 	stw	r3,0(r4)
    607c:	f800283a 	ret
    6080:	0005883a 	mov	r2,zero
    6084:	f800283a 	ret
    6088:	1806d07a 	srli	r3,r3,1
    608c:	00800044 	movi	r2,1
    6090:	20c00015 	stw	r3,0(r4)
    6094:	f800283a 	ret

00006098 <__i2b>:
    6098:	defffd04 	addi	sp,sp,-12
    609c:	dc000015 	stw	r16,0(sp)
    60a0:	04000044 	movi	r16,1
    60a4:	dc400115 	stw	r17,4(sp)
    60a8:	2823883a 	mov	r17,r5
    60ac:	800b883a 	mov	r5,r16
    60b0:	dfc00215 	stw	ra,8(sp)
    60b4:	0005c700 	call	5c70 <_Balloc>
    60b8:	14400515 	stw	r17,20(r2)
    60bc:	14000415 	stw	r16,16(r2)
    60c0:	dfc00217 	ldw	ra,8(sp)
    60c4:	dc400117 	ldw	r17,4(sp)
    60c8:	dc000017 	ldw	r16,0(sp)
    60cc:	dec00304 	addi	sp,sp,12
    60d0:	f800283a 	ret

000060d4 <__multiply>:
    60d4:	deffef04 	addi	sp,sp,-68
    60d8:	dc400815 	stw	r17,32(sp)
    60dc:	dc000715 	stw	r16,28(sp)
    60e0:	2c400417 	ldw	r17,16(r5)
    60e4:	34000417 	ldw	r16,16(r6)
    60e8:	dd800d15 	stw	r22,52(sp)
    60ec:	dc800915 	stw	r18,36(sp)
    60f0:	dfc01015 	stw	ra,64(sp)
    60f4:	df000f15 	stw	fp,60(sp)
    60f8:	ddc00e15 	stw	r23,56(sp)
    60fc:	dd400c15 	stw	r21,48(sp)
    6100:	dd000b15 	stw	r20,44(sp)
    6104:	dcc00a15 	stw	r19,40(sp)
    6108:	2825883a 	mov	r18,r5
    610c:	302d883a 	mov	r22,r6
    6110:	8c009116 	blt	r17,r16,6358 <__multiply+0x284>
    6114:	8005883a 	mov	r2,r16
    6118:	8821883a 	mov	r16,r17
    611c:	1023883a 	mov	r17,r2
    6120:	90800217 	ldw	r2,8(r18)
    6124:	8447883a 	add	r3,r16,r17
    6128:	d8c00215 	stw	r3,8(sp)
    612c:	91400117 	ldw	r5,4(r18)
    6130:	10c0010e 	bge	r2,r3,6138 <__multiply+0x64>
    6134:	29400044 	addi	r5,r5,1
    6138:	0005c700 	call	5c70 <_Balloc>
    613c:	d8c00217 	ldw	r3,8(sp)
    6140:	d8800615 	stw	r2,24(sp)
    6144:	18eb883a 	add	r21,r3,r3
    6148:	ad6b883a 	add	r21,r21,r21
    614c:	10c00504 	addi	r3,r2,20
    6150:	1d6b883a 	add	r21,r3,r21
    6154:	d8c00115 	stw	r3,4(sp)
    6158:	dd400315 	stw	r21,12(sp)
    615c:	1805883a 	mov	r2,r3
    6160:	1d40042e 	bgeu	r3,r21,6174 <__multiply+0xa0>
    6164:	d8c00317 	ldw	r3,12(sp)
    6168:	10000015 	stw	zero,0(r2)
    616c:	10800104 	addi	r2,r2,4
    6170:	10fffc36 	bltu	r2,r3,6164 <__alt_data_end+0xfffe791c>
    6174:	8c63883a 	add	r17,r17,r17
    6178:	b5800504 	addi	r22,r22,20
    617c:	8c63883a 	add	r17,r17,r17
    6180:	94800504 	addi	r18,r18,20
    6184:	8421883a 	add	r16,r16,r16
    6188:	b463883a 	add	r17,r22,r17
    618c:	8421883a 	add	r16,r16,r16
    6190:	dd800015 	stw	r22,0(sp)
    6194:	dc800415 	stw	r18,16(sp)
    6198:	dc400515 	stw	r17,20(sp)
    619c:	9429883a 	add	r20,r18,r16
    61a0:	b4404f2e 	bgeu	r22,r17,62e0 <__multiply+0x20c>
    61a4:	d8c00017 	ldw	r3,0(sp)
    61a8:	1c800017 	ldw	r18,0(r3)
    61ac:	943fffcc 	andi	r16,r18,65535
    61b0:	80001e26 	beq	r16,zero,622c <__multiply+0x158>
    61b4:	dd800117 	ldw	r22,4(sp)
    61b8:	dd400417 	ldw	r21,16(sp)
    61bc:	0025883a 	mov	r18,zero
    61c0:	adc00017 	ldw	r23,0(r21)
    61c4:	b4c00017 	ldw	r19,0(r22)
    61c8:	800b883a 	mov	r5,r16
    61cc:	b93fffcc 	andi	r4,r23,65535
    61d0:	000a7740 	call	a774 <__mulsi3>
    61d4:	9c7fffcc 	andi	r17,r19,65535
    61d8:	8885883a 	add	r2,r17,r2
    61dc:	b808d43a 	srli	r4,r23,16
    61e0:	14a3883a 	add	r17,r2,r18
    61e4:	9826d43a 	srli	r19,r19,16
    61e8:	8824d43a 	srli	r18,r17,16
    61ec:	800b883a 	mov	r5,r16
    61f0:	000a7740 	call	a774 <__mulsi3>
    61f4:	9885883a 	add	r2,r19,r2
    61f8:	14a7883a 	add	r19,r2,r18
    61fc:	88ffffcc 	andi	r3,r17,65535
    6200:	9822943a 	slli	r17,r19,16
    6204:	ad400104 	addi	r21,r21,4
    6208:	b005883a 	mov	r2,r22
    620c:	88c6b03a 	or	r3,r17,r3
    6210:	b0c00015 	stw	r3,0(r22)
    6214:	9824d43a 	srli	r18,r19,16
    6218:	b5800104 	addi	r22,r22,4
    621c:	ad3fe836 	bltu	r21,r20,61c0 <__alt_data_end+0xfffe7978>
    6220:	d8c00017 	ldw	r3,0(sp)
    6224:	14800115 	stw	r18,4(r2)
    6228:	1c800017 	ldw	r18,0(r3)
    622c:	9024d43a 	srli	r18,r18,16
    6230:	90002226 	beq	r18,zero,62bc <__multiply+0x1e8>
    6234:	d8c00117 	ldw	r3,4(sp)
    6238:	dd800417 	ldw	r22,16(sp)
    623c:	002f883a 	mov	r23,zero
    6240:	1f000017 	ldw	fp,0(r3)
    6244:	1823883a 	mov	r17,r3
    6248:	182b883a 	mov	r21,r3
    624c:	e021883a 	mov	r16,fp
    6250:	00000106 	br	6258 <__multiply+0x184>
    6254:	982b883a 	mov	r21,r19
    6258:	b100000b 	ldhu	r4,0(r22)
    625c:	8020d43a 	srli	r16,r16,16
    6260:	900b883a 	mov	r5,r18
    6264:	000a7740 	call	a774 <__mulsi3>
    6268:	1405883a 	add	r2,r2,r16
    626c:	15ef883a 	add	r23,r2,r23
    6270:	b804943a 	slli	r2,r23,16
    6274:	e0ffffcc 	andi	r3,fp,65535
    6278:	8c400104 	addi	r17,r17,4
    627c:	10c6b03a 	or	r3,r2,r3
    6280:	88ffff15 	stw	r3,-4(r17)
    6284:	b5800104 	addi	r22,r22,4
    6288:	b13fff17 	ldw	r4,-4(r22)
    628c:	acc00104 	addi	r19,r21,4
    6290:	900b883a 	mov	r5,r18
    6294:	2008d43a 	srli	r4,r4,16
    6298:	9c000017 	ldw	r16,0(r19)
    629c:	000a7740 	call	a774 <__mulsi3>
    62a0:	b806d43a 	srli	r3,r23,16
    62a4:	813fffcc 	andi	r4,r16,65535
    62a8:	1105883a 	add	r2,r2,r4
    62ac:	10f9883a 	add	fp,r2,r3
    62b0:	e02ed43a 	srli	r23,fp,16
    62b4:	b53fe736 	bltu	r22,r20,6254 <__alt_data_end+0xfffe7a0c>
    62b8:	af000115 	stw	fp,4(r21)
    62bc:	d8c00017 	ldw	r3,0(sp)
    62c0:	d9000517 	ldw	r4,20(sp)
    62c4:	18c00104 	addi	r3,r3,4
    62c8:	d8c00015 	stw	r3,0(sp)
    62cc:	d8c00117 	ldw	r3,4(sp)
    62d0:	18c00104 	addi	r3,r3,4
    62d4:	d8c00115 	stw	r3,4(sp)
    62d8:	d8c00017 	ldw	r3,0(sp)
    62dc:	193fb136 	bltu	r3,r4,61a4 <__alt_data_end+0xfffe795c>
    62e0:	d8c00217 	ldw	r3,8(sp)
    62e4:	00c00c0e 	bge	zero,r3,6318 <__multiply+0x244>
    62e8:	d8c00317 	ldw	r3,12(sp)
    62ec:	18bfff17 	ldw	r2,-4(r3)
    62f0:	1d7fff04 	addi	r21,r3,-4
    62f4:	10000326 	beq	r2,zero,6304 <__multiply+0x230>
    62f8:	00000706 	br	6318 <__multiply+0x244>
    62fc:	a8800017 	ldw	r2,0(r21)
    6300:	1000051e 	bne	r2,zero,6318 <__multiply+0x244>
    6304:	d8c00217 	ldw	r3,8(sp)
    6308:	ad7fff04 	addi	r21,r21,-4
    630c:	18ffffc4 	addi	r3,r3,-1
    6310:	d8c00215 	stw	r3,8(sp)
    6314:	183ff91e 	bne	r3,zero,62fc <__alt_data_end+0xfffe7ab4>
    6318:	d8c00617 	ldw	r3,24(sp)
    631c:	d9000217 	ldw	r4,8(sp)
    6320:	1805883a 	mov	r2,r3
    6324:	19000415 	stw	r4,16(r3)
    6328:	dfc01017 	ldw	ra,64(sp)
    632c:	df000f17 	ldw	fp,60(sp)
    6330:	ddc00e17 	ldw	r23,56(sp)
    6334:	dd800d17 	ldw	r22,52(sp)
    6338:	dd400c17 	ldw	r21,48(sp)
    633c:	dd000b17 	ldw	r20,44(sp)
    6340:	dcc00a17 	ldw	r19,40(sp)
    6344:	dc800917 	ldw	r18,36(sp)
    6348:	dc400817 	ldw	r17,32(sp)
    634c:	dc000717 	ldw	r16,28(sp)
    6350:	dec01104 	addi	sp,sp,68
    6354:	f800283a 	ret
    6358:	3025883a 	mov	r18,r6
    635c:	282d883a 	mov	r22,r5
    6360:	003f6f06 	br	6120 <__alt_data_end+0xfffe78d8>

00006364 <__pow5mult>:
    6364:	defffa04 	addi	sp,sp,-24
    6368:	dcc00315 	stw	r19,12(sp)
    636c:	dc800215 	stw	r18,8(sp)
    6370:	dc000015 	stw	r16,0(sp)
    6374:	dfc00515 	stw	ra,20(sp)
    6378:	dd000415 	stw	r20,16(sp)
    637c:	dc400115 	stw	r17,4(sp)
    6380:	308000cc 	andi	r2,r6,3
    6384:	3021883a 	mov	r16,r6
    6388:	2027883a 	mov	r19,r4
    638c:	2825883a 	mov	r18,r5
    6390:	10002e1e 	bne	r2,zero,644c <__pow5mult+0xe8>
    6394:	8021d0ba 	srai	r16,r16,2
    6398:	80001a26 	beq	r16,zero,6404 <__pow5mult+0xa0>
    639c:	9c401217 	ldw	r17,72(r19)
    63a0:	8800061e 	bne	r17,zero,63bc <__pow5mult+0x58>
    63a4:	00003406 	br	6478 <__pow5mult+0x114>
    63a8:	8021d07a 	srai	r16,r16,1
    63ac:	80001526 	beq	r16,zero,6404 <__pow5mult+0xa0>
    63b0:	88800017 	ldw	r2,0(r17)
    63b4:	10001c26 	beq	r2,zero,6428 <__pow5mult+0xc4>
    63b8:	1023883a 	mov	r17,r2
    63bc:	80c0004c 	andi	r3,r16,1
    63c0:	183ff926 	beq	r3,zero,63a8 <__alt_data_end+0xfffe7b60>
    63c4:	900b883a 	mov	r5,r18
    63c8:	880d883a 	mov	r6,r17
    63cc:	9809883a 	mov	r4,r19
    63d0:	00060d40 	call	60d4 <__multiply>
    63d4:	90001b26 	beq	r18,zero,6444 <__pow5mult+0xe0>
    63d8:	91c00117 	ldw	r7,4(r18)
    63dc:	98c01317 	ldw	r3,76(r19)
    63e0:	8021d07a 	srai	r16,r16,1
    63e4:	39cf883a 	add	r7,r7,r7
    63e8:	39cf883a 	add	r7,r7,r7
    63ec:	19c7883a 	add	r3,r3,r7
    63f0:	19000017 	ldw	r4,0(r3)
    63f4:	91000015 	stw	r4,0(r18)
    63f8:	1c800015 	stw	r18,0(r3)
    63fc:	1025883a 	mov	r18,r2
    6400:	803feb1e 	bne	r16,zero,63b0 <__alt_data_end+0xfffe7b68>
    6404:	9005883a 	mov	r2,r18
    6408:	dfc00517 	ldw	ra,20(sp)
    640c:	dd000417 	ldw	r20,16(sp)
    6410:	dcc00317 	ldw	r19,12(sp)
    6414:	dc800217 	ldw	r18,8(sp)
    6418:	dc400117 	ldw	r17,4(sp)
    641c:	dc000017 	ldw	r16,0(sp)
    6420:	dec00604 	addi	sp,sp,24
    6424:	f800283a 	ret
    6428:	9809883a 	mov	r4,r19
    642c:	880b883a 	mov	r5,r17
    6430:	880d883a 	mov	r6,r17
    6434:	00060d40 	call	60d4 <__multiply>
    6438:	88800015 	stw	r2,0(r17)
    643c:	10000015 	stw	zero,0(r2)
    6440:	003fdd06 	br	63b8 <__alt_data_end+0xfffe7b70>
    6444:	1025883a 	mov	r18,r2
    6448:	003fd706 	br	63a8 <__alt_data_end+0xfffe7b60>
    644c:	10bfffc4 	addi	r2,r2,-1
    6450:	1085883a 	add	r2,r2,r2
    6454:	00c00074 	movhi	r3,1
    6458:	18fde404 	addi	r3,r3,-2160
    645c:	1085883a 	add	r2,r2,r2
    6460:	1885883a 	add	r2,r3,r2
    6464:	11800017 	ldw	r6,0(r2)
    6468:	000f883a 	mov	r7,zero
    646c:	0005d400 	call	5d40 <__multadd>
    6470:	1025883a 	mov	r18,r2
    6474:	003fc706 	br	6394 <__alt_data_end+0xfffe7b4c>
    6478:	05000044 	movi	r20,1
    647c:	9809883a 	mov	r4,r19
    6480:	a00b883a 	mov	r5,r20
    6484:	0005c700 	call	5c70 <_Balloc>
    6488:	1023883a 	mov	r17,r2
    648c:	00809c44 	movi	r2,625
    6490:	88800515 	stw	r2,20(r17)
    6494:	8d000415 	stw	r20,16(r17)
    6498:	9c401215 	stw	r17,72(r19)
    649c:	88000015 	stw	zero,0(r17)
    64a0:	003fc606 	br	63bc <__alt_data_end+0xfffe7b74>

000064a4 <__lshift>:
    64a4:	defff904 	addi	sp,sp,-28
    64a8:	dd000415 	stw	r20,16(sp)
    64ac:	dcc00315 	stw	r19,12(sp)
    64b0:	3029d17a 	srai	r20,r6,5
    64b4:	2cc00417 	ldw	r19,16(r5)
    64b8:	28800217 	ldw	r2,8(r5)
    64bc:	dd400515 	stw	r21,20(sp)
    64c0:	a4e7883a 	add	r19,r20,r19
    64c4:	dc800215 	stw	r18,8(sp)
    64c8:	dc400115 	stw	r17,4(sp)
    64cc:	dc000015 	stw	r16,0(sp)
    64d0:	dfc00615 	stw	ra,24(sp)
    64d4:	9c000044 	addi	r16,r19,1
    64d8:	2823883a 	mov	r17,r5
    64dc:	302b883a 	mov	r21,r6
    64e0:	2025883a 	mov	r18,r4
    64e4:	29400117 	ldw	r5,4(r5)
    64e8:	1400030e 	bge	r2,r16,64f8 <__lshift+0x54>
    64ec:	1085883a 	add	r2,r2,r2
    64f0:	29400044 	addi	r5,r5,1
    64f4:	143ffd16 	blt	r2,r16,64ec <__alt_data_end+0xfffe7ca4>
    64f8:	9009883a 	mov	r4,r18
    64fc:	0005c700 	call	5c70 <_Balloc>
    6500:	11c00504 	addi	r7,r2,20
    6504:	0500090e 	bge	zero,r20,652c <__lshift+0x88>
    6508:	3811883a 	mov	r8,r7
    650c:	0007883a 	mov	r3,zero
    6510:	40000015 	stw	zero,0(r8)
    6514:	18c00044 	addi	r3,r3,1
    6518:	42000104 	addi	r8,r8,4
    651c:	1d3ffc1e 	bne	r3,r20,6510 <__alt_data_end+0xfffe7cc8>
    6520:	18c7883a 	add	r3,r3,r3
    6524:	18c7883a 	add	r3,r3,r3
    6528:	38cf883a 	add	r7,r7,r3
    652c:	89000417 	ldw	r4,16(r17)
    6530:	88c00504 	addi	r3,r17,20
    6534:	a98007cc 	andi	r6,r21,31
    6538:	2109883a 	add	r4,r4,r4
    653c:	2109883a 	add	r4,r4,r4
    6540:	1909883a 	add	r4,r3,r4
    6544:	30002326 	beq	r6,zero,65d4 <__lshift+0x130>
    6548:	01400804 	movi	r5,32
    654c:	298bc83a 	sub	r5,r5,r6
    6550:	0013883a 	mov	r9,zero
    6554:	1a000017 	ldw	r8,0(r3)
    6558:	3815883a 	mov	r10,r7
    655c:	39c00104 	addi	r7,r7,4
    6560:	4190983a 	sll	r8,r8,r6
    6564:	18c00104 	addi	r3,r3,4
    6568:	4a10b03a 	or	r8,r9,r8
    656c:	3a3fff15 	stw	r8,-4(r7)
    6570:	1a3fff17 	ldw	r8,-4(r3)
    6574:	4152d83a 	srl	r9,r8,r5
    6578:	193ff636 	bltu	r3,r4,6554 <__alt_data_end+0xfffe7d0c>
    657c:	52400115 	stw	r9,4(r10)
    6580:	48000126 	beq	r9,zero,6588 <__lshift+0xe4>
    6584:	9c000084 	addi	r16,r19,2
    6588:	89000117 	ldw	r4,4(r17)
    658c:	90c01317 	ldw	r3,76(r18)
    6590:	843fffc4 	addi	r16,r16,-1
    6594:	2109883a 	add	r4,r4,r4
    6598:	2109883a 	add	r4,r4,r4
    659c:	1907883a 	add	r3,r3,r4
    65a0:	19000017 	ldw	r4,0(r3)
    65a4:	14000415 	stw	r16,16(r2)
    65a8:	89000015 	stw	r4,0(r17)
    65ac:	1c400015 	stw	r17,0(r3)
    65b0:	dfc00617 	ldw	ra,24(sp)
    65b4:	dd400517 	ldw	r21,20(sp)
    65b8:	dd000417 	ldw	r20,16(sp)
    65bc:	dcc00317 	ldw	r19,12(sp)
    65c0:	dc800217 	ldw	r18,8(sp)
    65c4:	dc400117 	ldw	r17,4(sp)
    65c8:	dc000017 	ldw	r16,0(sp)
    65cc:	dec00704 	addi	sp,sp,28
    65d0:	f800283a 	ret
    65d4:	19400017 	ldw	r5,0(r3)
    65d8:	39c00104 	addi	r7,r7,4
    65dc:	18c00104 	addi	r3,r3,4
    65e0:	397fff15 	stw	r5,-4(r7)
    65e4:	193ffb36 	bltu	r3,r4,65d4 <__alt_data_end+0xfffe7d8c>
    65e8:	003fe706 	br	6588 <__alt_data_end+0xfffe7d40>

000065ec <__mcmp>:
    65ec:	20800417 	ldw	r2,16(r4)
    65f0:	28c00417 	ldw	r3,16(r5)
    65f4:	10c5c83a 	sub	r2,r2,r3
    65f8:	1000111e 	bne	r2,zero,6640 <__mcmp+0x54>
    65fc:	18c7883a 	add	r3,r3,r3
    6600:	18c7883a 	add	r3,r3,r3
    6604:	21000504 	addi	r4,r4,20
    6608:	29400504 	addi	r5,r5,20
    660c:	20c5883a 	add	r2,r4,r3
    6610:	28cb883a 	add	r5,r5,r3
    6614:	00000106 	br	661c <__mcmp+0x30>
    6618:	20800a2e 	bgeu	r4,r2,6644 <__mcmp+0x58>
    661c:	10bfff04 	addi	r2,r2,-4
    6620:	297fff04 	addi	r5,r5,-4
    6624:	11800017 	ldw	r6,0(r2)
    6628:	28c00017 	ldw	r3,0(r5)
    662c:	30fffa26 	beq	r6,r3,6618 <__alt_data_end+0xfffe7dd0>
    6630:	30c00236 	bltu	r6,r3,663c <__mcmp+0x50>
    6634:	00800044 	movi	r2,1
    6638:	f800283a 	ret
    663c:	00bfffc4 	movi	r2,-1
    6640:	f800283a 	ret
    6644:	0005883a 	mov	r2,zero
    6648:	f800283a 	ret

0000664c <__mdiff>:
    664c:	defffb04 	addi	sp,sp,-20
    6650:	dc000015 	stw	r16,0(sp)
    6654:	2821883a 	mov	r16,r5
    6658:	dcc00315 	stw	r19,12(sp)
    665c:	300b883a 	mov	r5,r6
    6660:	2027883a 	mov	r19,r4
    6664:	8009883a 	mov	r4,r16
    6668:	dc800215 	stw	r18,8(sp)
    666c:	dfc00415 	stw	ra,16(sp)
    6670:	dc400115 	stw	r17,4(sp)
    6674:	3025883a 	mov	r18,r6
    6678:	00065ec0 	call	65ec <__mcmp>
    667c:	10005226 	beq	r2,zero,67c8 <__mdiff+0x17c>
    6680:	10004c16 	blt	r2,zero,67b4 <__mdiff+0x168>
    6684:	0023883a 	mov	r17,zero
    6688:	81400117 	ldw	r5,4(r16)
    668c:	9809883a 	mov	r4,r19
    6690:	0005c700 	call	5c70 <_Balloc>
    6694:	83400417 	ldw	r13,16(r16)
    6698:	93800417 	ldw	r14,16(r18)
    669c:	81000504 	addi	r4,r16,20
    66a0:	6b59883a 	add	r12,r13,r13
    66a4:	739d883a 	add	r14,r14,r14
    66a8:	6319883a 	add	r12,r12,r12
    66ac:	91800504 	addi	r6,r18,20
    66b0:	739d883a 	add	r14,r14,r14
    66b4:	14400315 	stw	r17,12(r2)
    66b8:	2319883a 	add	r12,r4,r12
    66bc:	339d883a 	add	r14,r6,r14
    66c0:	12400504 	addi	r9,r2,20
    66c4:	0007883a 	mov	r3,zero
    66c8:	22000017 	ldw	r8,0(r4)
    66cc:	32800017 	ldw	r10,0(r6)
    66d0:	4ac00104 	addi	r11,r9,4
    66d4:	41ffffcc 	andi	r7,r8,65535
    66d8:	38c7883a 	add	r3,r7,r3
    66dc:	51ffffcc 	andi	r7,r10,65535
    66e0:	19cfc83a 	sub	r7,r3,r7
    66e4:	4010d43a 	srli	r8,r8,16
    66e8:	5014d43a 	srli	r10,r10,16
    66ec:	3807d43a 	srai	r3,r7,16
    66f0:	39ffffcc 	andi	r7,r7,65535
    66f4:	4291c83a 	sub	r8,r8,r10
    66f8:	40c7883a 	add	r3,r8,r3
    66fc:	1810943a 	slli	r8,r3,16
    6700:	31800104 	addi	r6,r6,4
    6704:	21000104 	addi	r4,r4,4
    6708:	41ceb03a 	or	r7,r8,r7
    670c:	49c00015 	stw	r7,0(r9)
    6710:	1807d43a 	srai	r3,r3,16
    6714:	580b883a 	mov	r5,r11
    6718:	5813883a 	mov	r9,r11
    671c:	33bfea36 	bltu	r6,r14,66c8 <__alt_data_end+0xfffe7e80>
    6720:	2011883a 	mov	r8,r4
    6724:	2300152e 	bgeu	r4,r12,677c <__mdiff+0x130>
    6728:	21400017 	ldw	r5,0(r4)
    672c:	4a400104 	addi	r9,r9,4
    6730:	21000104 	addi	r4,r4,4
    6734:	29ffffcc 	andi	r7,r5,65535
    6738:	38c7883a 	add	r3,r7,r3
    673c:	280ad43a 	srli	r5,r5,16
    6740:	180dd43a 	srai	r6,r3,16
    6744:	19ffffcc 	andi	r7,r3,65535
    6748:	3147883a 	add	r3,r6,r5
    674c:	180a943a 	slli	r5,r3,16
    6750:	1807d43a 	srai	r3,r3,16
    6754:	29ceb03a 	or	r7,r5,r7
    6758:	49ffff15 	stw	r7,-4(r9)
    675c:	233ff236 	bltu	r4,r12,6728 <__alt_data_end+0xfffe7ee0>
    6760:	0206303a 	nor	r3,zero,r8
    6764:	1b07883a 	add	r3,r3,r12
    6768:	1806d0ba 	srli	r3,r3,2
    676c:	18c00044 	addi	r3,r3,1
    6770:	18c7883a 	add	r3,r3,r3
    6774:	18c7883a 	add	r3,r3,r3
    6778:	58cb883a 	add	r5,r11,r3
    677c:	28ffff04 	addi	r3,r5,-4
    6780:	3800041e 	bne	r7,zero,6794 <__mdiff+0x148>
    6784:	18ffff04 	addi	r3,r3,-4
    6788:	19000017 	ldw	r4,0(r3)
    678c:	6b7fffc4 	addi	r13,r13,-1
    6790:	203ffc26 	beq	r4,zero,6784 <__alt_data_end+0xfffe7f3c>
    6794:	13400415 	stw	r13,16(r2)
    6798:	dfc00417 	ldw	ra,16(sp)
    679c:	dcc00317 	ldw	r19,12(sp)
    67a0:	dc800217 	ldw	r18,8(sp)
    67a4:	dc400117 	ldw	r17,4(sp)
    67a8:	dc000017 	ldw	r16,0(sp)
    67ac:	dec00504 	addi	sp,sp,20
    67b0:	f800283a 	ret
    67b4:	8005883a 	mov	r2,r16
    67b8:	04400044 	movi	r17,1
    67bc:	9021883a 	mov	r16,r18
    67c0:	1025883a 	mov	r18,r2
    67c4:	003fb006 	br	6688 <__alt_data_end+0xfffe7e40>
    67c8:	9809883a 	mov	r4,r19
    67cc:	000b883a 	mov	r5,zero
    67d0:	0005c700 	call	5c70 <_Balloc>
    67d4:	00c00044 	movi	r3,1
    67d8:	10c00415 	stw	r3,16(r2)
    67dc:	10000515 	stw	zero,20(r2)
    67e0:	003fed06 	br	6798 <__alt_data_end+0xfffe7f50>

000067e4 <__ulp>:
    67e4:	295ffc2c 	andhi	r5,r5,32752
    67e8:	00bf3034 	movhi	r2,64704
    67ec:	2887883a 	add	r3,r5,r2
    67f0:	00c0020e 	bge	zero,r3,67fc <__ulp+0x18>
    67f4:	0005883a 	mov	r2,zero
    67f8:	f800283a 	ret
    67fc:	00c7c83a 	sub	r3,zero,r3
    6800:	180bd53a 	srai	r5,r3,20
    6804:	008004c4 	movi	r2,19
    6808:	11400a0e 	bge	r2,r5,6834 <__ulp+0x50>
    680c:	00800c84 	movi	r2,50
    6810:	0007883a 	mov	r3,zero
    6814:	11400516 	blt	r2,r5,682c <__ulp+0x48>
    6818:	00800cc4 	movi	r2,51
    681c:	114bc83a 	sub	r5,r2,r5
    6820:	00800044 	movi	r2,1
    6824:	1144983a 	sll	r2,r2,r5
    6828:	f800283a 	ret
    682c:	00800044 	movi	r2,1
    6830:	f800283a 	ret
    6834:	00800234 	movhi	r2,8
    6838:	1147d83a 	sra	r3,r2,r5
    683c:	0005883a 	mov	r2,zero
    6840:	f800283a 	ret

00006844 <__b2d>:
    6844:	defffa04 	addi	sp,sp,-24
    6848:	dc000015 	stw	r16,0(sp)
    684c:	24000417 	ldw	r16,16(r4)
    6850:	dc400115 	stw	r17,4(sp)
    6854:	24400504 	addi	r17,r4,20
    6858:	8421883a 	add	r16,r16,r16
    685c:	8421883a 	add	r16,r16,r16
    6860:	8c21883a 	add	r16,r17,r16
    6864:	dc800215 	stw	r18,8(sp)
    6868:	84bfff17 	ldw	r18,-4(r16)
    686c:	dd000415 	stw	r20,16(sp)
    6870:	dcc00315 	stw	r19,12(sp)
    6874:	9009883a 	mov	r4,r18
    6878:	2829883a 	mov	r20,r5
    687c:	dfc00515 	stw	ra,20(sp)
    6880:	0005f800 	call	5f80 <__hi0bits>
    6884:	00c00804 	movi	r3,32
    6888:	1887c83a 	sub	r3,r3,r2
    688c:	a0c00015 	stw	r3,0(r20)
    6890:	00c00284 	movi	r3,10
    6894:	84ffff04 	addi	r19,r16,-4
    6898:	18801216 	blt	r3,r2,68e4 <__b2d+0xa0>
    689c:	014002c4 	movi	r5,11
    68a0:	2889c83a 	sub	r4,r5,r2
    68a4:	9106d83a 	srl	r3,r18,r4
    68a8:	18cffc34 	orhi	r3,r3,16368
    68ac:	8cc0282e 	bgeu	r17,r19,6950 <__b2d+0x10c>
    68b0:	817ffe17 	ldw	r5,-8(r16)
    68b4:	290ad83a 	srl	r5,r5,r4
    68b8:	10800544 	addi	r2,r2,21
    68bc:	9084983a 	sll	r2,r18,r2
    68c0:	2884b03a 	or	r2,r5,r2
    68c4:	dfc00517 	ldw	ra,20(sp)
    68c8:	dd000417 	ldw	r20,16(sp)
    68cc:	dcc00317 	ldw	r19,12(sp)
    68d0:	dc800217 	ldw	r18,8(sp)
    68d4:	dc400117 	ldw	r17,4(sp)
    68d8:	dc000017 	ldw	r16,0(sp)
    68dc:	dec00604 	addi	sp,sp,24
    68e0:	f800283a 	ret
    68e4:	113ffd44 	addi	r4,r2,-11
    68e8:	8cc00f2e 	bgeu	r17,r19,6928 <__b2d+0xe4>
    68ec:	81bffe04 	addi	r6,r16,-8
    68f0:	817ffe17 	ldw	r5,-8(r16)
    68f4:	20001326 	beq	r4,zero,6944 <__b2d+0x100>
    68f8:	00c00ac4 	movi	r3,43
    68fc:	1885c83a 	sub	r2,r3,r2
    6900:	2886d83a 	srl	r3,r5,r2
    6904:	9124983a 	sll	r18,r18,r4
    6908:	90e4b03a 	or	r18,r18,r3
    690c:	90cffc34 	orhi	r3,r18,16368
    6910:	8980112e 	bgeu	r17,r6,6958 <__b2d+0x114>
    6914:	81bffd17 	ldw	r6,-12(r16)
    6918:	308cd83a 	srl	r6,r6,r2
    691c:	2904983a 	sll	r2,r5,r4
    6920:	1184b03a 	or	r2,r2,r6
    6924:	003fe706 	br	68c4 <__alt_data_end+0xfffe807c>
    6928:	20000526 	beq	r4,zero,6940 <__b2d+0xfc>
    692c:	9124983a 	sll	r18,r18,r4
    6930:	000d883a 	mov	r6,zero
    6934:	000b883a 	mov	r5,zero
    6938:	90cffc34 	orhi	r3,r18,16368
    693c:	003ff706 	br	691c <__alt_data_end+0xfffe80d4>
    6940:	000b883a 	mov	r5,zero
    6944:	90cffc34 	orhi	r3,r18,16368
    6948:	2805883a 	mov	r2,r5
    694c:	003fdd06 	br	68c4 <__alt_data_end+0xfffe807c>
    6950:	000b883a 	mov	r5,zero
    6954:	003fd806 	br	68b8 <__alt_data_end+0xfffe8070>
    6958:	000d883a 	mov	r6,zero
    695c:	003fef06 	br	691c <__alt_data_end+0xfffe80d4>

00006960 <__d2b>:
    6960:	defff704 	addi	sp,sp,-36
    6964:	dc000215 	stw	r16,8(sp)
    6968:	3021883a 	mov	r16,r6
    696c:	dc400315 	stw	r17,12(sp)
    6970:	8022907a 	slli	r17,r16,1
    6974:	dd400715 	stw	r21,28(sp)
    6978:	282b883a 	mov	r21,r5
    697c:	01400044 	movi	r5,1
    6980:	dd000615 	stw	r20,24(sp)
    6984:	dcc00515 	stw	r19,20(sp)
    6988:	dc800415 	stw	r18,16(sp)
    698c:	dfc00815 	stw	ra,32(sp)
    6990:	3829883a 	mov	r20,r7
    6994:	dc800917 	ldw	r18,36(sp)
    6998:	8822d57a 	srli	r17,r17,21
    699c:	0005c700 	call	5c70 <_Balloc>
    69a0:	1027883a 	mov	r19,r2
    69a4:	00800434 	movhi	r2,16
    69a8:	10bfffc4 	addi	r2,r2,-1
    69ac:	808c703a 	and	r6,r16,r2
    69b0:	88000126 	beq	r17,zero,69b8 <__d2b+0x58>
    69b4:	31800434 	orhi	r6,r6,16
    69b8:	d9800015 	stw	r6,0(sp)
    69bc:	a8001f26 	beq	r21,zero,6a3c <__d2b+0xdc>
    69c0:	d9000104 	addi	r4,sp,4
    69c4:	dd400115 	stw	r21,4(sp)
    69c8:	0005fe80 	call	5fe8 <__lo0bits>
    69cc:	d8c00017 	ldw	r3,0(sp)
    69d0:	1000291e 	bne	r2,zero,6a78 <__d2b+0x118>
    69d4:	d9000117 	ldw	r4,4(sp)
    69d8:	99000515 	stw	r4,20(r19)
    69dc:	1820c03a 	cmpne	r16,r3,zero
    69e0:	84000044 	addi	r16,r16,1
    69e4:	98c00615 	stw	r3,24(r19)
    69e8:	9c000415 	stw	r16,16(r19)
    69ec:	88001b1e 	bne	r17,zero,6a5c <__d2b+0xfc>
    69f0:	800690ba 	slli	r3,r16,2
    69f4:	10bef384 	addi	r2,r2,-1074
    69f8:	a0800015 	stw	r2,0(r20)
    69fc:	98c5883a 	add	r2,r19,r3
    6a00:	11000417 	ldw	r4,16(r2)
    6a04:	8020917a 	slli	r16,r16,5
    6a08:	0005f800 	call	5f80 <__hi0bits>
    6a0c:	8085c83a 	sub	r2,r16,r2
    6a10:	90800015 	stw	r2,0(r18)
    6a14:	9805883a 	mov	r2,r19
    6a18:	dfc00817 	ldw	ra,32(sp)
    6a1c:	dd400717 	ldw	r21,28(sp)
    6a20:	dd000617 	ldw	r20,24(sp)
    6a24:	dcc00517 	ldw	r19,20(sp)
    6a28:	dc800417 	ldw	r18,16(sp)
    6a2c:	dc400317 	ldw	r17,12(sp)
    6a30:	dc000217 	ldw	r16,8(sp)
    6a34:	dec00904 	addi	sp,sp,36
    6a38:	f800283a 	ret
    6a3c:	d809883a 	mov	r4,sp
    6a40:	0005fe80 	call	5fe8 <__lo0bits>
    6a44:	d8c00017 	ldw	r3,0(sp)
    6a48:	04000044 	movi	r16,1
    6a4c:	9c000415 	stw	r16,16(r19)
    6a50:	98c00515 	stw	r3,20(r19)
    6a54:	10800804 	addi	r2,r2,32
    6a58:	883fe526 	beq	r17,zero,69f0 <__alt_data_end+0xfffe81a8>
    6a5c:	8c7ef344 	addi	r17,r17,-1075
    6a60:	88a3883a 	add	r17,r17,r2
    6a64:	00c00d44 	movi	r3,53
    6a68:	a4400015 	stw	r17,0(r20)
    6a6c:	1885c83a 	sub	r2,r3,r2
    6a70:	90800015 	stw	r2,0(r18)
    6a74:	003fe706 	br	6a14 <__alt_data_end+0xfffe81cc>
    6a78:	01000804 	movi	r4,32
    6a7c:	2089c83a 	sub	r4,r4,r2
    6a80:	1908983a 	sll	r4,r3,r4
    6a84:	d9400117 	ldw	r5,4(sp)
    6a88:	1886d83a 	srl	r3,r3,r2
    6a8c:	2148b03a 	or	r4,r4,r5
    6a90:	99000515 	stw	r4,20(r19)
    6a94:	d8c00015 	stw	r3,0(sp)
    6a98:	003fd006 	br	69dc <__alt_data_end+0xfffe8194>

00006a9c <__ratio>:
    6a9c:	defff904 	addi	sp,sp,-28
    6aa0:	dc400315 	stw	r17,12(sp)
    6aa4:	2823883a 	mov	r17,r5
    6aa8:	d9400104 	addi	r5,sp,4
    6aac:	dfc00615 	stw	ra,24(sp)
    6ab0:	dcc00515 	stw	r19,20(sp)
    6ab4:	dc800415 	stw	r18,16(sp)
    6ab8:	2027883a 	mov	r19,r4
    6abc:	dc000215 	stw	r16,8(sp)
    6ac0:	00068440 	call	6844 <__b2d>
    6ac4:	8809883a 	mov	r4,r17
    6ac8:	d80b883a 	mov	r5,sp
    6acc:	1025883a 	mov	r18,r2
    6ad0:	1821883a 	mov	r16,r3
    6ad4:	00068440 	call	6844 <__b2d>
    6ad8:	8a400417 	ldw	r9,16(r17)
    6adc:	9a000417 	ldw	r8,16(r19)
    6ae0:	100d883a 	mov	r6,r2
    6ae4:	d8800017 	ldw	r2,0(sp)
    6ae8:	4251c83a 	sub	r8,r8,r9
    6aec:	4012917a 	slli	r9,r8,5
    6af0:	da000117 	ldw	r8,4(sp)
    6af4:	4091c83a 	sub	r8,r8,r2
    6af8:	4251883a 	add	r8,r8,r9
    6afc:	02000d0e 	bge	zero,r8,6b34 <__ratio+0x98>
    6b00:	4010953a 	slli	r8,r8,20
    6b04:	4421883a 	add	r16,r8,r16
    6b08:	9009883a 	mov	r4,r18
    6b0c:	800b883a 	mov	r5,r16
    6b10:	180f883a 	mov	r7,r3
    6b14:	000b0380 	call	b038 <__divdf3>
    6b18:	dfc00617 	ldw	ra,24(sp)
    6b1c:	dcc00517 	ldw	r19,20(sp)
    6b20:	dc800417 	ldw	r18,16(sp)
    6b24:	dc400317 	ldw	r17,12(sp)
    6b28:	dc000217 	ldw	r16,8(sp)
    6b2c:	dec00704 	addi	sp,sp,28
    6b30:	f800283a 	ret
    6b34:	4010953a 	slli	r8,r8,20
    6b38:	1a07c83a 	sub	r3,r3,r8
    6b3c:	003ff206 	br	6b08 <__alt_data_end+0xfffe82c0>

00006b40 <_mprec_log10>:
    6b40:	defffe04 	addi	sp,sp,-8
    6b44:	dc000015 	stw	r16,0(sp)
    6b48:	dfc00115 	stw	ra,4(sp)
    6b4c:	008005c4 	movi	r2,23
    6b50:	2021883a 	mov	r16,r4
    6b54:	11000d0e 	bge	r2,r4,6b8c <_mprec_log10+0x4c>
    6b58:	0005883a 	mov	r2,zero
    6b5c:	00cffc34 	movhi	r3,16368
    6b60:	843fffc4 	addi	r16,r16,-1
    6b64:	1009883a 	mov	r4,r2
    6b68:	180b883a 	mov	r5,r3
    6b6c:	000d883a 	mov	r6,zero
    6b70:	01d00934 	movhi	r7,16420
    6b74:	000bbfc0 	call	bbfc <__muldf3>
    6b78:	803ff91e 	bne	r16,zero,6b60 <__alt_data_end+0xfffe8318>
    6b7c:	dfc00117 	ldw	ra,4(sp)
    6b80:	dc000017 	ldw	r16,0(sp)
    6b84:	dec00204 	addi	sp,sp,8
    6b88:	f800283a 	ret
    6b8c:	202090fa 	slli	r16,r4,3
    6b90:	00800074 	movhi	r2,1
    6b94:	10bdfb04 	addi	r2,r2,-2068
    6b98:	1421883a 	add	r16,r2,r16
    6b9c:	80800017 	ldw	r2,0(r16)
    6ba0:	80c00117 	ldw	r3,4(r16)
    6ba4:	dfc00117 	ldw	ra,4(sp)
    6ba8:	dc000017 	ldw	r16,0(sp)
    6bac:	dec00204 	addi	sp,sp,8
    6bb0:	f800283a 	ret

00006bb4 <__copybits>:
    6bb4:	297fffc4 	addi	r5,r5,-1
    6bb8:	280fd17a 	srai	r7,r5,5
    6bbc:	30c00417 	ldw	r3,16(r6)
    6bc0:	30800504 	addi	r2,r6,20
    6bc4:	39c00044 	addi	r7,r7,1
    6bc8:	18c7883a 	add	r3,r3,r3
    6bcc:	39cf883a 	add	r7,r7,r7
    6bd0:	18c7883a 	add	r3,r3,r3
    6bd4:	39cf883a 	add	r7,r7,r7
    6bd8:	10c7883a 	add	r3,r2,r3
    6bdc:	21cf883a 	add	r7,r4,r7
    6be0:	10c00d2e 	bgeu	r2,r3,6c18 <__copybits+0x64>
    6be4:	200b883a 	mov	r5,r4
    6be8:	12000017 	ldw	r8,0(r2)
    6bec:	29400104 	addi	r5,r5,4
    6bf0:	10800104 	addi	r2,r2,4
    6bf4:	2a3fff15 	stw	r8,-4(r5)
    6bf8:	10fffb36 	bltu	r2,r3,6be8 <__alt_data_end+0xfffe83a0>
    6bfc:	1985c83a 	sub	r2,r3,r6
    6c00:	10bffac4 	addi	r2,r2,-21
    6c04:	1004d0ba 	srli	r2,r2,2
    6c08:	10800044 	addi	r2,r2,1
    6c0c:	1085883a 	add	r2,r2,r2
    6c10:	1085883a 	add	r2,r2,r2
    6c14:	2089883a 	add	r4,r4,r2
    6c18:	21c0032e 	bgeu	r4,r7,6c28 <__copybits+0x74>
    6c1c:	20000015 	stw	zero,0(r4)
    6c20:	21000104 	addi	r4,r4,4
    6c24:	21fffd36 	bltu	r4,r7,6c1c <__alt_data_end+0xfffe83d4>
    6c28:	f800283a 	ret

00006c2c <__any_on>:
    6c2c:	20c00417 	ldw	r3,16(r4)
    6c30:	2805d17a 	srai	r2,r5,5
    6c34:	21000504 	addi	r4,r4,20
    6c38:	18800d0e 	bge	r3,r2,6c70 <__any_on+0x44>
    6c3c:	18c7883a 	add	r3,r3,r3
    6c40:	18c7883a 	add	r3,r3,r3
    6c44:	20c7883a 	add	r3,r4,r3
    6c48:	20c0192e 	bgeu	r4,r3,6cb0 <__any_on+0x84>
    6c4c:	18bfff17 	ldw	r2,-4(r3)
    6c50:	18ffff04 	addi	r3,r3,-4
    6c54:	1000041e 	bne	r2,zero,6c68 <__any_on+0x3c>
    6c58:	20c0142e 	bgeu	r4,r3,6cac <__any_on+0x80>
    6c5c:	18ffff04 	addi	r3,r3,-4
    6c60:	19400017 	ldw	r5,0(r3)
    6c64:	283ffc26 	beq	r5,zero,6c58 <__alt_data_end+0xfffe8410>
    6c68:	00800044 	movi	r2,1
    6c6c:	f800283a 	ret
    6c70:	10c00a0e 	bge	r2,r3,6c9c <__any_on+0x70>
    6c74:	1085883a 	add	r2,r2,r2
    6c78:	1085883a 	add	r2,r2,r2
    6c7c:	294007cc 	andi	r5,r5,31
    6c80:	2087883a 	add	r3,r4,r2
    6c84:	283ff026 	beq	r5,zero,6c48 <__alt_data_end+0xfffe8400>
    6c88:	19800017 	ldw	r6,0(r3)
    6c8c:	3144d83a 	srl	r2,r6,r5
    6c90:	114a983a 	sll	r5,r2,r5
    6c94:	29bff41e 	bne	r5,r6,6c68 <__alt_data_end+0xfffe8420>
    6c98:	003feb06 	br	6c48 <__alt_data_end+0xfffe8400>
    6c9c:	1085883a 	add	r2,r2,r2
    6ca0:	1085883a 	add	r2,r2,r2
    6ca4:	2087883a 	add	r3,r4,r2
    6ca8:	003fe706 	br	6c48 <__alt_data_end+0xfffe8400>
    6cac:	f800283a 	ret
    6cb0:	0005883a 	mov	r2,zero
    6cb4:	f800283a 	ret

00006cb8 <__fpclassifyd>:
    6cb8:	00a00034 	movhi	r2,32768
    6cbc:	10bfffc4 	addi	r2,r2,-1
    6cc0:	2884703a 	and	r2,r5,r2
    6cc4:	10000726 	beq	r2,zero,6ce4 <__fpclassifyd+0x2c>
    6cc8:	00fffc34 	movhi	r3,65520
    6ccc:	019ff834 	movhi	r6,32736
    6cd0:	28c7883a 	add	r3,r5,r3
    6cd4:	31bfffc4 	addi	r6,r6,-1
    6cd8:	30c00536 	bltu	r6,r3,6cf0 <__fpclassifyd+0x38>
    6cdc:	00800104 	movi	r2,4
    6ce0:	f800283a 	ret
    6ce4:	2000021e 	bne	r4,zero,6cf0 <__fpclassifyd+0x38>
    6ce8:	00800084 	movi	r2,2
    6cec:	f800283a 	ret
    6cf0:	00dffc34 	movhi	r3,32752
    6cf4:	019ff834 	movhi	r6,32736
    6cf8:	28cb883a 	add	r5,r5,r3
    6cfc:	31bfffc4 	addi	r6,r6,-1
    6d00:	317ff62e 	bgeu	r6,r5,6cdc <__alt_data_end+0xfffe8494>
    6d04:	01400434 	movhi	r5,16
    6d08:	297fffc4 	addi	r5,r5,-1
    6d0c:	28800236 	bltu	r5,r2,6d18 <__fpclassifyd+0x60>
    6d10:	008000c4 	movi	r2,3
    6d14:	f800283a 	ret
    6d18:	10c00226 	beq	r2,r3,6d24 <__fpclassifyd+0x6c>
    6d1c:	0005883a 	mov	r2,zero
    6d20:	f800283a 	ret
    6d24:	2005003a 	cmpeq	r2,r4,zero
    6d28:	f800283a 	ret

00006d2c <__sread>:
    6d2c:	defffe04 	addi	sp,sp,-8
    6d30:	dc000015 	stw	r16,0(sp)
    6d34:	2821883a 	mov	r16,r5
    6d38:	2940038f 	ldh	r5,14(r5)
    6d3c:	dfc00115 	stw	ra,4(sp)
    6d40:	00090800 	call	9080 <_read_r>
    6d44:	10000716 	blt	r2,zero,6d64 <__sread+0x38>
    6d48:	80c01417 	ldw	r3,80(r16)
    6d4c:	1887883a 	add	r3,r3,r2
    6d50:	80c01415 	stw	r3,80(r16)
    6d54:	dfc00117 	ldw	ra,4(sp)
    6d58:	dc000017 	ldw	r16,0(sp)
    6d5c:	dec00204 	addi	sp,sp,8
    6d60:	f800283a 	ret
    6d64:	80c0030b 	ldhu	r3,12(r16)
    6d68:	18fbffcc 	andi	r3,r3,61439
    6d6c:	80c0030d 	sth	r3,12(r16)
    6d70:	dfc00117 	ldw	ra,4(sp)
    6d74:	dc000017 	ldw	r16,0(sp)
    6d78:	dec00204 	addi	sp,sp,8
    6d7c:	f800283a 	ret

00006d80 <__seofread>:
    6d80:	0005883a 	mov	r2,zero
    6d84:	f800283a 	ret

00006d88 <__swrite>:
    6d88:	2880030b 	ldhu	r2,12(r5)
    6d8c:	defffb04 	addi	sp,sp,-20
    6d90:	dcc00315 	stw	r19,12(sp)
    6d94:	dc800215 	stw	r18,8(sp)
    6d98:	dc400115 	stw	r17,4(sp)
    6d9c:	dc000015 	stw	r16,0(sp)
    6da0:	dfc00415 	stw	ra,16(sp)
    6da4:	10c0400c 	andi	r3,r2,256
    6da8:	2821883a 	mov	r16,r5
    6dac:	2027883a 	mov	r19,r4
    6db0:	3025883a 	mov	r18,r6
    6db4:	3823883a 	mov	r17,r7
    6db8:	18000526 	beq	r3,zero,6dd0 <__swrite+0x48>
    6dbc:	2940038f 	ldh	r5,14(r5)
    6dc0:	000d883a 	mov	r6,zero
    6dc4:	01c00084 	movi	r7,2
    6dc8:	0008ec80 	call	8ec8 <_lseek_r>
    6dcc:	8080030b 	ldhu	r2,12(r16)
    6dd0:	8140038f 	ldh	r5,14(r16)
    6dd4:	10bbffcc 	andi	r2,r2,61439
    6dd8:	9809883a 	mov	r4,r19
    6ddc:	900d883a 	mov	r6,r18
    6de0:	880f883a 	mov	r7,r17
    6de4:	8080030d 	sth	r2,12(r16)
    6de8:	dfc00417 	ldw	ra,16(sp)
    6dec:	dcc00317 	ldw	r19,12(sp)
    6df0:	dc800217 	ldw	r18,8(sp)
    6df4:	dc400117 	ldw	r17,4(sp)
    6df8:	dc000017 	ldw	r16,0(sp)
    6dfc:	dec00504 	addi	sp,sp,20
    6e00:	00085001 	jmpi	8500 <_write_r>

00006e04 <__sseek>:
    6e04:	defffe04 	addi	sp,sp,-8
    6e08:	dc000015 	stw	r16,0(sp)
    6e0c:	2821883a 	mov	r16,r5
    6e10:	2940038f 	ldh	r5,14(r5)
    6e14:	dfc00115 	stw	ra,4(sp)
    6e18:	0008ec80 	call	8ec8 <_lseek_r>
    6e1c:	00ffffc4 	movi	r3,-1
    6e20:	10c00826 	beq	r2,r3,6e44 <__sseek+0x40>
    6e24:	80c0030b 	ldhu	r3,12(r16)
    6e28:	80801415 	stw	r2,80(r16)
    6e2c:	18c40014 	ori	r3,r3,4096
    6e30:	80c0030d 	sth	r3,12(r16)
    6e34:	dfc00117 	ldw	ra,4(sp)
    6e38:	dc000017 	ldw	r16,0(sp)
    6e3c:	dec00204 	addi	sp,sp,8
    6e40:	f800283a 	ret
    6e44:	80c0030b 	ldhu	r3,12(r16)
    6e48:	18fbffcc 	andi	r3,r3,61439
    6e4c:	80c0030d 	sth	r3,12(r16)
    6e50:	dfc00117 	ldw	ra,4(sp)
    6e54:	dc000017 	ldw	r16,0(sp)
    6e58:	dec00204 	addi	sp,sp,8
    6e5c:	f800283a 	ret

00006e60 <__sclose>:
    6e60:	2940038f 	ldh	r5,14(r5)
    6e64:	000855c1 	jmpi	855c <_close_r>

00006e68 <strcmp>:
    6e68:	2144b03a 	or	r2,r4,r5
    6e6c:	108000cc 	andi	r2,r2,3
    6e70:	1000171e 	bne	r2,zero,6ed0 <strcmp+0x68>
    6e74:	20800017 	ldw	r2,0(r4)
    6e78:	28c00017 	ldw	r3,0(r5)
    6e7c:	10c0141e 	bne	r2,r3,6ed0 <strcmp+0x68>
    6e80:	027fbff4 	movhi	r9,65279
    6e84:	4a7fbfc4 	addi	r9,r9,-257
    6e88:	0086303a 	nor	r3,zero,r2
    6e8c:	02202074 	movhi	r8,32897
    6e90:	1245883a 	add	r2,r2,r9
    6e94:	42202004 	addi	r8,r8,-32640
    6e98:	10c4703a 	and	r2,r2,r3
    6e9c:	1204703a 	and	r2,r2,r8
    6ea0:	10000226 	beq	r2,zero,6eac <strcmp+0x44>
    6ea4:	00001706 	br	6f04 <strcmp+0x9c>
    6ea8:	1000161e 	bne	r2,zero,6f04 <strcmp+0x9c>
    6eac:	21000104 	addi	r4,r4,4
    6eb0:	20c00017 	ldw	r3,0(r4)
    6eb4:	29400104 	addi	r5,r5,4
    6eb8:	29800017 	ldw	r6,0(r5)
    6ebc:	1a4f883a 	add	r7,r3,r9
    6ec0:	00c4303a 	nor	r2,zero,r3
    6ec4:	3884703a 	and	r2,r7,r2
    6ec8:	1204703a 	and	r2,r2,r8
    6ecc:	19bff626 	beq	r3,r6,6ea8 <__alt_data_end+0xfffe8660>
    6ed0:	20800007 	ldb	r2,0(r4)
    6ed4:	1000051e 	bne	r2,zero,6eec <strcmp+0x84>
    6ed8:	00000606 	br	6ef4 <strcmp+0x8c>
    6edc:	21000044 	addi	r4,r4,1
    6ee0:	20800007 	ldb	r2,0(r4)
    6ee4:	29400044 	addi	r5,r5,1
    6ee8:	10000226 	beq	r2,zero,6ef4 <strcmp+0x8c>
    6eec:	28c00007 	ldb	r3,0(r5)
    6ef0:	10fffa26 	beq	r2,r3,6edc <__alt_data_end+0xfffe8694>
    6ef4:	20800003 	ldbu	r2,0(r4)
    6ef8:	28c00003 	ldbu	r3,0(r5)
    6efc:	10c5c83a 	sub	r2,r2,r3
    6f00:	f800283a 	ret
    6f04:	0005883a 	mov	r2,zero
    6f08:	f800283a 	ret

00006f0c <strlen>:
    6f0c:	208000cc 	andi	r2,r4,3
    6f10:	10002026 	beq	r2,zero,6f94 <strlen+0x88>
    6f14:	20800007 	ldb	r2,0(r4)
    6f18:	10002026 	beq	r2,zero,6f9c <strlen+0x90>
    6f1c:	2005883a 	mov	r2,r4
    6f20:	00000206 	br	6f2c <strlen+0x20>
    6f24:	10c00007 	ldb	r3,0(r2)
    6f28:	18001826 	beq	r3,zero,6f8c <strlen+0x80>
    6f2c:	10800044 	addi	r2,r2,1
    6f30:	10c000cc 	andi	r3,r2,3
    6f34:	183ffb1e 	bne	r3,zero,6f24 <__alt_data_end+0xfffe86dc>
    6f38:	10c00017 	ldw	r3,0(r2)
    6f3c:	01ffbff4 	movhi	r7,65279
    6f40:	39ffbfc4 	addi	r7,r7,-257
    6f44:	00ca303a 	nor	r5,zero,r3
    6f48:	01a02074 	movhi	r6,32897
    6f4c:	19c7883a 	add	r3,r3,r7
    6f50:	31a02004 	addi	r6,r6,-32640
    6f54:	1946703a 	and	r3,r3,r5
    6f58:	1986703a 	and	r3,r3,r6
    6f5c:	1800091e 	bne	r3,zero,6f84 <strlen+0x78>
    6f60:	10800104 	addi	r2,r2,4
    6f64:	10c00017 	ldw	r3,0(r2)
    6f68:	19cb883a 	add	r5,r3,r7
    6f6c:	00c6303a 	nor	r3,zero,r3
    6f70:	28c6703a 	and	r3,r5,r3
    6f74:	1986703a 	and	r3,r3,r6
    6f78:	183ff926 	beq	r3,zero,6f60 <__alt_data_end+0xfffe8718>
    6f7c:	00000106 	br	6f84 <strlen+0x78>
    6f80:	10800044 	addi	r2,r2,1
    6f84:	10c00007 	ldb	r3,0(r2)
    6f88:	183ffd1e 	bne	r3,zero,6f80 <__alt_data_end+0xfffe8738>
    6f8c:	1105c83a 	sub	r2,r2,r4
    6f90:	f800283a 	ret
    6f94:	2005883a 	mov	r2,r4
    6f98:	003fe706 	br	6f38 <__alt_data_end+0xfffe86f0>
    6f9c:	0005883a 	mov	r2,zero
    6fa0:	f800283a 	ret

00006fa4 <__sprint_r.part.0>:
    6fa4:	28801917 	ldw	r2,100(r5)
    6fa8:	defff604 	addi	sp,sp,-40
    6fac:	dd400515 	stw	r21,20(sp)
    6fb0:	dcc00315 	stw	r19,12(sp)
    6fb4:	dfc00915 	stw	ra,36(sp)
    6fb8:	df000815 	stw	fp,32(sp)
    6fbc:	ddc00715 	stw	r23,28(sp)
    6fc0:	dd800615 	stw	r22,24(sp)
    6fc4:	dd000415 	stw	r20,16(sp)
    6fc8:	dc800215 	stw	r18,8(sp)
    6fcc:	dc400115 	stw	r17,4(sp)
    6fd0:	dc000015 	stw	r16,0(sp)
    6fd4:	1088000c 	andi	r2,r2,8192
    6fd8:	2827883a 	mov	r19,r5
    6fdc:	302b883a 	mov	r21,r6
    6fe0:	10002d26 	beq	r2,zero,7098 <__sprint_r.part.0+0xf4>
    6fe4:	30800217 	ldw	r2,8(r6)
    6fe8:	35800017 	ldw	r22,0(r6)
    6fec:	10002826 	beq	r2,zero,7090 <__sprint_r.part.0+0xec>
    6ff0:	2029883a 	mov	r20,r4
    6ff4:	b5c00104 	addi	r23,r22,4
    6ff8:	04bfffc4 	movi	r18,-1
    6ffc:	bc400017 	ldw	r17,0(r23)
    7000:	b4000017 	ldw	r16,0(r22)
    7004:	0039883a 	mov	fp,zero
    7008:	8822d0ba 	srli	r17,r17,2
    700c:	04400316 	blt	zero,r17,701c <__sprint_r.part.0+0x78>
    7010:	00001706 	br	7070 <__sprint_r.part.0+0xcc>
    7014:	84000104 	addi	r16,r16,4
    7018:	8f001526 	beq	r17,fp,7070 <__sprint_r.part.0+0xcc>
    701c:	81400017 	ldw	r5,0(r16)
    7020:	a009883a 	mov	r4,r20
    7024:	980d883a 	mov	r6,r19
    7028:	000879c0 	call	879c <_fputwc_r>
    702c:	e7000044 	addi	fp,fp,1
    7030:	14bff81e 	bne	r2,r18,7014 <__alt_data_end+0xfffe87cc>
    7034:	9005883a 	mov	r2,r18
    7038:	a8000215 	stw	zero,8(r21)
    703c:	a8000115 	stw	zero,4(r21)
    7040:	dfc00917 	ldw	ra,36(sp)
    7044:	df000817 	ldw	fp,32(sp)
    7048:	ddc00717 	ldw	r23,28(sp)
    704c:	dd800617 	ldw	r22,24(sp)
    7050:	dd400517 	ldw	r21,20(sp)
    7054:	dd000417 	ldw	r20,16(sp)
    7058:	dcc00317 	ldw	r19,12(sp)
    705c:	dc800217 	ldw	r18,8(sp)
    7060:	dc400117 	ldw	r17,4(sp)
    7064:	dc000017 	ldw	r16,0(sp)
    7068:	dec00a04 	addi	sp,sp,40
    706c:	f800283a 	ret
    7070:	a8c00217 	ldw	r3,8(r21)
    7074:	8c63883a 	add	r17,r17,r17
    7078:	8c63883a 	add	r17,r17,r17
    707c:	1c45c83a 	sub	r2,r3,r17
    7080:	a8800215 	stw	r2,8(r21)
    7084:	b5800204 	addi	r22,r22,8
    7088:	bdc00204 	addi	r23,r23,8
    708c:	103fdb1e 	bne	r2,zero,6ffc <__alt_data_end+0xfffe87b4>
    7090:	0005883a 	mov	r2,zero
    7094:	003fe806 	br	7038 <__alt_data_end+0xfffe87f0>
    7098:	00089d00 	call	89d0 <__sfvwrite_r>
    709c:	003fe606 	br	7038 <__alt_data_end+0xfffe87f0>

000070a0 <__sprint_r>:
    70a0:	30c00217 	ldw	r3,8(r6)
    70a4:	18000126 	beq	r3,zero,70ac <__sprint_r+0xc>
    70a8:	0006fa41 	jmpi	6fa4 <__sprint_r.part.0>
    70ac:	30000115 	stw	zero,4(r6)
    70b0:	0005883a 	mov	r2,zero
    70b4:	f800283a 	ret

000070b8 <___vfiprintf_internal_r>:
    70b8:	defeca04 	addi	sp,sp,-1240
    70bc:	dcc12f15 	stw	r19,1212(sp)
    70c0:	dfc13515 	stw	ra,1236(sp)
    70c4:	df013415 	stw	fp,1232(sp)
    70c8:	ddc13315 	stw	r23,1228(sp)
    70cc:	dd813215 	stw	r22,1224(sp)
    70d0:	dd413115 	stw	r21,1220(sp)
    70d4:	dd013015 	stw	r20,1216(sp)
    70d8:	dc812e15 	stw	r18,1208(sp)
    70dc:	dc412d15 	stw	r17,1204(sp)
    70e0:	dc012c15 	stw	r16,1200(sp)
    70e4:	d9012115 	stw	r4,1156(sp)
    70e8:	d9412015 	stw	r5,1152(sp)
    70ec:	d9c12315 	stw	r7,1164(sp)
    70f0:	3027883a 	mov	r19,r6
    70f4:	20000226 	beq	r4,zero,7100 <___vfiprintf_internal_r+0x48>
    70f8:	20800e17 	ldw	r2,56(r4)
    70fc:	1000f726 	beq	r2,zero,74dc <___vfiprintf_internal_r+0x424>
    7100:	d8812017 	ldw	r2,1152(sp)
    7104:	10c0030b 	ldhu	r3,12(r2)
    7108:	1908000c 	andi	r4,r3,8192
    710c:	1805883a 	mov	r2,r3
    7110:	2000081e 	bne	r4,zero,7134 <___vfiprintf_internal_r+0x7c>
    7114:	d9412017 	ldw	r5,1152(sp)
    7118:	18880014 	ori	r2,r3,8192
    711c:	00f7ffc4 	movi	r3,-8193
    7120:	29001917 	ldw	r4,100(r5)
    7124:	2880030d 	sth	r2,12(r5)
    7128:	20c8703a 	and	r4,r4,r3
    712c:	29001915 	stw	r4,100(r5)
    7130:	1007883a 	mov	r3,r2
    7134:	1100020c 	andi	r4,r2,8
    7138:	2000a726 	beq	r4,zero,73d8 <___vfiprintf_internal_r+0x320>
    713c:	d9412017 	ldw	r5,1152(sp)
    7140:	29000417 	ldw	r4,16(r5)
    7144:	2000a426 	beq	r4,zero,73d8 <___vfiprintf_internal_r+0x320>
    7148:	1080068c 	andi	r2,r2,26
    714c:	01000284 	movi	r4,10
    7150:	1100ab26 	beq	r2,r4,7400 <___vfiprintf_internal_r+0x348>
    7154:	d9010a04 	addi	r4,sp,1064
    7158:	d94109c4 	addi	r5,sp,1063
    715c:	07000074 	movhi	fp,1
    7160:	04400074 	movhi	r17,1
    7164:	2145c83a 	sub	r2,r4,r5
    7168:	e73e3104 	addi	fp,fp,-1852
    716c:	8c7e2d04 	addi	r17,r17,-1868
    7170:	d9011e15 	stw	r4,1144(sp)
    7174:	d9411f15 	stw	r5,1148(sp)
    7178:	dec11a15 	stw	sp,1128(sp)
    717c:	d8011c15 	stw	zero,1136(sp)
    7180:	d8011b15 	stw	zero,1132(sp)
    7184:	d8012715 	stw	zero,1180(sp)
    7188:	d8012515 	stw	zero,1172(sp)
    718c:	d811883a 	mov	r8,sp
    7190:	d8812815 	stw	r2,1184(sp)
    7194:	982f883a 	mov	r23,r19
    7198:	b8800007 	ldb	r2,0(r23)
    719c:	1003b026 	beq	r2,zero,8060 <___vfiprintf_internal_r+0xfa8>
    71a0:	01000944 	movi	r4,37
    71a4:	1103ae26 	beq	r2,r4,8060 <___vfiprintf_internal_r+0xfa8>
    71a8:	b805883a 	mov	r2,r23
    71ac:	00000106 	br	71b4 <___vfiprintf_internal_r+0xfc>
    71b0:	19000326 	beq	r3,r4,71c0 <___vfiprintf_internal_r+0x108>
    71b4:	10800044 	addi	r2,r2,1
    71b8:	10c00007 	ldb	r3,0(r2)
    71bc:	183ffc1e 	bne	r3,zero,71b0 <__alt_data_end+0xfffe8968>
    71c0:	15e1c83a 	sub	r16,r2,r23
    71c4:	1029883a 	mov	r20,r2
    71c8:	80001026 	beq	r16,zero,720c <___vfiprintf_internal_r+0x154>
    71cc:	d8c11c17 	ldw	r3,1136(sp)
    71d0:	d8811b17 	ldw	r2,1132(sp)
    71d4:	45c00015 	stw	r23,0(r8)
    71d8:	80c7883a 	add	r3,r16,r3
    71dc:	10800044 	addi	r2,r2,1
    71e0:	44000115 	stw	r16,4(r8)
    71e4:	d8c11c15 	stw	r3,1136(sp)
    71e8:	d8811b15 	stw	r2,1132(sp)
    71ec:	010001c4 	movi	r4,7
    71f0:	2080740e 	bge	r4,r2,73c4 <___vfiprintf_internal_r+0x30c>
    71f4:	1803a71e 	bne	r3,zero,8094 <___vfiprintf_internal_r+0xfdc>
    71f8:	d8c12517 	ldw	r3,1172(sp)
    71fc:	d8011b15 	stw	zero,1132(sp)
    7200:	d811883a 	mov	r8,sp
    7204:	1c07883a 	add	r3,r3,r16
    7208:	d8c12515 	stw	r3,1172(sp)
    720c:	a0800007 	ldb	r2,0(r20)
    7210:	1002bf26 	beq	r2,zero,7d10 <___vfiprintf_internal_r+0xc58>
    7214:	a5c00044 	addi	r23,r20,1
    7218:	a1800047 	ldb	r6,1(r20)
    721c:	d8011d85 	stb	zero,1142(sp)
    7220:	d8012205 	stb	zero,1160(sp)
    7224:	043fffc4 	movi	r16,-1
    7228:	d8012415 	stw	zero,1168(sp)
    722c:	0025883a 	mov	r18,zero
    7230:	05001604 	movi	r20,88
    7234:	05400244 	movi	r21,9
    7238:	4027883a 	mov	r19,r8
    723c:	bdc00044 	addi	r23,r23,1
    7240:	30bff804 	addi	r2,r6,-32
    7244:	a0825636 	bltu	r20,r2,7ba0 <___vfiprintf_internal_r+0xae8>
    7248:	100490ba 	slli	r2,r2,2
    724c:	01000034 	movhi	r4,0
    7250:	211c9804 	addi	r4,r4,29280
    7254:	1105883a 	add	r2,r2,r4
    7258:	10800017 	ldw	r2,0(r2)
    725c:	1000683a 	jmp	r2
    7260:	00007b30 	cmpltui	zero,zero,492
    7264:	00007ba0 	cmpeqi	zero,zero,494
    7268:	00007ba0 	cmpeqi	zero,zero,494
    726c:	00007b94 	movui	zero,494
    7270:	00007ba0 	cmpeqi	zero,zero,494
    7274:	00007ba0 	cmpeqi	zero,zero,494
    7278:	00007ba0 	cmpeqi	zero,zero,494
    727c:	00007ba0 	cmpeqi	zero,zero,494
    7280:	00007ba0 	cmpeqi	zero,zero,494
    7284:	00007ba0 	cmpeqi	zero,zero,494
    7288:	00007920 	cmpeqi	zero,zero,484
    728c:	00007b48 	cmpgei	zero,zero,493
    7290:	00007ba0 	cmpeqi	zero,zero,494
    7294:	000074f4 	movhi	zero,467
    7298:	00007944 	movi	zero,485
    729c:	00007ba0 	cmpeqi	zero,zero,494
    72a0:	00007500 	call	750 <_malloc_r+0x50>
    72a4:	0000750c 	andi	zero,zero,468
    72a8:	0000750c 	andi	zero,zero,468
    72ac:	0000750c 	andi	zero,zero,468
    72b0:	0000750c 	andi	zero,zero,468
    72b4:	0000750c 	andi	zero,zero,468
    72b8:	0000750c 	andi	zero,zero,468
    72bc:	0000750c 	andi	zero,zero,468
    72c0:	0000750c 	andi	zero,zero,468
    72c4:	0000750c 	andi	zero,zero,468
    72c8:	00007ba0 	cmpeqi	zero,zero,494
    72cc:	00007ba0 	cmpeqi	zero,zero,494
    72d0:	00007ba0 	cmpeqi	zero,zero,494
    72d4:	00007ba0 	cmpeqi	zero,zero,494
    72d8:	00007ba0 	cmpeqi	zero,zero,494
    72dc:	00007ba0 	cmpeqi	zero,zero,494
    72e0:	00007ba0 	cmpeqi	zero,zero,494
    72e4:	00007ba0 	cmpeqi	zero,zero,494
    72e8:	00007ba0 	cmpeqi	zero,zero,494
    72ec:	00007ba0 	cmpeqi	zero,zero,494
    72f0:	0000754c 	andi	zero,zero,469
    72f4:	00007ba0 	cmpeqi	zero,zero,494
    72f8:	00007ba0 	cmpeqi	zero,zero,494
    72fc:	00007ba0 	cmpeqi	zero,zero,494
    7300:	00007ba0 	cmpeqi	zero,zero,494
    7304:	00007ba0 	cmpeqi	zero,zero,494
    7308:	00007ba0 	cmpeqi	zero,zero,494
    730c:	00007ba0 	cmpeqi	zero,zero,494
    7310:	00007ba0 	cmpeqi	zero,zero,494
    7314:	00007ba0 	cmpeqi	zero,zero,494
    7318:	00007ba0 	cmpeqi	zero,zero,494
    731c:	0000783c 	xorhi	zero,zero,480
    7320:	00007ba0 	cmpeqi	zero,zero,494
    7324:	00007ba0 	cmpeqi	zero,zero,494
    7328:	00007ba0 	cmpeqi	zero,zero,494
    732c:	00007ba0 	cmpeqi	zero,zero,494
    7330:	00007ba0 	cmpeqi	zero,zero,494
    7334:	0000787c 	xorhi	zero,zero,481
    7338:	00007ba0 	cmpeqi	zero,zero,494
    733c:	00007ba0 	cmpeqi	zero,zero,494
    7340:	000078c0 	call	78c <_malloc_r+0x8c>
    7344:	00007ba0 	cmpeqi	zero,zero,494
    7348:	00007ba0 	cmpeqi	zero,zero,494
    734c:	00007ba0 	cmpeqi	zero,zero,494
    7350:	00007ba0 	cmpeqi	zero,zero,494
    7354:	00007ba0 	cmpeqi	zero,zero,494
    7358:	00007ba0 	cmpeqi	zero,zero,494
    735c:	00007ba0 	cmpeqi	zero,zero,494
    7360:	00007ba0 	cmpeqi	zero,zero,494
    7364:	00007ba0 	cmpeqi	zero,zero,494
    7368:	00007ba0 	cmpeqi	zero,zero,494
    736c:	00007808 	cmpgei	zero,zero,480
    7370:	00007b58 	cmpnei	zero,zero,493
    7374:	00007ba0 	cmpeqi	zero,zero,494
    7378:	00007ba0 	cmpeqi	zero,zero,494
    737c:	00007ba0 	cmpeqi	zero,zero,494
    7380:	00007994 	movui	zero,486
    7384:	00007b58 	cmpnei	zero,zero,493
    7388:	00007ba0 	cmpeqi	zero,zero,494
    738c:	00007ba0 	cmpeqi	zero,zero,494
    7390:	000078ac 	andhi	zero,zero,482
    7394:	00007ba0 	cmpeqi	zero,zero,494
    7398:	00007af8 	rdprs	zero,zero,491
    739c:	00007a80 	call	7a8 <_malloc_r+0xa8>
    73a0:	00007ab4 	movhi	zero,490
    73a4:	000079a0 	cmpeqi	zero,zero,486
    73a8:	00007ba0 	cmpeqi	zero,zero,494
    73ac:	000079ac 	andhi	zero,zero,486
    73b0:	00007ba0 	cmpeqi	zero,zero,494
    73b4:	00007a08 	cmpgei	zero,zero,488
    73b8:	00007ba0 	cmpeqi	zero,zero,494
    73bc:	00007ba0 	cmpeqi	zero,zero,494
    73c0:	00007a3c 	xorhi	zero,zero,488
    73c4:	42000204 	addi	r8,r8,8
    73c8:	d8c12517 	ldw	r3,1172(sp)
    73cc:	1c07883a 	add	r3,r3,r16
    73d0:	d8c12515 	stw	r3,1172(sp)
    73d4:	003f8d06 	br	720c <__alt_data_end+0xfffe89c4>
    73d8:	d9012117 	ldw	r4,1156(sp)
    73dc:	d9412017 	ldw	r5,1152(sp)
    73e0:	00030840 	call	3084 <__swsetup_r>
    73e4:	1000301e 	bne	r2,zero,74a8 <___vfiprintf_internal_r+0x3f0>
    73e8:	d8812017 	ldw	r2,1152(sp)
    73ec:	01000284 	movi	r4,10
    73f0:	10c0030b 	ldhu	r3,12(r2)
    73f4:	1805883a 	mov	r2,r3
    73f8:	1080068c 	andi	r2,r2,26
    73fc:	113f551e 	bne	r2,r4,7154 <__alt_data_end+0xfffe890c>
    7400:	d9012017 	ldw	r4,1152(sp)
    7404:	2080038b 	ldhu	r2,14(r4)
    7408:	113fffcc 	andi	r4,r2,65535
    740c:	2120001c 	xori	r4,r4,32768
    7410:	21200004 	addi	r4,r4,-32768
    7414:	203f4f16 	blt	r4,zero,7154 <__alt_data_end+0xfffe890c>
    7418:	d9412017 	ldw	r5,1152(sp)
    741c:	d9012117 	ldw	r4,1156(sp)
    7420:	d9c12317 	ldw	r7,1164(sp)
    7424:	2b001917 	ldw	r12,100(r5)
    7428:	2ac00717 	ldw	r11,28(r5)
    742c:	2a800917 	ldw	r10,36(r5)
    7430:	02010004 	movi	r8,1024
    7434:	18ffff4c 	andi	r3,r3,65533
    7438:	da0b883a 	add	r5,sp,r8
    743c:	980d883a 	mov	r6,r19
    7440:	d8c1030d 	sth	r3,1036(sp)
    7444:	db011915 	stw	r12,1124(sp)
    7448:	d881038d 	sth	r2,1038(sp)
    744c:	dac10715 	stw	r11,1052(sp)
    7450:	da810915 	stw	r10,1060(sp)
    7454:	dec10015 	stw	sp,1024(sp)
    7458:	dec10415 	stw	sp,1040(sp)
    745c:	da010215 	stw	r8,1032(sp)
    7460:	da010515 	stw	r8,1044(sp)
    7464:	d8010615 	stw	zero,1048(sp)
    7468:	00070b80 	call	70b8 <___vfiprintf_internal_r>
    746c:	1021883a 	mov	r16,r2
    7470:	10000416 	blt	r2,zero,7484 <___vfiprintf_internal_r+0x3cc>
    7474:	d9012117 	ldw	r4,1156(sp)
    7478:	d9410004 	addi	r5,sp,1024
    747c:	0004b040 	call	4b04 <_fflush_r>
    7480:	10040f1e 	bne	r2,zero,84c0 <___vfiprintf_internal_r+0x1408>
    7484:	d881030b 	ldhu	r2,1036(sp)
    7488:	1080100c 	andi	r2,r2,64
    748c:	10000426 	beq	r2,zero,74a0 <___vfiprintf_internal_r+0x3e8>
    7490:	d8c12017 	ldw	r3,1152(sp)
    7494:	1880030b 	ldhu	r2,12(r3)
    7498:	10801014 	ori	r2,r2,64
    749c:	1880030d 	sth	r2,12(r3)
    74a0:	8005883a 	mov	r2,r16
    74a4:	00000106 	br	74ac <___vfiprintf_internal_r+0x3f4>
    74a8:	00bfffc4 	movi	r2,-1
    74ac:	dfc13517 	ldw	ra,1236(sp)
    74b0:	df013417 	ldw	fp,1232(sp)
    74b4:	ddc13317 	ldw	r23,1228(sp)
    74b8:	dd813217 	ldw	r22,1224(sp)
    74bc:	dd413117 	ldw	r21,1220(sp)
    74c0:	dd013017 	ldw	r20,1216(sp)
    74c4:	dcc12f17 	ldw	r19,1212(sp)
    74c8:	dc812e17 	ldw	r18,1208(sp)
    74cc:	dc412d17 	ldw	r17,1204(sp)
    74d0:	dc012c17 	ldw	r16,1200(sp)
    74d4:	dec13604 	addi	sp,sp,1240
    74d8:	f800283a 	ret
    74dc:	00050c00 	call	50c0 <__sinit>
    74e0:	003f0706 	br	7100 <__alt_data_end+0xfffe88b8>
    74e4:	d8c12417 	ldw	r3,1168(sp)
    74e8:	d8812315 	stw	r2,1164(sp)
    74ec:	00c7c83a 	sub	r3,zero,r3
    74f0:	d8c12415 	stw	r3,1168(sp)
    74f4:	94800114 	ori	r18,r18,4
    74f8:	b9800007 	ldb	r6,0(r23)
    74fc:	003f4f06 	br	723c <__alt_data_end+0xfffe89f4>
    7500:	94802014 	ori	r18,r18,128
    7504:	b9800007 	ldb	r6,0(r23)
    7508:	003f4c06 	br	723c <__alt_data_end+0xfffe89f4>
    750c:	dc012615 	stw	r16,1176(sp)
    7510:	d8012415 	stw	zero,1168(sp)
    7514:	35bff404 	addi	r22,r6,-48
    7518:	0009883a 	mov	r4,zero
    751c:	b821883a 	mov	r16,r23
    7520:	01400284 	movi	r5,10
    7524:	000a7740 	call	a774 <__mulsi3>
    7528:	81800007 	ldb	r6,0(r16)
    752c:	1589883a 	add	r4,r2,r22
    7530:	bdc00044 	addi	r23,r23,1
    7534:	35bff404 	addi	r22,r6,-48
    7538:	b821883a 	mov	r16,r23
    753c:	adbff82e 	bgeu	r21,r22,7520 <__alt_data_end+0xfffe8cd8>
    7540:	d9012415 	stw	r4,1168(sp)
    7544:	dc012617 	ldw	r16,1176(sp)
    7548:	003f3d06 	br	7240 <__alt_data_end+0xfffe89f8>
    754c:	d8c12203 	ldbu	r3,1160(sp)
    7550:	94800414 	ori	r18,r18,16
    7554:	9080080c 	andi	r2,r18,32
    7558:	d8c11d85 	stb	r3,1142(sp)
    755c:	9811883a 	mov	r8,r19
    7560:	d8c12317 	ldw	r3,1164(sp)
    7564:	10018226 	beq	r2,zero,7b70 <___vfiprintf_internal_r+0xab8>
    7568:	d9012317 	ldw	r4,1164(sp)
    756c:	18800117 	ldw	r2,4(r3)
    7570:	1cc00017 	ldw	r19,0(r3)
    7574:	21000204 	addi	r4,r4,8
    7578:	d9012315 	stw	r4,1164(sp)
    757c:	102b883a 	mov	r21,r2
    7580:	10030016 	blt	r2,zero,8184 <___vfiprintf_internal_r+0x10cc>
    7584:	dd811d83 	ldbu	r22,1142(sp)
    7588:	8029883a 	mov	r20,r16
    758c:	00800044 	movi	r2,1
    7590:	9d46b03a 	or	r3,r19,r21
    7594:	80000216 	blt	r16,zero,75a0 <___vfiprintf_internal_r+0x4e8>
    7598:	013fdfc4 	movi	r4,-129
    759c:	9124703a 	and	r18,r18,r4
    75a0:	1801b41e 	bne	r3,zero,7c74 <___vfiprintf_internal_r+0xbbc>
    75a4:	80028126 	beq	r16,zero,7fac <___vfiprintf_internal_r+0xef4>
    75a8:	10803fcc 	andi	r2,r2,255
    75ac:	00c00044 	movi	r3,1
    75b0:	10c1d126 	beq	r2,r3,7cf8 <___vfiprintf_internal_r+0xc40>
    75b4:	00c00084 	movi	r3,2
    75b8:	10c28626 	beq	r2,r3,7fd4 <___vfiprintf_internal_r+0xf1c>
    75bc:	d8c10a04 	addi	r3,sp,1064
    75c0:	9808d0fa 	srli	r4,r19,3
    75c4:	a80a977a 	slli	r5,r21,29
    75c8:	a82ad0fa 	srli	r21,r21,3
    75cc:	9cc001cc 	andi	r19,r19,7
    75d0:	98800c04 	addi	r2,r19,48
    75d4:	18ffffc4 	addi	r3,r3,-1
    75d8:	2926b03a 	or	r19,r5,r4
    75dc:	18800005 	stb	r2,0(r3)
    75e0:	9d48b03a 	or	r4,r19,r21
    75e4:	203ff61e 	bne	r4,zero,75c0 <__alt_data_end+0xfffe8d78>
    75e8:	9100004c 	andi	r4,r18,1
    75ec:	d8c12215 	stw	r3,1160(sp)
    75f0:	2002b31e 	bne	r4,zero,80c0 <___vfiprintf_internal_r+0x1008>
    75f4:	d9411e17 	ldw	r5,1144(sp)
    75f8:	28e9c83a 	sub	r20,r5,r3
    75fc:	a02b883a 	mov	r21,r20
    7600:	a400010e 	bge	r20,r16,7608 <___vfiprintf_internal_r+0x550>
    7604:	802b883a 	mov	r21,r16
    7608:	b5803fcc 	andi	r22,r22,255
    760c:	b580201c 	xori	r22,r22,128
    7610:	b5bfe004 	addi	r22,r22,-128
    7614:	b0000126 	beq	r22,zero,761c <___vfiprintf_internal_r+0x564>
    7618:	ad400044 	addi	r21,r21,1
    761c:	9280008c 	andi	r10,r18,2
    7620:	50000126 	beq	r10,zero,7628 <___vfiprintf_internal_r+0x570>
    7624:	ad400084 	addi	r21,r21,2
    7628:	9580210c 	andi	r22,r18,132
    762c:	b001751e 	bne	r22,zero,7c04 <___vfiprintf_internal_r+0xb4c>
    7630:	d9012417 	ldw	r4,1168(sp)
    7634:	2567c83a 	sub	r19,r4,r21
    7638:	04c1720e 	bge	zero,r19,7c04 <___vfiprintf_internal_r+0xb4c>
    763c:	01c00404 	movi	r7,16
    7640:	d8c11c17 	ldw	r3,1136(sp)
    7644:	3cc36b0e 	bge	r7,r19,83f4 <___vfiprintf_internal_r+0x133c>
    7648:	00800074 	movhi	r2,1
    764c:	10be3104 	addi	r2,r2,-1852
    7650:	dc012915 	stw	r16,1188(sp)
    7654:	d9011b17 	ldw	r4,1132(sp)
    7658:	9821883a 	mov	r16,r19
    765c:	d8812615 	stw	r2,1176(sp)
    7660:	030001c4 	movi	r12,7
    7664:	5027883a 	mov	r19,r10
    7668:	00000506 	br	7680 <___vfiprintf_internal_r+0x5c8>
    766c:	21400084 	addi	r5,r4,2
    7670:	42000204 	addi	r8,r8,8
    7674:	1009883a 	mov	r4,r2
    7678:	843ffc04 	addi	r16,r16,-16
    767c:	3c000d0e 	bge	r7,r16,76b4 <___vfiprintf_internal_r+0x5fc>
    7680:	18c00404 	addi	r3,r3,16
    7684:	20800044 	addi	r2,r4,1
    7688:	47000015 	stw	fp,0(r8)
    768c:	41c00115 	stw	r7,4(r8)
    7690:	d8c11c15 	stw	r3,1136(sp)
    7694:	d8811b15 	stw	r2,1132(sp)
    7698:	60bff40e 	bge	r12,r2,766c <__alt_data_end+0xfffe8e24>
    769c:	18014b1e 	bne	r3,zero,7bcc <___vfiprintf_internal_r+0xb14>
    76a0:	843ffc04 	addi	r16,r16,-16
    76a4:	0009883a 	mov	r4,zero
    76a8:	01400044 	movi	r5,1
    76ac:	d811883a 	mov	r8,sp
    76b0:	3c3ff316 	blt	r7,r16,7680 <__alt_data_end+0xfffe8e38>
    76b4:	9815883a 	mov	r10,r19
    76b8:	8027883a 	mov	r19,r16
    76bc:	dc012917 	ldw	r16,1188(sp)
    76c0:	d9012617 	ldw	r4,1176(sp)
    76c4:	98c7883a 	add	r3,r19,r3
    76c8:	44c00115 	stw	r19,4(r8)
    76cc:	41000015 	stw	r4,0(r8)
    76d0:	d8c11c15 	stw	r3,1136(sp)
    76d4:	d9411b15 	stw	r5,1132(sp)
    76d8:	008001c4 	movi	r2,7
    76dc:	11425116 	blt	r2,r5,8024 <___vfiprintf_internal_r+0xf6c>
    76e0:	d9011d87 	ldb	r4,1142(sp)
    76e4:	42000204 	addi	r8,r8,8
    76e8:	28800044 	addi	r2,r5,1
    76ec:	20014a1e 	bne	r4,zero,7c18 <___vfiprintf_internal_r+0xb60>
    76f0:	50000c26 	beq	r10,zero,7724 <___vfiprintf_internal_r+0x66c>
    76f4:	d9011d04 	addi	r4,sp,1140
    76f8:	18c00084 	addi	r3,r3,2
    76fc:	41000015 	stw	r4,0(r8)
    7700:	01000084 	movi	r4,2
    7704:	41000115 	stw	r4,4(r8)
    7708:	d8c11c15 	stw	r3,1136(sp)
    770c:	d8811b15 	stw	r2,1132(sp)
    7710:	010001c4 	movi	r4,7
    7714:	20822016 	blt	r4,r2,7f98 <___vfiprintf_internal_r+0xee0>
    7718:	100b883a 	mov	r5,r2
    771c:	42000204 	addi	r8,r8,8
    7720:	10800044 	addi	r2,r2,1
    7724:	01002004 	movi	r4,128
    7728:	b101de26 	beq	r22,r4,7ea4 <___vfiprintf_internal_r+0xdec>
    772c:	8521c83a 	sub	r16,r16,r20
    7730:	0400230e 	bge	zero,r16,77c0 <___vfiprintf_internal_r+0x708>
    7734:	04c00404 	movi	r19,16
    7738:	9c030d0e 	bge	r19,r16,8370 <___vfiprintf_internal_r+0x12b8>
    773c:	00800074 	movhi	r2,1
    7740:	10be2d04 	addi	r2,r2,-1868
    7744:	d8812615 	stw	r2,1176(sp)
    7748:	058001c4 	movi	r22,7
    774c:	00000506 	br	7764 <___vfiprintf_internal_r+0x6ac>
    7750:	28800084 	addi	r2,r5,2
    7754:	42000204 	addi	r8,r8,8
    7758:	200b883a 	mov	r5,r4
    775c:	843ffc04 	addi	r16,r16,-16
    7760:	9c000d0e 	bge	r19,r16,7798 <___vfiprintf_internal_r+0x6e0>
    7764:	18c00404 	addi	r3,r3,16
    7768:	29000044 	addi	r4,r5,1
    776c:	44400015 	stw	r17,0(r8)
    7770:	44c00115 	stw	r19,4(r8)
    7774:	d8c11c15 	stw	r3,1136(sp)
    7778:	d9011b15 	stw	r4,1132(sp)
    777c:	b13ff40e 	bge	r22,r4,7750 <__alt_data_end+0xfffe8f08>
    7780:	1801321e 	bne	r3,zero,7c4c <___vfiprintf_internal_r+0xb94>
    7784:	843ffc04 	addi	r16,r16,-16
    7788:	000b883a 	mov	r5,zero
    778c:	00800044 	movi	r2,1
    7790:	d811883a 	mov	r8,sp
    7794:	9c3ff316 	blt	r19,r16,7764 <__alt_data_end+0xfffe8f1c>
    7798:	d9012617 	ldw	r4,1176(sp)
    779c:	1c07883a 	add	r3,r3,r16
    77a0:	44000115 	stw	r16,4(r8)
    77a4:	41000015 	stw	r4,0(r8)
    77a8:	d8c11c15 	stw	r3,1136(sp)
    77ac:	d8811b15 	stw	r2,1132(sp)
    77b0:	010001c4 	movi	r4,7
    77b4:	20816216 	blt	r4,r2,7d40 <___vfiprintf_internal_r+0xc88>
    77b8:	42000204 	addi	r8,r8,8
    77bc:	10800044 	addi	r2,r2,1
    77c0:	d9012217 	ldw	r4,1160(sp)
    77c4:	1d07883a 	add	r3,r3,r20
    77c8:	45000115 	stw	r20,4(r8)
    77cc:	41000015 	stw	r4,0(r8)
    77d0:	d8c11c15 	stw	r3,1136(sp)
    77d4:	d8811b15 	stw	r2,1132(sp)
    77d8:	010001c4 	movi	r4,7
    77dc:	2081610e 	bge	r4,r2,7d64 <___vfiprintf_internal_r+0xcac>
    77e0:	1802211e 	bne	r3,zero,8068 <___vfiprintf_internal_r+0xfb0>
    77e4:	d8011b15 	stw	zero,1132(sp)
    77e8:	9480010c 	andi	r18,r18,4
    77ec:	9002171e 	bne	r18,zero,804c <___vfiprintf_internal_r+0xf94>
    77f0:	d9412417 	ldw	r5,1168(sp)
    77f4:	a9433716 	blt	r21,r5,84d4 <___vfiprintf_internal_r+0x141c>
    77f8:	d8812517 	ldw	r2,1172(sp)
    77fc:	1545883a 	add	r2,r2,r21
    7800:	d8812515 	stw	r2,1172(sp)
    7804:	00019a06 	br	7e70 <___vfiprintf_internal_r+0xdb8>
    7808:	d8c12317 	ldw	r3,1164(sp)
    780c:	05400044 	movi	r21,1
    7810:	9811883a 	mov	r8,r19
    7814:	18800017 	ldw	r2,0(r3)
    7818:	18c00104 	addi	r3,r3,4
    781c:	d8c12315 	stw	r3,1164(sp)
    7820:	d8c10004 	addi	r3,sp,1024
    7824:	d8011d85 	stb	zero,1142(sp)
    7828:	d8810005 	stb	r2,1024(sp)
    782c:	a829883a 	mov	r20,r21
    7830:	d8c12215 	stw	r3,1160(sp)
    7834:	0021883a 	mov	r16,zero
    7838:	003f7806 	br	761c <__alt_data_end+0xfffe8dd4>
    783c:	94800414 	ori	r18,r18,16
    7840:	9080080c 	andi	r2,r18,32
    7844:	9811883a 	mov	r8,r19
    7848:	10009026 	beq	r2,zero,7a8c <___vfiprintf_internal_r+0x9d4>
    784c:	d8812317 	ldw	r2,1164(sp)
    7850:	d8c12317 	ldw	r3,1164(sp)
    7854:	14c00017 	ldw	r19,0(r2)
    7858:	15400117 	ldw	r21,4(r2)
    785c:	18c00204 	addi	r3,r3,8
    7860:	d8c12315 	stw	r3,1164(sp)
    7864:	0005883a 	mov	r2,zero
    7868:	9d46b03a 	or	r3,r19,r21
    786c:	d8011d85 	stb	zero,1142(sp)
    7870:	8029883a 	mov	r20,r16
    7874:	002d883a 	mov	r22,zero
    7878:	003f4606 	br	7594 <__alt_data_end+0xfffe8d4c>
    787c:	94800414 	ori	r18,r18,16
    7880:	9080080c 	andi	r2,r18,32
    7884:	9811883a 	mov	r8,r19
    7888:	10006226 	beq	r2,zero,7a14 <___vfiprintf_internal_r+0x95c>
    788c:	d9012317 	ldw	r4,1164(sp)
    7890:	00800044 	movi	r2,1
    7894:	24c00017 	ldw	r19,0(r4)
    7898:	25400117 	ldw	r21,4(r4)
    789c:	21000204 	addi	r4,r4,8
    78a0:	d9012315 	stw	r4,1164(sp)
    78a4:	9d46b03a 	or	r3,r19,r21
    78a8:	003ff006 	br	786c <__alt_data_end+0xfffe9024>
    78ac:	b9800007 	ldb	r6,0(r23)
    78b0:	00801b04 	movi	r2,108
    78b4:	3082b226 	beq	r6,r2,8380 <___vfiprintf_internal_r+0x12c8>
    78b8:	94800414 	ori	r18,r18,16
    78bc:	003e5f06 	br	723c <__alt_data_end+0xfffe89f4>
    78c0:	d8c12203 	ldbu	r3,1160(sp)
    78c4:	01000074 	movhi	r4,1
    78c8:	213dc704 	addi	r4,r4,-2276
    78cc:	d8c11d85 	stb	r3,1142(sp)
    78d0:	d9012715 	stw	r4,1180(sp)
    78d4:	90c0080c 	andi	r3,r18,32
    78d8:	9811883a 	mov	r8,r19
    78dc:	d8812317 	ldw	r2,1164(sp)
    78e0:	18005f26 	beq	r3,zero,7a60 <___vfiprintf_internal_r+0x9a8>
    78e4:	d9012317 	ldw	r4,1164(sp)
    78e8:	14c00017 	ldw	r19,0(r2)
    78ec:	15400117 	ldw	r21,4(r2)
    78f0:	21000204 	addi	r4,r4,8
    78f4:	d9012315 	stw	r4,1164(sp)
    78f8:	9080004c 	andi	r2,r18,1
    78fc:	1001e226 	beq	r2,zero,8088 <___vfiprintf_internal_r+0xfd0>
    7900:	9d46b03a 	or	r3,r19,r21
    7904:	18024e26 	beq	r3,zero,8240 <___vfiprintf_internal_r+0x1188>
    7908:	00800c04 	movi	r2,48
    790c:	d8811d05 	stb	r2,1140(sp)
    7910:	d9811d45 	stb	r6,1141(sp)
    7914:	94800094 	ori	r18,r18,2
    7918:	00800084 	movi	r2,2
    791c:	003fd306 	br	786c <__alt_data_end+0xfffe9024>
    7920:	d9012317 	ldw	r4,1164(sp)
    7924:	d9412317 	ldw	r5,1164(sp)
    7928:	21000017 	ldw	r4,0(r4)
    792c:	28800104 	addi	r2,r5,4
    7930:	d9012415 	stw	r4,1168(sp)
    7934:	203eeb16 	blt	r4,zero,74e4 <__alt_data_end+0xfffe8c9c>
    7938:	d8812315 	stw	r2,1164(sp)
    793c:	b9800007 	ldb	r6,0(r23)
    7940:	003e3e06 	br	723c <__alt_data_end+0xfffe89f4>
    7944:	b9800007 	ldb	r6,0(r23)
    7948:	01000a84 	movi	r4,42
    794c:	b8800044 	addi	r2,r23,1
    7950:	3102d226 	beq	r6,r4,849c <___vfiprintf_internal_r+0x13e4>
    7954:	35bff404 	addi	r22,r6,-48
    7958:	102f883a 	mov	r23,r2
    795c:	0021883a 	mov	r16,zero
    7960:	adbe3736 	bltu	r21,r22,7240 <__alt_data_end+0xfffe89f8>
    7964:	0009883a 	mov	r4,zero
    7968:	01400284 	movi	r5,10
    796c:	000a7740 	call	a774 <__mulsi3>
    7970:	b9800007 	ldb	r6,0(r23)
    7974:	b089883a 	add	r4,r22,r2
    7978:	bdc00044 	addi	r23,r23,1
    797c:	35bff404 	addi	r22,r6,-48
    7980:	adbff92e 	bgeu	r21,r22,7968 <__alt_data_end+0xfffe9120>
    7984:	2021883a 	mov	r16,r4
    7988:	203e2d0e 	bge	r4,zero,7240 <__alt_data_end+0xfffe89f8>
    798c:	043fffc4 	movi	r16,-1
    7990:	003e2b06 	br	7240 <__alt_data_end+0xfffe89f8>
    7994:	94801014 	ori	r18,r18,64
    7998:	b9800007 	ldb	r6,0(r23)
    799c:	003e2706 	br	723c <__alt_data_end+0xfffe89f4>
    79a0:	94800814 	ori	r18,r18,32
    79a4:	b9800007 	ldb	r6,0(r23)
    79a8:	003e2406 	br	723c <__alt_data_end+0xfffe89f4>
    79ac:	d9412317 	ldw	r5,1164(sp)
    79b0:	d8812317 	ldw	r2,1164(sp)
    79b4:	d8011d85 	stb	zero,1142(sp)
    79b8:	29400017 	ldw	r5,0(r5)
    79bc:	9811883a 	mov	r8,r19
    79c0:	14c00104 	addi	r19,r2,4
    79c4:	d9412215 	stw	r5,1160(sp)
    79c8:	28029026 	beq	r5,zero,840c <___vfiprintf_internal_r+0x1354>
    79cc:	d9012217 	ldw	r4,1160(sp)
    79d0:	80027616 	blt	r16,zero,83ac <___vfiprintf_internal_r+0x12f4>
    79d4:	000b883a 	mov	r5,zero
    79d8:	800d883a 	mov	r6,r16
    79dc:	da012a15 	stw	r8,1192(sp)
    79e0:	000592c0 	call	592c <memchr>
    79e4:	da012a17 	ldw	r8,1192(sp)
    79e8:	1002a026 	beq	r2,zero,846c <___vfiprintf_internal_r+0x13b4>
    79ec:	d8c12217 	ldw	r3,1160(sp)
    79f0:	10e9c83a 	sub	r20,r2,r3
    79f4:	85023816 	blt	r16,r20,82d8 <___vfiprintf_internal_r+0x1220>
    79f8:	dd811d83 	ldbu	r22,1142(sp)
    79fc:	dcc12315 	stw	r19,1164(sp)
    7a00:	0021883a 	mov	r16,zero
    7a04:	003efd06 	br	75fc <__alt_data_end+0xfffe8db4>
    7a08:	9080080c 	andi	r2,r18,32
    7a0c:	9811883a 	mov	r8,r19
    7a10:	103f9e1e 	bne	r2,zero,788c <__alt_data_end+0xfffe9044>
    7a14:	9080040c 	andi	r2,r18,16
    7a18:	10021726 	beq	r2,zero,8278 <___vfiprintf_internal_r+0x11c0>
    7a1c:	d9412317 	ldw	r5,1164(sp)
    7a20:	002b883a 	mov	r21,zero
    7a24:	00800044 	movi	r2,1
    7a28:	2cc00017 	ldw	r19,0(r5)
    7a2c:	29400104 	addi	r5,r5,4
    7a30:	d9412315 	stw	r5,1164(sp)
    7a34:	9807883a 	mov	r3,r19
    7a38:	003f8c06 	br	786c <__alt_data_end+0xfffe9024>
    7a3c:	d8c12203 	ldbu	r3,1160(sp)
    7a40:	01000074 	movhi	r4,1
    7a44:	213dcc04 	addi	r4,r4,-2256
    7a48:	d8c11d85 	stb	r3,1142(sp)
    7a4c:	d9012715 	stw	r4,1180(sp)
    7a50:	90c0080c 	andi	r3,r18,32
    7a54:	9811883a 	mov	r8,r19
    7a58:	d8812317 	ldw	r2,1164(sp)
    7a5c:	183fa11e 	bne	r3,zero,78e4 <__alt_data_end+0xfffe909c>
    7a60:	90c0040c 	andi	r3,r18,16
    7a64:	1801e526 	beq	r3,zero,81fc <___vfiprintf_internal_r+0x1144>
    7a68:	d9412317 	ldw	r5,1164(sp)
    7a6c:	14c00017 	ldw	r19,0(r2)
    7a70:	002b883a 	mov	r21,zero
    7a74:	29400104 	addi	r5,r5,4
    7a78:	d9412315 	stw	r5,1164(sp)
    7a7c:	003f9e06 	br	78f8 <__alt_data_end+0xfffe90b0>
    7a80:	9080080c 	andi	r2,r18,32
    7a84:	9811883a 	mov	r8,r19
    7a88:	103f701e 	bne	r2,zero,784c <__alt_data_end+0xfffe9004>
    7a8c:	9080040c 	andi	r2,r18,16
    7a90:	1001ef26 	beq	r2,zero,8250 <___vfiprintf_internal_r+0x1198>
    7a94:	d9012317 	ldw	r4,1164(sp)
    7a98:	002b883a 	mov	r21,zero
    7a9c:	0005883a 	mov	r2,zero
    7aa0:	24c00017 	ldw	r19,0(r4)
    7aa4:	21000104 	addi	r4,r4,4
    7aa8:	d9012315 	stw	r4,1164(sp)
    7aac:	9807883a 	mov	r3,r19
    7ab0:	003f6e06 	br	786c <__alt_data_end+0xfffe9024>
    7ab4:	d8c12317 	ldw	r3,1164(sp)
    7ab8:	9811883a 	mov	r8,r19
    7abc:	00800c04 	movi	r2,48
    7ac0:	1cc00017 	ldw	r19,0(r3)
    7ac4:	01000074 	movhi	r4,1
    7ac8:	18c00104 	addi	r3,r3,4
    7acc:	d8811d05 	stb	r2,1140(sp)
    7ad0:	213dcc04 	addi	r4,r4,-2256
    7ad4:	00801e04 	movi	r2,120
    7ad8:	d8811d45 	stb	r2,1141(sp)
    7adc:	d8c12315 	stw	r3,1164(sp)
    7ae0:	002b883a 	mov	r21,zero
    7ae4:	94800094 	ori	r18,r18,2
    7ae8:	d9012715 	stw	r4,1180(sp)
    7aec:	00800084 	movi	r2,2
    7af0:	9807883a 	mov	r3,r19
    7af4:	003f5d06 	br	786c <__alt_data_end+0xfffe9024>
    7af8:	d8c12203 	ldbu	r3,1160(sp)
    7afc:	9080080c 	andi	r2,r18,32
    7b00:	9811883a 	mov	r8,r19
    7b04:	d8c11d85 	stb	r3,1142(sp)
    7b08:	1001b126 	beq	r2,zero,81d0 <___vfiprintf_internal_r+0x1118>
    7b0c:	d9012317 	ldw	r4,1164(sp)
    7b10:	d9412517 	ldw	r5,1172(sp)
    7b14:	20800017 	ldw	r2,0(r4)
    7b18:	2807d7fa 	srai	r3,r5,31
    7b1c:	21000104 	addi	r4,r4,4
    7b20:	d9012315 	stw	r4,1164(sp)
    7b24:	11400015 	stw	r5,0(r2)
    7b28:	10c00115 	stw	r3,4(r2)
    7b2c:	003d9a06 	br	7198 <__alt_data_end+0xfffe8950>
    7b30:	d8812207 	ldb	r2,1160(sp)
    7b34:	1001c41e 	bne	r2,zero,8248 <___vfiprintf_internal_r+0x1190>
    7b38:	00c00804 	movi	r3,32
    7b3c:	d8c12205 	stb	r3,1160(sp)
    7b40:	b9800007 	ldb	r6,0(r23)
    7b44:	003dbd06 	br	723c <__alt_data_end+0xfffe89f4>
    7b48:	00c00ac4 	movi	r3,43
    7b4c:	d8c12205 	stb	r3,1160(sp)
    7b50:	b9800007 	ldb	r6,0(r23)
    7b54:	003db906 	br	723c <__alt_data_end+0xfffe89f4>
    7b58:	d8c12203 	ldbu	r3,1160(sp)
    7b5c:	9080080c 	andi	r2,r18,32
    7b60:	9811883a 	mov	r8,r19
    7b64:	d8c11d85 	stb	r3,1142(sp)
    7b68:	d8c12317 	ldw	r3,1164(sp)
    7b6c:	103e7e1e 	bne	r2,zero,7568 <__alt_data_end+0xfffe8d20>
    7b70:	9080040c 	andi	r2,r18,16
    7b74:	1001a926 	beq	r2,zero,821c <___vfiprintf_internal_r+0x1164>
    7b78:	1cc00017 	ldw	r19,0(r3)
    7b7c:	d9412317 	ldw	r5,1164(sp)
    7b80:	982bd7fa 	srai	r21,r19,31
    7b84:	29400104 	addi	r5,r5,4
    7b88:	d9412315 	stw	r5,1164(sp)
    7b8c:	a805883a 	mov	r2,r21
    7b90:	003e7b06 	br	7580 <__alt_data_end+0xfffe8d38>
    7b94:	94800054 	ori	r18,r18,1
    7b98:	b9800007 	ldb	r6,0(r23)
    7b9c:	003da706 	br	723c <__alt_data_end+0xfffe89f4>
    7ba0:	d8c12203 	ldbu	r3,1160(sp)
    7ba4:	9811883a 	mov	r8,r19
    7ba8:	d8c11d85 	stb	r3,1142(sp)
    7bac:	30005826 	beq	r6,zero,7d10 <___vfiprintf_internal_r+0xc58>
    7bb0:	05400044 	movi	r21,1
    7bb4:	d8c10004 	addi	r3,sp,1024
    7bb8:	d9810005 	stb	r6,1024(sp)
    7bbc:	d8011d85 	stb	zero,1142(sp)
    7bc0:	a829883a 	mov	r20,r21
    7bc4:	d8c12215 	stw	r3,1160(sp)
    7bc8:	003f1a06 	br	7834 <__alt_data_end+0xfffe8fec>
    7bcc:	d9012117 	ldw	r4,1156(sp)
    7bd0:	d9412017 	ldw	r5,1152(sp)
    7bd4:	d9811a04 	addi	r6,sp,1128
    7bd8:	d9c12a15 	stw	r7,1192(sp)
    7bdc:	db012b15 	stw	r12,1196(sp)
    7be0:	0006fa40 	call	6fa4 <__sprint_r.part.0>
    7be4:	d9c12a17 	ldw	r7,1192(sp)
    7be8:	db012b17 	ldw	r12,1196(sp)
    7bec:	10004e1e 	bne	r2,zero,7d28 <___vfiprintf_internal_r+0xc70>
    7bf0:	d9011b17 	ldw	r4,1132(sp)
    7bf4:	d8c11c17 	ldw	r3,1136(sp)
    7bf8:	d811883a 	mov	r8,sp
    7bfc:	21400044 	addi	r5,r4,1
    7c00:	003e9d06 	br	7678 <__alt_data_end+0xfffe8e30>
    7c04:	d9411b17 	ldw	r5,1132(sp)
    7c08:	d8c11c17 	ldw	r3,1136(sp)
    7c0c:	28800044 	addi	r2,r5,1
    7c10:	d9011d87 	ldb	r4,1142(sp)
    7c14:	203eb626 	beq	r4,zero,76f0 <__alt_data_end+0xfffe8ea8>
    7c18:	01000044 	movi	r4,1
    7c1c:	d9411d84 	addi	r5,sp,1142
    7c20:	1907883a 	add	r3,r3,r4
    7c24:	41400015 	stw	r5,0(r8)
    7c28:	41000115 	stw	r4,4(r8)
    7c2c:	d8c11c15 	stw	r3,1136(sp)
    7c30:	d8811b15 	stw	r2,1132(sp)
    7c34:	014001c4 	movi	r5,7
    7c38:	2880ce16 	blt	r5,r2,7f74 <___vfiprintf_internal_r+0xebc>
    7c3c:	100b883a 	mov	r5,r2
    7c40:	42000204 	addi	r8,r8,8
    7c44:	10800044 	addi	r2,r2,1
    7c48:	003ea906 	br	76f0 <__alt_data_end+0xfffe8ea8>
    7c4c:	d9012117 	ldw	r4,1156(sp)
    7c50:	d9412017 	ldw	r5,1152(sp)
    7c54:	d9811a04 	addi	r6,sp,1128
    7c58:	0006fa40 	call	6fa4 <__sprint_r.part.0>
    7c5c:	1000321e 	bne	r2,zero,7d28 <___vfiprintf_internal_r+0xc70>
    7c60:	d9411b17 	ldw	r5,1132(sp)
    7c64:	d8c11c17 	ldw	r3,1136(sp)
    7c68:	d811883a 	mov	r8,sp
    7c6c:	28800044 	addi	r2,r5,1
    7c70:	003eba06 	br	775c <__alt_data_end+0xfffe8f14>
    7c74:	10803fcc 	andi	r2,r2,255
    7c78:	00c00044 	movi	r3,1
    7c7c:	10fe4d1e 	bne	r2,r3,75b4 <__alt_data_end+0xfffe8d6c>
    7c80:	a800021e 	bne	r21,zero,7c8c <___vfiprintf_internal_r+0xbd4>
    7c84:	00800244 	movi	r2,9
    7c88:	14c01b2e 	bgeu	r2,r19,7cf8 <___vfiprintf_internal_r+0xc40>
    7c8c:	dc012215 	stw	r16,1160(sp)
    7c90:	dd010a04 	addi	r20,sp,1064
    7c94:	a821883a 	mov	r16,r21
    7c98:	402b883a 	mov	r21,r8
    7c9c:	9809883a 	mov	r4,r19
    7ca0:	800b883a 	mov	r5,r16
    7ca4:	01800284 	movi	r6,10
    7ca8:	000f883a 	mov	r7,zero
    7cac:	000a02c0 	call	a02c <__umoddi3>
    7cb0:	10800c04 	addi	r2,r2,48
    7cb4:	a53fffc4 	addi	r20,r20,-1
    7cb8:	9809883a 	mov	r4,r19
    7cbc:	800b883a 	mov	r5,r16
    7cc0:	01800284 	movi	r6,10
    7cc4:	000f883a 	mov	r7,zero
    7cc8:	a0800005 	stb	r2,0(r20)
    7ccc:	00099ec0 	call	99ec <__udivdi3>
    7cd0:	1027883a 	mov	r19,r2
    7cd4:	10c4b03a 	or	r2,r2,r3
    7cd8:	1821883a 	mov	r16,r3
    7cdc:	103fef1e 	bne	r2,zero,7c9c <__alt_data_end+0xfffe9454>
    7ce0:	d9011e17 	ldw	r4,1144(sp)
    7ce4:	dc012217 	ldw	r16,1160(sp)
    7ce8:	a811883a 	mov	r8,r21
    7cec:	dd012215 	stw	r20,1160(sp)
    7cf0:	2529c83a 	sub	r20,r4,r20
    7cf4:	003e4106 	br	75fc <__alt_data_end+0xfffe8db4>
    7cf8:	9cc00c04 	addi	r19,r19,48
    7cfc:	d8c109c4 	addi	r3,sp,1063
    7d00:	dcc109c5 	stb	r19,1063(sp)
    7d04:	dd012817 	ldw	r20,1184(sp)
    7d08:	d8c12215 	stw	r3,1160(sp)
    7d0c:	003e3b06 	br	75fc <__alt_data_end+0xfffe8db4>
    7d10:	d8811c17 	ldw	r2,1136(sp)
    7d14:	10000426 	beq	r2,zero,7d28 <___vfiprintf_internal_r+0xc70>
    7d18:	d9012117 	ldw	r4,1156(sp)
    7d1c:	d9412017 	ldw	r5,1152(sp)
    7d20:	d9811a04 	addi	r6,sp,1128
    7d24:	0006fa40 	call	6fa4 <__sprint_r.part.0>
    7d28:	d9412017 	ldw	r5,1152(sp)
    7d2c:	2880030b 	ldhu	r2,12(r5)
    7d30:	1080100c 	andi	r2,r2,64
    7d34:	103ddc1e 	bne	r2,zero,74a8 <__alt_data_end+0xfffe8c60>
    7d38:	d8812517 	ldw	r2,1172(sp)
    7d3c:	003ddb06 	br	74ac <__alt_data_end+0xfffe8c64>
    7d40:	1801061e 	bne	r3,zero,815c <___vfiprintf_internal_r+0x10a4>
    7d44:	d8c12217 	ldw	r3,1160(sp)
    7d48:	00800044 	movi	r2,1
    7d4c:	dd000115 	stw	r20,4(sp)
    7d50:	d8c00015 	stw	r3,0(sp)
    7d54:	dd011c15 	stw	r20,1136(sp)
    7d58:	d8811b15 	stw	r2,1132(sp)
    7d5c:	a007883a 	mov	r3,r20
    7d60:	d811883a 	mov	r8,sp
    7d64:	42000204 	addi	r8,r8,8
    7d68:	9480010c 	andi	r18,r18,4
    7d6c:	90003426 	beq	r18,zero,7e40 <___vfiprintf_internal_r+0xd88>
    7d70:	d9412417 	ldw	r5,1168(sp)
    7d74:	2d65c83a 	sub	r18,r5,r21
    7d78:	0480310e 	bge	zero,r18,7e40 <___vfiprintf_internal_r+0xd88>
    7d7c:	04000404 	movi	r16,16
    7d80:	8481ad0e 	bge	r16,r18,8438 <___vfiprintf_internal_r+0x1380>
    7d84:	01400074 	movhi	r5,1
    7d88:	297e3104 	addi	r5,r5,-1852
    7d8c:	d9011b17 	ldw	r4,1132(sp)
    7d90:	d9412615 	stw	r5,1176(sp)
    7d94:	04c001c4 	movi	r19,7
    7d98:	dd012117 	ldw	r20,1156(sp)
    7d9c:	dd812017 	ldw	r22,1152(sp)
    7da0:	00000506 	br	7db8 <___vfiprintf_internal_r+0xd00>
    7da4:	21400084 	addi	r5,r4,2
    7da8:	42000204 	addi	r8,r8,8
    7dac:	1009883a 	mov	r4,r2
    7db0:	94bffc04 	addi	r18,r18,-16
    7db4:	84800d0e 	bge	r16,r18,7dec <___vfiprintf_internal_r+0xd34>
    7db8:	18c00404 	addi	r3,r3,16
    7dbc:	20800044 	addi	r2,r4,1
    7dc0:	47000015 	stw	fp,0(r8)
    7dc4:	44000115 	stw	r16,4(r8)
    7dc8:	d8c11c15 	stw	r3,1136(sp)
    7dcc:	d8811b15 	stw	r2,1132(sp)
    7dd0:	98bff40e 	bge	r19,r2,7da4 <__alt_data_end+0xfffe955c>
    7dd4:	1800291e 	bne	r3,zero,7e7c <___vfiprintf_internal_r+0xdc4>
    7dd8:	94bffc04 	addi	r18,r18,-16
    7ddc:	0009883a 	mov	r4,zero
    7de0:	01400044 	movi	r5,1
    7de4:	d811883a 	mov	r8,sp
    7de8:	84bff316 	blt	r16,r18,7db8 <__alt_data_end+0xfffe9570>
    7dec:	d8812617 	ldw	r2,1176(sp)
    7df0:	1c87883a 	add	r3,r3,r18
    7df4:	44800115 	stw	r18,4(r8)
    7df8:	40800015 	stw	r2,0(r8)
    7dfc:	d8c11c15 	stw	r3,1136(sp)
    7e00:	d9411b15 	stw	r5,1132(sp)
    7e04:	008001c4 	movi	r2,7
    7e08:	11400d0e 	bge	r2,r5,7e40 <___vfiprintf_internal_r+0xd88>
    7e0c:	1800061e 	bne	r3,zero,7e28 <___vfiprintf_internal_r+0xd70>
    7e10:	d8c12417 	ldw	r3,1168(sp)
    7e14:	a8c12e16 	blt	r21,r3,82d0 <___vfiprintf_internal_r+0x1218>
    7e18:	d9012517 	ldw	r4,1172(sp)
    7e1c:	2549883a 	add	r4,r4,r21
    7e20:	d9012515 	stw	r4,1172(sp)
    7e24:	00001206 	br	7e70 <___vfiprintf_internal_r+0xdb8>
    7e28:	d9012117 	ldw	r4,1156(sp)
    7e2c:	d9412017 	ldw	r5,1152(sp)
    7e30:	d9811a04 	addi	r6,sp,1128
    7e34:	0006fa40 	call	6fa4 <__sprint_r.part.0>
    7e38:	103fbb1e 	bne	r2,zero,7d28 <__alt_data_end+0xfffe94e0>
    7e3c:	d8c11c17 	ldw	r3,1136(sp)
    7e40:	d8812417 	ldw	r2,1168(sp)
    7e44:	a880010e 	bge	r21,r2,7e4c <___vfiprintf_internal_r+0xd94>
    7e48:	102b883a 	mov	r21,r2
    7e4c:	d9012517 	ldw	r4,1172(sp)
    7e50:	2549883a 	add	r4,r4,r21
    7e54:	d9012515 	stw	r4,1172(sp)
    7e58:	18000526 	beq	r3,zero,7e70 <___vfiprintf_internal_r+0xdb8>
    7e5c:	d9012117 	ldw	r4,1156(sp)
    7e60:	d9412017 	ldw	r5,1152(sp)
    7e64:	d9811a04 	addi	r6,sp,1128
    7e68:	0006fa40 	call	6fa4 <__sprint_r.part.0>
    7e6c:	103fae1e 	bne	r2,zero,7d28 <__alt_data_end+0xfffe94e0>
    7e70:	d8011b15 	stw	zero,1132(sp)
    7e74:	d811883a 	mov	r8,sp
    7e78:	003cc706 	br	7198 <__alt_data_end+0xfffe8950>
    7e7c:	a009883a 	mov	r4,r20
    7e80:	b00b883a 	mov	r5,r22
    7e84:	d9811a04 	addi	r6,sp,1128
    7e88:	0006fa40 	call	6fa4 <__sprint_r.part.0>
    7e8c:	103fa61e 	bne	r2,zero,7d28 <__alt_data_end+0xfffe94e0>
    7e90:	d9011b17 	ldw	r4,1132(sp)
    7e94:	d8c11c17 	ldw	r3,1136(sp)
    7e98:	d811883a 	mov	r8,sp
    7e9c:	21400044 	addi	r5,r4,1
    7ea0:	003fc306 	br	7db0 <__alt_data_end+0xfffe9568>
    7ea4:	d9012417 	ldw	r4,1168(sp)
    7ea8:	256dc83a 	sub	r22,r4,r21
    7eac:	05be1f0e 	bge	zero,r22,772c <__alt_data_end+0xfffe8ee4>
    7eb0:	04c00404 	movi	r19,16
    7eb4:	9d81720e 	bge	r19,r22,8480 <___vfiprintf_internal_r+0x13c8>
    7eb8:	00800074 	movhi	r2,1
    7ebc:	10be2d04 	addi	r2,r2,-1868
    7ec0:	d8812615 	stw	r2,1176(sp)
    7ec4:	028001c4 	movi	r10,7
    7ec8:	00000506 	br	7ee0 <___vfiprintf_internal_r+0xe28>
    7ecc:	29000084 	addi	r4,r5,2
    7ed0:	42000204 	addi	r8,r8,8
    7ed4:	100b883a 	mov	r5,r2
    7ed8:	b5bffc04 	addi	r22,r22,-16
    7edc:	9d800d0e 	bge	r19,r22,7f14 <___vfiprintf_internal_r+0xe5c>
    7ee0:	18c00404 	addi	r3,r3,16
    7ee4:	28800044 	addi	r2,r5,1
    7ee8:	44400015 	stw	r17,0(r8)
    7eec:	44c00115 	stw	r19,4(r8)
    7ef0:	d8c11c15 	stw	r3,1136(sp)
    7ef4:	d8811b15 	stw	r2,1132(sp)
    7ef8:	50bff40e 	bge	r10,r2,7ecc <__alt_data_end+0xfffe9684>
    7efc:	1800111e 	bne	r3,zero,7f44 <___vfiprintf_internal_r+0xe8c>
    7f00:	b5bffc04 	addi	r22,r22,-16
    7f04:	000b883a 	mov	r5,zero
    7f08:	01000044 	movi	r4,1
    7f0c:	d811883a 	mov	r8,sp
    7f10:	9dbff316 	blt	r19,r22,7ee0 <__alt_data_end+0xfffe9698>
    7f14:	d9412617 	ldw	r5,1176(sp)
    7f18:	1d87883a 	add	r3,r3,r22
    7f1c:	45800115 	stw	r22,4(r8)
    7f20:	41400015 	stw	r5,0(r8)
    7f24:	d8c11c15 	stw	r3,1136(sp)
    7f28:	d9011b15 	stw	r4,1132(sp)
    7f2c:	008001c4 	movi	r2,7
    7f30:	11008516 	blt	r2,r4,8148 <___vfiprintf_internal_r+0x1090>
    7f34:	42000204 	addi	r8,r8,8
    7f38:	20800044 	addi	r2,r4,1
    7f3c:	200b883a 	mov	r5,r4
    7f40:	003dfa06 	br	772c <__alt_data_end+0xfffe8ee4>
    7f44:	d9012117 	ldw	r4,1156(sp)
    7f48:	d9412017 	ldw	r5,1152(sp)
    7f4c:	d9811a04 	addi	r6,sp,1128
    7f50:	da812a15 	stw	r10,1192(sp)
    7f54:	0006fa40 	call	6fa4 <__sprint_r.part.0>
    7f58:	da812a17 	ldw	r10,1192(sp)
    7f5c:	103f721e 	bne	r2,zero,7d28 <__alt_data_end+0xfffe94e0>
    7f60:	d9411b17 	ldw	r5,1132(sp)
    7f64:	d8c11c17 	ldw	r3,1136(sp)
    7f68:	d811883a 	mov	r8,sp
    7f6c:	29000044 	addi	r4,r5,1
    7f70:	003fd906 	br	7ed8 <__alt_data_end+0xfffe9690>
    7f74:	1800681e 	bne	r3,zero,8118 <___vfiprintf_internal_r+0x1060>
    7f78:	50004d26 	beq	r10,zero,80b0 <___vfiprintf_internal_r+0xff8>
    7f7c:	d8811d04 	addi	r2,sp,1140
    7f80:	00c00084 	movi	r3,2
    7f84:	d8800015 	stw	r2,0(sp)
    7f88:	d8c00115 	stw	r3,4(sp)
    7f8c:	2005883a 	mov	r2,r4
    7f90:	d811883a 	mov	r8,sp
    7f94:	003de006 	br	7718 <__alt_data_end+0xfffe8ed0>
    7f98:	1800551e 	bne	r3,zero,80f0 <___vfiprintf_internal_r+0x1038>
    7f9c:	000b883a 	mov	r5,zero
    7fa0:	00800044 	movi	r2,1
    7fa4:	d811883a 	mov	r8,sp
    7fa8:	003dde06 	br	7724 <__alt_data_end+0xfffe8edc>
    7fac:	10803fcc 	andi	r2,r2,255
    7fb0:	1000191e 	bne	r2,zero,8018 <___vfiprintf_internal_r+0xf60>
    7fb4:	9080004c 	andi	r2,r18,1
    7fb8:	10001726 	beq	r2,zero,8018 <___vfiprintf_internal_r+0xf60>
    7fbc:	00800c04 	movi	r2,48
    7fc0:	d8c109c4 	addi	r3,sp,1063
    7fc4:	d88109c5 	stb	r2,1063(sp)
    7fc8:	dd012817 	ldw	r20,1184(sp)
    7fcc:	d8c12215 	stw	r3,1160(sp)
    7fd0:	003d8a06 	br	75fc <__alt_data_end+0xfffe8db4>
    7fd4:	d9012717 	ldw	r4,1180(sp)
    7fd8:	dd010a04 	addi	r20,sp,1064
    7fdc:	988003cc 	andi	r2,r19,15
    7fe0:	a806973a 	slli	r3,r21,28
    7fe4:	2085883a 	add	r2,r4,r2
    7fe8:	9826d13a 	srli	r19,r19,4
    7fec:	10800003 	ldbu	r2,0(r2)
    7ff0:	a82ad13a 	srli	r21,r21,4
    7ff4:	a53fffc4 	addi	r20,r20,-1
    7ff8:	1ce6b03a 	or	r19,r3,r19
    7ffc:	a0800005 	stb	r2,0(r20)
    8000:	9d44b03a 	or	r2,r19,r21
    8004:	103ff51e 	bne	r2,zero,7fdc <__alt_data_end+0xfffe9794>
    8008:	d9411e17 	ldw	r5,1144(sp)
    800c:	dd012215 	stw	r20,1160(sp)
    8010:	2d29c83a 	sub	r20,r5,r20
    8014:	003d7906 	br	75fc <__alt_data_end+0xfffe8db4>
    8018:	d8c10a04 	addi	r3,sp,1064
    801c:	d8c12215 	stw	r3,1160(sp)
    8020:	003d7606 	br	75fc <__alt_data_end+0xfffe8db4>
    8024:	18009e1e 	bne	r3,zero,82a0 <___vfiprintf_internal_r+0x11e8>
    8028:	d8811d87 	ldb	r2,1142(sp)
    802c:	10005f26 	beq	r2,zero,81ac <___vfiprintf_internal_r+0x10f4>
    8030:	00c00044 	movi	r3,1
    8034:	d9011d84 	addi	r4,sp,1142
    8038:	1805883a 	mov	r2,r3
    803c:	d9000015 	stw	r4,0(sp)
    8040:	d8c00115 	stw	r3,4(sp)
    8044:	d811883a 	mov	r8,sp
    8048:	003efc06 	br	7c3c <__alt_data_end+0xfffe93f4>
    804c:	d9412417 	ldw	r5,1168(sp)
    8050:	d811883a 	mov	r8,sp
    8054:	2d65c83a 	sub	r18,r5,r21
    8058:	04bf4816 	blt	zero,r18,7d7c <__alt_data_end+0xfffe9534>
    805c:	003f6c06 	br	7e10 <__alt_data_end+0xfffe95c8>
    8060:	b829883a 	mov	r20,r23
    8064:	003c6906 	br	720c <__alt_data_end+0xfffe89c4>
    8068:	d9012117 	ldw	r4,1156(sp)
    806c:	d9412017 	ldw	r5,1152(sp)
    8070:	d9811a04 	addi	r6,sp,1128
    8074:	0006fa40 	call	6fa4 <__sprint_r.part.0>
    8078:	103f2b1e 	bne	r2,zero,7d28 <__alt_data_end+0xfffe94e0>
    807c:	d8c11c17 	ldw	r3,1136(sp)
    8080:	d811883a 	mov	r8,sp
    8084:	003f3806 	br	7d68 <__alt_data_end+0xfffe9520>
    8088:	00800084 	movi	r2,2
    808c:	9d46b03a 	or	r3,r19,r21
    8090:	003df606 	br	786c <__alt_data_end+0xfffe9024>
    8094:	d9012117 	ldw	r4,1156(sp)
    8098:	d9412017 	ldw	r5,1152(sp)
    809c:	d9811a04 	addi	r6,sp,1128
    80a0:	0006fa40 	call	6fa4 <__sprint_r.part.0>
    80a4:	103f201e 	bne	r2,zero,7d28 <__alt_data_end+0xfffe94e0>
    80a8:	d811883a 	mov	r8,sp
    80ac:	003cc606 	br	73c8 <__alt_data_end+0xfffe8b80>
    80b0:	000b883a 	mov	r5,zero
    80b4:	2005883a 	mov	r2,r4
    80b8:	d811883a 	mov	r8,sp
    80bc:	003d9906 	br	7724 <__alt_data_end+0xfffe8edc>
    80c0:	10803fcc 	andi	r2,r2,255
    80c4:	1080201c 	xori	r2,r2,128
    80c8:	10bfe004 	addi	r2,r2,-128
    80cc:	01000c04 	movi	r4,48
    80d0:	1100b226 	beq	r2,r4,839c <___vfiprintf_internal_r+0x12e4>
    80d4:	d9412217 	ldw	r5,1160(sp)
    80d8:	d8811e17 	ldw	r2,1144(sp)
    80dc:	193fffc5 	stb	r4,-1(r3)
    80e0:	297fffc4 	addi	r5,r5,-1
    80e4:	d9412215 	stw	r5,1160(sp)
    80e8:	1169c83a 	sub	r20,r2,r5
    80ec:	003d4306 	br	75fc <__alt_data_end+0xfffe8db4>
    80f0:	d9012117 	ldw	r4,1156(sp)
    80f4:	d9412017 	ldw	r5,1152(sp)
    80f8:	d9811a04 	addi	r6,sp,1128
    80fc:	0006fa40 	call	6fa4 <__sprint_r.part.0>
    8100:	103f091e 	bne	r2,zero,7d28 <__alt_data_end+0xfffe94e0>
    8104:	d9411b17 	ldw	r5,1132(sp)
    8108:	d8c11c17 	ldw	r3,1136(sp)
    810c:	d811883a 	mov	r8,sp
    8110:	28800044 	addi	r2,r5,1
    8114:	003d8306 	br	7724 <__alt_data_end+0xfffe8edc>
    8118:	d9012117 	ldw	r4,1156(sp)
    811c:	d9412017 	ldw	r5,1152(sp)
    8120:	d9811a04 	addi	r6,sp,1128
    8124:	da812a15 	stw	r10,1192(sp)
    8128:	0006fa40 	call	6fa4 <__sprint_r.part.0>
    812c:	da812a17 	ldw	r10,1192(sp)
    8130:	103efd1e 	bne	r2,zero,7d28 <__alt_data_end+0xfffe94e0>
    8134:	d9411b17 	ldw	r5,1132(sp)
    8138:	d8c11c17 	ldw	r3,1136(sp)
    813c:	d811883a 	mov	r8,sp
    8140:	28800044 	addi	r2,r5,1
    8144:	003d6a06 	br	76f0 <__alt_data_end+0xfffe8ea8>
    8148:	1800a01e 	bne	r3,zero,83cc <___vfiprintf_internal_r+0x1314>
    814c:	000b883a 	mov	r5,zero
    8150:	00800044 	movi	r2,1
    8154:	d811883a 	mov	r8,sp
    8158:	003d7406 	br	772c <__alt_data_end+0xfffe8ee4>
    815c:	d9012117 	ldw	r4,1156(sp)
    8160:	d9412017 	ldw	r5,1152(sp)
    8164:	d9811a04 	addi	r6,sp,1128
    8168:	0006fa40 	call	6fa4 <__sprint_r.part.0>
    816c:	103eee1e 	bne	r2,zero,7d28 <__alt_data_end+0xfffe94e0>
    8170:	d8811b17 	ldw	r2,1132(sp)
    8174:	d8c11c17 	ldw	r3,1136(sp)
    8178:	d811883a 	mov	r8,sp
    817c:	10800044 	addi	r2,r2,1
    8180:	003d8f06 	br	77c0 <__alt_data_end+0xfffe8f78>
    8184:	04e7c83a 	sub	r19,zero,r19
    8188:	9804c03a 	cmpne	r2,r19,zero
    818c:	056bc83a 	sub	r21,zero,r21
    8190:	a8abc83a 	sub	r21,r21,r2
    8194:	05800b44 	movi	r22,45
    8198:	dd811d85 	stb	r22,1142(sp)
    819c:	8029883a 	mov	r20,r16
    81a0:	00800044 	movi	r2,1
    81a4:	9d46b03a 	or	r3,r19,r21
    81a8:	003cfa06 	br	7594 <__alt_data_end+0xfffe8d4c>
    81ac:	000b883a 	mov	r5,zero
    81b0:	00800044 	movi	r2,1
    81b4:	d811883a 	mov	r8,sp
    81b8:	503d5a26 	beq	r10,zero,7724 <__alt_data_end+0xfffe8edc>
    81bc:	00c00084 	movi	r3,2
    81c0:	d9011d04 	addi	r4,sp,1140
    81c4:	d9000015 	stw	r4,0(sp)
    81c8:	d8c00115 	stw	r3,4(sp)
    81cc:	003d5206 	br	7718 <__alt_data_end+0xfffe8ed0>
    81d0:	9080040c 	andi	r2,r18,16
    81d4:	1000421e 	bne	r2,zero,82e0 <___vfiprintf_internal_r+0x1228>
    81d8:	9480100c 	andi	r18,r18,64
    81dc:	90009c26 	beq	r18,zero,8450 <___vfiprintf_internal_r+0x1398>
    81e0:	d9412317 	ldw	r5,1164(sp)
    81e4:	d8c12517 	ldw	r3,1172(sp)
    81e8:	28800017 	ldw	r2,0(r5)
    81ec:	29400104 	addi	r5,r5,4
    81f0:	d9412315 	stw	r5,1164(sp)
    81f4:	10c0000d 	sth	r3,0(r2)
    81f8:	003be706 	br	7198 <__alt_data_end+0xfffe8950>
    81fc:	90c0100c 	andi	r3,r18,64
    8200:	18003e26 	beq	r3,zero,82fc <___vfiprintf_internal_r+0x1244>
    8204:	d8c12317 	ldw	r3,1164(sp)
    8208:	14c0000b 	ldhu	r19,0(r2)
    820c:	002b883a 	mov	r21,zero
    8210:	18c00104 	addi	r3,r3,4
    8214:	d8c12315 	stw	r3,1164(sp)
    8218:	003db706 	br	78f8 <__alt_data_end+0xfffe90b0>
    821c:	9080100c 	andi	r2,r18,64
    8220:	10004c26 	beq	r2,zero,8354 <___vfiprintf_internal_r+0x129c>
    8224:	1cc0000f 	ldh	r19,0(r3)
    8228:	d8812317 	ldw	r2,1164(sp)
    822c:	982bd7fa 	srai	r21,r19,31
    8230:	10800104 	addi	r2,r2,4
    8234:	d8812315 	stw	r2,1164(sp)
    8238:	a805883a 	mov	r2,r21
    823c:	003cd006 	br	7580 <__alt_data_end+0xfffe8d38>
    8240:	00800084 	movi	r2,2
    8244:	003d8906 	br	786c <__alt_data_end+0xfffe9024>
    8248:	b9800007 	ldb	r6,0(r23)
    824c:	003bfb06 	br	723c <__alt_data_end+0xfffe89f4>
    8250:	9080100c 	andi	r2,r18,64
    8254:	10003726 	beq	r2,zero,8334 <___vfiprintf_internal_r+0x127c>
    8258:	d9412317 	ldw	r5,1164(sp)
    825c:	002b883a 	mov	r21,zero
    8260:	0005883a 	mov	r2,zero
    8264:	2cc0000b 	ldhu	r19,0(r5)
    8268:	29400104 	addi	r5,r5,4
    826c:	d9412315 	stw	r5,1164(sp)
    8270:	9807883a 	mov	r3,r19
    8274:	003d7d06 	br	786c <__alt_data_end+0xfffe9024>
    8278:	9080100c 	andi	r2,r18,64
    827c:	10002526 	beq	r2,zero,8314 <___vfiprintf_internal_r+0x125c>
    8280:	d8812317 	ldw	r2,1164(sp)
    8284:	002b883a 	mov	r21,zero
    8288:	14c0000b 	ldhu	r19,0(r2)
    828c:	10800104 	addi	r2,r2,4
    8290:	d8812315 	stw	r2,1164(sp)
    8294:	9807883a 	mov	r3,r19
    8298:	00800044 	movi	r2,1
    829c:	003d7306 	br	786c <__alt_data_end+0xfffe9024>
    82a0:	d9012117 	ldw	r4,1156(sp)
    82a4:	d9412017 	ldw	r5,1152(sp)
    82a8:	d9811a04 	addi	r6,sp,1128
    82ac:	da812a15 	stw	r10,1192(sp)
    82b0:	0006fa40 	call	6fa4 <__sprint_r.part.0>
    82b4:	da812a17 	ldw	r10,1192(sp)
    82b8:	103e9b1e 	bne	r2,zero,7d28 <__alt_data_end+0xfffe94e0>
    82bc:	d9411b17 	ldw	r5,1132(sp)
    82c0:	d8c11c17 	ldw	r3,1136(sp)
    82c4:	d811883a 	mov	r8,sp
    82c8:	28800044 	addi	r2,r5,1
    82cc:	003e5006 	br	7c10 <__alt_data_end+0xfffe93c8>
    82d0:	182b883a 	mov	r21,r3
    82d4:	003ed006 	br	7e18 <__alt_data_end+0xfffe95d0>
    82d8:	8029883a 	mov	r20,r16
    82dc:	003dc606 	br	79f8 <__alt_data_end+0xfffe91b0>
    82e0:	d8c12317 	ldw	r3,1164(sp)
    82e4:	d9012517 	ldw	r4,1172(sp)
    82e8:	18800017 	ldw	r2,0(r3)
    82ec:	18c00104 	addi	r3,r3,4
    82f0:	d8c12315 	stw	r3,1164(sp)
    82f4:	11000015 	stw	r4,0(r2)
    82f8:	003ba706 	br	7198 <__alt_data_end+0xfffe8950>
    82fc:	d9012317 	ldw	r4,1164(sp)
    8300:	14c00017 	ldw	r19,0(r2)
    8304:	002b883a 	mov	r21,zero
    8308:	21000104 	addi	r4,r4,4
    830c:	d9012315 	stw	r4,1164(sp)
    8310:	003d7906 	br	78f8 <__alt_data_end+0xfffe90b0>
    8314:	d8c12317 	ldw	r3,1164(sp)
    8318:	002b883a 	mov	r21,zero
    831c:	00800044 	movi	r2,1
    8320:	1cc00017 	ldw	r19,0(r3)
    8324:	18c00104 	addi	r3,r3,4
    8328:	d8c12315 	stw	r3,1164(sp)
    832c:	9807883a 	mov	r3,r19
    8330:	003d4e06 	br	786c <__alt_data_end+0xfffe9024>
    8334:	d8812317 	ldw	r2,1164(sp)
    8338:	002b883a 	mov	r21,zero
    833c:	14c00017 	ldw	r19,0(r2)
    8340:	10800104 	addi	r2,r2,4
    8344:	d8812315 	stw	r2,1164(sp)
    8348:	9807883a 	mov	r3,r19
    834c:	0005883a 	mov	r2,zero
    8350:	003d4606 	br	786c <__alt_data_end+0xfffe9024>
    8354:	1cc00017 	ldw	r19,0(r3)
    8358:	d8c12317 	ldw	r3,1164(sp)
    835c:	982bd7fa 	srai	r21,r19,31
    8360:	18c00104 	addi	r3,r3,4
    8364:	d8c12315 	stw	r3,1164(sp)
    8368:	a805883a 	mov	r2,r21
    836c:	003c8406 	br	7580 <__alt_data_end+0xfffe8d38>
    8370:	01000074 	movhi	r4,1
    8374:	213e2d04 	addi	r4,r4,-1868
    8378:	d9012615 	stw	r4,1176(sp)
    837c:	003d0606 	br	7798 <__alt_data_end+0xfffe8f50>
    8380:	b9800043 	ldbu	r6,1(r23)
    8384:	94800814 	ori	r18,r18,32
    8388:	bdc00044 	addi	r23,r23,1
    838c:	31803fcc 	andi	r6,r6,255
    8390:	3180201c 	xori	r6,r6,128
    8394:	31bfe004 	addi	r6,r6,-128
    8398:	003ba806 	br	723c <__alt_data_end+0xfffe89f4>
    839c:	d8811e17 	ldw	r2,1144(sp)
    83a0:	d8c12217 	ldw	r3,1160(sp)
    83a4:	10e9c83a 	sub	r20,r2,r3
    83a8:	003c9406 	br	75fc <__alt_data_end+0xfffe8db4>
    83ac:	da012a15 	stw	r8,1192(sp)
    83b0:	0006f0c0 	call	6f0c <strlen>
    83b4:	1029883a 	mov	r20,r2
    83b8:	dd811d83 	ldbu	r22,1142(sp)
    83bc:	dcc12315 	stw	r19,1164(sp)
    83c0:	0021883a 	mov	r16,zero
    83c4:	da012a17 	ldw	r8,1192(sp)
    83c8:	003c8c06 	br	75fc <__alt_data_end+0xfffe8db4>
    83cc:	d9012117 	ldw	r4,1156(sp)
    83d0:	d9412017 	ldw	r5,1152(sp)
    83d4:	d9811a04 	addi	r6,sp,1128
    83d8:	0006fa40 	call	6fa4 <__sprint_r.part.0>
    83dc:	103e521e 	bne	r2,zero,7d28 <__alt_data_end+0xfffe94e0>
    83e0:	d9411b17 	ldw	r5,1132(sp)
    83e4:	d8c11c17 	ldw	r3,1136(sp)
    83e8:	d811883a 	mov	r8,sp
    83ec:	28800044 	addi	r2,r5,1
    83f0:	003cce06 	br	772c <__alt_data_end+0xfffe8ee4>
    83f4:	01400074 	movhi	r5,1
    83f8:	297e3104 	addi	r5,r5,-1852
    83fc:	d9412615 	stw	r5,1176(sp)
    8400:	d9411b17 	ldw	r5,1132(sp)
    8404:	29400044 	addi	r5,r5,1
    8408:	003cad06 	br	76c0 <__alt_data_end+0xfffe8e78>
    840c:	00800184 	movi	r2,6
    8410:	1400012e 	bgeu	r2,r16,8418 <___vfiprintf_internal_r+0x1360>
    8414:	1021883a 	mov	r16,r2
    8418:	8029883a 	mov	r20,r16
    841c:	802b883a 	mov	r21,r16
    8420:	80001c16 	blt	r16,zero,8494 <___vfiprintf_internal_r+0x13dc>
    8424:	00c00074 	movhi	r3,1
    8428:	18fdd104 	addi	r3,r3,-2236
    842c:	dcc12315 	stw	r19,1164(sp)
    8430:	d8c12215 	stw	r3,1160(sp)
    8434:	003cff06 	br	7834 <__alt_data_end+0xfffe8fec>
    8438:	d9411b17 	ldw	r5,1132(sp)
    843c:	00800074 	movhi	r2,1
    8440:	10be3104 	addi	r2,r2,-1852
    8444:	d8812615 	stw	r2,1176(sp)
    8448:	29400044 	addi	r5,r5,1
    844c:	003e6706 	br	7dec <__alt_data_end+0xfffe95a4>
    8450:	d9012317 	ldw	r4,1164(sp)
    8454:	d9412517 	ldw	r5,1172(sp)
    8458:	20800017 	ldw	r2,0(r4)
    845c:	21000104 	addi	r4,r4,4
    8460:	d9012315 	stw	r4,1164(sp)
    8464:	11400015 	stw	r5,0(r2)
    8468:	003b4b06 	br	7198 <__alt_data_end+0xfffe8950>
    846c:	8029883a 	mov	r20,r16
    8470:	dd811d83 	ldbu	r22,1142(sp)
    8474:	dcc12315 	stw	r19,1164(sp)
    8478:	0021883a 	mov	r16,zero
    847c:	003c5f06 	br	75fc <__alt_data_end+0xfffe8db4>
    8480:	01000074 	movhi	r4,1
    8484:	213e2d04 	addi	r4,r4,-1868
    8488:	d9012615 	stw	r4,1176(sp)
    848c:	1009883a 	mov	r4,r2
    8490:	003ea006 	br	7f14 <__alt_data_end+0xfffe96cc>
    8494:	002b883a 	mov	r21,zero
    8498:	003fe206 	br	8424 <__alt_data_end+0xfffe9bdc>
    849c:	d9412317 	ldw	r5,1164(sp)
    84a0:	b807883a 	mov	r3,r23
    84a4:	102f883a 	mov	r23,r2
    84a8:	2c000017 	ldw	r16,0(r5)
    84ac:	29000104 	addi	r4,r5,4
    84b0:	d9012315 	stw	r4,1164(sp)
    84b4:	80000416 	blt	r16,zero,84c8 <___vfiprintf_internal_r+0x1410>
    84b8:	19800047 	ldb	r6,1(r3)
    84bc:	003b5f06 	br	723c <__alt_data_end+0xfffe89f4>
    84c0:	043fffc4 	movi	r16,-1
    84c4:	003bef06 	br	7484 <__alt_data_end+0xfffe8c3c>
    84c8:	043fffc4 	movi	r16,-1
    84cc:	19800047 	ldb	r6,1(r3)
    84d0:	003b5a06 	br	723c <__alt_data_end+0xfffe89f4>
    84d4:	282b883a 	mov	r21,r5
    84d8:	003cc706 	br	77f8 <__alt_data_end+0xfffe8fb0>

000084dc <__vfiprintf_internal>:
    84dc:	2007883a 	mov	r3,r4
    84e0:	01000074 	movhi	r4,1
    84e4:	21053004 	addi	r4,r4,5312
    84e8:	21000017 	ldw	r4,0(r4)
    84ec:	2805883a 	mov	r2,r5
    84f0:	300f883a 	mov	r7,r6
    84f4:	180b883a 	mov	r5,r3
    84f8:	100d883a 	mov	r6,r2
    84fc:	00070b81 	jmpi	70b8 <___vfiprintf_internal_r>

00008500 <_write_r>:
    8500:	defffd04 	addi	sp,sp,-12
    8504:	dc000015 	stw	r16,0(sp)
    8508:	04000074 	movhi	r16,1
    850c:	dc400115 	stw	r17,4(sp)
    8510:	840bfb04 	addi	r16,r16,12268
    8514:	2023883a 	mov	r17,r4
    8518:	2809883a 	mov	r4,r5
    851c:	300b883a 	mov	r5,r6
    8520:	380d883a 	mov	r6,r7
    8524:	dfc00215 	stw	ra,8(sp)
    8528:	80000015 	stw	zero,0(r16)
    852c:	000d88c0 	call	d88c <write>
    8530:	00ffffc4 	movi	r3,-1
    8534:	10c00526 	beq	r2,r3,854c <_write_r+0x4c>
    8538:	dfc00217 	ldw	ra,8(sp)
    853c:	dc400117 	ldw	r17,4(sp)
    8540:	dc000017 	ldw	r16,0(sp)
    8544:	dec00304 	addi	sp,sp,12
    8548:	f800283a 	ret
    854c:	80c00017 	ldw	r3,0(r16)
    8550:	183ff926 	beq	r3,zero,8538 <__alt_data_end+0xfffe9cf0>
    8554:	88c00015 	stw	r3,0(r17)
    8558:	003ff706 	br	8538 <__alt_data_end+0xfffe9cf0>

0000855c <_close_r>:
    855c:	defffd04 	addi	sp,sp,-12
    8560:	dc000015 	stw	r16,0(sp)
    8564:	04000074 	movhi	r16,1
    8568:	dc400115 	stw	r17,4(sp)
    856c:	840bfb04 	addi	r16,r16,12268
    8570:	2023883a 	mov	r17,r4
    8574:	2809883a 	mov	r4,r5
    8578:	dfc00215 	stw	ra,8(sp)
    857c:	80000015 	stw	zero,0(r16)
    8580:	000cfe80 	call	cfe8 <close>
    8584:	00ffffc4 	movi	r3,-1
    8588:	10c00526 	beq	r2,r3,85a0 <_close_r+0x44>
    858c:	dfc00217 	ldw	ra,8(sp)
    8590:	dc400117 	ldw	r17,4(sp)
    8594:	dc000017 	ldw	r16,0(sp)
    8598:	dec00304 	addi	sp,sp,12
    859c:	f800283a 	ret
    85a0:	80c00017 	ldw	r3,0(r16)
    85a4:	183ff926 	beq	r3,zero,858c <__alt_data_end+0xfffe9d44>
    85a8:	88c00015 	stw	r3,0(r17)
    85ac:	003ff706 	br	858c <__alt_data_end+0xfffe9d44>

000085b0 <_calloc_r>:
    85b0:	defffe04 	addi	sp,sp,-8
    85b4:	dc000015 	stw	r16,0(sp)
    85b8:	2021883a 	mov	r16,r4
    85bc:	2809883a 	mov	r4,r5
    85c0:	300b883a 	mov	r5,r6
    85c4:	dfc00115 	stw	ra,4(sp)
    85c8:	000a7740 	call	a774 <__mulsi3>
    85cc:	8009883a 	mov	r4,r16
    85d0:	100b883a 	mov	r5,r2
    85d4:	00007000 	call	700 <_malloc_r>
    85d8:	1021883a 	mov	r16,r2
    85dc:	10002826 	beq	r2,zero,8680 <_calloc_r+0xd0>
    85e0:	11bfff17 	ldw	r6,-4(r2)
    85e4:	00bfff04 	movi	r2,-4
    85e8:	00c00904 	movi	r3,36
    85ec:	308c703a 	and	r6,r6,r2
    85f0:	308d883a 	add	r6,r6,r2
    85f4:	19801436 	bltu	r3,r6,8648 <_calloc_r+0x98>
    85f8:	008004c4 	movi	r2,19
    85fc:	11800936 	bltu	r2,r6,8624 <_calloc_r+0x74>
    8600:	8005883a 	mov	r2,r16
    8604:	10000015 	stw	zero,0(r2)
    8608:	10000115 	stw	zero,4(r2)
    860c:	10000215 	stw	zero,8(r2)
    8610:	8005883a 	mov	r2,r16
    8614:	dfc00117 	ldw	ra,4(sp)
    8618:	dc000017 	ldw	r16,0(sp)
    861c:	dec00204 	addi	sp,sp,8
    8620:	f800283a 	ret
    8624:	80000015 	stw	zero,0(r16)
    8628:	80000115 	stw	zero,4(r16)
    862c:	008006c4 	movi	r2,27
    8630:	11800d2e 	bgeu	r2,r6,8668 <_calloc_r+0xb8>
    8634:	80000215 	stw	zero,8(r16)
    8638:	80000315 	stw	zero,12(r16)
    863c:	30c00c26 	beq	r6,r3,8670 <_calloc_r+0xc0>
    8640:	80800404 	addi	r2,r16,16
    8644:	003fef06 	br	8604 <__alt_data_end+0xfffe9dbc>
    8648:	8009883a 	mov	r4,r16
    864c:	000b883a 	mov	r5,zero
    8650:	0005b4c0 	call	5b4c <memset>
    8654:	8005883a 	mov	r2,r16
    8658:	dfc00117 	ldw	ra,4(sp)
    865c:	dc000017 	ldw	r16,0(sp)
    8660:	dec00204 	addi	sp,sp,8
    8664:	f800283a 	ret
    8668:	80800204 	addi	r2,r16,8
    866c:	003fe506 	br	8604 <__alt_data_end+0xfffe9dbc>
    8670:	80000415 	stw	zero,16(r16)
    8674:	80800604 	addi	r2,r16,24
    8678:	80000515 	stw	zero,20(r16)
    867c:	003fe106 	br	8604 <__alt_data_end+0xfffe9dbc>
    8680:	0005883a 	mov	r2,zero
    8684:	003fe306 	br	8614 <__alt_data_end+0xfffe9dcc>

00008688 <_fclose_r>:
    8688:	28003226 	beq	r5,zero,8754 <_fclose_r+0xcc>
    868c:	defffc04 	addi	sp,sp,-16
    8690:	dc400115 	stw	r17,4(sp)
    8694:	2023883a 	mov	r17,r4
    8698:	dc000015 	stw	r16,0(sp)
    869c:	dfc00315 	stw	ra,12(sp)
    86a0:	dc800215 	stw	r18,8(sp)
    86a4:	2821883a 	mov	r16,r5
    86a8:	00050d00 	call	50d0 <__sfp_lock_acquire>
    86ac:	88000226 	beq	r17,zero,86b8 <_fclose_r+0x30>
    86b0:	88800e17 	ldw	r2,56(r17)
    86b4:	10002926 	beq	r2,zero,875c <_fclose_r+0xd4>
    86b8:	8080030f 	ldh	r2,12(r16)
    86bc:	10002226 	beq	r2,zero,8748 <_fclose_r+0xc0>
    86c0:	8809883a 	mov	r4,r17
    86c4:	800b883a 	mov	r5,r16
    86c8:	0004b040 	call	4b04 <_fflush_r>
    86cc:	1025883a 	mov	r18,r2
    86d0:	80800b17 	ldw	r2,44(r16)
    86d4:	10000426 	beq	r2,zero,86e8 <_fclose_r+0x60>
    86d8:	81400717 	ldw	r5,28(r16)
    86dc:	8809883a 	mov	r4,r17
    86e0:	103ee83a 	callr	r2
    86e4:	10002616 	blt	r2,zero,8780 <_fclose_r+0xf8>
    86e8:	8080030b 	ldhu	r2,12(r16)
    86ec:	1080200c 	andi	r2,r2,128
    86f0:	10001f1e 	bne	r2,zero,8770 <_fclose_r+0xe8>
    86f4:	81400c17 	ldw	r5,48(r16)
    86f8:	28000526 	beq	r5,zero,8710 <_fclose_r+0x88>
    86fc:	80801004 	addi	r2,r16,64
    8700:	28800226 	beq	r5,r2,870c <_fclose_r+0x84>
    8704:	8809883a 	mov	r4,r17
    8708:	00052340 	call	5234 <_free_r>
    870c:	80000c15 	stw	zero,48(r16)
    8710:	81401117 	ldw	r5,68(r16)
    8714:	28000326 	beq	r5,zero,8724 <_fclose_r+0x9c>
    8718:	8809883a 	mov	r4,r17
    871c:	00052340 	call	5234 <_free_r>
    8720:	80001115 	stw	zero,68(r16)
    8724:	8000030d 	sth	zero,12(r16)
    8728:	00050d40 	call	50d4 <__sfp_lock_release>
    872c:	9005883a 	mov	r2,r18
    8730:	dfc00317 	ldw	ra,12(sp)
    8734:	dc800217 	ldw	r18,8(sp)
    8738:	dc400117 	ldw	r17,4(sp)
    873c:	dc000017 	ldw	r16,0(sp)
    8740:	dec00404 	addi	sp,sp,16
    8744:	f800283a 	ret
    8748:	00050d40 	call	50d4 <__sfp_lock_release>
    874c:	0005883a 	mov	r2,zero
    8750:	003ff706 	br	8730 <__alt_data_end+0xfffe9ee8>
    8754:	0005883a 	mov	r2,zero
    8758:	f800283a 	ret
    875c:	8809883a 	mov	r4,r17
    8760:	00050c00 	call	50c0 <__sinit>
    8764:	8080030f 	ldh	r2,12(r16)
    8768:	103fd51e 	bne	r2,zero,86c0 <__alt_data_end+0xfffe9e78>
    876c:	003ff606 	br	8748 <__alt_data_end+0xfffe9f00>
    8770:	81400417 	ldw	r5,16(r16)
    8774:	8809883a 	mov	r4,r17
    8778:	00052340 	call	5234 <_free_r>
    877c:	003fdd06 	br	86f4 <__alt_data_end+0xfffe9eac>
    8780:	04bfffc4 	movi	r18,-1
    8784:	003fd806 	br	86e8 <__alt_data_end+0xfffe9ea0>

00008788 <fclose>:
    8788:	00800074 	movhi	r2,1
    878c:	10853004 	addi	r2,r2,5312
    8790:	200b883a 	mov	r5,r4
    8794:	11000017 	ldw	r4,0(r2)
    8798:	00086881 	jmpi	8688 <_fclose_r>

0000879c <_fputwc_r>:
    879c:	3080030b 	ldhu	r2,12(r6)
    87a0:	defff804 	addi	sp,sp,-32
    87a4:	dcc00415 	stw	r19,16(sp)
    87a8:	dc800315 	stw	r18,12(sp)
    87ac:	dc000115 	stw	r16,4(sp)
    87b0:	dfc00715 	stw	ra,28(sp)
    87b4:	dd400615 	stw	r21,24(sp)
    87b8:	dd000515 	stw	r20,20(sp)
    87bc:	dc400215 	stw	r17,8(sp)
    87c0:	10c8000c 	andi	r3,r2,8192
    87c4:	3021883a 	mov	r16,r6
    87c8:	2027883a 	mov	r19,r4
    87cc:	2825883a 	mov	r18,r5
    87d0:	1800051e 	bne	r3,zero,87e8 <_fputwc_r+0x4c>
    87d4:	30c01917 	ldw	r3,100(r6)
    87d8:	10880014 	ori	r2,r2,8192
    87dc:	3080030d 	sth	r2,12(r6)
    87e0:	18880014 	ori	r2,r3,8192
    87e4:	30801915 	stw	r2,100(r6)
    87e8:	000571c0 	call	571c <__locale_mb_cur_max>
    87ec:	00c00044 	movi	r3,1
    87f0:	10c03e26 	beq	r2,r3,88ec <_fputwc_r+0x150>
    87f4:	9809883a 	mov	r4,r19
    87f8:	d80b883a 	mov	r5,sp
    87fc:	900d883a 	mov	r6,r18
    8800:	81c01704 	addi	r7,r16,92
    8804:	00097ec0 	call	97ec <_wcrtomb_r>
    8808:	1029883a 	mov	r20,r2
    880c:	00bfffc4 	movi	r2,-1
    8810:	a0802026 	beq	r20,r2,8894 <_fputwc_r+0xf8>
    8814:	d9400003 	ldbu	r5,0(sp)
    8818:	a0001c26 	beq	r20,zero,888c <_fputwc_r+0xf0>
    881c:	0023883a 	mov	r17,zero
    8820:	05400284 	movi	r21,10
    8824:	00000906 	br	884c <_fputwc_r+0xb0>
    8828:	80800017 	ldw	r2,0(r16)
    882c:	11400005 	stb	r5,0(r2)
    8830:	80c00017 	ldw	r3,0(r16)
    8834:	18c00044 	addi	r3,r3,1
    8838:	80c00015 	stw	r3,0(r16)
    883c:	8c400044 	addi	r17,r17,1
    8840:	dc45883a 	add	r2,sp,r17
    8844:	8d00112e 	bgeu	r17,r20,888c <_fputwc_r+0xf0>
    8848:	11400003 	ldbu	r5,0(r2)
    884c:	80c00217 	ldw	r3,8(r16)
    8850:	18ffffc4 	addi	r3,r3,-1
    8854:	80c00215 	stw	r3,8(r16)
    8858:	183ff30e 	bge	r3,zero,8828 <__alt_data_end+0xfffe9fe0>
    885c:	80800617 	ldw	r2,24(r16)
    8860:	18801916 	blt	r3,r2,88c8 <_fputwc_r+0x12c>
    8864:	80800017 	ldw	r2,0(r16)
    8868:	11400005 	stb	r5,0(r2)
    886c:	80800017 	ldw	r2,0(r16)
    8870:	10c00003 	ldbu	r3,0(r2)
    8874:	10800044 	addi	r2,r2,1
    8878:	1d402326 	beq	r3,r21,8908 <_fputwc_r+0x16c>
    887c:	80800015 	stw	r2,0(r16)
    8880:	8c400044 	addi	r17,r17,1
    8884:	dc45883a 	add	r2,sp,r17
    8888:	8d3fef36 	bltu	r17,r20,8848 <__alt_data_end+0xfffea000>
    888c:	9005883a 	mov	r2,r18
    8890:	00000406 	br	88a4 <_fputwc_r+0x108>
    8894:	80c0030b 	ldhu	r3,12(r16)
    8898:	a005883a 	mov	r2,r20
    889c:	18c01014 	ori	r3,r3,64
    88a0:	80c0030d 	sth	r3,12(r16)
    88a4:	dfc00717 	ldw	ra,28(sp)
    88a8:	dd400617 	ldw	r21,24(sp)
    88ac:	dd000517 	ldw	r20,20(sp)
    88b0:	dcc00417 	ldw	r19,16(sp)
    88b4:	dc800317 	ldw	r18,12(sp)
    88b8:	dc400217 	ldw	r17,8(sp)
    88bc:	dc000117 	ldw	r16,4(sp)
    88c0:	dec00804 	addi	sp,sp,32
    88c4:	f800283a 	ret
    88c8:	9809883a 	mov	r4,r19
    88cc:	29403fcc 	andi	r5,r5,255
    88d0:	800d883a 	mov	r6,r16
    88d4:	000967c0 	call	967c <__swbuf_r>
    88d8:	10bfffe0 	cmpeqi	r2,r2,-1
    88dc:	10803fcc 	andi	r2,r2,255
    88e0:	103fd626 	beq	r2,zero,883c <__alt_data_end+0xfffe9ff4>
    88e4:	00bfffc4 	movi	r2,-1
    88e8:	003fee06 	br	88a4 <__alt_data_end+0xfffea05c>
    88ec:	90ffffc4 	addi	r3,r18,-1
    88f0:	01003f84 	movi	r4,254
    88f4:	20ffbf36 	bltu	r4,r3,87f4 <__alt_data_end+0xfffe9fac>
    88f8:	900b883a 	mov	r5,r18
    88fc:	dc800005 	stb	r18,0(sp)
    8900:	1029883a 	mov	r20,r2
    8904:	003fc506 	br	881c <__alt_data_end+0xfffe9fd4>
    8908:	9809883a 	mov	r4,r19
    890c:	a80b883a 	mov	r5,r21
    8910:	800d883a 	mov	r6,r16
    8914:	000967c0 	call	967c <__swbuf_r>
    8918:	10bfffe0 	cmpeqi	r2,r2,-1
    891c:	003fef06 	br	88dc <__alt_data_end+0xfffea094>

00008920 <fputwc>:
    8920:	defffc04 	addi	sp,sp,-16
    8924:	dc000115 	stw	r16,4(sp)
    8928:	04000074 	movhi	r16,1
    892c:	84053004 	addi	r16,r16,5312
    8930:	dc400215 	stw	r17,8(sp)
    8934:	2023883a 	mov	r17,r4
    8938:	81000017 	ldw	r4,0(r16)
    893c:	dfc00315 	stw	ra,12(sp)
    8940:	280d883a 	mov	r6,r5
    8944:	20000626 	beq	r4,zero,8960 <fputwc+0x40>
    8948:	20800e17 	ldw	r2,56(r4)
    894c:	1000041e 	bne	r2,zero,8960 <fputwc+0x40>
    8950:	d9400015 	stw	r5,0(sp)
    8954:	00050c00 	call	50c0 <__sinit>
    8958:	81000017 	ldw	r4,0(r16)
    895c:	d9800017 	ldw	r6,0(sp)
    8960:	880b883a 	mov	r5,r17
    8964:	dfc00317 	ldw	ra,12(sp)
    8968:	dc400217 	ldw	r17,8(sp)
    896c:	dc000117 	ldw	r16,4(sp)
    8970:	dec00404 	addi	sp,sp,16
    8974:	000879c1 	jmpi	879c <_fputwc_r>

00008978 <_fstat_r>:
    8978:	defffd04 	addi	sp,sp,-12
    897c:	dc000015 	stw	r16,0(sp)
    8980:	04000074 	movhi	r16,1
    8984:	dc400115 	stw	r17,4(sp)
    8988:	840bfb04 	addi	r16,r16,12268
    898c:	2023883a 	mov	r17,r4
    8990:	2809883a 	mov	r4,r5
    8994:	300b883a 	mov	r5,r6
    8998:	dfc00215 	stw	ra,8(sp)
    899c:	80000015 	stw	zero,0(r16)
    89a0:	000d13c0 	call	d13c <fstat>
    89a4:	00ffffc4 	movi	r3,-1
    89a8:	10c00526 	beq	r2,r3,89c0 <_fstat_r+0x48>
    89ac:	dfc00217 	ldw	ra,8(sp)
    89b0:	dc400117 	ldw	r17,4(sp)
    89b4:	dc000017 	ldw	r16,0(sp)
    89b8:	dec00304 	addi	sp,sp,12
    89bc:	f800283a 	ret
    89c0:	80c00017 	ldw	r3,0(r16)
    89c4:	183ff926 	beq	r3,zero,89ac <__alt_data_end+0xfffea164>
    89c8:	88c00015 	stw	r3,0(r17)
    89cc:	003ff706 	br	89ac <__alt_data_end+0xfffea164>

000089d0 <__sfvwrite_r>:
    89d0:	30800217 	ldw	r2,8(r6)
    89d4:	10004526 	beq	r2,zero,8aec <__sfvwrite_r+0x11c>
    89d8:	28c0030b 	ldhu	r3,12(r5)
    89dc:	defff404 	addi	sp,sp,-48
    89e0:	dd400715 	stw	r21,28(sp)
    89e4:	dcc00515 	stw	r19,20(sp)
    89e8:	dc000215 	stw	r16,8(sp)
    89ec:	dfc00b15 	stw	ra,44(sp)
    89f0:	df000a15 	stw	fp,40(sp)
    89f4:	ddc00915 	stw	r23,36(sp)
    89f8:	dd800815 	stw	r22,32(sp)
    89fc:	dd000615 	stw	r20,24(sp)
    8a00:	dc800415 	stw	r18,16(sp)
    8a04:	dc400315 	stw	r17,12(sp)
    8a08:	1880020c 	andi	r2,r3,8
    8a0c:	2821883a 	mov	r16,r5
    8a10:	202b883a 	mov	r21,r4
    8a14:	3027883a 	mov	r19,r6
    8a18:	10002526 	beq	r2,zero,8ab0 <__sfvwrite_r+0xe0>
    8a1c:	28800417 	ldw	r2,16(r5)
    8a20:	10002326 	beq	r2,zero,8ab0 <__sfvwrite_r+0xe0>
    8a24:	1880008c 	andi	r2,r3,2
    8a28:	9c400017 	ldw	r17,0(r19)
    8a2c:	10003126 	beq	r2,zero,8af4 <__sfvwrite_r+0x124>
    8a30:	0029883a 	mov	r20,zero
    8a34:	0025883a 	mov	r18,zero
    8a38:	05810004 	movi	r22,1024
    8a3c:	a00d883a 	mov	r6,r20
    8a40:	a809883a 	mov	r4,r21
    8a44:	90002526 	beq	r18,zero,8adc <__sfvwrite_r+0x10c>
    8a48:	900f883a 	mov	r7,r18
    8a4c:	81400717 	ldw	r5,28(r16)
    8a50:	b480012e 	bgeu	r22,r18,8a58 <__sfvwrite_r+0x88>
    8a54:	01c10004 	movi	r7,1024
    8a58:	80800917 	ldw	r2,36(r16)
    8a5c:	103ee83a 	callr	r2
    8a60:	0080510e 	bge	zero,r2,8ba8 <__sfvwrite_r+0x1d8>
    8a64:	98c00217 	ldw	r3,8(r19)
    8a68:	a0a9883a 	add	r20,r20,r2
    8a6c:	90a5c83a 	sub	r18,r18,r2
    8a70:	1885c83a 	sub	r2,r3,r2
    8a74:	98800215 	stw	r2,8(r19)
    8a78:	103ff01e 	bne	r2,zero,8a3c <__alt_data_end+0xfffea1f4>
    8a7c:	0005883a 	mov	r2,zero
    8a80:	dfc00b17 	ldw	ra,44(sp)
    8a84:	df000a17 	ldw	fp,40(sp)
    8a88:	ddc00917 	ldw	r23,36(sp)
    8a8c:	dd800817 	ldw	r22,32(sp)
    8a90:	dd400717 	ldw	r21,28(sp)
    8a94:	dd000617 	ldw	r20,24(sp)
    8a98:	dcc00517 	ldw	r19,20(sp)
    8a9c:	dc800417 	ldw	r18,16(sp)
    8aa0:	dc400317 	ldw	r17,12(sp)
    8aa4:	dc000217 	ldw	r16,8(sp)
    8aa8:	dec00c04 	addi	sp,sp,48
    8aac:	f800283a 	ret
    8ab0:	a809883a 	mov	r4,r21
    8ab4:	800b883a 	mov	r5,r16
    8ab8:	00030840 	call	3084 <__swsetup_r>
    8abc:	80c0030b 	ldhu	r3,12(r16)
    8ac0:	103fd826 	beq	r2,zero,8a24 <__alt_data_end+0xfffea1dc>
    8ac4:	18c01014 	ori	r3,r3,64
    8ac8:	80c0030d 	sth	r3,12(r16)
    8acc:	00c00244 	movi	r3,9
    8ad0:	00bfffc4 	movi	r2,-1
    8ad4:	a8c00015 	stw	r3,0(r21)
    8ad8:	003fe906 	br	8a80 <__alt_data_end+0xfffea238>
    8adc:	8d000017 	ldw	r20,0(r17)
    8ae0:	8c800117 	ldw	r18,4(r17)
    8ae4:	8c400204 	addi	r17,r17,8
    8ae8:	003fd406 	br	8a3c <__alt_data_end+0xfffea1f4>
    8aec:	0005883a 	mov	r2,zero
    8af0:	f800283a 	ret
    8af4:	1880004c 	andi	r2,r3,1
    8af8:	1000301e 	bne	r2,zero,8bbc <__sfvwrite_r+0x1ec>
    8afc:	002f883a 	mov	r23,zero
    8b00:	0025883a 	mov	r18,zero
    8b04:	90001c26 	beq	r18,zero,8b78 <__sfvwrite_r+0x1a8>
    8b08:	1880800c 	andi	r2,r3,512
    8b0c:	85000217 	ldw	r20,8(r16)
    8b10:	10006c26 	beq	r2,zero,8cc4 <__sfvwrite_r+0x2f4>
    8b14:	a02d883a 	mov	r22,r20
    8b18:	95008536 	bltu	r18,r20,8d30 <__sfvwrite_r+0x360>
    8b1c:	1881200c 	andi	r2,r3,1152
    8b20:	10009d1e 	bne	r2,zero,8d98 <__sfvwrite_r+0x3c8>
    8b24:	81000017 	ldw	r4,0(r16)
    8b28:	a039883a 	mov	fp,r20
    8b2c:	9029883a 	mov	r20,r18
    8b30:	b80b883a 	mov	r5,r23
    8b34:	b00d883a 	mov	r6,r22
    8b38:	0008f240 	call	8f24 <memmove>
    8b3c:	80c00217 	ldw	r3,8(r16)
    8b40:	81000017 	ldw	r4,0(r16)
    8b44:	9005883a 	mov	r2,r18
    8b48:	1f39c83a 	sub	fp,r3,fp
    8b4c:	258f883a 	add	r7,r4,r22
    8b50:	87000215 	stw	fp,8(r16)
    8b54:	81c00015 	stw	r7,0(r16)
    8b58:	98c00217 	ldw	r3,8(r19)
    8b5c:	b8af883a 	add	r23,r23,r2
    8b60:	90a5c83a 	sub	r18,r18,r2
    8b64:	1d05c83a 	sub	r2,r3,r20
    8b68:	98800215 	stw	r2,8(r19)
    8b6c:	103fc326 	beq	r2,zero,8a7c <__alt_data_end+0xfffea234>
    8b70:	80c0030b 	ldhu	r3,12(r16)
    8b74:	903fe41e 	bne	r18,zero,8b08 <__alt_data_end+0xfffea2c0>
    8b78:	8dc00017 	ldw	r23,0(r17)
    8b7c:	8c800117 	ldw	r18,4(r17)
    8b80:	8c400204 	addi	r17,r17,8
    8b84:	003fdf06 	br	8b04 <__alt_data_end+0xfffea2bc>
    8b88:	00090dc0 	call	90dc <_realloc_r>
    8b8c:	102d883a 	mov	r22,r2
    8b90:	1000a01e 	bne	r2,zero,8e14 <__sfvwrite_r+0x444>
    8b94:	81400417 	ldw	r5,16(r16)
    8b98:	a809883a 	mov	r4,r21
    8b9c:	00052340 	call	5234 <_free_r>
    8ba0:	00800304 	movi	r2,12
    8ba4:	a8800015 	stw	r2,0(r21)
    8ba8:	80c0030b 	ldhu	r3,12(r16)
    8bac:	00bfffc4 	movi	r2,-1
    8bb0:	18c01014 	ori	r3,r3,64
    8bb4:	80c0030d 	sth	r3,12(r16)
    8bb8:	003fb106 	br	8a80 <__alt_data_end+0xfffea238>
    8bbc:	0029883a 	mov	r20,zero
    8bc0:	0011883a 	mov	r8,zero
    8bc4:	0039883a 	mov	fp,zero
    8bc8:	0025883a 	mov	r18,zero
    8bcc:	90001f26 	beq	r18,zero,8c4c <__sfvwrite_r+0x27c>
    8bd0:	40006826 	beq	r8,zero,8d74 <__sfvwrite_r+0x3a4>
    8bd4:	a02f883a 	mov	r23,r20
    8bd8:	9500012e 	bgeu	r18,r20,8be0 <__sfvwrite_r+0x210>
    8bdc:	902f883a 	mov	r23,r18
    8be0:	81000017 	ldw	r4,0(r16)
    8be4:	80800417 	ldw	r2,16(r16)
    8be8:	b82d883a 	mov	r22,r23
    8bec:	81800217 	ldw	r6,8(r16)
    8bf0:	81c00517 	ldw	r7,20(r16)
    8bf4:	1100022e 	bgeu	r2,r4,8c00 <__sfvwrite_r+0x230>
    8bf8:	31c7883a 	add	r3,r6,r7
    8bfc:	1dc01816 	blt	r3,r23,8c60 <__sfvwrite_r+0x290>
    8c00:	b9c03f16 	blt	r23,r7,8d00 <__sfvwrite_r+0x330>
    8c04:	80800917 	ldw	r2,36(r16)
    8c08:	81400717 	ldw	r5,28(r16)
    8c0c:	a809883a 	mov	r4,r21
    8c10:	da000115 	stw	r8,4(sp)
    8c14:	e00d883a 	mov	r6,fp
    8c18:	103ee83a 	callr	r2
    8c1c:	102d883a 	mov	r22,r2
    8c20:	da000117 	ldw	r8,4(sp)
    8c24:	00bfe00e 	bge	zero,r2,8ba8 <__alt_data_end+0xfffea360>
    8c28:	a5a9c83a 	sub	r20,r20,r22
    8c2c:	a0001f26 	beq	r20,zero,8cac <__sfvwrite_r+0x2dc>
    8c30:	98800217 	ldw	r2,8(r19)
    8c34:	e5b9883a 	add	fp,fp,r22
    8c38:	95a5c83a 	sub	r18,r18,r22
    8c3c:	15adc83a 	sub	r22,r2,r22
    8c40:	9d800215 	stw	r22,8(r19)
    8c44:	b03f8d26 	beq	r22,zero,8a7c <__alt_data_end+0xfffea234>
    8c48:	903fe11e 	bne	r18,zero,8bd0 <__alt_data_end+0xfffea388>
    8c4c:	8f000017 	ldw	fp,0(r17)
    8c50:	8c800117 	ldw	r18,4(r17)
    8c54:	0011883a 	mov	r8,zero
    8c58:	8c400204 	addi	r17,r17,8
    8c5c:	003fdb06 	br	8bcc <__alt_data_end+0xfffea384>
    8c60:	180d883a 	mov	r6,r3
    8c64:	e00b883a 	mov	r5,fp
    8c68:	da000115 	stw	r8,4(sp)
    8c6c:	d8c00015 	stw	r3,0(sp)
    8c70:	0008f240 	call	8f24 <memmove>
    8c74:	d8c00017 	ldw	r3,0(sp)
    8c78:	80800017 	ldw	r2,0(r16)
    8c7c:	a809883a 	mov	r4,r21
    8c80:	800b883a 	mov	r5,r16
    8c84:	10c5883a 	add	r2,r2,r3
    8c88:	80800015 	stw	r2,0(r16)
    8c8c:	d8c00015 	stw	r3,0(sp)
    8c90:	0004b040 	call	4b04 <_fflush_r>
    8c94:	d8c00017 	ldw	r3,0(sp)
    8c98:	da000117 	ldw	r8,4(sp)
    8c9c:	103fc21e 	bne	r2,zero,8ba8 <__alt_data_end+0xfffea360>
    8ca0:	182d883a 	mov	r22,r3
    8ca4:	a5a9c83a 	sub	r20,r20,r22
    8ca8:	a03fe11e 	bne	r20,zero,8c30 <__alt_data_end+0xfffea3e8>
    8cac:	a809883a 	mov	r4,r21
    8cb0:	800b883a 	mov	r5,r16
    8cb4:	0004b040 	call	4b04 <_fflush_r>
    8cb8:	103fbb1e 	bne	r2,zero,8ba8 <__alt_data_end+0xfffea360>
    8cbc:	0011883a 	mov	r8,zero
    8cc0:	003fdb06 	br	8c30 <__alt_data_end+0xfffea3e8>
    8cc4:	81000017 	ldw	r4,0(r16)
    8cc8:	80800417 	ldw	r2,16(r16)
    8ccc:	1100012e 	bgeu	r2,r4,8cd4 <__sfvwrite_r+0x304>
    8cd0:	a4805a36 	bltu	r20,r18,8e3c <__sfvwrite_r+0x46c>
    8cd4:	81c00517 	ldw	r7,20(r16)
    8cd8:	91c01a36 	bltu	r18,r7,8d44 <__sfvwrite_r+0x374>
    8cdc:	80800917 	ldw	r2,36(r16)
    8ce0:	81400717 	ldw	r5,28(r16)
    8ce4:	a809883a 	mov	r4,r21
    8ce8:	b80d883a 	mov	r6,r23
    8cec:	103ee83a 	callr	r2
    8cf0:	1029883a 	mov	r20,r2
    8cf4:	00bfac0e 	bge	zero,r2,8ba8 <__alt_data_end+0xfffea360>
    8cf8:	a005883a 	mov	r2,r20
    8cfc:	003f9606 	br	8b58 <__alt_data_end+0xfffea310>
    8d00:	b80d883a 	mov	r6,r23
    8d04:	e00b883a 	mov	r5,fp
    8d08:	da000115 	stw	r8,4(sp)
    8d0c:	0008f240 	call	8f24 <memmove>
    8d10:	80800217 	ldw	r2,8(r16)
    8d14:	80c00017 	ldw	r3,0(r16)
    8d18:	da000117 	ldw	r8,4(sp)
    8d1c:	15c5c83a 	sub	r2,r2,r23
    8d20:	1def883a 	add	r23,r3,r23
    8d24:	80800215 	stw	r2,8(r16)
    8d28:	85c00015 	stw	r23,0(r16)
    8d2c:	003fbe06 	br	8c28 <__alt_data_end+0xfffea3e0>
    8d30:	81000017 	ldw	r4,0(r16)
    8d34:	9039883a 	mov	fp,r18
    8d38:	9029883a 	mov	r20,r18
    8d3c:	902d883a 	mov	r22,r18
    8d40:	003f7b06 	br	8b30 <__alt_data_end+0xfffea2e8>
    8d44:	b80b883a 	mov	r5,r23
    8d48:	900d883a 	mov	r6,r18
    8d4c:	0008f240 	call	8f24 <memmove>
    8d50:	80c00217 	ldw	r3,8(r16)
    8d54:	80800017 	ldw	r2,0(r16)
    8d58:	9029883a 	mov	r20,r18
    8d5c:	1c87c83a 	sub	r3,r3,r18
    8d60:	1485883a 	add	r2,r2,r18
    8d64:	80800015 	stw	r2,0(r16)
    8d68:	80c00215 	stw	r3,8(r16)
    8d6c:	9005883a 	mov	r2,r18
    8d70:	003f7906 	br	8b58 <__alt_data_end+0xfffea310>
    8d74:	e009883a 	mov	r4,fp
    8d78:	01400284 	movi	r5,10
    8d7c:	900d883a 	mov	r6,r18
    8d80:	000592c0 	call	592c <memchr>
    8d84:	10003826 	beq	r2,zero,8e68 <__sfvwrite_r+0x498>
    8d88:	10800044 	addi	r2,r2,1
    8d8c:	1729c83a 	sub	r20,r2,fp
    8d90:	02000044 	movi	r8,1
    8d94:	003f8f06 	br	8bd4 <__alt_data_end+0xfffea38c>
    8d98:	80800517 	ldw	r2,20(r16)
    8d9c:	81400417 	ldw	r5,16(r16)
    8da0:	87000017 	ldw	fp,0(r16)
    8da4:	10a9883a 	add	r20,r2,r2
    8da8:	a085883a 	add	r2,r20,r2
    8dac:	1028d7fa 	srli	r20,r2,31
    8db0:	e179c83a 	sub	fp,fp,r5
    8db4:	e1000044 	addi	r4,fp,1
    8db8:	a085883a 	add	r2,r20,r2
    8dbc:	1029d07a 	srai	r20,r2,1
    8dc0:	2485883a 	add	r2,r4,r18
    8dc4:	a00d883a 	mov	r6,r20
    8dc8:	a080022e 	bgeu	r20,r2,8dd4 <__sfvwrite_r+0x404>
    8dcc:	1029883a 	mov	r20,r2
    8dd0:	100d883a 	mov	r6,r2
    8dd4:	18c1000c 	andi	r3,r3,1024
    8dd8:	a809883a 	mov	r4,r21
    8ddc:	183f6a26 	beq	r3,zero,8b88 <__alt_data_end+0xfffea340>
    8de0:	300b883a 	mov	r5,r6
    8de4:	00007000 	call	700 <_malloc_r>
    8de8:	102d883a 	mov	r22,r2
    8dec:	103f6c26 	beq	r2,zero,8ba0 <__alt_data_end+0xfffea358>
    8df0:	81400417 	ldw	r5,16(r16)
    8df4:	1009883a 	mov	r4,r2
    8df8:	e00d883a 	mov	r6,fp
    8dfc:	0005a140 	call	5a14 <memcpy>
    8e00:	8080030b 	ldhu	r2,12(r16)
    8e04:	00fedfc4 	movi	r3,-1153
    8e08:	10c4703a 	and	r2,r2,r3
    8e0c:	10802014 	ori	r2,r2,128
    8e10:	8080030d 	sth	r2,12(r16)
    8e14:	b709883a 	add	r4,r22,fp
    8e18:	a707c83a 	sub	r3,r20,fp
    8e1c:	85800415 	stw	r22,16(r16)
    8e20:	85000515 	stw	r20,20(r16)
    8e24:	81000015 	stw	r4,0(r16)
    8e28:	9039883a 	mov	fp,r18
    8e2c:	80c00215 	stw	r3,8(r16)
    8e30:	9029883a 	mov	r20,r18
    8e34:	902d883a 	mov	r22,r18
    8e38:	003f3d06 	br	8b30 <__alt_data_end+0xfffea2e8>
    8e3c:	b80b883a 	mov	r5,r23
    8e40:	a00d883a 	mov	r6,r20
    8e44:	0008f240 	call	8f24 <memmove>
    8e48:	80800017 	ldw	r2,0(r16)
    8e4c:	a809883a 	mov	r4,r21
    8e50:	800b883a 	mov	r5,r16
    8e54:	1505883a 	add	r2,r2,r20
    8e58:	80800015 	stw	r2,0(r16)
    8e5c:	0004b040 	call	4b04 <_fflush_r>
    8e60:	103fa526 	beq	r2,zero,8cf8 <__alt_data_end+0xfffea4b0>
    8e64:	003f5006 	br	8ba8 <__alt_data_end+0xfffea360>
    8e68:	95000044 	addi	r20,r18,1
    8e6c:	02000044 	movi	r8,1
    8e70:	003f5806 	br	8bd4 <__alt_data_end+0xfffea38c>

00008e74 <_isatty_r>:
    8e74:	defffd04 	addi	sp,sp,-12
    8e78:	dc000015 	stw	r16,0(sp)
    8e7c:	04000074 	movhi	r16,1
    8e80:	dc400115 	stw	r17,4(sp)
    8e84:	840bfb04 	addi	r16,r16,12268
    8e88:	2023883a 	mov	r17,r4
    8e8c:	2809883a 	mov	r4,r5
    8e90:	dfc00215 	stw	ra,8(sp)
    8e94:	80000015 	stw	zero,0(r16)
    8e98:	000d2440 	call	d244 <isatty>
    8e9c:	00ffffc4 	movi	r3,-1
    8ea0:	10c00526 	beq	r2,r3,8eb8 <_isatty_r+0x44>
    8ea4:	dfc00217 	ldw	ra,8(sp)
    8ea8:	dc400117 	ldw	r17,4(sp)
    8eac:	dc000017 	ldw	r16,0(sp)
    8eb0:	dec00304 	addi	sp,sp,12
    8eb4:	f800283a 	ret
    8eb8:	80c00017 	ldw	r3,0(r16)
    8ebc:	183ff926 	beq	r3,zero,8ea4 <__alt_data_end+0xfffea65c>
    8ec0:	88c00015 	stw	r3,0(r17)
    8ec4:	003ff706 	br	8ea4 <__alt_data_end+0xfffea65c>

00008ec8 <_lseek_r>:
    8ec8:	defffd04 	addi	sp,sp,-12
    8ecc:	dc000015 	stw	r16,0(sp)
    8ed0:	04000074 	movhi	r16,1
    8ed4:	dc400115 	stw	r17,4(sp)
    8ed8:	840bfb04 	addi	r16,r16,12268
    8edc:	2023883a 	mov	r17,r4
    8ee0:	2809883a 	mov	r4,r5
    8ee4:	300b883a 	mov	r5,r6
    8ee8:	380d883a 	mov	r6,r7
    8eec:	dfc00215 	stw	ra,8(sp)
    8ef0:	80000015 	stw	zero,0(r16)
    8ef4:	000d4240 	call	d424 <lseek>
    8ef8:	00ffffc4 	movi	r3,-1
    8efc:	10c00526 	beq	r2,r3,8f14 <_lseek_r+0x4c>
    8f00:	dfc00217 	ldw	ra,8(sp)
    8f04:	dc400117 	ldw	r17,4(sp)
    8f08:	dc000017 	ldw	r16,0(sp)
    8f0c:	dec00304 	addi	sp,sp,12
    8f10:	f800283a 	ret
    8f14:	80c00017 	ldw	r3,0(r16)
    8f18:	183ff926 	beq	r3,zero,8f00 <__alt_data_end+0xfffea6b8>
    8f1c:	88c00015 	stw	r3,0(r17)
    8f20:	003ff706 	br	8f00 <__alt_data_end+0xfffea6b8>

00008f24 <memmove>:
    8f24:	2005883a 	mov	r2,r4
    8f28:	29000b2e 	bgeu	r5,r4,8f58 <memmove+0x34>
    8f2c:	298f883a 	add	r7,r5,r6
    8f30:	21c0092e 	bgeu	r4,r7,8f58 <memmove+0x34>
    8f34:	2187883a 	add	r3,r4,r6
    8f38:	198bc83a 	sub	r5,r3,r6
    8f3c:	30004b26 	beq	r6,zero,906c <memmove+0x148>
    8f40:	39ffffc4 	addi	r7,r7,-1
    8f44:	39000003 	ldbu	r4,0(r7)
    8f48:	18ffffc4 	addi	r3,r3,-1
    8f4c:	19000005 	stb	r4,0(r3)
    8f50:	197ffb1e 	bne	r3,r5,8f40 <__alt_data_end+0xfffea6f8>
    8f54:	f800283a 	ret
    8f58:	00c003c4 	movi	r3,15
    8f5c:	1980412e 	bgeu	r3,r6,9064 <memmove+0x140>
    8f60:	1146b03a 	or	r3,r2,r5
    8f64:	18c000cc 	andi	r3,r3,3
    8f68:	1800411e 	bne	r3,zero,9070 <memmove+0x14c>
    8f6c:	33fffc04 	addi	r15,r6,-16
    8f70:	781ed13a 	srli	r15,r15,4
    8f74:	28c00104 	addi	r3,r5,4
    8f78:	13400104 	addi	r13,r2,4
    8f7c:	781c913a 	slli	r14,r15,4
    8f80:	2b000204 	addi	r12,r5,8
    8f84:	12c00204 	addi	r11,r2,8
    8f88:	73800504 	addi	r14,r14,20
    8f8c:	2a800304 	addi	r10,r5,12
    8f90:	12400304 	addi	r9,r2,12
    8f94:	2b9d883a 	add	r14,r5,r14
    8f98:	2811883a 	mov	r8,r5
    8f9c:	100f883a 	mov	r7,r2
    8fa0:	41000017 	ldw	r4,0(r8)
    8fa4:	39c00404 	addi	r7,r7,16
    8fa8:	18c00404 	addi	r3,r3,16
    8fac:	393ffc15 	stw	r4,-16(r7)
    8fb0:	193ffc17 	ldw	r4,-16(r3)
    8fb4:	6b400404 	addi	r13,r13,16
    8fb8:	5ac00404 	addi	r11,r11,16
    8fbc:	693ffc15 	stw	r4,-16(r13)
    8fc0:	61000017 	ldw	r4,0(r12)
    8fc4:	4a400404 	addi	r9,r9,16
    8fc8:	42000404 	addi	r8,r8,16
    8fcc:	593ffc15 	stw	r4,-16(r11)
    8fd0:	51000017 	ldw	r4,0(r10)
    8fd4:	63000404 	addi	r12,r12,16
    8fd8:	52800404 	addi	r10,r10,16
    8fdc:	493ffc15 	stw	r4,-16(r9)
    8fe0:	1bbfef1e 	bne	r3,r14,8fa0 <__alt_data_end+0xfffea758>
    8fe4:	79000044 	addi	r4,r15,1
    8fe8:	2008913a 	slli	r4,r4,4
    8fec:	328003cc 	andi	r10,r6,15
    8ff0:	02c000c4 	movi	r11,3
    8ff4:	1107883a 	add	r3,r2,r4
    8ff8:	290b883a 	add	r5,r5,r4
    8ffc:	5a801e2e 	bgeu	r11,r10,9078 <memmove+0x154>
    9000:	1813883a 	mov	r9,r3
    9004:	2811883a 	mov	r8,r5
    9008:	500f883a 	mov	r7,r10
    900c:	41000017 	ldw	r4,0(r8)
    9010:	4a400104 	addi	r9,r9,4
    9014:	39ffff04 	addi	r7,r7,-4
    9018:	493fff15 	stw	r4,-4(r9)
    901c:	42000104 	addi	r8,r8,4
    9020:	59fffa36 	bltu	r11,r7,900c <__alt_data_end+0xfffea7c4>
    9024:	513fff04 	addi	r4,r10,-4
    9028:	2008d0ba 	srli	r4,r4,2
    902c:	318000cc 	andi	r6,r6,3
    9030:	21000044 	addi	r4,r4,1
    9034:	2109883a 	add	r4,r4,r4
    9038:	2109883a 	add	r4,r4,r4
    903c:	1907883a 	add	r3,r3,r4
    9040:	290b883a 	add	r5,r5,r4
    9044:	30000926 	beq	r6,zero,906c <memmove+0x148>
    9048:	198d883a 	add	r6,r3,r6
    904c:	29c00003 	ldbu	r7,0(r5)
    9050:	18c00044 	addi	r3,r3,1
    9054:	29400044 	addi	r5,r5,1
    9058:	19ffffc5 	stb	r7,-1(r3)
    905c:	19bffb1e 	bne	r3,r6,904c <__alt_data_end+0xfffea804>
    9060:	f800283a 	ret
    9064:	1007883a 	mov	r3,r2
    9068:	003ff606 	br	9044 <__alt_data_end+0xfffea7fc>
    906c:	f800283a 	ret
    9070:	1007883a 	mov	r3,r2
    9074:	003ff406 	br	9048 <__alt_data_end+0xfffea800>
    9078:	500d883a 	mov	r6,r10
    907c:	003ff106 	br	9044 <__alt_data_end+0xfffea7fc>

00009080 <_read_r>:
    9080:	defffd04 	addi	sp,sp,-12
    9084:	dc000015 	stw	r16,0(sp)
    9088:	04000074 	movhi	r16,1
    908c:	dc400115 	stw	r17,4(sp)
    9090:	840bfb04 	addi	r16,r16,12268
    9094:	2023883a 	mov	r17,r4
    9098:	2809883a 	mov	r4,r5
    909c:	300b883a 	mov	r5,r6
    90a0:	380d883a 	mov	r6,r7
    90a4:	dfc00215 	stw	ra,8(sp)
    90a8:	80000015 	stw	zero,0(r16)
    90ac:	000d6080 	call	d608 <read>
    90b0:	00ffffc4 	movi	r3,-1
    90b4:	10c00526 	beq	r2,r3,90cc <_read_r+0x4c>
    90b8:	dfc00217 	ldw	ra,8(sp)
    90bc:	dc400117 	ldw	r17,4(sp)
    90c0:	dc000017 	ldw	r16,0(sp)
    90c4:	dec00304 	addi	sp,sp,12
    90c8:	f800283a 	ret
    90cc:	80c00017 	ldw	r3,0(r16)
    90d0:	183ff926 	beq	r3,zero,90b8 <__alt_data_end+0xfffea870>
    90d4:	88c00015 	stw	r3,0(r17)
    90d8:	003ff706 	br	90b8 <__alt_data_end+0xfffea870>

000090dc <_realloc_r>:
    90dc:	defff604 	addi	sp,sp,-40
    90e0:	dcc00315 	stw	r19,12(sp)
    90e4:	dc400115 	stw	r17,4(sp)
    90e8:	dfc00915 	stw	ra,36(sp)
    90ec:	df000815 	stw	fp,32(sp)
    90f0:	ddc00715 	stw	r23,28(sp)
    90f4:	dd800615 	stw	r22,24(sp)
    90f8:	dd400515 	stw	r21,20(sp)
    90fc:	dd000415 	stw	r20,16(sp)
    9100:	dc800215 	stw	r18,8(sp)
    9104:	dc000015 	stw	r16,0(sp)
    9108:	2827883a 	mov	r19,r5
    910c:	3023883a 	mov	r17,r6
    9110:	2800bf26 	beq	r5,zero,9410 <_realloc_r+0x334>
    9114:	2025883a 	mov	r18,r4
    9118:	000d5780 	call	d578 <__malloc_lock>
    911c:	98ffff17 	ldw	r3,-4(r19)
    9120:	01bfff04 	movi	r6,-4
    9124:	890002c4 	addi	r4,r17,11
    9128:	01c00584 	movi	r7,22
    912c:	9d7ffe04 	addi	r21,r19,-8
    9130:	19a0703a 	and	r16,r3,r6
    9134:	39003f2e 	bgeu	r7,r4,9234 <_realloc_r+0x158>
    9138:	053ffe04 	movi	r20,-8
    913c:	2528703a 	and	r20,r4,r20
    9140:	a00f883a 	mov	r7,r20
    9144:	a0008216 	blt	r20,zero,9350 <_realloc_r+0x274>
    9148:	a4408136 	bltu	r20,r17,9350 <_realloc_r+0x274>
    914c:	81c03c0e 	bge	r16,r7,9240 <_realloc_r+0x164>
    9150:	07000074 	movhi	fp,1
    9154:	e73e8204 	addi	fp,fp,-1528
    9158:	e1000217 	ldw	r4,8(fp)
    915c:	ac05883a 	add	r2,r21,r16
    9160:	2080bf26 	beq	r4,r2,9460 <_realloc_r+0x384>
    9164:	11000117 	ldw	r4,4(r2)
    9168:	023fff84 	movi	r8,-2
    916c:	2210703a 	and	r8,r4,r8
    9170:	1211883a 	add	r8,r2,r8
    9174:	41400117 	ldw	r5,4(r8)
    9178:	2940004c 	andi	r5,r5,1
    917c:	28004a1e 	bne	r5,zero,92a8 <_realloc_r+0x1cc>
    9180:	017fff04 	movi	r5,-4
    9184:	2148703a 	and	r4,r4,r5
    9188:	2409883a 	add	r4,r4,r16
    918c:	21c0ad0e 	bge	r4,r7,9444 <_realloc_r+0x368>
    9190:	18c0004c 	andi	r3,r3,1
    9194:	18007f1e 	bne	r3,zero,9394 <_realloc_r+0x2b8>
    9198:	9dfffe17 	ldw	r23,-8(r19)
    919c:	adefc83a 	sub	r23,r21,r23
    91a0:	bd800117 	ldw	r22,4(r23)
    91a4:	b14a703a 	and	r5,r22,r5
    91a8:	216d883a 	add	r22,r4,r5
    91ac:	b1c04516 	blt	r22,r7,92c4 <_realloc_r+0x1e8>
    91b0:	10c00317 	ldw	r3,12(r2)
    91b4:	10800217 	ldw	r2,8(r2)
    91b8:	81bfff04 	addi	r6,r16,-4
    91bc:	bc400204 	addi	r17,r23,8
    91c0:	10c00315 	stw	r3,12(r2)
    91c4:	18800215 	stw	r2,8(r3)
    91c8:	b9400217 	ldw	r5,8(r23)
    91cc:	b8c00317 	ldw	r3,12(r23)
    91d0:	00800904 	movi	r2,36
    91d4:	28c00315 	stw	r3,12(r5)
    91d8:	19400215 	stw	r5,8(r3)
    91dc:	1180ef36 	bltu	r2,r6,959c <_realloc_r+0x4c0>
    91e0:	008004c4 	movi	r2,19
    91e4:	1180da2e 	bgeu	r2,r6,9550 <_realloc_r+0x474>
    91e8:	98800017 	ldw	r2,0(r19)
    91ec:	b8800215 	stw	r2,8(r23)
    91f0:	98800117 	ldw	r2,4(r19)
    91f4:	b8800315 	stw	r2,12(r23)
    91f8:	008006c4 	movi	r2,27
    91fc:	1180fc2e 	bgeu	r2,r6,95f0 <_realloc_r+0x514>
    9200:	98800217 	ldw	r2,8(r19)
    9204:	b8800415 	stw	r2,16(r23)
    9208:	98800317 	ldw	r2,12(r19)
    920c:	b8800515 	stw	r2,20(r23)
    9210:	00800904 	movi	r2,36
    9214:	3080421e 	bne	r6,r2,9320 <_realloc_r+0x244>
    9218:	98800417 	ldw	r2,16(r19)
    921c:	9cc00604 	addi	r19,r19,24
    9220:	b8c00804 	addi	r3,r23,32
    9224:	b8800615 	stw	r2,24(r23)
    9228:	98bfff17 	ldw	r2,-4(r19)
    922c:	b8800715 	stw	r2,28(r23)
    9230:	00003d06 	br	9328 <_realloc_r+0x24c>
    9234:	01c00404 	movi	r7,16
    9238:	3829883a 	mov	r20,r7
    923c:	003fc206 	br	9148 <__alt_data_end+0xfffea900>
    9240:	9823883a 	mov	r17,r19
    9244:	850fc83a 	sub	r7,r16,r20
    9248:	008003c4 	movi	r2,15
    924c:	18c0004c 	andi	r3,r3,1
    9250:	11c04336 	bltu	r2,r7,9360 <_realloc_r+0x284>
    9254:	1c06b03a 	or	r3,r3,r16
    9258:	a8c00115 	stw	r3,4(r21)
    925c:	ac21883a 	add	r16,r21,r16
    9260:	80c00117 	ldw	r3,4(r16)
    9264:	18c00054 	ori	r3,r3,1
    9268:	80c00115 	stw	r3,4(r16)
    926c:	9009883a 	mov	r4,r18
    9270:	000d5980 	call	d598 <__malloc_unlock>
    9274:	8805883a 	mov	r2,r17
    9278:	dfc00917 	ldw	ra,36(sp)
    927c:	df000817 	ldw	fp,32(sp)
    9280:	ddc00717 	ldw	r23,28(sp)
    9284:	dd800617 	ldw	r22,24(sp)
    9288:	dd400517 	ldw	r21,20(sp)
    928c:	dd000417 	ldw	r20,16(sp)
    9290:	dcc00317 	ldw	r19,12(sp)
    9294:	dc800217 	ldw	r18,8(sp)
    9298:	dc400117 	ldw	r17,4(sp)
    929c:	dc000017 	ldw	r16,0(sp)
    92a0:	dec00a04 	addi	sp,sp,40
    92a4:	f800283a 	ret
    92a8:	18c0004c 	andi	r3,r3,1
    92ac:	1800391e 	bne	r3,zero,9394 <_realloc_r+0x2b8>
    92b0:	9dfffe17 	ldw	r23,-8(r19)
    92b4:	00bfff04 	movi	r2,-4
    92b8:	adefc83a 	sub	r23,r21,r23
    92bc:	b9400117 	ldw	r5,4(r23)
    92c0:	288a703a 	and	r5,r5,r2
    92c4:	2c2d883a 	add	r22,r5,r16
    92c8:	b1c03216 	blt	r22,r7,9394 <_realloc_r+0x2b8>
    92cc:	b8800317 	ldw	r2,12(r23)
    92d0:	b8c00217 	ldw	r3,8(r23)
    92d4:	81bfff04 	addi	r6,r16,-4
    92d8:	01000904 	movi	r4,36
    92dc:	18800315 	stw	r2,12(r3)
    92e0:	10c00215 	stw	r3,8(r2)
    92e4:	bc400204 	addi	r17,r23,8
    92e8:	2180ac36 	bltu	r4,r6,959c <_realloc_r+0x4c0>
    92ec:	008004c4 	movi	r2,19
    92f0:	1180972e 	bgeu	r2,r6,9550 <_realloc_r+0x474>
    92f4:	98800017 	ldw	r2,0(r19)
    92f8:	b8800215 	stw	r2,8(r23)
    92fc:	98800117 	ldw	r2,4(r19)
    9300:	b8800315 	stw	r2,12(r23)
    9304:	008006c4 	movi	r2,27
    9308:	1180b92e 	bgeu	r2,r6,95f0 <_realloc_r+0x514>
    930c:	98800217 	ldw	r2,8(r19)
    9310:	b8800415 	stw	r2,16(r23)
    9314:	98800317 	ldw	r2,12(r19)
    9318:	b8800515 	stw	r2,20(r23)
    931c:	313fbe26 	beq	r6,r4,9218 <__alt_data_end+0xfffea9d0>
    9320:	b8c00604 	addi	r3,r23,24
    9324:	9cc00404 	addi	r19,r19,16
    9328:	98800017 	ldw	r2,0(r19)
    932c:	b021883a 	mov	r16,r22
    9330:	b82b883a 	mov	r21,r23
    9334:	18800015 	stw	r2,0(r3)
    9338:	98800117 	ldw	r2,4(r19)
    933c:	18800115 	stw	r2,4(r3)
    9340:	98800217 	ldw	r2,8(r19)
    9344:	18800215 	stw	r2,8(r3)
    9348:	b8c00117 	ldw	r3,4(r23)
    934c:	003fbd06 	br	9244 <__alt_data_end+0xfffea9fc>
    9350:	00800304 	movi	r2,12
    9354:	90800015 	stw	r2,0(r18)
    9358:	0005883a 	mov	r2,zero
    935c:	003fc606 	br	9278 <__alt_data_end+0xfffeaa30>
    9360:	1d06b03a 	or	r3,r3,r20
    9364:	ad0b883a 	add	r5,r21,r20
    9368:	a8c00115 	stw	r3,4(r21)
    936c:	38800054 	ori	r2,r7,1
    9370:	28800115 	stw	r2,4(r5)
    9374:	29cf883a 	add	r7,r5,r7
    9378:	38800117 	ldw	r2,4(r7)
    937c:	9009883a 	mov	r4,r18
    9380:	29400204 	addi	r5,r5,8
    9384:	10800054 	ori	r2,r2,1
    9388:	38800115 	stw	r2,4(r7)
    938c:	00052340 	call	5234 <_free_r>
    9390:	003fb606 	br	926c <__alt_data_end+0xfffeaa24>
    9394:	880b883a 	mov	r5,r17
    9398:	9009883a 	mov	r4,r18
    939c:	00007000 	call	700 <_malloc_r>
    93a0:	1023883a 	mov	r17,r2
    93a4:	1000aa26 	beq	r2,zero,9650 <_realloc_r+0x574>
    93a8:	98ffff17 	ldw	r3,-4(r19)
    93ac:	113ffe04 	addi	r4,r2,-8
    93b0:	00bfff84 	movi	r2,-2
    93b4:	1884703a 	and	r2,r3,r2
    93b8:	a885883a 	add	r2,r21,r2
    93bc:	20808626 	beq	r4,r2,95d8 <_realloc_r+0x4fc>
    93c0:	81bfff04 	addi	r6,r16,-4
    93c4:	00800904 	movi	r2,36
    93c8:	11807036 	bltu	r2,r6,958c <_realloc_r+0x4b0>
    93cc:	00c004c4 	movi	r3,19
    93d0:	19805636 	bltu	r3,r6,952c <_realloc_r+0x450>
    93d4:	8805883a 	mov	r2,r17
    93d8:	9807883a 	mov	r3,r19
    93dc:	19000017 	ldw	r4,0(r3)
    93e0:	11000015 	stw	r4,0(r2)
    93e4:	19000117 	ldw	r4,4(r3)
    93e8:	11000115 	stw	r4,4(r2)
    93ec:	18c00217 	ldw	r3,8(r3)
    93f0:	10c00215 	stw	r3,8(r2)
    93f4:	980b883a 	mov	r5,r19
    93f8:	9009883a 	mov	r4,r18
    93fc:	00052340 	call	5234 <_free_r>
    9400:	9009883a 	mov	r4,r18
    9404:	000d5980 	call	d598 <__malloc_unlock>
    9408:	8805883a 	mov	r2,r17
    940c:	003f9a06 	br	9278 <__alt_data_end+0xfffeaa30>
    9410:	300b883a 	mov	r5,r6
    9414:	dfc00917 	ldw	ra,36(sp)
    9418:	df000817 	ldw	fp,32(sp)
    941c:	ddc00717 	ldw	r23,28(sp)
    9420:	dd800617 	ldw	r22,24(sp)
    9424:	dd400517 	ldw	r21,20(sp)
    9428:	dd000417 	ldw	r20,16(sp)
    942c:	dcc00317 	ldw	r19,12(sp)
    9430:	dc800217 	ldw	r18,8(sp)
    9434:	dc400117 	ldw	r17,4(sp)
    9438:	dc000017 	ldw	r16,0(sp)
    943c:	dec00a04 	addi	sp,sp,40
    9440:	00007001 	jmpi	700 <_malloc_r>
    9444:	11400317 	ldw	r5,12(r2)
    9448:	10800217 	ldw	r2,8(r2)
    944c:	9823883a 	mov	r17,r19
    9450:	2021883a 	mov	r16,r4
    9454:	11400315 	stw	r5,12(r2)
    9458:	28800215 	stw	r2,8(r5)
    945c:	003f7906 	br	9244 <__alt_data_end+0xfffea9fc>
    9460:	21000117 	ldw	r4,4(r4)
    9464:	00bfff04 	movi	r2,-4
    9468:	a1800404 	addi	r6,r20,16
    946c:	2088703a 	and	r4,r4,r2
    9470:	2409883a 	add	r4,r4,r16
    9474:	2180380e 	bge	r4,r6,9558 <_realloc_r+0x47c>
    9478:	18c0004c 	andi	r3,r3,1
    947c:	183fc51e 	bne	r3,zero,9394 <__alt_data_end+0xfffeab4c>
    9480:	9dfffe17 	ldw	r23,-8(r19)
    9484:	adefc83a 	sub	r23,r21,r23
    9488:	b9400117 	ldw	r5,4(r23)
    948c:	288a703a 	and	r5,r5,r2
    9490:	216d883a 	add	r22,r4,r5
    9494:	b1bf8b16 	blt	r22,r6,92c4 <__alt_data_end+0xfffeaa7c>
    9498:	b8800317 	ldw	r2,12(r23)
    949c:	b8c00217 	ldw	r3,8(r23)
    94a0:	81bfff04 	addi	r6,r16,-4
    94a4:	01000904 	movi	r4,36
    94a8:	18800315 	stw	r2,12(r3)
    94ac:	10c00215 	stw	r3,8(r2)
    94b0:	bc400204 	addi	r17,r23,8
    94b4:	21805a36 	bltu	r4,r6,9620 <_realloc_r+0x544>
    94b8:	008004c4 	movi	r2,19
    94bc:	1180562e 	bgeu	r2,r6,9618 <_realloc_r+0x53c>
    94c0:	98800017 	ldw	r2,0(r19)
    94c4:	b8800215 	stw	r2,8(r23)
    94c8:	98800117 	ldw	r2,4(r19)
    94cc:	b8800315 	stw	r2,12(r23)
    94d0:	008006c4 	movi	r2,27
    94d4:	11805636 	bltu	r2,r6,9630 <_realloc_r+0x554>
    94d8:	b8800404 	addi	r2,r23,16
    94dc:	9cc00204 	addi	r19,r19,8
    94e0:	98c00017 	ldw	r3,0(r19)
    94e4:	10c00015 	stw	r3,0(r2)
    94e8:	98c00117 	ldw	r3,4(r19)
    94ec:	10c00115 	stw	r3,4(r2)
    94f0:	98c00217 	ldw	r3,8(r19)
    94f4:	10c00215 	stw	r3,8(r2)
    94f8:	bd07883a 	add	r3,r23,r20
    94fc:	b505c83a 	sub	r2,r22,r20
    9500:	e0c00215 	stw	r3,8(fp)
    9504:	10800054 	ori	r2,r2,1
    9508:	18800115 	stw	r2,4(r3)
    950c:	b8800117 	ldw	r2,4(r23)
    9510:	9009883a 	mov	r4,r18
    9514:	1080004c 	andi	r2,r2,1
    9518:	a0a8b03a 	or	r20,r20,r2
    951c:	bd000115 	stw	r20,4(r23)
    9520:	000d5980 	call	d598 <__malloc_unlock>
    9524:	8805883a 	mov	r2,r17
    9528:	003f5306 	br	9278 <__alt_data_end+0xfffeaa30>
    952c:	98c00017 	ldw	r3,0(r19)
    9530:	88c00015 	stw	r3,0(r17)
    9534:	98c00117 	ldw	r3,4(r19)
    9538:	88c00115 	stw	r3,4(r17)
    953c:	00c006c4 	movi	r3,27
    9540:	19801d36 	bltu	r3,r6,95b8 <_realloc_r+0x4dc>
    9544:	88800204 	addi	r2,r17,8
    9548:	98c00204 	addi	r3,r19,8
    954c:	003fa306 	br	93dc <__alt_data_end+0xfffeab94>
    9550:	8807883a 	mov	r3,r17
    9554:	003f7406 	br	9328 <__alt_data_end+0xfffeaae0>
    9558:	ad2b883a 	add	r21,r21,r20
    955c:	2505c83a 	sub	r2,r4,r20
    9560:	e5400215 	stw	r21,8(fp)
    9564:	10800054 	ori	r2,r2,1
    9568:	a8800115 	stw	r2,4(r21)
    956c:	98bfff17 	ldw	r2,-4(r19)
    9570:	9009883a 	mov	r4,r18
    9574:	1080004c 	andi	r2,r2,1
    9578:	a0a8b03a 	or	r20,r20,r2
    957c:	9d3fff15 	stw	r20,-4(r19)
    9580:	000d5980 	call	d598 <__malloc_unlock>
    9584:	9805883a 	mov	r2,r19
    9588:	003f3b06 	br	9278 <__alt_data_end+0xfffeaa30>
    958c:	8809883a 	mov	r4,r17
    9590:	980b883a 	mov	r5,r19
    9594:	0008f240 	call	8f24 <memmove>
    9598:	003f9606 	br	93f4 <__alt_data_end+0xfffeabac>
    959c:	8809883a 	mov	r4,r17
    95a0:	980b883a 	mov	r5,r19
    95a4:	0008f240 	call	8f24 <memmove>
    95a8:	b8c00117 	ldw	r3,4(r23)
    95ac:	b021883a 	mov	r16,r22
    95b0:	b82b883a 	mov	r21,r23
    95b4:	003f2306 	br	9244 <__alt_data_end+0xfffea9fc>
    95b8:	98c00217 	ldw	r3,8(r19)
    95bc:	88c00215 	stw	r3,8(r17)
    95c0:	98c00317 	ldw	r3,12(r19)
    95c4:	88c00315 	stw	r3,12(r17)
    95c8:	30800c26 	beq	r6,r2,95fc <_realloc_r+0x520>
    95cc:	88800404 	addi	r2,r17,16
    95d0:	98c00404 	addi	r3,r19,16
    95d4:	003f8106 	br	93dc <__alt_data_end+0xfffeab94>
    95d8:	893fff17 	ldw	r4,-4(r17)
    95dc:	00bfff04 	movi	r2,-4
    95e0:	9823883a 	mov	r17,r19
    95e4:	2084703a 	and	r2,r4,r2
    95e8:	80a1883a 	add	r16,r16,r2
    95ec:	003f1506 	br	9244 <__alt_data_end+0xfffea9fc>
    95f0:	b8c00404 	addi	r3,r23,16
    95f4:	9cc00204 	addi	r19,r19,8
    95f8:	003f4b06 	br	9328 <__alt_data_end+0xfffeaae0>
    95fc:	99000417 	ldw	r4,16(r19)
    9600:	88800604 	addi	r2,r17,24
    9604:	98c00604 	addi	r3,r19,24
    9608:	89000415 	stw	r4,16(r17)
    960c:	99000517 	ldw	r4,20(r19)
    9610:	89000515 	stw	r4,20(r17)
    9614:	003f7106 	br	93dc <__alt_data_end+0xfffeab94>
    9618:	8805883a 	mov	r2,r17
    961c:	003fb006 	br	94e0 <__alt_data_end+0xfffeac98>
    9620:	8809883a 	mov	r4,r17
    9624:	980b883a 	mov	r5,r19
    9628:	0008f240 	call	8f24 <memmove>
    962c:	003fb206 	br	94f8 <__alt_data_end+0xfffeacb0>
    9630:	98800217 	ldw	r2,8(r19)
    9634:	b8800415 	stw	r2,16(r23)
    9638:	98800317 	ldw	r2,12(r19)
    963c:	b8800515 	stw	r2,20(r23)
    9640:	31000726 	beq	r6,r4,9660 <_realloc_r+0x584>
    9644:	b8800604 	addi	r2,r23,24
    9648:	9cc00404 	addi	r19,r19,16
    964c:	003fa406 	br	94e0 <__alt_data_end+0xfffeac98>
    9650:	9009883a 	mov	r4,r18
    9654:	000d5980 	call	d598 <__malloc_unlock>
    9658:	0005883a 	mov	r2,zero
    965c:	003f0606 	br	9278 <__alt_data_end+0xfffeaa30>
    9660:	98c00417 	ldw	r3,16(r19)
    9664:	9cc00604 	addi	r19,r19,24
    9668:	b8800804 	addi	r2,r23,32
    966c:	b8c00615 	stw	r3,24(r23)
    9670:	98ffff17 	ldw	r3,-4(r19)
    9674:	b8c00715 	stw	r3,28(r23)
    9678:	003f9906 	br	94e0 <__alt_data_end+0xfffeac98>

0000967c <__swbuf_r>:
    967c:	defffc04 	addi	sp,sp,-16
    9680:	dc800215 	stw	r18,8(sp)
    9684:	dc400115 	stw	r17,4(sp)
    9688:	dc000015 	stw	r16,0(sp)
    968c:	dfc00315 	stw	ra,12(sp)
    9690:	2025883a 	mov	r18,r4
    9694:	2823883a 	mov	r17,r5
    9698:	3021883a 	mov	r16,r6
    969c:	20000226 	beq	r4,zero,96a8 <__swbuf_r+0x2c>
    96a0:	20800e17 	ldw	r2,56(r4)
    96a4:	10004126 	beq	r2,zero,97ac <__swbuf_r+0x130>
    96a8:	80c00617 	ldw	r3,24(r16)
    96ac:	8180030b 	ldhu	r6,12(r16)
    96b0:	80c00215 	stw	r3,8(r16)
    96b4:	30c0020c 	andi	r3,r6,8
    96b8:	18003526 	beq	r3,zero,9790 <__swbuf_r+0x114>
    96bc:	80c00417 	ldw	r3,16(r16)
    96c0:	18003326 	beq	r3,zero,9790 <__swbuf_r+0x114>
    96c4:	3088000c 	andi	r2,r6,8192
    96c8:	8c403fcc 	andi	r17,r17,255
    96cc:	10001726 	beq	r2,zero,972c <__swbuf_r+0xb0>
    96d0:	80800017 	ldw	r2,0(r16)
    96d4:	81000517 	ldw	r4,20(r16)
    96d8:	10c7c83a 	sub	r3,r2,r3
    96dc:	19001d0e 	bge	r3,r4,9754 <__swbuf_r+0xd8>
    96e0:	18c00044 	addi	r3,r3,1
    96e4:	81400217 	ldw	r5,8(r16)
    96e8:	11000044 	addi	r4,r2,1
    96ec:	81000015 	stw	r4,0(r16)
    96f0:	297fffc4 	addi	r5,r5,-1
    96f4:	81400215 	stw	r5,8(r16)
    96f8:	14400005 	stb	r17,0(r2)
    96fc:	80800517 	ldw	r2,20(r16)
    9700:	10c01d26 	beq	r2,r3,9778 <__swbuf_r+0xfc>
    9704:	8080030b 	ldhu	r2,12(r16)
    9708:	1080004c 	andi	r2,r2,1
    970c:	1000181e 	bne	r2,zero,9770 <__swbuf_r+0xf4>
    9710:	8805883a 	mov	r2,r17
    9714:	dfc00317 	ldw	ra,12(sp)
    9718:	dc800217 	ldw	r18,8(sp)
    971c:	dc400117 	ldw	r17,4(sp)
    9720:	dc000017 	ldw	r16,0(sp)
    9724:	dec00404 	addi	sp,sp,16
    9728:	f800283a 	ret
    972c:	81001917 	ldw	r4,100(r16)
    9730:	00b7ffc4 	movi	r2,-8193
    9734:	31880014 	ori	r6,r6,8192
    9738:	2084703a 	and	r2,r4,r2
    973c:	80801915 	stw	r2,100(r16)
    9740:	80800017 	ldw	r2,0(r16)
    9744:	81000517 	ldw	r4,20(r16)
    9748:	8180030d 	sth	r6,12(r16)
    974c:	10c7c83a 	sub	r3,r2,r3
    9750:	193fe316 	blt	r3,r4,96e0 <__alt_data_end+0xfffeae98>
    9754:	9009883a 	mov	r4,r18
    9758:	800b883a 	mov	r5,r16
    975c:	0004b040 	call	4b04 <_fflush_r>
    9760:	1000091e 	bne	r2,zero,9788 <__swbuf_r+0x10c>
    9764:	80800017 	ldw	r2,0(r16)
    9768:	00c00044 	movi	r3,1
    976c:	003fdd06 	br	96e4 <__alt_data_end+0xfffeae9c>
    9770:	00800284 	movi	r2,10
    9774:	88bfe61e 	bne	r17,r2,9710 <__alt_data_end+0xfffeaec8>
    9778:	9009883a 	mov	r4,r18
    977c:	800b883a 	mov	r5,r16
    9780:	0004b040 	call	4b04 <_fflush_r>
    9784:	103fe226 	beq	r2,zero,9710 <__alt_data_end+0xfffeaec8>
    9788:	00bfffc4 	movi	r2,-1
    978c:	003fe106 	br	9714 <__alt_data_end+0xfffeaecc>
    9790:	9009883a 	mov	r4,r18
    9794:	800b883a 	mov	r5,r16
    9798:	00030840 	call	3084 <__swsetup_r>
    979c:	1000051e 	bne	r2,zero,97b4 <__swbuf_r+0x138>
    97a0:	8180030b 	ldhu	r6,12(r16)
    97a4:	80c00417 	ldw	r3,16(r16)
    97a8:	003fc606 	br	96c4 <__alt_data_end+0xfffeae7c>
    97ac:	00050c00 	call	50c0 <__sinit>
    97b0:	003fbd06 	br	96a8 <__alt_data_end+0xfffeae60>
    97b4:	80c0030b 	ldhu	r3,12(r16)
    97b8:	00bfffc4 	movi	r2,-1
    97bc:	18c01014 	ori	r3,r3,64
    97c0:	80c0030d 	sth	r3,12(r16)
    97c4:	00c00244 	movi	r3,9
    97c8:	90c00015 	stw	r3,0(r18)
    97cc:	003fd106 	br	9714 <__alt_data_end+0xfffeaecc>

000097d0 <__swbuf>:
    97d0:	00c00074 	movhi	r3,1
    97d4:	18c53004 	addi	r3,r3,5312
    97d8:	2005883a 	mov	r2,r4
    97dc:	19000017 	ldw	r4,0(r3)
    97e0:	280d883a 	mov	r6,r5
    97e4:	100b883a 	mov	r5,r2
    97e8:	000967c1 	jmpi	967c <__swbuf_r>

000097ec <_wcrtomb_r>:
    97ec:	defff604 	addi	sp,sp,-40
    97f0:	00800074 	movhi	r2,1
    97f4:	dc800815 	stw	r18,32(sp)
    97f8:	dc400715 	stw	r17,28(sp)
    97fc:	dc000615 	stw	r16,24(sp)
    9800:	10853204 	addi	r2,r2,5320
    9804:	dfc00915 	stw	ra,36(sp)
    9808:	2021883a 	mov	r16,r4
    980c:	3823883a 	mov	r17,r7
    9810:	14800017 	ldw	r18,0(r2)
    9814:	28001426 	beq	r5,zero,9868 <_wcrtomb_r+0x7c>
    9818:	d9400415 	stw	r5,16(sp)
    981c:	d9800515 	stw	r6,20(sp)
    9820:	00057100 	call	5710 <__locale_charset>
    9824:	d9400417 	ldw	r5,16(sp)
    9828:	d9800517 	ldw	r6,20(sp)
    982c:	8009883a 	mov	r4,r16
    9830:	dc400015 	stw	r17,0(sp)
    9834:	100f883a 	mov	r7,r2
    9838:	903ee83a 	callr	r18
    983c:	00ffffc4 	movi	r3,-1
    9840:	10c0031e 	bne	r2,r3,9850 <_wcrtomb_r+0x64>
    9844:	88000015 	stw	zero,0(r17)
    9848:	00c02284 	movi	r3,138
    984c:	80c00015 	stw	r3,0(r16)
    9850:	dfc00917 	ldw	ra,36(sp)
    9854:	dc800817 	ldw	r18,32(sp)
    9858:	dc400717 	ldw	r17,28(sp)
    985c:	dc000617 	ldw	r16,24(sp)
    9860:	dec00a04 	addi	sp,sp,40
    9864:	f800283a 	ret
    9868:	00057100 	call	5710 <__locale_charset>
    986c:	8009883a 	mov	r4,r16
    9870:	dc400015 	stw	r17,0(sp)
    9874:	d9400104 	addi	r5,sp,4
    9878:	000d883a 	mov	r6,zero
    987c:	100f883a 	mov	r7,r2
    9880:	903ee83a 	callr	r18
    9884:	003fed06 	br	983c <__alt_data_end+0xfffeaff4>

00009888 <wcrtomb>:
    9888:	defff504 	addi	sp,sp,-44
    988c:	dc400515 	stw	r17,20(sp)
    9890:	dc000415 	stw	r16,16(sp)
    9894:	dfc00a15 	stw	ra,40(sp)
    9898:	dd400915 	stw	r21,36(sp)
    989c:	dd000815 	stw	r20,32(sp)
    98a0:	dcc00715 	stw	r19,28(sp)
    98a4:	dc800615 	stw	r18,24(sp)
    98a8:	2021883a 	mov	r16,r4
    98ac:	3023883a 	mov	r17,r6
    98b0:	20001d26 	beq	r4,zero,9928 <wcrtomb+0xa0>
    98b4:	04800074 	movhi	r18,1
    98b8:	94853004 	addi	r18,r18,5312
    98bc:	00800074 	movhi	r2,1
    98c0:	95400017 	ldw	r21,0(r18)
    98c4:	10853204 	addi	r2,r2,5320
    98c8:	15000017 	ldw	r20,0(r2)
    98cc:	2827883a 	mov	r19,r5
    98d0:	00057100 	call	5710 <__locale_charset>
    98d4:	a809883a 	mov	r4,r21
    98d8:	dc400015 	stw	r17,0(sp)
    98dc:	800b883a 	mov	r5,r16
    98e0:	980d883a 	mov	r6,r19
    98e4:	100f883a 	mov	r7,r2
    98e8:	a03ee83a 	callr	r20
    98ec:	00ffffc4 	movi	r3,-1
    98f0:	10c0041e 	bne	r2,r3,9904 <wcrtomb+0x7c>
    98f4:	90c00017 	ldw	r3,0(r18)
    98f8:	01002284 	movi	r4,138
    98fc:	88000015 	stw	zero,0(r17)
    9900:	19000015 	stw	r4,0(r3)
    9904:	dfc00a17 	ldw	ra,40(sp)
    9908:	dd400917 	ldw	r21,36(sp)
    990c:	dd000817 	ldw	r20,32(sp)
    9910:	dcc00717 	ldw	r19,28(sp)
    9914:	dc800617 	ldw	r18,24(sp)
    9918:	dc400517 	ldw	r17,20(sp)
    991c:	dc000417 	ldw	r16,16(sp)
    9920:	dec00b04 	addi	sp,sp,44
    9924:	f800283a 	ret
    9928:	04800074 	movhi	r18,1
    992c:	94853004 	addi	r18,r18,5312
    9930:	00800074 	movhi	r2,1
    9934:	94c00017 	ldw	r19,0(r18)
    9938:	10853204 	addi	r2,r2,5320
    993c:	14000017 	ldw	r16,0(r2)
    9940:	00057100 	call	5710 <__locale_charset>
    9944:	9809883a 	mov	r4,r19
    9948:	dc400015 	stw	r17,0(sp)
    994c:	d9400104 	addi	r5,sp,4
    9950:	000d883a 	mov	r6,zero
    9954:	100f883a 	mov	r7,r2
    9958:	803ee83a 	callr	r16
    995c:	003fe306 	br	98ec <__alt_data_end+0xfffeb0a4>

00009960 <__ascii_wctomb>:
    9960:	28000526 	beq	r5,zero,9978 <__ascii_wctomb+0x18>
    9964:	00803fc4 	movi	r2,255
    9968:	11800536 	bltu	r2,r6,9980 <__ascii_wctomb+0x20>
    996c:	29800005 	stb	r6,0(r5)
    9970:	00800044 	movi	r2,1
    9974:	f800283a 	ret
    9978:	0005883a 	mov	r2,zero
    997c:	f800283a 	ret
    9980:	00802284 	movi	r2,138
    9984:	20800015 	stw	r2,0(r4)
    9988:	00bfffc4 	movi	r2,-1
    998c:	f800283a 	ret

00009990 <_wctomb_r>:
    9990:	00800074 	movhi	r2,1
    9994:	defff904 	addi	sp,sp,-28
    9998:	10853204 	addi	r2,r2,5320
    999c:	dfc00615 	stw	ra,24(sp)
    99a0:	dc400515 	stw	r17,20(sp)
    99a4:	dc000415 	stw	r16,16(sp)
    99a8:	3823883a 	mov	r17,r7
    99ac:	14000017 	ldw	r16,0(r2)
    99b0:	d9000115 	stw	r4,4(sp)
    99b4:	d9400215 	stw	r5,8(sp)
    99b8:	d9800315 	stw	r6,12(sp)
    99bc:	00057100 	call	5710 <__locale_charset>
    99c0:	d9000117 	ldw	r4,4(sp)
    99c4:	d9400217 	ldw	r5,8(sp)
    99c8:	d9800317 	ldw	r6,12(sp)
    99cc:	dc400015 	stw	r17,0(sp)
    99d0:	100f883a 	mov	r7,r2
    99d4:	803ee83a 	callr	r16
    99d8:	dfc00617 	ldw	ra,24(sp)
    99dc:	dc400517 	ldw	r17,20(sp)
    99e0:	dc000417 	ldw	r16,16(sp)
    99e4:	dec00704 	addi	sp,sp,28
    99e8:	f800283a 	ret

000099ec <__udivdi3>:
    99ec:	defff504 	addi	sp,sp,-44
    99f0:	dcc00415 	stw	r19,16(sp)
    99f4:	dc000115 	stw	r16,4(sp)
    99f8:	dfc00a15 	stw	ra,40(sp)
    99fc:	df000915 	stw	fp,36(sp)
    9a00:	ddc00815 	stw	r23,32(sp)
    9a04:	dd800715 	stw	r22,28(sp)
    9a08:	dd400615 	stw	r21,24(sp)
    9a0c:	dd000515 	stw	r20,20(sp)
    9a10:	dc800315 	stw	r18,12(sp)
    9a14:	dc400215 	stw	r17,8(sp)
    9a18:	2027883a 	mov	r19,r4
    9a1c:	2821883a 	mov	r16,r5
    9a20:	3800471e 	bne	r7,zero,9b40 <__udivdi3+0x154>
    9a24:	3025883a 	mov	r18,r6
    9a28:	2023883a 	mov	r17,r4
    9a2c:	2980592e 	bgeu	r5,r6,9b94 <__udivdi3+0x1a8>
    9a30:	00bfffd4 	movui	r2,65535
    9a34:	2829883a 	mov	r20,r5
    9a38:	1180b236 	bltu	r2,r6,9d04 <__udivdi3+0x318>
    9a3c:	00803fc4 	movi	r2,255
    9a40:	1181622e 	bgeu	r2,r6,9fcc <__udivdi3+0x5e0>
    9a44:	00800204 	movi	r2,8
    9a48:	1007883a 	mov	r3,r2
    9a4c:	3084d83a 	srl	r2,r6,r2
    9a50:	01000074 	movhi	r4,1
    9a54:	213e3504 	addi	r4,r4,-1836
    9a58:	2085883a 	add	r2,r4,r2
    9a5c:	11000003 	ldbu	r4,0(r2)
    9a60:	20c9883a 	add	r4,r4,r3
    9a64:	00c00804 	movi	r3,32
    9a68:	1907c83a 	sub	r3,r3,r4
    9a6c:	18000526 	beq	r3,zero,9a84 <__udivdi3+0x98>
    9a70:	80e0983a 	sll	r16,r16,r3
    9a74:	9908d83a 	srl	r4,r19,r4
    9a78:	30e4983a 	sll	r18,r6,r3
    9a7c:	98e2983a 	sll	r17,r19,r3
    9a80:	8128b03a 	or	r20,r16,r4
    9a84:	902ad43a 	srli	r21,r18,16
    9a88:	a009883a 	mov	r4,r20
    9a8c:	95bfffcc 	andi	r22,r18,65535
    9a90:	a80b883a 	mov	r5,r21
    9a94:	000a76c0 	call	a76c <__umodsi3>
    9a98:	a009883a 	mov	r4,r20
    9a9c:	a80b883a 	mov	r5,r21
    9aa0:	102f883a 	mov	r23,r2
    9aa4:	000a7640 	call	a764 <__udivsi3>
    9aa8:	1009883a 	mov	r4,r2
    9aac:	b00b883a 	mov	r5,r22
    9ab0:	1021883a 	mov	r16,r2
    9ab4:	000a7740 	call	a774 <__mulsi3>
    9ab8:	b82e943a 	slli	r23,r23,16
    9abc:	8808d43a 	srli	r4,r17,16
    9ac0:	b906b03a 	or	r3,r23,r4
    9ac4:	1880052e 	bgeu	r3,r2,9adc <__udivdi3+0xf0>
    9ac8:	1c87883a 	add	r3,r3,r18
    9acc:	813fffc4 	addi	r4,r16,-1
    9ad0:	1c800136 	bltu	r3,r18,9ad8 <__udivdi3+0xec>
    9ad4:	18815236 	bltu	r3,r2,a020 <__udivdi3+0x634>
    9ad8:	2021883a 	mov	r16,r4
    9adc:	18a7c83a 	sub	r19,r3,r2
    9ae0:	9809883a 	mov	r4,r19
    9ae4:	a80b883a 	mov	r5,r21
    9ae8:	000a76c0 	call	a76c <__umodsi3>
    9aec:	1029883a 	mov	r20,r2
    9af0:	9809883a 	mov	r4,r19
    9af4:	a80b883a 	mov	r5,r21
    9af8:	a028943a 	slli	r20,r20,16
    9afc:	000a7640 	call	a764 <__udivsi3>
    9b00:	1009883a 	mov	r4,r2
    9b04:	b00b883a 	mov	r5,r22
    9b08:	8c7fffcc 	andi	r17,r17,65535
    9b0c:	1027883a 	mov	r19,r2
    9b10:	a462b03a 	or	r17,r20,r17
    9b14:	000a7740 	call	a774 <__mulsi3>
    9b18:	8880052e 	bgeu	r17,r2,9b30 <__udivdi3+0x144>
    9b1c:	8ca3883a 	add	r17,r17,r18
    9b20:	98ffffc4 	addi	r3,r19,-1
    9b24:	8c811036 	bltu	r17,r18,9f68 <__udivdi3+0x57c>
    9b28:	88810f2e 	bgeu	r17,r2,9f68 <__udivdi3+0x57c>
    9b2c:	9cffff84 	addi	r19,r19,-2
    9b30:	8020943a 	slli	r16,r16,16
    9b34:	0007883a 	mov	r3,zero
    9b38:	9c04b03a 	or	r2,r19,r16
    9b3c:	00006006 	br	9cc0 <__udivdi3+0x2d4>
    9b40:	29c05d36 	bltu	r5,r7,9cb8 <__udivdi3+0x2cc>
    9b44:	00bfffd4 	movui	r2,65535
    9b48:	11c0692e 	bgeu	r2,r7,9cf0 <__udivdi3+0x304>
    9b4c:	00804034 	movhi	r2,256
    9b50:	10bfffc4 	addi	r2,r2,-1
    9b54:	11c10e2e 	bgeu	r2,r7,9f90 <__udivdi3+0x5a4>
    9b58:	01400604 	movi	r5,24
    9b5c:	2811883a 	mov	r8,r5
    9b60:	394ad83a 	srl	r5,r7,r5
    9b64:	00800074 	movhi	r2,1
    9b68:	10be3504 	addi	r2,r2,-1836
    9b6c:	114b883a 	add	r5,r2,r5
    9b70:	29400003 	ldbu	r5,0(r5)
    9b74:	00c00804 	movi	r3,32
    9b78:	2a0b883a 	add	r5,r5,r8
    9b7c:	196fc83a 	sub	r23,r3,r5
    9b80:	b8006b1e 	bne	r23,zero,9d30 <__udivdi3+0x344>
    9b84:	3c011436 	bltu	r7,r16,9fd8 <__udivdi3+0x5ec>
    9b88:	9985403a 	cmpgeu	r2,r19,r6
    9b8c:	0007883a 	mov	r3,zero
    9b90:	00004b06 	br	9cc0 <__udivdi3+0x2d4>
    9b94:	3000041e 	bne	r6,zero,9ba8 <__udivdi3+0x1bc>
    9b98:	01000044 	movi	r4,1
    9b9c:	000b883a 	mov	r5,zero
    9ba0:	000a7640 	call	a764 <__udivsi3>
    9ba4:	1025883a 	mov	r18,r2
    9ba8:	00bfffd4 	movui	r2,65535
    9bac:	14805b2e 	bgeu	r2,r18,9d1c <__udivdi3+0x330>
    9bb0:	00804034 	movhi	r2,256
    9bb4:	10bfffc4 	addi	r2,r2,-1
    9bb8:	1480fe2e 	bgeu	r2,r18,9fb4 <__udivdi3+0x5c8>
    9bbc:	00800604 	movi	r2,24
    9bc0:	1007883a 	mov	r3,r2
    9bc4:	9084d83a 	srl	r2,r18,r2
    9bc8:	01000074 	movhi	r4,1
    9bcc:	213e3504 	addi	r4,r4,-1836
    9bd0:	2085883a 	add	r2,r4,r2
    9bd4:	11800003 	ldbu	r6,0(r2)
    9bd8:	01c00804 	movi	r7,32
    9bdc:	30c7883a 	add	r3,r6,r3
    9be0:	38cfc83a 	sub	r7,r7,r3
    9be4:	3800a71e 	bne	r7,zero,9e84 <__udivdi3+0x498>
    9be8:	9028d43a 	srli	r20,r18,16
    9bec:	84a1c83a 	sub	r16,r16,r18
    9bf0:	957fffcc 	andi	r21,r18,65535
    9bf4:	00c00044 	movi	r3,1
    9bf8:	8009883a 	mov	r4,r16
    9bfc:	a00b883a 	mov	r5,r20
    9c00:	d8c00015 	stw	r3,0(sp)
    9c04:	000a76c0 	call	a76c <__umodsi3>
    9c08:	8009883a 	mov	r4,r16
    9c0c:	a00b883a 	mov	r5,r20
    9c10:	102d883a 	mov	r22,r2
    9c14:	000a7640 	call	a764 <__udivsi3>
    9c18:	1009883a 	mov	r4,r2
    9c1c:	a80b883a 	mov	r5,r21
    9c20:	1021883a 	mov	r16,r2
    9c24:	000a7740 	call	a774 <__mulsi3>
    9c28:	b02c943a 	slli	r22,r22,16
    9c2c:	880ed43a 	srli	r7,r17,16
    9c30:	d8c00017 	ldw	r3,0(sp)
    9c34:	b1ccb03a 	or	r6,r22,r7
    9c38:	3080052e 	bgeu	r6,r2,9c50 <__udivdi3+0x264>
    9c3c:	348d883a 	add	r6,r6,r18
    9c40:	813fffc4 	addi	r4,r16,-1
    9c44:	34800136 	bltu	r6,r18,9c4c <__udivdi3+0x260>
    9c48:	3080f236 	bltu	r6,r2,a014 <__udivdi3+0x628>
    9c4c:	2021883a 	mov	r16,r4
    9c50:	30a7c83a 	sub	r19,r6,r2
    9c54:	9809883a 	mov	r4,r19
    9c58:	a00b883a 	mov	r5,r20
    9c5c:	d8c00015 	stw	r3,0(sp)
    9c60:	000a76c0 	call	a76c <__umodsi3>
    9c64:	102d883a 	mov	r22,r2
    9c68:	9809883a 	mov	r4,r19
    9c6c:	a00b883a 	mov	r5,r20
    9c70:	b02c943a 	slli	r22,r22,16
    9c74:	000a7640 	call	a764 <__udivsi3>
    9c78:	1009883a 	mov	r4,r2
    9c7c:	a80b883a 	mov	r5,r21
    9c80:	8c7fffcc 	andi	r17,r17,65535
    9c84:	1027883a 	mov	r19,r2
    9c88:	b462b03a 	or	r17,r22,r17
    9c8c:	000a7740 	call	a774 <__mulsi3>
    9c90:	d8c00017 	ldw	r3,0(sp)
    9c94:	8880052e 	bgeu	r17,r2,9cac <__udivdi3+0x2c0>
    9c98:	8ca3883a 	add	r17,r17,r18
    9c9c:	993fffc4 	addi	r4,r19,-1
    9ca0:	8c80af36 	bltu	r17,r18,9f60 <__udivdi3+0x574>
    9ca4:	8880ae2e 	bgeu	r17,r2,9f60 <__udivdi3+0x574>
    9ca8:	9cffff84 	addi	r19,r19,-2
    9cac:	8020943a 	slli	r16,r16,16
    9cb0:	9c04b03a 	or	r2,r19,r16
    9cb4:	00000206 	br	9cc0 <__udivdi3+0x2d4>
    9cb8:	0007883a 	mov	r3,zero
    9cbc:	0005883a 	mov	r2,zero
    9cc0:	dfc00a17 	ldw	ra,40(sp)
    9cc4:	df000917 	ldw	fp,36(sp)
    9cc8:	ddc00817 	ldw	r23,32(sp)
    9ccc:	dd800717 	ldw	r22,28(sp)
    9cd0:	dd400617 	ldw	r21,24(sp)
    9cd4:	dd000517 	ldw	r20,20(sp)
    9cd8:	dcc00417 	ldw	r19,16(sp)
    9cdc:	dc800317 	ldw	r18,12(sp)
    9ce0:	dc400217 	ldw	r17,8(sp)
    9ce4:	dc000117 	ldw	r16,4(sp)
    9ce8:	dec00b04 	addi	sp,sp,44
    9cec:	f800283a 	ret
    9cf0:	00803fc4 	movi	r2,255
    9cf4:	11c0a92e 	bgeu	r2,r7,9f9c <__udivdi3+0x5b0>
    9cf8:	01400204 	movi	r5,8
    9cfc:	2811883a 	mov	r8,r5
    9d00:	003f9706 	br	9b60 <__alt_data_end+0xfffeb318>
    9d04:	00804034 	movhi	r2,256
    9d08:	10bfffc4 	addi	r2,r2,-1
    9d0c:	1180a62e 	bgeu	r2,r6,9fa8 <__udivdi3+0x5bc>
    9d10:	00800604 	movi	r2,24
    9d14:	1007883a 	mov	r3,r2
    9d18:	003f4c06 	br	9a4c <__alt_data_end+0xfffeb204>
    9d1c:	00803fc4 	movi	r2,255
    9d20:	1480a72e 	bgeu	r2,r18,9fc0 <__udivdi3+0x5d4>
    9d24:	00800204 	movi	r2,8
    9d28:	1007883a 	mov	r3,r2
    9d2c:	003fa506 	br	9bc4 <__alt_data_end+0xfffeb37c>
    9d30:	3178d83a 	srl	fp,r6,r5
    9d34:	3dce983a 	sll	r7,r7,r23
    9d38:	8168d83a 	srl	r20,r16,r5
    9d3c:	9950d83a 	srl	r8,r19,r5
    9d40:	3f38b03a 	or	fp,r7,fp
    9d44:	e024d43a 	srli	r18,fp,16
    9d48:	85e0983a 	sll	r16,r16,r23
    9d4c:	a009883a 	mov	r4,r20
    9d50:	900b883a 	mov	r5,r18
    9d54:	8220b03a 	or	r16,r16,r8
    9d58:	35ea983a 	sll	r21,r6,r23
    9d5c:	000a76c0 	call	a76c <__umodsi3>
    9d60:	a009883a 	mov	r4,r20
    9d64:	900b883a 	mov	r5,r18
    9d68:	1023883a 	mov	r17,r2
    9d6c:	e5bfffcc 	andi	r22,fp,65535
    9d70:	000a7640 	call	a764 <__udivsi3>
    9d74:	1009883a 	mov	r4,r2
    9d78:	b00b883a 	mov	r5,r22
    9d7c:	1029883a 	mov	r20,r2
    9d80:	000a7740 	call	a774 <__mulsi3>
    9d84:	8806943a 	slli	r3,r17,16
    9d88:	8014d43a 	srli	r10,r16,16
    9d8c:	1a92b03a 	or	r9,r3,r10
    9d90:	4880042e 	bgeu	r9,r2,9da4 <__udivdi3+0x3b8>
    9d94:	4f13883a 	add	r9,r9,fp
    9d98:	a0ffffc4 	addi	r3,r20,-1
    9d9c:	4f00952e 	bgeu	r9,fp,9ff4 <__udivdi3+0x608>
    9da0:	1829883a 	mov	r20,r3
    9da4:	48a3c83a 	sub	r17,r9,r2
    9da8:	8809883a 	mov	r4,r17
    9dac:	900b883a 	mov	r5,r18
    9db0:	000a76c0 	call	a76c <__umodsi3>
    9db4:	8809883a 	mov	r4,r17
    9db8:	900b883a 	mov	r5,r18
    9dbc:	d8800015 	stw	r2,0(sp)
    9dc0:	000a7640 	call	a764 <__udivsi3>
    9dc4:	1009883a 	mov	r4,r2
    9dc8:	b00b883a 	mov	r5,r22
    9dcc:	1023883a 	mov	r17,r2
    9dd0:	000a7740 	call	a774 <__mulsi3>
    9dd4:	d8c00017 	ldw	r3,0(sp)
    9dd8:	823fffcc 	andi	r8,r16,65535
    9ddc:	1806943a 	slli	r3,r3,16
    9de0:	1a20b03a 	or	r16,r3,r8
    9de4:	8080042e 	bgeu	r16,r2,9df8 <__udivdi3+0x40c>
    9de8:	8721883a 	add	r16,r16,fp
    9dec:	88ffffc4 	addi	r3,r17,-1
    9df0:	87007c2e 	bgeu	r16,fp,9fe4 <__udivdi3+0x5f8>
    9df4:	1823883a 	mov	r17,r3
    9df8:	a028943a 	slli	r20,r20,16
    9dfc:	acbfffcc 	andi	r18,r21,65535
    9e00:	900b883a 	mov	r5,r18
    9e04:	8d28b03a 	or	r20,r17,r20
    9e08:	a022d43a 	srli	r17,r20,16
    9e0c:	a5bfffcc 	andi	r22,r20,65535
    9e10:	b009883a 	mov	r4,r22
    9e14:	a82ad43a 	srli	r21,r21,16
    9e18:	80a1c83a 	sub	r16,r16,r2
    9e1c:	000a7740 	call	a774 <__mulsi3>
    9e20:	8809883a 	mov	r4,r17
    9e24:	900b883a 	mov	r5,r18
    9e28:	1039883a 	mov	fp,r2
    9e2c:	000a7740 	call	a774 <__mulsi3>
    9e30:	8809883a 	mov	r4,r17
    9e34:	a80b883a 	mov	r5,r21
    9e38:	1025883a 	mov	r18,r2
    9e3c:	000a7740 	call	a774 <__mulsi3>
    9e40:	b009883a 	mov	r4,r22
    9e44:	a80b883a 	mov	r5,r21
    9e48:	1023883a 	mov	r17,r2
    9e4c:	000a7740 	call	a774 <__mulsi3>
    9e50:	e006d43a 	srli	r3,fp,16
    9e54:	9085883a 	add	r2,r18,r2
    9e58:	10c7883a 	add	r3,r2,r3
    9e5c:	1c80022e 	bgeu	r3,r18,9e68 <__udivdi3+0x47c>
    9e60:	00800074 	movhi	r2,1
    9e64:	88a3883a 	add	r17,r17,r2
    9e68:	1808d43a 	srli	r4,r3,16
    9e6c:	8909883a 	add	r4,r17,r4
    9e70:	81004436 	bltu	r16,r4,9f84 <__udivdi3+0x598>
    9e74:	81003e26 	beq	r16,r4,9f70 <__udivdi3+0x584>
    9e78:	a005883a 	mov	r2,r20
    9e7c:	0007883a 	mov	r3,zero
    9e80:	003f8f06 	br	9cc0 <__alt_data_end+0xfffeb478>
    9e84:	91e4983a 	sll	r18,r18,r7
    9e88:	80eed83a 	srl	r23,r16,r3
    9e8c:	81cc983a 	sll	r6,r16,r7
    9e90:	9028d43a 	srli	r20,r18,16
    9e94:	98c6d83a 	srl	r3,r19,r3
    9e98:	b809883a 	mov	r4,r23
    9e9c:	a00b883a 	mov	r5,r20
    9ea0:	30ecb03a 	or	r22,r6,r3
    9ea4:	99e2983a 	sll	r17,r19,r7
    9ea8:	000a76c0 	call	a76c <__umodsi3>
    9eac:	b809883a 	mov	r4,r23
    9eb0:	a00b883a 	mov	r5,r20
    9eb4:	1021883a 	mov	r16,r2
    9eb8:	957fffcc 	andi	r21,r18,65535
    9ebc:	000a7640 	call	a764 <__udivsi3>
    9ec0:	a80b883a 	mov	r5,r21
    9ec4:	1009883a 	mov	r4,r2
    9ec8:	102f883a 	mov	r23,r2
    9ecc:	000a7740 	call	a774 <__mulsi3>
    9ed0:	8020943a 	slli	r16,r16,16
    9ed4:	b00ad43a 	srli	r5,r22,16
    9ed8:	814cb03a 	or	r6,r16,r5
    9edc:	3080062e 	bgeu	r6,r2,9ef8 <__udivdi3+0x50c>
    9ee0:	348d883a 	add	r6,r6,r18
    9ee4:	b8ffffc4 	addi	r3,r23,-1
    9ee8:	34804836 	bltu	r6,r18,a00c <__udivdi3+0x620>
    9eec:	3080472e 	bgeu	r6,r2,a00c <__udivdi3+0x620>
    9ef0:	bdffff84 	addi	r23,r23,-2
    9ef4:	348d883a 	add	r6,r6,r18
    9ef8:	30a7c83a 	sub	r19,r6,r2
    9efc:	9809883a 	mov	r4,r19
    9f00:	a00b883a 	mov	r5,r20
    9f04:	000a76c0 	call	a76c <__umodsi3>
    9f08:	9809883a 	mov	r4,r19
    9f0c:	a00b883a 	mov	r5,r20
    9f10:	1039883a 	mov	fp,r2
    9f14:	000a7640 	call	a764 <__udivsi3>
    9f18:	1009883a 	mov	r4,r2
    9f1c:	a80b883a 	mov	r5,r21
    9f20:	e038943a 	slli	fp,fp,16
    9f24:	1027883a 	mov	r19,r2
    9f28:	000a7740 	call	a774 <__mulsi3>
    9f2c:	b1bfffcc 	andi	r6,r22,65535
    9f30:	e18cb03a 	or	r6,fp,r6
    9f34:	3080062e 	bgeu	r6,r2,9f50 <__udivdi3+0x564>
    9f38:	348d883a 	add	r6,r6,r18
    9f3c:	98ffffc4 	addi	r3,r19,-1
    9f40:	34803036 	bltu	r6,r18,a004 <__udivdi3+0x618>
    9f44:	30802f2e 	bgeu	r6,r2,a004 <__udivdi3+0x618>
    9f48:	9cffff84 	addi	r19,r19,-2
    9f4c:	348d883a 	add	r6,r6,r18
    9f50:	b82e943a 	slli	r23,r23,16
    9f54:	30a1c83a 	sub	r16,r6,r2
    9f58:	9dc6b03a 	or	r3,r19,r23
    9f5c:	003f2606 	br	9bf8 <__alt_data_end+0xfffeb3b0>
    9f60:	2027883a 	mov	r19,r4
    9f64:	003f5106 	br	9cac <__alt_data_end+0xfffeb464>
    9f68:	1827883a 	mov	r19,r3
    9f6c:	003ef006 	br	9b30 <__alt_data_end+0xfffeb2e8>
    9f70:	1808943a 	slli	r4,r3,16
    9f74:	9dc6983a 	sll	r3,r19,r23
    9f78:	e73fffcc 	andi	fp,fp,65535
    9f7c:	2709883a 	add	r4,r4,fp
    9f80:	193fbd2e 	bgeu	r3,r4,9e78 <__alt_data_end+0xfffeb630>
    9f84:	a0bfffc4 	addi	r2,r20,-1
    9f88:	0007883a 	mov	r3,zero
    9f8c:	003f4c06 	br	9cc0 <__alt_data_end+0xfffeb478>
    9f90:	01400404 	movi	r5,16
    9f94:	2811883a 	mov	r8,r5
    9f98:	003ef106 	br	9b60 <__alt_data_end+0xfffeb318>
    9f9c:	000b883a 	mov	r5,zero
    9fa0:	0011883a 	mov	r8,zero
    9fa4:	003eee06 	br	9b60 <__alt_data_end+0xfffeb318>
    9fa8:	00800404 	movi	r2,16
    9fac:	1007883a 	mov	r3,r2
    9fb0:	003ea606 	br	9a4c <__alt_data_end+0xfffeb204>
    9fb4:	00800404 	movi	r2,16
    9fb8:	1007883a 	mov	r3,r2
    9fbc:	003f0106 	br	9bc4 <__alt_data_end+0xfffeb37c>
    9fc0:	0005883a 	mov	r2,zero
    9fc4:	0007883a 	mov	r3,zero
    9fc8:	003efe06 	br	9bc4 <__alt_data_end+0xfffeb37c>
    9fcc:	0005883a 	mov	r2,zero
    9fd0:	0007883a 	mov	r3,zero
    9fd4:	003e9d06 	br	9a4c <__alt_data_end+0xfffeb204>
    9fd8:	0007883a 	mov	r3,zero
    9fdc:	00800044 	movi	r2,1
    9fe0:	003f3706 	br	9cc0 <__alt_data_end+0xfffeb478>
    9fe4:	80bf832e 	bgeu	r16,r2,9df4 <__alt_data_end+0xfffeb5ac>
    9fe8:	8c7fff84 	addi	r17,r17,-2
    9fec:	8721883a 	add	r16,r16,fp
    9ff0:	003f8106 	br	9df8 <__alt_data_end+0xfffeb5b0>
    9ff4:	48bf6a2e 	bgeu	r9,r2,9da0 <__alt_data_end+0xfffeb558>
    9ff8:	a53fff84 	addi	r20,r20,-2
    9ffc:	4f13883a 	add	r9,r9,fp
    a000:	003f6806 	br	9da4 <__alt_data_end+0xfffeb55c>
    a004:	1827883a 	mov	r19,r3
    a008:	003fd106 	br	9f50 <__alt_data_end+0xfffeb708>
    a00c:	182f883a 	mov	r23,r3
    a010:	003fb906 	br	9ef8 <__alt_data_end+0xfffeb6b0>
    a014:	843fff84 	addi	r16,r16,-2
    a018:	348d883a 	add	r6,r6,r18
    a01c:	003f0c06 	br	9c50 <__alt_data_end+0xfffeb408>
    a020:	843fff84 	addi	r16,r16,-2
    a024:	1c87883a 	add	r3,r3,r18
    a028:	003eac06 	br	9adc <__alt_data_end+0xfffeb294>

0000a02c <__umoddi3>:
    a02c:	defff404 	addi	sp,sp,-48
    a030:	dd800815 	stw	r22,32(sp)
    a034:	dc400315 	stw	r17,12(sp)
    a038:	dc000215 	stw	r16,8(sp)
    a03c:	dfc00b15 	stw	ra,44(sp)
    a040:	df000a15 	stw	fp,40(sp)
    a044:	ddc00915 	stw	r23,36(sp)
    a048:	dd400715 	stw	r21,28(sp)
    a04c:	dd000615 	stw	r20,24(sp)
    a050:	dcc00515 	stw	r19,20(sp)
    a054:	dc800415 	stw	r18,16(sp)
    a058:	2021883a 	mov	r16,r4
    a05c:	2823883a 	mov	r17,r5
    a060:	282d883a 	mov	r22,r5
    a064:	38003c1e 	bne	r7,zero,a158 <__umoddi3+0x12c>
    a068:	3027883a 	mov	r19,r6
    a06c:	2029883a 	mov	r20,r4
    a070:	2980522e 	bgeu	r5,r6,a1bc <__umoddi3+0x190>
    a074:	00bfffd4 	movui	r2,65535
    a078:	1180a436 	bltu	r2,r6,a30c <__umoddi3+0x2e0>
    a07c:	00803fc4 	movi	r2,255
    a080:	11815e2e 	bgeu	r2,r6,a5fc <__umoddi3+0x5d0>
    a084:	01400204 	movi	r5,8
    a088:	2805883a 	mov	r2,r5
    a08c:	314ad83a 	srl	r5,r6,r5
    a090:	00c00074 	movhi	r3,1
    a094:	18fe3504 	addi	r3,r3,-1836
    a098:	194b883a 	add	r5,r3,r5
    a09c:	29000003 	ldbu	r4,0(r5)
    a0a0:	2089883a 	add	r4,r4,r2
    a0a4:	00800804 	movi	r2,32
    a0a8:	1105c83a 	sub	r2,r2,r4
    a0ac:	10010c26 	beq	r2,zero,a4e0 <__umoddi3+0x4b4>
    a0b0:	88a2983a 	sll	r17,r17,r2
    a0b4:	8108d83a 	srl	r4,r16,r4
    a0b8:	30a6983a 	sll	r19,r6,r2
    a0bc:	80a8983a 	sll	r20,r16,r2
    a0c0:	1025883a 	mov	r18,r2
    a0c4:	892cb03a 	or	r22,r17,r4
    a0c8:	9822d43a 	srli	r17,r19,16
    a0cc:	b009883a 	mov	r4,r22
    a0d0:	9d7fffcc 	andi	r21,r19,65535
    a0d4:	880b883a 	mov	r5,r17
    a0d8:	000a76c0 	call	a76c <__umodsi3>
    a0dc:	b009883a 	mov	r4,r22
    a0e0:	880b883a 	mov	r5,r17
    a0e4:	102f883a 	mov	r23,r2
    a0e8:	000a7640 	call	a764 <__udivsi3>
    a0ec:	1009883a 	mov	r4,r2
    a0f0:	a80b883a 	mov	r5,r21
    a0f4:	000a7740 	call	a774 <__mulsi3>
    a0f8:	b82e943a 	slli	r23,r23,16
    a0fc:	a008d43a 	srli	r4,r20,16
    a100:	b906b03a 	or	r3,r23,r4
    a104:	1880042e 	bgeu	r3,r2,a118 <__umoddi3+0xec>
    a108:	1cc7883a 	add	r3,r3,r19
    a10c:	1cc00236 	bltu	r3,r19,a118 <__umoddi3+0xec>
    a110:	1880012e 	bgeu	r3,r2,a118 <__umoddi3+0xec>
    a114:	1cc7883a 	add	r3,r3,r19
    a118:	18a1c83a 	sub	r16,r3,r2
    a11c:	8009883a 	mov	r4,r16
    a120:	880b883a 	mov	r5,r17
    a124:	000a76c0 	call	a76c <__umodsi3>
    a128:	8009883a 	mov	r4,r16
    a12c:	880b883a 	mov	r5,r17
    a130:	102d883a 	mov	r22,r2
    a134:	000a7640 	call	a764 <__udivsi3>
    a138:	1009883a 	mov	r4,r2
    a13c:	a80b883a 	mov	r5,r21
    a140:	b02c943a 	slli	r22,r22,16
    a144:	000a7740 	call	a774 <__mulsi3>
    a148:	a13fffcc 	andi	r4,r20,65535
    a14c:	b106b03a 	or	r3,r22,r4
    a150:	1880572e 	bgeu	r3,r2,a2b0 <__umoddi3+0x284>
    a154:	00005206 	br	a2a0 <__umoddi3+0x274>
    a158:	29c05936 	bltu	r5,r7,a2c0 <__umoddi3+0x294>
    a15c:	00bfffd4 	movui	r2,65535
    a160:	11c0652e 	bgeu	r2,r7,a2f8 <__umoddi3+0x2cc>
    a164:	00804034 	movhi	r2,256
    a168:	10bfffc4 	addi	r2,r2,-1
    a16c:	11c1172e 	bgeu	r2,r7,a5cc <__umoddi3+0x5a0>
    a170:	01400604 	movi	r5,24
    a174:	282b883a 	mov	r21,r5
    a178:	394ad83a 	srl	r5,r7,r5
    a17c:	00c00074 	movhi	r3,1
    a180:	18fe3504 	addi	r3,r3,-1836
    a184:	194b883a 	add	r5,r3,r5
    a188:	28800003 	ldbu	r2,0(r5)
    a18c:	00c00804 	movi	r3,32
    a190:	156b883a 	add	r21,r2,r21
    a194:	1d69c83a 	sub	r20,r3,r21
    a198:	a000671e 	bne	r20,zero,a338 <__umoddi3+0x30c>
    a19c:	3c400136 	bltu	r7,r17,a1a4 <__umoddi3+0x178>
    a1a0:	81812336 	bltu	r16,r6,a630 <__umoddi3+0x604>
    a1a4:	8185c83a 	sub	r2,r16,r6
    a1a8:	89e3c83a 	sub	r17,r17,r7
    a1ac:	8087803a 	cmpltu	r3,r16,r2
    a1b0:	88edc83a 	sub	r22,r17,r3
    a1b4:	b007883a 	mov	r3,r22
    a1b8:	00004306 	br	a2c8 <__umoddi3+0x29c>
    a1bc:	3000041e 	bne	r6,zero,a1d0 <__umoddi3+0x1a4>
    a1c0:	01000044 	movi	r4,1
    a1c4:	000b883a 	mov	r5,zero
    a1c8:	000a7640 	call	a764 <__udivsi3>
    a1cc:	1027883a 	mov	r19,r2
    a1d0:	00bfffd4 	movui	r2,65535
    a1d4:	14c0532e 	bgeu	r2,r19,a324 <__umoddi3+0x2f8>
    a1d8:	00804034 	movhi	r2,256
    a1dc:	10bfffc4 	addi	r2,r2,-1
    a1e0:	14c1032e 	bgeu	r2,r19,a5f0 <__umoddi3+0x5c4>
    a1e4:	00800604 	movi	r2,24
    a1e8:	1007883a 	mov	r3,r2
    a1ec:	9884d83a 	srl	r2,r19,r2
    a1f0:	01000074 	movhi	r4,1
    a1f4:	213e3504 	addi	r4,r4,-1836
    a1f8:	2085883a 	add	r2,r4,r2
    a1fc:	11000003 	ldbu	r4,0(r2)
    a200:	00800804 	movi	r2,32
    a204:	20c7883a 	add	r3,r4,r3
    a208:	10c5c83a 	sub	r2,r2,r3
    a20c:	1000b61e 	bne	r2,zero,a4e8 <__umoddi3+0x4bc>
    a210:	982ad43a 	srli	r21,r19,16
    a214:	8ce3c83a 	sub	r17,r17,r19
    a218:	9dbfffcc 	andi	r22,r19,65535
    a21c:	0025883a 	mov	r18,zero
    a220:	8809883a 	mov	r4,r17
    a224:	a80b883a 	mov	r5,r21
    a228:	000a76c0 	call	a76c <__umodsi3>
    a22c:	8809883a 	mov	r4,r17
    a230:	a80b883a 	mov	r5,r21
    a234:	102f883a 	mov	r23,r2
    a238:	000a7640 	call	a764 <__udivsi3>
    a23c:	1009883a 	mov	r4,r2
    a240:	b00b883a 	mov	r5,r22
    a244:	000a7740 	call	a774 <__mulsi3>
    a248:	b82e943a 	slli	r23,r23,16
    a24c:	a008d43a 	srli	r4,r20,16
    a250:	b906b03a 	or	r3,r23,r4
    a254:	1880032e 	bgeu	r3,r2,a264 <__umoddi3+0x238>
    a258:	1cc7883a 	add	r3,r3,r19
    a25c:	1cc00136 	bltu	r3,r19,a264 <__umoddi3+0x238>
    a260:	1880f136 	bltu	r3,r2,a628 <__umoddi3+0x5fc>
    a264:	18a1c83a 	sub	r16,r3,r2
    a268:	8009883a 	mov	r4,r16
    a26c:	a80b883a 	mov	r5,r21
    a270:	000a76c0 	call	a76c <__umodsi3>
    a274:	8009883a 	mov	r4,r16
    a278:	a80b883a 	mov	r5,r21
    a27c:	1023883a 	mov	r17,r2
    a280:	000a7640 	call	a764 <__udivsi3>
    a284:	1009883a 	mov	r4,r2
    a288:	b00b883a 	mov	r5,r22
    a28c:	8822943a 	slli	r17,r17,16
    a290:	000a7740 	call	a774 <__mulsi3>
    a294:	a13fffcc 	andi	r4,r20,65535
    a298:	8906b03a 	or	r3,r17,r4
    a29c:	1880042e 	bgeu	r3,r2,a2b0 <__umoddi3+0x284>
    a2a0:	1cc7883a 	add	r3,r3,r19
    a2a4:	1cc00236 	bltu	r3,r19,a2b0 <__umoddi3+0x284>
    a2a8:	1880012e 	bgeu	r3,r2,a2b0 <__umoddi3+0x284>
    a2ac:	1cc7883a 	add	r3,r3,r19
    a2b0:	1887c83a 	sub	r3,r3,r2
    a2b4:	1c84d83a 	srl	r2,r3,r18
    a2b8:	0007883a 	mov	r3,zero
    a2bc:	00000206 	br	a2c8 <__umoddi3+0x29c>
    a2c0:	2005883a 	mov	r2,r4
    a2c4:	2807883a 	mov	r3,r5
    a2c8:	dfc00b17 	ldw	ra,44(sp)
    a2cc:	df000a17 	ldw	fp,40(sp)
    a2d0:	ddc00917 	ldw	r23,36(sp)
    a2d4:	dd800817 	ldw	r22,32(sp)
    a2d8:	dd400717 	ldw	r21,28(sp)
    a2dc:	dd000617 	ldw	r20,24(sp)
    a2e0:	dcc00517 	ldw	r19,20(sp)
    a2e4:	dc800417 	ldw	r18,16(sp)
    a2e8:	dc400317 	ldw	r17,12(sp)
    a2ec:	dc000217 	ldw	r16,8(sp)
    a2f0:	dec00c04 	addi	sp,sp,48
    a2f4:	f800283a 	ret
    a2f8:	00803fc4 	movi	r2,255
    a2fc:	11c0b02e 	bgeu	r2,r7,a5c0 <__umoddi3+0x594>
    a300:	01400204 	movi	r5,8
    a304:	282b883a 	mov	r21,r5
    a308:	003f9b06 	br	a178 <__alt_data_end+0xfffeb930>
    a30c:	00804034 	movhi	r2,256
    a310:	10bfffc4 	addi	r2,r2,-1
    a314:	1180b02e 	bgeu	r2,r6,a5d8 <__umoddi3+0x5ac>
    a318:	01400604 	movi	r5,24
    a31c:	2805883a 	mov	r2,r5
    a320:	003f5a06 	br	a08c <__alt_data_end+0xfffeb844>
    a324:	00803fc4 	movi	r2,255
    a328:	14c0ae2e 	bgeu	r2,r19,a5e4 <__umoddi3+0x5b8>
    a32c:	00800204 	movi	r2,8
    a330:	1007883a 	mov	r3,r2
    a334:	003fad06 	br	a1ec <__alt_data_end+0xfffeb9a4>
    a338:	3d0a983a 	sll	r5,r7,r20
    a33c:	356cd83a 	srl	r22,r6,r21
    a340:	8d78d83a 	srl	fp,r17,r21
    a344:	8d10983a 	sll	r8,r17,r20
    a348:	2dacb03a 	or	r22,r5,r22
    a34c:	b02ed43a 	srli	r23,r22,16
    a350:	8564d83a 	srl	r18,r16,r21
    a354:	e009883a 	mov	r4,fp
    a358:	b80b883a 	mov	r5,r23
    a35c:	44a4b03a 	or	r18,r8,r18
    a360:	3526983a 	sll	r19,r6,r20
    a364:	000a76c0 	call	a76c <__umodsi3>
    a368:	e009883a 	mov	r4,fp
    a36c:	b80b883a 	mov	r5,r23
    a370:	b47fffcc 	andi	r17,r22,65535
    a374:	d8800015 	stw	r2,0(sp)
    a378:	000a7640 	call	a764 <__udivsi3>
    a37c:	1009883a 	mov	r4,r2
    a380:	880b883a 	mov	r5,r17
    a384:	1039883a 	mov	fp,r2
    a388:	000a7740 	call	a774 <__mulsi3>
    a38c:	d9800017 	ldw	r6,0(sp)
    a390:	9008d43a 	srli	r4,r18,16
    a394:	8520983a 	sll	r16,r16,r20
    a398:	300c943a 	slli	r6,r6,16
    a39c:	3106b03a 	or	r3,r6,r4
    a3a0:	1880042e 	bgeu	r3,r2,a3b4 <__umoddi3+0x388>
    a3a4:	1d87883a 	add	r3,r3,r22
    a3a8:	e13fffc4 	addi	r4,fp,-1
    a3ac:	1d809a2e 	bgeu	r3,r22,a618 <__umoddi3+0x5ec>
    a3b0:	2039883a 	mov	fp,r4
    a3b4:	1887c83a 	sub	r3,r3,r2
    a3b8:	1809883a 	mov	r4,r3
    a3bc:	b80b883a 	mov	r5,r23
    a3c0:	d8c00115 	stw	r3,4(sp)
    a3c4:	000a76c0 	call	a76c <__umodsi3>
    a3c8:	d8c00117 	ldw	r3,4(sp)
    a3cc:	b80b883a 	mov	r5,r23
    a3d0:	d8800015 	stw	r2,0(sp)
    a3d4:	1809883a 	mov	r4,r3
    a3d8:	000a7640 	call	a764 <__udivsi3>
    a3dc:	880b883a 	mov	r5,r17
    a3e0:	1009883a 	mov	r4,r2
    a3e4:	102f883a 	mov	r23,r2
    a3e8:	000a7740 	call	a774 <__mulsi3>
    a3ec:	d9800017 	ldw	r6,0(sp)
    a3f0:	947fffcc 	andi	r17,r18,65535
    a3f4:	300c943a 	slli	r6,r6,16
    a3f8:	3464b03a 	or	r18,r6,r17
    a3fc:	9080042e 	bgeu	r18,r2,a410 <__umoddi3+0x3e4>
    a400:	95a5883a 	add	r18,r18,r22
    a404:	b8ffffc4 	addi	r3,r23,-1
    a408:	95807f2e 	bgeu	r18,r22,a608 <__umoddi3+0x5dc>
    a40c:	182f883a 	mov	r23,r3
    a410:	e038943a 	slli	fp,fp,16
    a414:	980cd43a 	srli	r6,r19,16
    a418:	98ffffcc 	andi	r3,r19,65535
    a41c:	bf38b03a 	or	fp,r23,fp
    a420:	e02ed43a 	srli	r23,fp,16
    a424:	e73fffcc 	andi	fp,fp,65535
    a428:	180b883a 	mov	r5,r3
    a42c:	e009883a 	mov	r4,fp
    a430:	d9800015 	stw	r6,0(sp)
    a434:	d8c00115 	stw	r3,4(sp)
    a438:	90a5c83a 	sub	r18,r18,r2
    a43c:	000a7740 	call	a774 <__mulsi3>
    a440:	d8c00117 	ldw	r3,4(sp)
    a444:	b809883a 	mov	r4,r23
    a448:	1023883a 	mov	r17,r2
    a44c:	180b883a 	mov	r5,r3
    a450:	000a7740 	call	a774 <__mulsi3>
    a454:	d9800017 	ldw	r6,0(sp)
    a458:	b809883a 	mov	r4,r23
    a45c:	d8800115 	stw	r2,4(sp)
    a460:	300b883a 	mov	r5,r6
    a464:	302f883a 	mov	r23,r6
    a468:	000a7740 	call	a774 <__mulsi3>
    a46c:	e009883a 	mov	r4,fp
    a470:	b80b883a 	mov	r5,r23
    a474:	d8800015 	stw	r2,0(sp)
    a478:	000a7740 	call	a774 <__mulsi3>
    a47c:	d8c00117 	ldw	r3,4(sp)
    a480:	880cd43a 	srli	r6,r17,16
    a484:	d9c00017 	ldw	r7,0(sp)
    a488:	1885883a 	add	r2,r3,r2
    a48c:	118d883a 	add	r6,r2,r6
    a490:	30c0022e 	bgeu	r6,r3,a49c <__umoddi3+0x470>
    a494:	00800074 	movhi	r2,1
    a498:	388f883a 	add	r7,r7,r2
    a49c:	3006d43a 	srli	r3,r6,16
    a4a0:	300c943a 	slli	r6,r6,16
    a4a4:	8c7fffcc 	andi	r17,r17,65535
    a4a8:	38c7883a 	add	r3,r7,r3
    a4ac:	3463883a 	add	r17,r6,r17
    a4b0:	90c03d36 	bltu	r18,r3,a5a8 <__umoddi3+0x57c>
    a4b4:	90c06026 	beq	r18,r3,a638 <__umoddi3+0x60c>
    a4b8:	90c9c83a 	sub	r4,r18,r3
    a4bc:	880f883a 	mov	r7,r17
    a4c0:	81cfc83a 	sub	r7,r16,r7
    a4c4:	81c7803a 	cmpltu	r3,r16,r7
    a4c8:	20c7c83a 	sub	r3,r4,r3
    a4cc:	1d44983a 	sll	r2,r3,r21
    a4d0:	3d0ed83a 	srl	r7,r7,r20
    a4d4:	1d06d83a 	srl	r3,r3,r20
    a4d8:	11c4b03a 	or	r2,r2,r7
    a4dc:	003f7a06 	br	a2c8 <__alt_data_end+0xfffeba80>
    a4e0:	0025883a 	mov	r18,zero
    a4e4:	003ef806 	br	a0c8 <__alt_data_end+0xfffeb880>
    a4e8:	98a6983a 	sll	r19,r19,r2
    a4ec:	88e8d83a 	srl	r20,r17,r3
    a4f0:	80c6d83a 	srl	r3,r16,r3
    a4f4:	982ad43a 	srli	r21,r19,16
    a4f8:	88a2983a 	sll	r17,r17,r2
    a4fc:	a009883a 	mov	r4,r20
    a500:	a80b883a 	mov	r5,r21
    a504:	88eeb03a 	or	r23,r17,r3
    a508:	1025883a 	mov	r18,r2
    a50c:	000a76c0 	call	a76c <__umodsi3>
    a510:	a009883a 	mov	r4,r20
    a514:	a80b883a 	mov	r5,r21
    a518:	1023883a 	mov	r17,r2
    a51c:	9dbfffcc 	andi	r22,r19,65535
    a520:	000a7640 	call	a764 <__udivsi3>
    a524:	1009883a 	mov	r4,r2
    a528:	b00b883a 	mov	r5,r22
    a52c:	000a7740 	call	a774 <__mulsi3>
    a530:	8822943a 	slli	r17,r17,16
    a534:	b808d43a 	srli	r4,r23,16
    a538:	84a8983a 	sll	r20,r16,r18
    a53c:	8906b03a 	or	r3,r17,r4
    a540:	1880042e 	bgeu	r3,r2,a554 <__umoddi3+0x528>
    a544:	1cc7883a 	add	r3,r3,r19
    a548:	1cc00236 	bltu	r3,r19,a554 <__umoddi3+0x528>
    a54c:	1880012e 	bgeu	r3,r2,a554 <__umoddi3+0x528>
    a550:	1cc7883a 	add	r3,r3,r19
    a554:	18a1c83a 	sub	r16,r3,r2
    a558:	8009883a 	mov	r4,r16
    a55c:	a80b883a 	mov	r5,r21
    a560:	000a76c0 	call	a76c <__umodsi3>
    a564:	8009883a 	mov	r4,r16
    a568:	a80b883a 	mov	r5,r21
    a56c:	1039883a 	mov	fp,r2
    a570:	000a7640 	call	a764 <__udivsi3>
    a574:	1009883a 	mov	r4,r2
    a578:	b00b883a 	mov	r5,r22
    a57c:	000a7740 	call	a774 <__mulsi3>
    a580:	e006943a 	slli	r3,fp,16
    a584:	b93fffcc 	andi	r4,r23,65535
    a588:	1906b03a 	or	r3,r3,r4
    a58c:	1880042e 	bgeu	r3,r2,a5a0 <__umoddi3+0x574>
    a590:	1cc7883a 	add	r3,r3,r19
    a594:	1cc00236 	bltu	r3,r19,a5a0 <__umoddi3+0x574>
    a598:	1880012e 	bgeu	r3,r2,a5a0 <__umoddi3+0x574>
    a59c:	1cc7883a 	add	r3,r3,r19
    a5a0:	18a3c83a 	sub	r17,r3,r2
    a5a4:	003f1e06 	br	a220 <__alt_data_end+0xfffeb9d8>
    a5a8:	8ccfc83a 	sub	r7,r17,r19
    a5ac:	1d89c83a 	sub	r4,r3,r22
    a5b0:	89e3803a 	cmpltu	r17,r17,r7
    a5b4:	2463c83a 	sub	r17,r4,r17
    a5b8:	9449c83a 	sub	r4,r18,r17
    a5bc:	003fc006 	br	a4c0 <__alt_data_end+0xfffebc78>
    a5c0:	000b883a 	mov	r5,zero
    a5c4:	002b883a 	mov	r21,zero
    a5c8:	003eeb06 	br	a178 <__alt_data_end+0xfffeb930>
    a5cc:	01400404 	movi	r5,16
    a5d0:	282b883a 	mov	r21,r5
    a5d4:	003ee806 	br	a178 <__alt_data_end+0xfffeb930>
    a5d8:	01400404 	movi	r5,16
    a5dc:	2805883a 	mov	r2,r5
    a5e0:	003eaa06 	br	a08c <__alt_data_end+0xfffeb844>
    a5e4:	0005883a 	mov	r2,zero
    a5e8:	0007883a 	mov	r3,zero
    a5ec:	003eff06 	br	a1ec <__alt_data_end+0xfffeb9a4>
    a5f0:	00800404 	movi	r2,16
    a5f4:	1007883a 	mov	r3,r2
    a5f8:	003efc06 	br	a1ec <__alt_data_end+0xfffeb9a4>
    a5fc:	000b883a 	mov	r5,zero
    a600:	0005883a 	mov	r2,zero
    a604:	003ea106 	br	a08c <__alt_data_end+0xfffeb844>
    a608:	90bf802e 	bgeu	r18,r2,a40c <__alt_data_end+0xfffebbc4>
    a60c:	bdffff84 	addi	r23,r23,-2
    a610:	95a5883a 	add	r18,r18,r22
    a614:	003f7e06 	br	a410 <__alt_data_end+0xfffebbc8>
    a618:	18bf652e 	bgeu	r3,r2,a3b0 <__alt_data_end+0xfffebb68>
    a61c:	e73fff84 	addi	fp,fp,-2
    a620:	1d87883a 	add	r3,r3,r22
    a624:	003f6306 	br	a3b4 <__alt_data_end+0xfffebb6c>
    a628:	1cc7883a 	add	r3,r3,r19
    a62c:	003f0d06 	br	a264 <__alt_data_end+0xfffeba1c>
    a630:	8005883a 	mov	r2,r16
    a634:	003edf06 	br	a1b4 <__alt_data_end+0xfffeb96c>
    a638:	847fdb36 	bltu	r16,r17,a5a8 <__alt_data_end+0xfffebd60>
    a63c:	880f883a 	mov	r7,r17
    a640:	0009883a 	mov	r4,zero
    a644:	003f9e06 	br	a4c0 <__alt_data_end+0xfffebc78>

0000a648 <udivmodsi4>:
    a648:	2900182e 	bgeu	r5,r4,a6ac <udivmodsi4+0x64>
    a64c:	28001716 	blt	r5,zero,a6ac <udivmodsi4+0x64>
    a650:	00800804 	movi	r2,32
    a654:	00c00044 	movi	r3,1
    a658:	00000206 	br	a664 <udivmodsi4+0x1c>
    a65c:	10001126 	beq	r2,zero,a6a4 <udivmodsi4+0x5c>
    a660:	28000516 	blt	r5,zero,a678 <udivmodsi4+0x30>
    a664:	294b883a 	add	r5,r5,r5
    a668:	10bfffc4 	addi	r2,r2,-1
    a66c:	18c7883a 	add	r3,r3,r3
    a670:	293ffa36 	bltu	r5,r4,a65c <__alt_data_end+0xfffebe14>
    a674:	18000b26 	beq	r3,zero,a6a4 <udivmodsi4+0x5c>
    a678:	0005883a 	mov	r2,zero
    a67c:	21400236 	bltu	r4,r5,a688 <udivmodsi4+0x40>
    a680:	2149c83a 	sub	r4,r4,r5
    a684:	10c4b03a 	or	r2,r2,r3
    a688:	1806d07a 	srli	r3,r3,1
    a68c:	280ad07a 	srli	r5,r5,1
    a690:	183ffa1e 	bne	r3,zero,a67c <__alt_data_end+0xfffebe34>
    a694:	3000011e 	bne	r6,zero,a69c <udivmodsi4+0x54>
    a698:	f800283a 	ret
    a69c:	2005883a 	mov	r2,r4
    a6a0:	f800283a 	ret
    a6a4:	0005883a 	mov	r2,zero
    a6a8:	003ffa06 	br	a694 <__alt_data_end+0xfffebe4c>
    a6ac:	00c00044 	movi	r3,1
    a6b0:	003ff106 	br	a678 <__alt_data_end+0xfffebe30>

0000a6b4 <__divsi3>:
    a6b4:	defffe04 	addi	sp,sp,-8
    a6b8:	dfc00115 	stw	ra,4(sp)
    a6bc:	dc000015 	stw	r16,0(sp)
    a6c0:	20000b16 	blt	r4,zero,a6f0 <__divsi3+0x3c>
    a6c4:	0021883a 	mov	r16,zero
    a6c8:	28000c16 	blt	r5,zero,a6fc <__divsi3+0x48>
    a6cc:	000d883a 	mov	r6,zero
    a6d0:	000a6480 	call	a648 <udivmodsi4>
    a6d4:	0407c83a 	sub	r3,zero,r16
    a6d8:	1884f03a 	xor	r2,r3,r2
    a6dc:	1405883a 	add	r2,r2,r16
    a6e0:	dfc00117 	ldw	ra,4(sp)
    a6e4:	dc000017 	ldw	r16,0(sp)
    a6e8:	dec00204 	addi	sp,sp,8
    a6ec:	f800283a 	ret
    a6f0:	0109c83a 	sub	r4,zero,r4
    a6f4:	04000044 	movi	r16,1
    a6f8:	283ff40e 	bge	r5,zero,a6cc <__alt_data_end+0xfffebe84>
    a6fc:	014bc83a 	sub	r5,zero,r5
    a700:	8400005c 	xori	r16,r16,1
    a704:	003ff106 	br	a6cc <__alt_data_end+0xfffebe84>

0000a708 <__modsi3>:
    a708:	defffd04 	addi	sp,sp,-12
    a70c:	dfc00215 	stw	ra,8(sp)
    a710:	dc400115 	stw	r17,4(sp)
    a714:	dc000015 	stw	r16,0(sp)
    a718:	20000c16 	blt	r4,zero,a74c <__modsi3+0x44>
    a71c:	0023883a 	mov	r17,zero
    a720:	0021883a 	mov	r16,zero
    a724:	28000d16 	blt	r5,zero,a75c <__modsi3+0x54>
    a728:	01800044 	movi	r6,1
    a72c:	000a6480 	call	a648 <udivmodsi4>
    a730:	1404f03a 	xor	r2,r2,r16
    a734:	8885883a 	add	r2,r17,r2
    a738:	dfc00217 	ldw	ra,8(sp)
    a73c:	dc400117 	ldw	r17,4(sp)
    a740:	dc000017 	ldw	r16,0(sp)
    a744:	dec00304 	addi	sp,sp,12
    a748:	f800283a 	ret
    a74c:	0109c83a 	sub	r4,zero,r4
    a750:	04400044 	movi	r17,1
    a754:	043fffc4 	movi	r16,-1
    a758:	283ff30e 	bge	r5,zero,a728 <__alt_data_end+0xfffebee0>
    a75c:	014bc83a 	sub	r5,zero,r5
    a760:	003ff106 	br	a728 <__alt_data_end+0xfffebee0>

0000a764 <__udivsi3>:
    a764:	000d883a 	mov	r6,zero
    a768:	000a6481 	jmpi	a648 <udivmodsi4>

0000a76c <__umodsi3>:
    a76c:	01800044 	movi	r6,1
    a770:	000a6481 	jmpi	a648 <udivmodsi4>

0000a774 <__mulsi3>:
    a774:	0005883a 	mov	r2,zero
    a778:	20000726 	beq	r4,zero,a798 <__mulsi3+0x24>
    a77c:	20c0004c 	andi	r3,r4,1
    a780:	2008d07a 	srli	r4,r4,1
    a784:	18000126 	beq	r3,zero,a78c <__mulsi3+0x18>
    a788:	1145883a 	add	r2,r2,r5
    a78c:	294b883a 	add	r5,r5,r5
    a790:	203ffa1e 	bne	r4,zero,a77c <__alt_data_end+0xfffebf34>
    a794:	f800283a 	ret
    a798:	f800283a 	ret

0000a79c <__adddf3>:
    a79c:	02000434 	movhi	r8,16
    a7a0:	423fffc4 	addi	r8,r8,-1
    a7a4:	defffb04 	addi	sp,sp,-20
    a7a8:	2a12703a 	and	r9,r5,r8
    a7ac:	2806d7fa 	srli	r3,r5,31
    a7b0:	3a10703a 	and	r8,r7,r8
    a7b4:	3804d53a 	srli	r2,r7,20
    a7b8:	3014d77a 	srli	r10,r6,29
    a7bc:	dc000015 	stw	r16,0(sp)
    a7c0:	481290fa 	slli	r9,r9,3
    a7c4:	2820d53a 	srli	r16,r5,20
    a7c8:	401090fa 	slli	r8,r8,3
    a7cc:	200ad77a 	srli	r5,r4,29
    a7d0:	380ed7fa 	srli	r7,r7,31
    a7d4:	dc800215 	stw	r18,8(sp)
    a7d8:	dc400115 	stw	r17,4(sp)
    a7dc:	dfc00415 	stw	ra,16(sp)
    a7e0:	dcc00315 	stw	r19,12(sp)
    a7e4:	1c803fcc 	andi	r18,r3,255
    a7e8:	8401ffcc 	andi	r16,r16,2047
    a7ec:	494ab03a 	or	r5,r9,r5
    a7f0:	202290fa 	slli	r17,r4,3
    a7f4:	1081ffcc 	andi	r2,r2,2047
    a7f8:	4290b03a 	or	r8,r8,r10
    a7fc:	300c90fa 	slli	r6,r6,3
    a800:	91c07026 	beq	r18,r7,a9c4 <__adddf3+0x228>
    a804:	8087c83a 	sub	r3,r16,r2
    a808:	00c0b30e 	bge	zero,r3,aad8 <__adddf3+0x33c>
    a80c:	10002a1e 	bne	r2,zero,a8b8 <__adddf3+0x11c>
    a810:	4184b03a 	or	r2,r8,r6
    a814:	1000991e 	bne	r2,zero,aa7c <__adddf3+0x2e0>
    a818:	888001cc 	andi	r2,r17,7
    a81c:	10005b26 	beq	r2,zero,a98c <__adddf3+0x1f0>
    a820:	88c003cc 	andi	r3,r17,15
    a824:	00800104 	movi	r2,4
    a828:	18805826 	beq	r3,r2,a98c <__adddf3+0x1f0>
    a82c:	89800104 	addi	r6,r17,4
    a830:	3463803a 	cmpltu	r17,r6,r17
    a834:	2c4b883a 	add	r5,r5,r17
    a838:	2880202c 	andhi	r2,r5,128
    a83c:	9007883a 	mov	r3,r18
    a840:	3023883a 	mov	r17,r6
    a844:	10005426 	beq	r2,zero,a998 <__adddf3+0x1fc>
    a848:	84000044 	addi	r16,r16,1
    a84c:	0081ffc4 	movi	r2,2047
    a850:	8080c126 	beq	r16,r2,ab58 <__adddf3+0x3bc>
    a854:	013fe034 	movhi	r4,65408
    a858:	213fffc4 	addi	r4,r4,-1
    a85c:	290a703a 	and	r5,r5,r4
    a860:	2804977a 	slli	r2,r5,29
    a864:	280a927a 	slli	r5,r5,9
    a868:	8822d0fa 	srli	r17,r17,3
    a86c:	8401ffcc 	andi	r16,r16,2047
    a870:	2808d33a 	srli	r4,r5,12
    a874:	1444b03a 	or	r2,r2,r17
    a878:	8401ffcc 	andi	r16,r16,2047
    a87c:	800a953a 	slli	r5,r16,20
    a880:	18c03fcc 	andi	r3,r3,255
    a884:	04000434 	movhi	r16,16
    a888:	180697fa 	slli	r3,r3,31
    a88c:	843fffc4 	addi	r16,r16,-1
    a890:	2420703a 	and	r16,r4,r16
    a894:	8160b03a 	or	r16,r16,r5
    a898:	80c6b03a 	or	r3,r16,r3
    a89c:	dfc00417 	ldw	ra,16(sp)
    a8a0:	dcc00317 	ldw	r19,12(sp)
    a8a4:	dc800217 	ldw	r18,8(sp)
    a8a8:	dc400117 	ldw	r17,4(sp)
    a8ac:	dc000017 	ldw	r16,0(sp)
    a8b0:	dec00504 	addi	sp,sp,20
    a8b4:	f800283a 	ret
    a8b8:	0081ffc4 	movi	r2,2047
    a8bc:	80bfd626 	beq	r16,r2,a818 <__alt_data_end+0xfffebfd0>
    a8c0:	42002034 	orhi	r8,r8,128
    a8c4:	00800e04 	movi	r2,56
    a8c8:	10c0a616 	blt	r2,r3,ab64 <__adddf3+0x3c8>
    a8cc:	008007c4 	movi	r2,31
    a8d0:	10c0c916 	blt	r2,r3,abf8 <__adddf3+0x45c>
    a8d4:	00800804 	movi	r2,32
    a8d8:	10c5c83a 	sub	r2,r2,r3
    a8dc:	408e983a 	sll	r7,r8,r2
    a8e0:	30c8d83a 	srl	r4,r6,r3
    a8e4:	3084983a 	sll	r2,r6,r2
    a8e8:	40c6d83a 	srl	r3,r8,r3
    a8ec:	390cb03a 	or	r6,r7,r4
    a8f0:	1004c03a 	cmpne	r2,r2,zero
    a8f4:	308cb03a 	or	r6,r6,r2
    a8f8:	898dc83a 	sub	r6,r17,r6
    a8fc:	89a3803a 	cmpltu	r17,r17,r6
    a900:	28cbc83a 	sub	r5,r5,r3
    a904:	2c4bc83a 	sub	r5,r5,r17
    a908:	3023883a 	mov	r17,r6
    a90c:	2880202c 	andhi	r2,r5,128
    a910:	10006d26 	beq	r2,zero,aac8 <__adddf3+0x32c>
    a914:	04c02034 	movhi	r19,128
    a918:	9cffffc4 	addi	r19,r19,-1
    a91c:	2ce6703a 	and	r19,r5,r19
    a920:	98007e26 	beq	r19,zero,ab1c <__adddf3+0x380>
    a924:	9809883a 	mov	r4,r19
    a928:	000cf340 	call	cf34 <__clzsi2>
    a92c:	10fffe04 	addi	r3,r2,-8
    a930:	010007c4 	movi	r4,31
    a934:	20c07f16 	blt	r4,r3,ab34 <__adddf3+0x398>
    a938:	01400a04 	movi	r5,40
    a93c:	2885c83a 	sub	r2,r5,r2
    a940:	888ad83a 	srl	r5,r17,r2
    a944:	98e6983a 	sll	r19,r19,r3
    a948:	88e2983a 	sll	r17,r17,r3
    a94c:	2ce6b03a 	or	r19,r5,r19
    a950:	1c007c16 	blt	r3,r16,ab44 <__adddf3+0x3a8>
    a954:	1c21c83a 	sub	r16,r3,r16
    a958:	81400044 	addi	r5,r16,1
    a95c:	00c007c4 	movi	r3,31
    a960:	19409816 	blt	r3,r5,abc4 <__adddf3+0x428>
    a964:	1c21c83a 	sub	r16,r3,r16
    a968:	8c08983a 	sll	r4,r17,r16
    a96c:	8946d83a 	srl	r3,r17,r5
    a970:	9c20983a 	sll	r16,r19,r16
    a974:	2008c03a 	cmpne	r4,r4,zero
    a978:	994ad83a 	srl	r5,r19,r5
    a97c:	1c06b03a 	or	r3,r3,r16
    a980:	1922b03a 	or	r17,r3,r4
    a984:	0021883a 	mov	r16,zero
    a988:	003fa306 	br	a818 <__alt_data_end+0xfffebfd0>
    a98c:	2880202c 	andhi	r2,r5,128
    a990:	9007883a 	mov	r3,r18
    a994:	103fac1e 	bne	r2,zero,a848 <__alt_data_end+0xfffec000>
    a998:	2804977a 	slli	r2,r5,29
    a99c:	8822d0fa 	srli	r17,r17,3
    a9a0:	0101ffc4 	movi	r4,2047
    a9a4:	280ad0fa 	srli	r5,r5,3
    a9a8:	1444b03a 	or	r2,r2,r17
    a9ac:	81002c26 	beq	r16,r4,aa60 <__adddf3+0x2c4>
    a9b0:	8120703a 	and	r16,r16,r4
    a9b4:	01000434 	movhi	r4,16
    a9b8:	213fffc4 	addi	r4,r4,-1
    a9bc:	2908703a 	and	r4,r5,r4
    a9c0:	003fad06 	br	a878 <__alt_data_end+0xfffec030>
    a9c4:	8089c83a 	sub	r4,r16,r2
    a9c8:	01006a0e 	bge	zero,r4,ab74 <__adddf3+0x3d8>
    a9cc:	10003326 	beq	r2,zero,aa9c <__adddf3+0x300>
    a9d0:	0081ffc4 	movi	r2,2047
    a9d4:	80bf9026 	beq	r16,r2,a818 <__alt_data_end+0xfffebfd0>
    a9d8:	42002034 	orhi	r8,r8,128
    a9dc:	00800e04 	movi	r2,56
    a9e0:	1100b116 	blt	r2,r4,aca8 <__adddf3+0x50c>
    a9e4:	008007c4 	movi	r2,31
    a9e8:	1100e216 	blt	r2,r4,ad74 <__adddf3+0x5d8>
    a9ec:	00800804 	movi	r2,32
    a9f0:	1105c83a 	sub	r2,r2,r4
    a9f4:	4092983a 	sll	r9,r8,r2
    a9f8:	310ed83a 	srl	r7,r6,r4
    a9fc:	3084983a 	sll	r2,r6,r2
    aa00:	4110d83a 	srl	r8,r8,r4
    aa04:	49ccb03a 	or	r6,r9,r7
    aa08:	1004c03a 	cmpne	r2,r2,zero
    aa0c:	308cb03a 	or	r6,r6,r2
    aa10:	344d883a 	add	r6,r6,r17
    aa14:	3463803a 	cmpltu	r17,r6,r17
    aa18:	414b883a 	add	r5,r8,r5
    aa1c:	2c4b883a 	add	r5,r5,r17
    aa20:	3023883a 	mov	r17,r6
    aa24:	2880202c 	andhi	r2,r5,128
    aa28:	10002726 	beq	r2,zero,aac8 <__adddf3+0x32c>
    aa2c:	84000044 	addi	r16,r16,1
    aa30:	0081ffc4 	movi	r2,2047
    aa34:	8080ae26 	beq	r16,r2,acf0 <__adddf3+0x554>
    aa38:	00bfe034 	movhi	r2,65408
    aa3c:	10bfffc4 	addi	r2,r2,-1
    aa40:	288a703a 	and	r5,r5,r2
    aa44:	880cd07a 	srli	r6,r17,1
    aa48:	280897fa 	slli	r4,r5,31
    aa4c:	88c0004c 	andi	r3,r17,1
    aa50:	30e2b03a 	or	r17,r6,r3
    aa54:	280ad07a 	srli	r5,r5,1
    aa58:	8922b03a 	or	r17,r17,r4
    aa5c:	003f6e06 	br	a818 <__alt_data_end+0xfffebfd0>
    aa60:	1148b03a 	or	r4,r2,r5
    aa64:	20003c26 	beq	r4,zero,ab58 <__adddf3+0x3bc>
    aa68:	29000234 	orhi	r4,r5,8
    aa6c:	01400434 	movhi	r5,16
    aa70:	297fffc4 	addi	r5,r5,-1
    aa74:	2148703a 	and	r4,r4,r5
    aa78:	003f7f06 	br	a878 <__alt_data_end+0xfffec030>
    aa7c:	18ffffc4 	addi	r3,r3,-1
    aa80:	18004d1e 	bne	r3,zero,abb8 <__adddf3+0x41c>
    aa84:	898dc83a 	sub	r6,r17,r6
    aa88:	89a3803a 	cmpltu	r17,r17,r6
    aa8c:	2a0bc83a 	sub	r5,r5,r8
    aa90:	2c4bc83a 	sub	r5,r5,r17
    aa94:	3023883a 	mov	r17,r6
    aa98:	003f9c06 	br	a90c <__alt_data_end+0xfffec0c4>
    aa9c:	4184b03a 	or	r2,r8,r6
    aaa0:	103f5d26 	beq	r2,zero,a818 <__alt_data_end+0xfffebfd0>
    aaa4:	213fffc4 	addi	r4,r4,-1
    aaa8:	203fd926 	beq	r4,zero,aa10 <__alt_data_end+0xfffec1c8>
    aaac:	0081ffc4 	movi	r2,2047
    aab0:	80bfca1e 	bne	r16,r2,a9dc <__alt_data_end+0xfffec194>
    aab4:	003f5806 	br	a818 <__alt_data_end+0xfffebfd0>
    aab8:	10c8b03a 	or	r4,r2,r3
    aabc:	20008b26 	beq	r4,zero,acec <__adddf3+0x550>
    aac0:	100b883a 	mov	r5,r2
    aac4:	1823883a 	mov	r17,r3
    aac8:	888001cc 	andi	r2,r17,7
    aacc:	103f541e 	bne	r2,zero,a820 <__alt_data_end+0xfffebfd8>
    aad0:	9007883a 	mov	r3,r18
    aad4:	003fb006 	br	a998 <__alt_data_end+0xfffec150>
    aad8:	1800531e 	bne	r3,zero,ac28 <__adddf3+0x48c>
    aadc:	80800044 	addi	r2,r16,1
    aae0:	1081ffcc 	andi	r2,r2,2047
    aae4:	00c00044 	movi	r3,1
    aae8:	1880990e 	bge	r3,r2,ad50 <__adddf3+0x5b4>
    aaec:	8985c83a 	sub	r2,r17,r6
    aaf0:	8887803a 	cmpltu	r3,r17,r2
    aaf4:	2a27c83a 	sub	r19,r5,r8
    aaf8:	98e7c83a 	sub	r19,r19,r3
    aafc:	98c0202c 	andhi	r3,r19,128
    ab00:	18006226 	beq	r3,zero,ac8c <__adddf3+0x4f0>
    ab04:	3463c83a 	sub	r17,r6,r17
    ab08:	4151c83a 	sub	r8,r8,r5
    ab0c:	344d803a 	cmpltu	r6,r6,r17
    ab10:	41a7c83a 	sub	r19,r8,r6
    ab14:	3825883a 	mov	r18,r7
    ab18:	983f821e 	bne	r19,zero,a924 <__alt_data_end+0xfffec0dc>
    ab1c:	8809883a 	mov	r4,r17
    ab20:	000cf340 	call	cf34 <__clzsi2>
    ab24:	10800804 	addi	r2,r2,32
    ab28:	10fffe04 	addi	r3,r2,-8
    ab2c:	010007c4 	movi	r4,31
    ab30:	20ff810e 	bge	r4,r3,a938 <__alt_data_end+0xfffec0f0>
    ab34:	14fff604 	addi	r19,r2,-40
    ab38:	8ce6983a 	sll	r19,r17,r19
    ab3c:	0023883a 	mov	r17,zero
    ab40:	1c3f840e 	bge	r3,r16,a954 <__alt_data_end+0xfffec10c>
    ab44:	017fe034 	movhi	r5,65408
    ab48:	297fffc4 	addi	r5,r5,-1
    ab4c:	80e1c83a 	sub	r16,r16,r3
    ab50:	994a703a 	and	r5,r19,r5
    ab54:	003f3006 	br	a818 <__alt_data_end+0xfffebfd0>
    ab58:	0009883a 	mov	r4,zero
    ab5c:	0005883a 	mov	r2,zero
    ab60:	003f4506 	br	a878 <__alt_data_end+0xfffec030>
    ab64:	418cb03a 	or	r6,r8,r6
    ab68:	300cc03a 	cmpne	r6,r6,zero
    ab6c:	0007883a 	mov	r3,zero
    ab70:	003f6106 	br	a8f8 <__alt_data_end+0xfffec0b0>
    ab74:	2000921e 	bne	r4,zero,adc0 <__adddf3+0x624>
    ab78:	80800044 	addi	r2,r16,1
    ab7c:	11c1ffcc 	andi	r7,r2,2047
    ab80:	01000044 	movi	r4,1
    ab84:	21c0610e 	bge	r4,r7,ad0c <__adddf3+0x570>
    ab88:	0101ffc4 	movi	r4,2047
    ab8c:	1100a326 	beq	r2,r4,ae1c <__adddf3+0x680>
    ab90:	344d883a 	add	r6,r6,r17
    ab94:	3463803a 	cmpltu	r17,r6,r17
    ab98:	414b883a 	add	r5,r8,r5
    ab9c:	2c4b883a 	add	r5,r5,r17
    aba0:	282297fa 	slli	r17,r5,31
    aba4:	300cd07a 	srli	r6,r6,1
    aba8:	280ad07a 	srli	r5,r5,1
    abac:	1021883a 	mov	r16,r2
    abb0:	89a2b03a 	or	r17,r17,r6
    abb4:	003f1806 	br	a818 <__alt_data_end+0xfffebfd0>
    abb8:	0081ffc4 	movi	r2,2047
    abbc:	80bf411e 	bne	r16,r2,a8c4 <__alt_data_end+0xfffec07c>
    abc0:	003f1506 	br	a818 <__alt_data_end+0xfffebfd0>
    abc4:	80bff844 	addi	r2,r16,-31
    abc8:	00c00804 	movi	r3,32
    abcc:	9884d83a 	srl	r2,r19,r2
    abd0:	28c04a26 	beq	r5,r3,acfc <__adddf3+0x560>
    abd4:	00c00fc4 	movi	r3,63
    abd8:	1c21c83a 	sub	r16,r3,r16
    abdc:	9c26983a 	sll	r19,r19,r16
    abe0:	9c62b03a 	or	r17,r19,r17
    abe4:	8822c03a 	cmpne	r17,r17,zero
    abe8:	88a2b03a 	or	r17,r17,r2
    abec:	000b883a 	mov	r5,zero
    abf0:	0021883a 	mov	r16,zero
    abf4:	003fb406 	br	aac8 <__alt_data_end+0xfffec280>
    abf8:	18bff804 	addi	r2,r3,-32
    abfc:	01000804 	movi	r4,32
    ac00:	4084d83a 	srl	r2,r8,r2
    ac04:	19003f26 	beq	r3,r4,ad04 <__adddf3+0x568>
    ac08:	01001004 	movi	r4,64
    ac0c:	20c7c83a 	sub	r3,r4,r3
    ac10:	40d0983a 	sll	r8,r8,r3
    ac14:	418cb03a 	or	r6,r8,r6
    ac18:	300cc03a 	cmpne	r6,r6,zero
    ac1c:	308cb03a 	or	r6,r6,r2
    ac20:	0007883a 	mov	r3,zero
    ac24:	003f3406 	br	a8f8 <__alt_data_end+0xfffec0b0>
    ac28:	80002326 	beq	r16,zero,acb8 <__adddf3+0x51c>
    ac2c:	0101ffc4 	movi	r4,2047
    ac30:	11005e26 	beq	r2,r4,adac <__adddf3+0x610>
    ac34:	00c7c83a 	sub	r3,zero,r3
    ac38:	29402034 	orhi	r5,r5,128
    ac3c:	01000e04 	movi	r4,56
    ac40:	20c07216 	blt	r4,r3,ae0c <__adddf3+0x670>
    ac44:	010007c4 	movi	r4,31
    ac48:	20c0ce16 	blt	r4,r3,af84 <__adddf3+0x7e8>
    ac4c:	01000804 	movi	r4,32
    ac50:	20c9c83a 	sub	r4,r4,r3
    ac54:	2914983a 	sll	r10,r5,r4
    ac58:	88d2d83a 	srl	r9,r17,r3
    ac5c:	8908983a 	sll	r4,r17,r4
    ac60:	28c6d83a 	srl	r3,r5,r3
    ac64:	5262b03a 	or	r17,r10,r9
    ac68:	2008c03a 	cmpne	r4,r4,zero
    ac6c:	8922b03a 	or	r17,r17,r4
    ac70:	3463c83a 	sub	r17,r6,r17
    ac74:	40c7c83a 	sub	r3,r8,r3
    ac78:	344d803a 	cmpltu	r6,r6,r17
    ac7c:	198bc83a 	sub	r5,r3,r6
    ac80:	1021883a 	mov	r16,r2
    ac84:	3825883a 	mov	r18,r7
    ac88:	003f2006 	br	a90c <__alt_data_end+0xfffec0c4>
    ac8c:	9886b03a 	or	r3,r19,r2
    ac90:	1800141e 	bne	r3,zero,ace4 <__adddf3+0x548>
    ac94:	0007883a 	mov	r3,zero
    ac98:	000b883a 	mov	r5,zero
    ac9c:	0023883a 	mov	r17,zero
    aca0:	0021883a 	mov	r16,zero
    aca4:	003f3c06 	br	a998 <__alt_data_end+0xfffec150>
    aca8:	418cb03a 	or	r6,r8,r6
    acac:	300cc03a 	cmpne	r6,r6,zero
    acb0:	0011883a 	mov	r8,zero
    acb4:	003f5606 	br	aa10 <__alt_data_end+0xfffec1c8>
    acb8:	2c48b03a 	or	r4,r5,r17
    acbc:	20003b26 	beq	r4,zero,adac <__adddf3+0x610>
    acc0:	00c6303a 	nor	r3,zero,r3
    acc4:	1800371e 	bne	r3,zero,ada4 <__adddf3+0x608>
    acc8:	3463c83a 	sub	r17,r6,r17
    accc:	414bc83a 	sub	r5,r8,r5
    acd0:	344d803a 	cmpltu	r6,r6,r17
    acd4:	298bc83a 	sub	r5,r5,r6
    acd8:	1021883a 	mov	r16,r2
    acdc:	3825883a 	mov	r18,r7
    ace0:	003f0a06 	br	a90c <__alt_data_end+0xfffec0c4>
    ace4:	1023883a 	mov	r17,r2
    ace8:	003f0d06 	br	a920 <__alt_data_end+0xfffec0d8>
    acec:	0007883a 	mov	r3,zero
    acf0:	000b883a 	mov	r5,zero
    acf4:	0023883a 	mov	r17,zero
    acf8:	003f2706 	br	a998 <__alt_data_end+0xfffec150>
    acfc:	0027883a 	mov	r19,zero
    ad00:	003fb706 	br	abe0 <__alt_data_end+0xfffec398>
    ad04:	0011883a 	mov	r8,zero
    ad08:	003fc206 	br	ac14 <__alt_data_end+0xfffec3cc>
    ad0c:	2c44b03a 	or	r2,r5,r17
    ad10:	8000871e 	bne	r16,zero,af30 <__adddf3+0x794>
    ad14:	1000b126 	beq	r2,zero,afdc <__adddf3+0x840>
    ad18:	4184b03a 	or	r2,r8,r6
    ad1c:	103ebe26 	beq	r2,zero,a818 <__alt_data_end+0xfffebfd0>
    ad20:	3445883a 	add	r2,r6,r17
    ad24:	1463803a 	cmpltu	r17,r2,r17
    ad28:	414b883a 	add	r5,r8,r5
    ad2c:	2c4b883a 	add	r5,r5,r17
    ad30:	28c0202c 	andhi	r3,r5,128
    ad34:	1023883a 	mov	r17,r2
    ad38:	183f6326 	beq	r3,zero,aac8 <__alt_data_end+0xfffec280>
    ad3c:	00bfe034 	movhi	r2,65408
    ad40:	10bfffc4 	addi	r2,r2,-1
    ad44:	2021883a 	mov	r16,r4
    ad48:	288a703a 	and	r5,r5,r2
    ad4c:	003eb206 	br	a818 <__alt_data_end+0xfffebfd0>
    ad50:	2c44b03a 	or	r2,r5,r17
    ad54:	8000251e 	bne	r16,zero,adec <__adddf3+0x650>
    ad58:	10004b1e 	bne	r2,zero,ae88 <__adddf3+0x6ec>
    ad5c:	4184b03a 	or	r2,r8,r6
    ad60:	103fe226 	beq	r2,zero,acec <__alt_data_end+0xfffec4a4>
    ad64:	400b883a 	mov	r5,r8
    ad68:	3023883a 	mov	r17,r6
    ad6c:	3825883a 	mov	r18,r7
    ad70:	003ea906 	br	a818 <__alt_data_end+0xfffebfd0>
    ad74:	20bff804 	addi	r2,r4,-32
    ad78:	01c00804 	movi	r7,32
    ad7c:	4084d83a 	srl	r2,r8,r2
    ad80:	21c07e26 	beq	r4,r7,af7c <__adddf3+0x7e0>
    ad84:	01c01004 	movi	r7,64
    ad88:	3909c83a 	sub	r4,r7,r4
    ad8c:	4110983a 	sll	r8,r8,r4
    ad90:	418cb03a 	or	r6,r8,r6
    ad94:	300cc03a 	cmpne	r6,r6,zero
    ad98:	308cb03a 	or	r6,r6,r2
    ad9c:	0011883a 	mov	r8,zero
    ada0:	003f1b06 	br	aa10 <__alt_data_end+0xfffec1c8>
    ada4:	0101ffc4 	movi	r4,2047
    ada8:	113fa41e 	bne	r2,r4,ac3c <__alt_data_end+0xfffec3f4>
    adac:	400b883a 	mov	r5,r8
    adb0:	3023883a 	mov	r17,r6
    adb4:	1021883a 	mov	r16,r2
    adb8:	3825883a 	mov	r18,r7
    adbc:	003e9606 	br	a818 <__alt_data_end+0xfffebfd0>
    adc0:	80001a1e 	bne	r16,zero,ae2c <__adddf3+0x690>
    adc4:	2c4eb03a 	or	r7,r5,r17
    adc8:	38005526 	beq	r7,zero,af20 <__adddf3+0x784>
    adcc:	0108303a 	nor	r4,zero,r4
    add0:	2000511e 	bne	r4,zero,af18 <__adddf3+0x77c>
    add4:	89a3883a 	add	r17,r17,r6
    add8:	414b883a 	add	r5,r8,r5
    addc:	898d803a 	cmpltu	r6,r17,r6
    ade0:	298b883a 	add	r5,r5,r6
    ade4:	1021883a 	mov	r16,r2
    ade8:	003f0e06 	br	aa24 <__alt_data_end+0xfffec1dc>
    adec:	1000341e 	bne	r2,zero,aec0 <__adddf3+0x724>
    adf0:	4184b03a 	or	r2,r8,r6
    adf4:	10006f26 	beq	r2,zero,afb4 <__adddf3+0x818>
    adf8:	400b883a 	mov	r5,r8
    adfc:	3023883a 	mov	r17,r6
    ae00:	3825883a 	mov	r18,r7
    ae04:	0401ffc4 	movi	r16,2047
    ae08:	003e8306 	br	a818 <__alt_data_end+0xfffebfd0>
    ae0c:	2c62b03a 	or	r17,r5,r17
    ae10:	8822c03a 	cmpne	r17,r17,zero
    ae14:	0007883a 	mov	r3,zero
    ae18:	003f9506 	br	ac70 <__alt_data_end+0xfffec428>
    ae1c:	1021883a 	mov	r16,r2
    ae20:	000b883a 	mov	r5,zero
    ae24:	0023883a 	mov	r17,zero
    ae28:	003edb06 	br	a998 <__alt_data_end+0xfffec150>
    ae2c:	01c1ffc4 	movi	r7,2047
    ae30:	11c03b26 	beq	r2,r7,af20 <__adddf3+0x784>
    ae34:	0109c83a 	sub	r4,zero,r4
    ae38:	29402034 	orhi	r5,r5,128
    ae3c:	01c00e04 	movi	r7,56
    ae40:	39006216 	blt	r7,r4,afcc <__adddf3+0x830>
    ae44:	01c007c4 	movi	r7,31
    ae48:	39006b16 	blt	r7,r4,aff8 <__adddf3+0x85c>
    ae4c:	01c00804 	movi	r7,32
    ae50:	390fc83a 	sub	r7,r7,r4
    ae54:	29d4983a 	sll	r10,r5,r7
    ae58:	8912d83a 	srl	r9,r17,r4
    ae5c:	89ce983a 	sll	r7,r17,r7
    ae60:	2908d83a 	srl	r4,r5,r4
    ae64:	5262b03a 	or	r17,r10,r9
    ae68:	380ac03a 	cmpne	r5,r7,zero
    ae6c:	8962b03a 	or	r17,r17,r5
    ae70:	89a3883a 	add	r17,r17,r6
    ae74:	2211883a 	add	r8,r4,r8
    ae78:	898d803a 	cmpltu	r6,r17,r6
    ae7c:	418b883a 	add	r5,r8,r6
    ae80:	1021883a 	mov	r16,r2
    ae84:	003ee706 	br	aa24 <__alt_data_end+0xfffec1dc>
    ae88:	4184b03a 	or	r2,r8,r6
    ae8c:	103e6226 	beq	r2,zero,a818 <__alt_data_end+0xfffebfd0>
    ae90:	8987c83a 	sub	r3,r17,r6
    ae94:	88c9803a 	cmpltu	r4,r17,r3
    ae98:	2a05c83a 	sub	r2,r5,r8
    ae9c:	1105c83a 	sub	r2,r2,r4
    aea0:	1100202c 	andhi	r4,r2,128
    aea4:	203f0426 	beq	r4,zero,aab8 <__alt_data_end+0xfffec270>
    aea8:	3463c83a 	sub	r17,r6,r17
    aeac:	414bc83a 	sub	r5,r8,r5
    aeb0:	344d803a 	cmpltu	r6,r6,r17
    aeb4:	298bc83a 	sub	r5,r5,r6
    aeb8:	3825883a 	mov	r18,r7
    aebc:	003e5606 	br	a818 <__alt_data_end+0xfffebfd0>
    aec0:	4184b03a 	or	r2,r8,r6
    aec4:	10002b26 	beq	r2,zero,af74 <__adddf3+0x7d8>
    aec8:	2804d0fa 	srli	r2,r5,3
    aecc:	8822d0fa 	srli	r17,r17,3
    aed0:	280a977a 	slli	r5,r5,29
    aed4:	10c0022c 	andhi	r3,r2,8
    aed8:	2c62b03a 	or	r17,r5,r17
    aedc:	18000826 	beq	r3,zero,af00 <__adddf3+0x764>
    aee0:	4008d0fa 	srli	r4,r8,3
    aee4:	20c0022c 	andhi	r3,r4,8
    aee8:	1800051e 	bne	r3,zero,af00 <__adddf3+0x764>
    aeec:	300cd0fa 	srli	r6,r6,3
    aef0:	4010977a 	slli	r8,r8,29
    aef4:	2005883a 	mov	r2,r4
    aef8:	3825883a 	mov	r18,r7
    aefc:	41a2b03a 	or	r17,r8,r6
    af00:	880ad77a 	srli	r5,r17,29
    af04:	100490fa 	slli	r2,r2,3
    af08:	882290fa 	slli	r17,r17,3
    af0c:	0401ffc4 	movi	r16,2047
    af10:	288ab03a 	or	r5,r5,r2
    af14:	003e4006 	br	a818 <__alt_data_end+0xfffebfd0>
    af18:	01c1ffc4 	movi	r7,2047
    af1c:	11ffc71e 	bne	r2,r7,ae3c <__alt_data_end+0xfffec5f4>
    af20:	400b883a 	mov	r5,r8
    af24:	3023883a 	mov	r17,r6
    af28:	1021883a 	mov	r16,r2
    af2c:	003e3a06 	br	a818 <__alt_data_end+0xfffebfd0>
    af30:	10002d26 	beq	r2,zero,afe8 <__adddf3+0x84c>
    af34:	4184b03a 	or	r2,r8,r6
    af38:	10000e26 	beq	r2,zero,af74 <__adddf3+0x7d8>
    af3c:	2804d0fa 	srli	r2,r5,3
    af40:	8822d0fa 	srli	r17,r17,3
    af44:	280a977a 	slli	r5,r5,29
    af48:	10c0022c 	andhi	r3,r2,8
    af4c:	2c62b03a 	or	r17,r5,r17
    af50:	183feb26 	beq	r3,zero,af00 <__alt_data_end+0xfffec6b8>
    af54:	4008d0fa 	srli	r4,r8,3
    af58:	20c0022c 	andhi	r3,r4,8
    af5c:	183fe81e 	bne	r3,zero,af00 <__alt_data_end+0xfffec6b8>
    af60:	300cd0fa 	srli	r6,r6,3
    af64:	4010977a 	slli	r8,r8,29
    af68:	2005883a 	mov	r2,r4
    af6c:	41a2b03a 	or	r17,r8,r6
    af70:	003fe306 	br	af00 <__alt_data_end+0xfffec6b8>
    af74:	0401ffc4 	movi	r16,2047
    af78:	003e2706 	br	a818 <__alt_data_end+0xfffebfd0>
    af7c:	0011883a 	mov	r8,zero
    af80:	003f8306 	br	ad90 <__alt_data_end+0xfffec548>
    af84:	193ff804 	addi	r4,r3,-32
    af88:	02400804 	movi	r9,32
    af8c:	2908d83a 	srl	r4,r5,r4
    af90:	1a402526 	beq	r3,r9,b028 <__adddf3+0x88c>
    af94:	02401004 	movi	r9,64
    af98:	48c7c83a 	sub	r3,r9,r3
    af9c:	28ca983a 	sll	r5,r5,r3
    afa0:	2c62b03a 	or	r17,r5,r17
    afa4:	8822c03a 	cmpne	r17,r17,zero
    afa8:	8922b03a 	or	r17,r17,r4
    afac:	0007883a 	mov	r3,zero
    afb0:	003f2f06 	br	ac70 <__alt_data_end+0xfffec428>
    afb4:	01402034 	movhi	r5,128
    afb8:	0007883a 	mov	r3,zero
    afbc:	297fffc4 	addi	r5,r5,-1
    afc0:	047ffe04 	movi	r17,-8
    afc4:	0401ffc4 	movi	r16,2047
    afc8:	003e7306 	br	a998 <__alt_data_end+0xfffec150>
    afcc:	2c62b03a 	or	r17,r5,r17
    afd0:	8822c03a 	cmpne	r17,r17,zero
    afd4:	0009883a 	mov	r4,zero
    afd8:	003fa506 	br	ae70 <__alt_data_end+0xfffec628>
    afdc:	400b883a 	mov	r5,r8
    afe0:	3023883a 	mov	r17,r6
    afe4:	003e0c06 	br	a818 <__alt_data_end+0xfffebfd0>
    afe8:	400b883a 	mov	r5,r8
    afec:	3023883a 	mov	r17,r6
    aff0:	0401ffc4 	movi	r16,2047
    aff4:	003e0806 	br	a818 <__alt_data_end+0xfffebfd0>
    aff8:	21fff804 	addi	r7,r4,-32
    affc:	02400804 	movi	r9,32
    b000:	29ced83a 	srl	r7,r5,r7
    b004:	22400a26 	beq	r4,r9,b030 <__adddf3+0x894>
    b008:	02401004 	movi	r9,64
    b00c:	4909c83a 	sub	r4,r9,r4
    b010:	290a983a 	sll	r5,r5,r4
    b014:	2c62b03a 	or	r17,r5,r17
    b018:	8822c03a 	cmpne	r17,r17,zero
    b01c:	89e2b03a 	or	r17,r17,r7
    b020:	0009883a 	mov	r4,zero
    b024:	003f9206 	br	ae70 <__alt_data_end+0xfffec628>
    b028:	000b883a 	mov	r5,zero
    b02c:	003fdc06 	br	afa0 <__alt_data_end+0xfffec758>
    b030:	000b883a 	mov	r5,zero
    b034:	003ff706 	br	b014 <__alt_data_end+0xfffec7cc>

0000b038 <__divdf3>:
    b038:	defff004 	addi	sp,sp,-64
    b03c:	dc800815 	stw	r18,32(sp)
    b040:	2824d53a 	srli	r18,r5,20
    b044:	dd800c15 	stw	r22,48(sp)
    b048:	282cd7fa 	srli	r22,r5,31
    b04c:	dc000615 	stw	r16,24(sp)
    b050:	04000434 	movhi	r16,16
    b054:	df000e15 	stw	fp,56(sp)
    b058:	dd000a15 	stw	r20,40(sp)
    b05c:	dcc00915 	stw	r19,36(sp)
    b060:	dc400715 	stw	r17,28(sp)
    b064:	843fffc4 	addi	r16,r16,-1
    b068:	dfc00f15 	stw	ra,60(sp)
    b06c:	ddc00d15 	stw	r23,52(sp)
    b070:	dd400b15 	stw	r21,44(sp)
    b074:	9481ffcc 	andi	r18,r18,2047
    b078:	2029883a 	mov	r20,r4
    b07c:	2027883a 	mov	r19,r4
    b080:	2c22703a 	and	r17,r5,r16
    b084:	b7003fcc 	andi	fp,r22,255
    b088:	90005e26 	beq	r18,zero,b204 <__divdf3+0x1cc>
    b08c:	0081ffc4 	movi	r2,2047
    b090:	90803526 	beq	r18,r2,b168 <__divdf3+0x130>
    b094:	8c000434 	orhi	r16,r17,16
    b098:	2004d77a 	srli	r2,r4,29
    b09c:	802090fa 	slli	r16,r16,3
    b0a0:	202690fa 	slli	r19,r4,3
    b0a4:	94bf0044 	addi	r18,r18,-1023
    b0a8:	80a2b03a 	or	r17,r16,r2
    b0ac:	0029883a 	mov	r20,zero
    b0b0:	0011883a 	mov	r8,zero
    b0b4:	380ad53a 	srli	r5,r7,20
    b0b8:	382ed7fa 	srli	r23,r7,31
    b0bc:	04000434 	movhi	r16,16
    b0c0:	843fffc4 	addi	r16,r16,-1
    b0c4:	2941ffcc 	andi	r5,r5,2047
    b0c8:	302b883a 	mov	r21,r6
    b0cc:	3c20703a 	and	r16,r7,r16
    b0d0:	ba403fcc 	andi	r9,r23,255
    b0d4:	28006726 	beq	r5,zero,b274 <__divdf3+0x23c>
    b0d8:	0081ffc4 	movi	r2,2047
    b0dc:	28805f26 	beq	r5,r2,b25c <__divdf3+0x224>
    b0e0:	84000434 	orhi	r16,r16,16
    b0e4:	3004d77a 	srli	r2,r6,29
    b0e8:	802090fa 	slli	r16,r16,3
    b0ec:	302a90fa 	slli	r21,r6,3
    b0f0:	297f0044 	addi	r5,r5,-1023
    b0f4:	80a0b03a 	or	r16,r16,r2
    b0f8:	000f883a 	mov	r7,zero
    b0fc:	3d06b03a 	or	r3,r7,r20
    b100:	180690ba 	slli	r3,r3,2
    b104:	00800074 	movhi	r2,1
    b108:	10ac4a04 	addi	r2,r2,-20184
    b10c:	1885883a 	add	r2,r3,r2
    b110:	10800017 	ldw	r2,0(r2)
    b114:	b5c8f03a 	xor	r4,r22,r23
    b118:	200d883a 	mov	r6,r4
    b11c:	25003fcc 	andi	r20,r4,255
    b120:	9165c83a 	sub	r18,r18,r5
    b124:	1000683a 	jmp	r2
    b128:	0000b370 	cmpltui	zero,zero,717
    b12c:	0000b1a0 	cmpeqi	zero,zero,710
    b130:	0000b334 	movhi	zero,716
    b134:	0000b184 	movi	zero,710
    b138:	0000b334 	movhi	zero,716
    b13c:	0000b308 	cmpgei	zero,zero,716
    b140:	0000b334 	movhi	zero,716
    b144:	0000b184 	movi	zero,710
    b148:	0000b1a0 	cmpeqi	zero,zero,710
    b14c:	0000b1a0 	cmpeqi	zero,zero,710
    b150:	0000b308 	cmpgei	zero,zero,716
    b154:	0000b184 	movi	zero,710
    b158:	0000b194 	movui	zero,710
    b15c:	0000b194 	movui	zero,710
    b160:	0000b194 	movui	zero,710
    b164:	0000b344 	movi	zero,717
    b168:	8904b03a 	or	r2,r17,r4
    b16c:	1000631e 	bne	r2,zero,b2fc <__divdf3+0x2c4>
    b170:	05000204 	movi	r20,8
    b174:	0023883a 	mov	r17,zero
    b178:	0027883a 	mov	r19,zero
    b17c:	02000084 	movi	r8,2
    b180:	003fcc06 	br	b0b4 <__alt_data_end+0xfffec86c>
    b184:	8023883a 	mov	r17,r16
    b188:	a827883a 	mov	r19,r21
    b18c:	4839883a 	mov	fp,r9
    b190:	3811883a 	mov	r8,r7
    b194:	00800084 	movi	r2,2
    b198:	4081531e 	bne	r8,r2,b6e8 <__divdf3+0x6b0>
    b19c:	e029883a 	mov	r20,fp
    b1a0:	a180004c 	andi	r6,r20,1
    b1a4:	0201ffc4 	movi	r8,2047
    b1a8:	000b883a 	mov	r5,zero
    b1ac:	0027883a 	mov	r19,zero
    b1b0:	4010953a 	slli	r8,r8,20
    b1b4:	30c03fcc 	andi	r3,r6,255
    b1b8:	04000434 	movhi	r16,16
    b1bc:	180697fa 	slli	r3,r3,31
    b1c0:	843fffc4 	addi	r16,r16,-1
    b1c4:	2c20703a 	and	r16,r5,r16
    b1c8:	8220b03a 	or	r16,r16,r8
    b1cc:	80c6b03a 	or	r3,r16,r3
    b1d0:	9805883a 	mov	r2,r19
    b1d4:	dfc00f17 	ldw	ra,60(sp)
    b1d8:	df000e17 	ldw	fp,56(sp)
    b1dc:	ddc00d17 	ldw	r23,52(sp)
    b1e0:	dd800c17 	ldw	r22,48(sp)
    b1e4:	dd400b17 	ldw	r21,44(sp)
    b1e8:	dd000a17 	ldw	r20,40(sp)
    b1ec:	dcc00917 	ldw	r19,36(sp)
    b1f0:	dc800817 	ldw	r18,32(sp)
    b1f4:	dc400717 	ldw	r17,28(sp)
    b1f8:	dc000617 	ldw	r16,24(sp)
    b1fc:	dec01004 	addi	sp,sp,64
    b200:	f800283a 	ret
    b204:	8904b03a 	or	r2,r17,r4
    b208:	10003726 	beq	r2,zero,b2e8 <__divdf3+0x2b0>
    b20c:	88014d26 	beq	r17,zero,b744 <__divdf3+0x70c>
    b210:	8809883a 	mov	r4,r17
    b214:	d9800215 	stw	r6,8(sp)
    b218:	d9c00515 	stw	r7,20(sp)
    b21c:	000cf340 	call	cf34 <__clzsi2>
    b220:	d9800217 	ldw	r6,8(sp)
    b224:	d9c00517 	ldw	r7,20(sp)
    b228:	1007883a 	mov	r3,r2
    b22c:	01000a04 	movi	r4,40
    b230:	1cfffe04 	addi	r19,r3,-8
    b234:	20c9c83a 	sub	r4,r4,r3
    b238:	8cca983a 	sll	r5,r17,r19
    b23c:	a108d83a 	srl	r4,r20,r4
    b240:	a4e6983a 	sll	r19,r20,r19
    b244:	2162b03a 	or	r17,r4,r5
    b248:	04bf0344 	movi	r18,-1011
    b24c:	90e5c83a 	sub	r18,r18,r3
    b250:	0029883a 	mov	r20,zero
    b254:	0011883a 	mov	r8,zero
    b258:	003f9606 	br	b0b4 <__alt_data_end+0xfffec86c>
    b25c:	8184b03a 	or	r2,r16,r6
    b260:	10001f1e 	bne	r2,zero,b2e0 <__divdf3+0x2a8>
    b264:	0021883a 	mov	r16,zero
    b268:	002b883a 	mov	r21,zero
    b26c:	01c00084 	movi	r7,2
    b270:	003fa206 	br	b0fc <__alt_data_end+0xfffec8b4>
    b274:	8184b03a 	or	r2,r16,r6
    b278:	10001526 	beq	r2,zero,b2d0 <__divdf3+0x298>
    b27c:	80013d26 	beq	r16,zero,b774 <__divdf3+0x73c>
    b280:	8009883a 	mov	r4,r16
    b284:	d9800215 	stw	r6,8(sp)
    b288:	da000315 	stw	r8,12(sp)
    b28c:	da400415 	stw	r9,16(sp)
    b290:	000cf340 	call	cf34 <__clzsi2>
    b294:	d9800217 	ldw	r6,8(sp)
    b298:	da000317 	ldw	r8,12(sp)
    b29c:	da400417 	ldw	r9,16(sp)
    b2a0:	1007883a 	mov	r3,r2
    b2a4:	01000a04 	movi	r4,40
    b2a8:	1d7ffe04 	addi	r21,r3,-8
    b2ac:	20c9c83a 	sub	r4,r4,r3
    b2b0:	8560983a 	sll	r16,r16,r21
    b2b4:	3108d83a 	srl	r4,r6,r4
    b2b8:	356a983a 	sll	r21,r6,r21
    b2bc:	2420b03a 	or	r16,r4,r16
    b2c0:	017f0344 	movi	r5,-1011
    b2c4:	28cbc83a 	sub	r5,r5,r3
    b2c8:	000f883a 	mov	r7,zero
    b2cc:	003f8b06 	br	b0fc <__alt_data_end+0xfffec8b4>
    b2d0:	0021883a 	mov	r16,zero
    b2d4:	002b883a 	mov	r21,zero
    b2d8:	01c00044 	movi	r7,1
    b2dc:	003f8706 	br	b0fc <__alt_data_end+0xfffec8b4>
    b2e0:	01c000c4 	movi	r7,3
    b2e4:	003f8506 	br	b0fc <__alt_data_end+0xfffec8b4>
    b2e8:	05000104 	movi	r20,4
    b2ec:	0023883a 	mov	r17,zero
    b2f0:	0027883a 	mov	r19,zero
    b2f4:	02000044 	movi	r8,1
    b2f8:	003f6e06 	br	b0b4 <__alt_data_end+0xfffec86c>
    b2fc:	05000304 	movi	r20,12
    b300:	020000c4 	movi	r8,3
    b304:	003f6b06 	br	b0b4 <__alt_data_end+0xfffec86c>
    b308:	01400434 	movhi	r5,16
    b30c:	000d883a 	mov	r6,zero
    b310:	297fffc4 	addi	r5,r5,-1
    b314:	04ffffc4 	movi	r19,-1
    b318:	0201ffc4 	movi	r8,2047
    b31c:	003fa406 	br	b1b0 <__alt_data_end+0xfffec968>
    b320:	043f0084 	movi	r16,-1022
    b324:	84a1c83a 	sub	r16,r16,r18
    b328:	00800e04 	movi	r2,56
    b32c:	14014d0e 	bge	r2,r16,b864 <__divdf3+0x82c>
    b330:	a180004c 	andi	r6,r20,1
    b334:	0011883a 	mov	r8,zero
    b338:	000b883a 	mov	r5,zero
    b33c:	0027883a 	mov	r19,zero
    b340:	003f9b06 	br	b1b0 <__alt_data_end+0xfffec968>
    b344:	8880022c 	andhi	r2,r17,8
    b348:	1000f026 	beq	r2,zero,b70c <__divdf3+0x6d4>
    b34c:	8080022c 	andhi	r2,r16,8
    b350:	1000ee1e 	bne	r2,zero,b70c <__divdf3+0x6d4>
    b354:	00800434 	movhi	r2,16
    b358:	81400234 	orhi	r5,r16,8
    b35c:	10bfffc4 	addi	r2,r2,-1
    b360:	b80d883a 	mov	r6,r23
    b364:	288a703a 	and	r5,r5,r2
    b368:	a827883a 	mov	r19,r21
    b36c:	003fea06 	br	b318 <__alt_data_end+0xfffecad0>
    b370:	84411c36 	bltu	r16,r17,b7e4 <__divdf3+0x7ac>
    b374:	8c011a26 	beq	r17,r16,b7e0 <__divdf3+0x7a8>
    b378:	94bfffc4 	addi	r18,r18,-1
    b37c:	dcc00015 	stw	r19,0(sp)
    b380:	8811883a 	mov	r8,r17
    b384:	002d883a 	mov	r22,zero
    b388:	a80cd63a 	srli	r6,r21,24
    b38c:	8020923a 	slli	r16,r16,8
    b390:	a82a923a 	slli	r21,r21,8
    b394:	4009883a 	mov	r4,r8
    b398:	342eb03a 	or	r23,r6,r16
    b39c:	dd400115 	stw	r21,4(sp)
    b3a0:	b82ad43a 	srli	r21,r23,16
    b3a4:	da000315 	stw	r8,12(sp)
    b3a8:	bcffffcc 	andi	r19,r23,65535
    b3ac:	a80b883a 	mov	r5,r21
    b3b0:	000a7640 	call	a764 <__udivsi3>
    b3b4:	1009883a 	mov	r4,r2
    b3b8:	980b883a 	mov	r5,r19
    b3bc:	1023883a 	mov	r17,r2
    b3c0:	000a7740 	call	a774 <__mulsi3>
    b3c4:	da000317 	ldw	r8,12(sp)
    b3c8:	a80b883a 	mov	r5,r21
    b3cc:	1039883a 	mov	fp,r2
    b3d0:	4009883a 	mov	r4,r8
    b3d4:	000a76c0 	call	a76c <__umodsi3>
    b3d8:	d8c00017 	ldw	r3,0(sp)
    b3dc:	1004943a 	slli	r2,r2,16
    b3e0:	1810d43a 	srli	r8,r3,16
    b3e4:	120eb03a 	or	r7,r2,r8
    b3e8:	3f00062e 	bgeu	r7,fp,b404 <__divdf3+0x3cc>
    b3ec:	3dcf883a 	add	r7,r7,r23
    b3f0:	88bfffc4 	addi	r2,r17,-1
    b3f4:	3dc10a36 	bltu	r7,r23,b820 <__divdf3+0x7e8>
    b3f8:	3f01092e 	bgeu	r7,fp,b820 <__divdf3+0x7e8>
    b3fc:	8c7fff84 	addi	r17,r17,-2
    b400:	3dcf883a 	add	r7,r7,r23
    b404:	3f39c83a 	sub	fp,r7,fp
    b408:	e009883a 	mov	r4,fp
    b40c:	a80b883a 	mov	r5,r21
    b410:	000a7640 	call	a764 <__udivsi3>
    b414:	1009883a 	mov	r4,r2
    b418:	980b883a 	mov	r5,r19
    b41c:	1021883a 	mov	r16,r2
    b420:	000a7740 	call	a774 <__mulsi3>
    b424:	e009883a 	mov	r4,fp
    b428:	a80b883a 	mov	r5,r21
    b42c:	d8800315 	stw	r2,12(sp)
    b430:	000a76c0 	call	a76c <__umodsi3>
    b434:	d9000017 	ldw	r4,0(sp)
    b438:	1004943a 	slli	r2,r2,16
    b43c:	da000317 	ldw	r8,12(sp)
    b440:	20ffffcc 	andi	r3,r4,65535
    b444:	10ceb03a 	or	r7,r2,r3
    b448:	3a00062e 	bgeu	r7,r8,b464 <__divdf3+0x42c>
    b44c:	3dcf883a 	add	r7,r7,r23
    b450:	80bfffc4 	addi	r2,r16,-1
    b454:	3dc0f036 	bltu	r7,r23,b818 <__divdf3+0x7e0>
    b458:	3a00ef2e 	bgeu	r7,r8,b818 <__divdf3+0x7e0>
    b45c:	843fff84 	addi	r16,r16,-2
    b460:	3dcf883a 	add	r7,r7,r23
    b464:	d8c00117 	ldw	r3,4(sp)
    b468:	8822943a 	slli	r17,r17,16
    b46c:	3a0fc83a 	sub	r7,r7,r8
    b470:	1806d43a 	srli	r3,r3,16
    b474:	8462b03a 	or	r17,r16,r17
    b478:	8affffcc 	andi	r11,r17,65535
    b47c:	d8c00015 	stw	r3,0(sp)
    b480:	d8c00117 	ldw	r3,4(sp)
    b484:	8820d43a 	srli	r16,r17,16
    b488:	5809883a 	mov	r4,r11
    b48c:	1f3fffcc 	andi	fp,r3,65535
    b490:	e00b883a 	mov	r5,fp
    b494:	d9c00515 	stw	r7,20(sp)
    b498:	dac00215 	stw	r11,8(sp)
    b49c:	000a7740 	call	a774 <__mulsi3>
    b4a0:	8009883a 	mov	r4,r16
    b4a4:	e00b883a 	mov	r5,fp
    b4a8:	d8800415 	stw	r2,16(sp)
    b4ac:	000a7740 	call	a774 <__mulsi3>
    b4b0:	d9400017 	ldw	r5,0(sp)
    b4b4:	8009883a 	mov	r4,r16
    b4b8:	d8800315 	stw	r2,12(sp)
    b4bc:	000a7740 	call	a774 <__mulsi3>
    b4c0:	dac00217 	ldw	r11,8(sp)
    b4c4:	d9400017 	ldw	r5,0(sp)
    b4c8:	d8800215 	stw	r2,8(sp)
    b4cc:	5809883a 	mov	r4,r11
    b4d0:	000a7740 	call	a774 <__mulsi3>
    b4d4:	da400417 	ldw	r9,16(sp)
    b4d8:	da800317 	ldw	r10,12(sp)
    b4dc:	d9c00517 	ldw	r7,20(sp)
    b4e0:	480ad43a 	srli	r5,r9,16
    b4e4:	5085883a 	add	r2,r10,r2
    b4e8:	db000217 	ldw	r12,8(sp)
    b4ec:	1151883a 	add	r8,r2,r5
    b4f0:	4280022e 	bgeu	r8,r10,b4fc <__divdf3+0x4c4>
    b4f4:	00800074 	movhi	r2,1
    b4f8:	6099883a 	add	r12,r12,r2
    b4fc:	400ad43a 	srli	r5,r8,16
    b500:	4010943a 	slli	r8,r8,16
    b504:	4c3fffcc 	andi	r16,r9,65535
    b508:	6149883a 	add	r4,r12,r5
    b50c:	4411883a 	add	r8,r8,r16
    b510:	3900a736 	bltu	r7,r4,b7b0 <__divdf3+0x778>
    b514:	3900c426 	beq	r7,r4,b828 <__divdf3+0x7f0>
    b518:	3909c83a 	sub	r4,r7,r4
    b51c:	b221c83a 	sub	r16,r22,r8
    b520:	b42d803a 	cmpltu	r22,r22,r16
    b524:	25adc83a 	sub	r22,r4,r22
    b528:	b5c0c626 	beq	r22,r23,b844 <__divdf3+0x80c>
    b52c:	b009883a 	mov	r4,r22
    b530:	a80b883a 	mov	r5,r21
    b534:	000a7640 	call	a764 <__udivsi3>
    b538:	1009883a 	mov	r4,r2
    b53c:	980b883a 	mov	r5,r19
    b540:	d8800315 	stw	r2,12(sp)
    b544:	000a7740 	call	a774 <__mulsi3>
    b548:	a80b883a 	mov	r5,r21
    b54c:	b009883a 	mov	r4,r22
    b550:	d8800415 	stw	r2,16(sp)
    b554:	000a76c0 	call	a76c <__umodsi3>
    b558:	1004943a 	slli	r2,r2,16
    b55c:	800ed43a 	srli	r7,r16,16
    b560:	da400417 	ldw	r9,16(sp)
    b564:	da000317 	ldw	r8,12(sp)
    b568:	11cab03a 	or	r5,r2,r7
    b56c:	2a40062e 	bgeu	r5,r9,b588 <__divdf3+0x550>
    b570:	2dcb883a 	add	r5,r5,r23
    b574:	40bfffc4 	addi	r2,r8,-1
    b578:	2dc0b436 	bltu	r5,r23,b84c <__divdf3+0x814>
    b57c:	2a40b32e 	bgeu	r5,r9,b84c <__divdf3+0x814>
    b580:	423fff84 	addi	r8,r8,-2
    b584:	2dcb883a 	add	r5,r5,r23
    b588:	2a6dc83a 	sub	r22,r5,r9
    b58c:	b009883a 	mov	r4,r22
    b590:	a80b883a 	mov	r5,r21
    b594:	da000315 	stw	r8,12(sp)
    b598:	000a7640 	call	a764 <__udivsi3>
    b59c:	980b883a 	mov	r5,r19
    b5a0:	1009883a 	mov	r4,r2
    b5a4:	d8800415 	stw	r2,16(sp)
    b5a8:	000a7740 	call	a774 <__mulsi3>
    b5ac:	b009883a 	mov	r4,r22
    b5b0:	a80b883a 	mov	r5,r21
    b5b4:	1027883a 	mov	r19,r2
    b5b8:	000a76c0 	call	a76c <__umodsi3>
    b5bc:	1004943a 	slli	r2,r2,16
    b5c0:	843fffcc 	andi	r16,r16,65535
    b5c4:	da000317 	ldw	r8,12(sp)
    b5c8:	140eb03a 	or	r7,r2,r16
    b5cc:	da400417 	ldw	r9,16(sp)
    b5d0:	3cc0062e 	bgeu	r7,r19,b5ec <__divdf3+0x5b4>
    b5d4:	3dcf883a 	add	r7,r7,r23
    b5d8:	48bfffc4 	addi	r2,r9,-1
    b5dc:	3dc09d36 	bltu	r7,r23,b854 <__divdf3+0x81c>
    b5e0:	3cc09c2e 	bgeu	r7,r19,b854 <__divdf3+0x81c>
    b5e4:	4a7fff84 	addi	r9,r9,-2
    b5e8:	3dcf883a 	add	r7,r7,r23
    b5ec:	4010943a 	slli	r8,r8,16
    b5f0:	3cebc83a 	sub	r21,r7,r19
    b5f4:	e00b883a 	mov	r5,fp
    b5f8:	4a26b03a 	or	r19,r9,r8
    b5fc:	99ffffcc 	andi	r7,r19,65535
    b600:	9820d43a 	srli	r16,r19,16
    b604:	3809883a 	mov	r4,r7
    b608:	d9c00515 	stw	r7,20(sp)
    b60c:	000a7740 	call	a774 <__mulsi3>
    b610:	8009883a 	mov	r4,r16
    b614:	e00b883a 	mov	r5,fp
    b618:	102d883a 	mov	r22,r2
    b61c:	000a7740 	call	a774 <__mulsi3>
    b620:	d9400017 	ldw	r5,0(sp)
    b624:	8009883a 	mov	r4,r16
    b628:	1039883a 	mov	fp,r2
    b62c:	000a7740 	call	a774 <__mulsi3>
    b630:	d9c00517 	ldw	r7,20(sp)
    b634:	d9400017 	ldw	r5,0(sp)
    b638:	1021883a 	mov	r16,r2
    b63c:	3809883a 	mov	r4,r7
    b640:	000a7740 	call	a774 <__mulsi3>
    b644:	b008d43a 	srli	r4,r22,16
    b648:	e085883a 	add	r2,fp,r2
    b64c:	1109883a 	add	r4,r2,r4
    b650:	2700022e 	bgeu	r4,fp,b65c <__divdf3+0x624>
    b654:	00800074 	movhi	r2,1
    b658:	80a1883a 	add	r16,r16,r2
    b65c:	200ad43a 	srli	r5,r4,16
    b660:	2008943a 	slli	r4,r4,16
    b664:	b5bfffcc 	andi	r22,r22,65535
    b668:	8145883a 	add	r2,r16,r5
    b66c:	2589883a 	add	r4,r4,r22
    b670:	a8802c36 	bltu	r21,r2,b724 <__divdf3+0x6ec>
    b674:	a880a426 	beq	r21,r2,b908 <__divdf3+0x8d0>
    b678:	9cc00054 	ori	r19,r19,1
    b67c:	9200ffc4 	addi	r8,r18,1023
    b680:	023f270e 	bge	zero,r8,b320 <__alt_data_end+0xfffecad8>
    b684:	988001cc 	andi	r2,r19,7
    b688:	10000726 	beq	r2,zero,b6a8 <__divdf3+0x670>
    b68c:	990003cc 	andi	r4,r19,15
    b690:	00800104 	movi	r2,4
    b694:	20800426 	beq	r4,r2,b6a8 <__divdf3+0x670>
    b698:	9885883a 	add	r2,r19,r2
    b69c:	14e7803a 	cmpltu	r19,r2,r19
    b6a0:	8ce3883a 	add	r17,r17,r19
    b6a4:	1027883a 	mov	r19,r2
    b6a8:	8880402c 	andhi	r2,r17,256
    b6ac:	10000426 	beq	r2,zero,b6c0 <__divdf3+0x688>
    b6b0:	00bfc034 	movhi	r2,65280
    b6b4:	10bfffc4 	addi	r2,r2,-1
    b6b8:	92010004 	addi	r8,r18,1024
    b6bc:	88a2703a 	and	r17,r17,r2
    b6c0:	0081ff84 	movi	r2,2046
    b6c4:	123eb616 	blt	r2,r8,b1a0 <__alt_data_end+0xfffec958>
    b6c8:	9826d0fa 	srli	r19,r19,3
    b6cc:	8804977a 	slli	r2,r17,29
    b6d0:	8820927a 	slli	r16,r17,9
    b6d4:	4201ffcc 	andi	r8,r8,2047
    b6d8:	14e6b03a 	or	r19,r2,r19
    b6dc:	800ad33a 	srli	r5,r16,12
    b6e0:	a180004c 	andi	r6,r20,1
    b6e4:	003eb206 	br	b1b0 <__alt_data_end+0xfffec968>
    b6e8:	008000c4 	movi	r2,3
    b6ec:	4080ac26 	beq	r8,r2,b9a0 <__divdf3+0x968>
    b6f0:	00800044 	movi	r2,1
    b6f4:	4080591e 	bne	r8,r2,b85c <__divdf3+0x824>
    b6f8:	e00d883a 	mov	r6,fp
    b6fc:	0011883a 	mov	r8,zero
    b700:	000b883a 	mov	r5,zero
    b704:	0027883a 	mov	r19,zero
    b708:	003ea906 	br	b1b0 <__alt_data_end+0xfffec968>
    b70c:	00800434 	movhi	r2,16
    b710:	89400234 	orhi	r5,r17,8
    b714:	10bfffc4 	addi	r2,r2,-1
    b718:	b00d883a 	mov	r6,r22
    b71c:	288a703a 	and	r5,r5,r2
    b720:	003efd06 	br	b318 <__alt_data_end+0xfffecad0>
    b724:	adcf883a 	add	r7,r21,r23
    b728:	997fffc4 	addi	r5,r19,-1
    b72c:	3dc0412e 	bgeu	r7,r23,b834 <__divdf3+0x7fc>
    b730:	2827883a 	mov	r19,r5
    b734:	38bfd01e 	bne	r7,r2,b678 <__alt_data_end+0xfffece30>
    b738:	d8c00117 	ldw	r3,4(sp)
    b73c:	193fce1e 	bne	r3,r4,b678 <__alt_data_end+0xfffece30>
    b740:	003fce06 	br	b67c <__alt_data_end+0xfffece34>
    b744:	d9800215 	stw	r6,8(sp)
    b748:	d9c00515 	stw	r7,20(sp)
    b74c:	000cf340 	call	cf34 <__clzsi2>
    b750:	10c00804 	addi	r3,r2,32
    b754:	010009c4 	movi	r4,39
    b758:	d9800217 	ldw	r6,8(sp)
    b75c:	d9c00517 	ldw	r7,20(sp)
    b760:	20feb20e 	bge	r4,r3,b22c <__alt_data_end+0xfffec9e4>
    b764:	117ffe04 	addi	r5,r2,-8
    b768:	a162983a 	sll	r17,r20,r5
    b76c:	0027883a 	mov	r19,zero
    b770:	003eb506 	br	b248 <__alt_data_end+0xfffeca00>
    b774:	3009883a 	mov	r4,r6
    b778:	d9800215 	stw	r6,8(sp)
    b77c:	da000315 	stw	r8,12(sp)
    b780:	da400415 	stw	r9,16(sp)
    b784:	000cf340 	call	cf34 <__clzsi2>
    b788:	10c00804 	addi	r3,r2,32
    b78c:	010009c4 	movi	r4,39
    b790:	d9800217 	ldw	r6,8(sp)
    b794:	da000317 	ldw	r8,12(sp)
    b798:	da400417 	ldw	r9,16(sp)
    b79c:	20fec10e 	bge	r4,r3,b2a4 <__alt_data_end+0xfffeca5c>
    b7a0:	10bffe04 	addi	r2,r2,-8
    b7a4:	a8a0983a 	sll	r16,r21,r2
    b7a8:	002b883a 	mov	r21,zero
    b7ac:	003ec406 	br	b2c0 <__alt_data_end+0xfffeca78>
    b7b0:	d8c00117 	ldw	r3,4(sp)
    b7b4:	b0ed883a 	add	r22,r22,r3
    b7b8:	b0c5803a 	cmpltu	r2,r22,r3
    b7bc:	15c5883a 	add	r2,r2,r23
    b7c0:	11cf883a 	add	r7,r2,r7
    b7c4:	88bfffc4 	addi	r2,r17,-1
    b7c8:	b9c00d2e 	bgeu	r23,r7,b800 <__divdf3+0x7c8>
    b7cc:	39003f36 	bltu	r7,r4,b8cc <__divdf3+0x894>
    b7d0:	21c06a26 	beq	r4,r7,b97c <__divdf3+0x944>
    b7d4:	3909c83a 	sub	r4,r7,r4
    b7d8:	1023883a 	mov	r17,r2
    b7dc:	003f4f06 	br	b51c <__alt_data_end+0xfffeccd4>
    b7e0:	9d7ee536 	bltu	r19,r21,b378 <__alt_data_end+0xfffecb30>
    b7e4:	982ed07a 	srli	r23,r19,1
    b7e8:	880497fa 	slli	r2,r17,31
    b7ec:	8810d07a 	srli	r8,r17,1
    b7f0:	982c97fa 	slli	r22,r19,31
    b7f4:	b884b03a 	or	r2,r23,r2
    b7f8:	d8800015 	stw	r2,0(sp)
    b7fc:	003ee206 	br	b388 <__alt_data_end+0xfffecb40>
    b800:	3dfff41e 	bne	r7,r23,b7d4 <__alt_data_end+0xfffecf8c>
    b804:	d8c00117 	ldw	r3,4(sp)
    b808:	b0fff02e 	bgeu	r22,r3,b7cc <__alt_data_end+0xfffecf84>
    b80c:	b909c83a 	sub	r4,r23,r4
    b810:	1023883a 	mov	r17,r2
    b814:	003f4106 	br	b51c <__alt_data_end+0xfffeccd4>
    b818:	1021883a 	mov	r16,r2
    b81c:	003f1106 	br	b464 <__alt_data_end+0xfffecc1c>
    b820:	1023883a 	mov	r17,r2
    b824:	003ef706 	br	b404 <__alt_data_end+0xfffecbbc>
    b828:	b23fe136 	bltu	r22,r8,b7b0 <__alt_data_end+0xfffecf68>
    b82c:	0009883a 	mov	r4,zero
    b830:	003f3a06 	br	b51c <__alt_data_end+0xfffeccd4>
    b834:	38802c36 	bltu	r7,r2,b8e8 <__divdf3+0x8b0>
    b838:	11c05326 	beq	r2,r7,b988 <__divdf3+0x950>
    b83c:	2827883a 	mov	r19,r5
    b840:	003f8d06 	br	b678 <__alt_data_end+0xfffece30>
    b844:	04ffffc4 	movi	r19,-1
    b848:	003f8c06 	br	b67c <__alt_data_end+0xfffece34>
    b84c:	1011883a 	mov	r8,r2
    b850:	003f4d06 	br	b588 <__alt_data_end+0xfffecd40>
    b854:	1013883a 	mov	r9,r2
    b858:	003f6406 	br	b5ec <__alt_data_end+0xfffecda4>
    b85c:	e029883a 	mov	r20,fp
    b860:	003f8606 	br	b67c <__alt_data_end+0xfffece34>
    b864:	008007c4 	movi	r2,31
    b868:	14002a16 	blt	r2,r16,b914 <__divdf3+0x8dc>
    b86c:	91410784 	addi	r5,r18,1054
    b870:	9c0cd83a 	srl	r6,r19,r16
    b874:	8948983a 	sll	r4,r17,r5
    b878:	9944983a 	sll	r2,r19,r5
    b87c:	8c20d83a 	srl	r16,r17,r16
    b880:	3108b03a 	or	r4,r6,r4
    b884:	1004c03a 	cmpne	r2,r2,zero
    b888:	2084b03a 	or	r2,r4,r2
    b88c:	110001cc 	andi	r4,r2,7
    b890:	20000726 	beq	r4,zero,b8b0 <__divdf3+0x878>
    b894:	114003cc 	andi	r5,r2,15
    b898:	01000104 	movi	r4,4
    b89c:	29000426 	beq	r5,r4,b8b0 <__divdf3+0x878>
    b8a0:	11000104 	addi	r4,r2,4
    b8a4:	2085803a 	cmpltu	r2,r4,r2
    b8a8:	80a1883a 	add	r16,r16,r2
    b8ac:	2005883a 	mov	r2,r4
    b8b0:	8100202c 	andhi	r4,r16,128
    b8b4:	20002d26 	beq	r4,zero,b96c <__divdf3+0x934>
    b8b8:	a180004c 	andi	r6,r20,1
    b8bc:	02000044 	movi	r8,1
    b8c0:	000b883a 	mov	r5,zero
    b8c4:	0027883a 	mov	r19,zero
    b8c8:	003e3906 	br	b1b0 <__alt_data_end+0xfffec968>
    b8cc:	d8c00117 	ldw	r3,4(sp)
    b8d0:	8c7fff84 	addi	r17,r17,-2
    b8d4:	b0ed883a 	add	r22,r22,r3
    b8d8:	b0c5803a 	cmpltu	r2,r22,r3
    b8dc:	15c5883a 	add	r2,r2,r23
    b8e0:	11cf883a 	add	r7,r2,r7
    b8e4:	003f0c06 	br	b518 <__alt_data_end+0xfffeccd0>
    b8e8:	d8c00117 	ldw	r3,4(sp)
    b8ec:	997fff84 	addi	r5,r19,-2
    b8f0:	18d1883a 	add	r8,r3,r3
    b8f4:	40c7803a 	cmpltu	r3,r8,r3
    b8f8:	1dcd883a 	add	r6,r3,r23
    b8fc:	398f883a 	add	r7,r7,r6
    b900:	da000115 	stw	r8,4(sp)
    b904:	003f8a06 	br	b730 <__alt_data_end+0xfffecee8>
    b908:	203f861e 	bne	r4,zero,b724 <__alt_data_end+0xfffecedc>
    b90c:	d8000115 	stw	zero,4(sp)
    b910:	003f8906 	br	b738 <__alt_data_end+0xfffecef0>
    b914:	00bef884 	movi	r2,-1054
    b918:	1485c83a 	sub	r2,r2,r18
    b91c:	01000804 	movi	r4,32
    b920:	8884d83a 	srl	r2,r17,r2
    b924:	81001c26 	beq	r16,r4,b998 <__divdf3+0x960>
    b928:	91010f84 	addi	r4,r18,1086
    b92c:	8908983a 	sll	r4,r17,r4
    b930:	24c8b03a 	or	r4,r4,r19
    b934:	2008c03a 	cmpne	r4,r4,zero
    b938:	2084b03a 	or	r2,r4,r2
    b93c:	140001cc 	andi	r16,r2,7
    b940:	8000061e 	bne	r16,zero,b95c <__divdf3+0x924>
    b944:	000b883a 	mov	r5,zero
    b948:	1004d0fa 	srli	r2,r2,3
    b94c:	a180004c 	andi	r6,r20,1
    b950:	0011883a 	mov	r8,zero
    b954:	1426b03a 	or	r19,r2,r16
    b958:	003e1506 	br	b1b0 <__alt_data_end+0xfffec968>
    b95c:	114003cc 	andi	r5,r2,15
    b960:	01000104 	movi	r4,4
    b964:	0021883a 	mov	r16,zero
    b968:	293fcd1e 	bne	r5,r4,b8a0 <__alt_data_end+0xfffed058>
    b96c:	800a927a 	slli	r5,r16,9
    b970:	8020977a 	slli	r16,r16,29
    b974:	280ad33a 	srli	r5,r5,12
    b978:	003ff306 	br	b948 <__alt_data_end+0xfffed100>
    b97c:	b23fd336 	bltu	r22,r8,b8cc <__alt_data_end+0xfffed084>
    b980:	1023883a 	mov	r17,r2
    b984:	003fa906 	br	b82c <__alt_data_end+0xfffecfe4>
    b988:	d8c00117 	ldw	r3,4(sp)
    b98c:	193fd636 	bltu	r3,r4,b8e8 <__alt_data_end+0xfffed0a0>
    b990:	2827883a 	mov	r19,r5
    b994:	003f6806 	br	b738 <__alt_data_end+0xfffecef0>
    b998:	0009883a 	mov	r4,zero
    b99c:	003fe406 	br	b930 <__alt_data_end+0xfffed0e8>
    b9a0:	00800434 	movhi	r2,16
    b9a4:	89400234 	orhi	r5,r17,8
    b9a8:	10bfffc4 	addi	r2,r2,-1
    b9ac:	e00d883a 	mov	r6,fp
    b9b0:	288a703a 	and	r5,r5,r2
    b9b4:	003e5806 	br	b318 <__alt_data_end+0xfffecad0>

0000b9b8 <__eqdf2>:
    b9b8:	2804d53a 	srli	r2,r5,20
    b9bc:	3806d53a 	srli	r3,r7,20
    b9c0:	02000434 	movhi	r8,16
    b9c4:	423fffc4 	addi	r8,r8,-1
    b9c8:	1081ffcc 	andi	r2,r2,2047
    b9cc:	0241ffc4 	movi	r9,2047
    b9d0:	2a14703a 	and	r10,r5,r8
    b9d4:	18c1ffcc 	andi	r3,r3,2047
    b9d8:	3a10703a 	and	r8,r7,r8
    b9dc:	280ad7fa 	srli	r5,r5,31
    b9e0:	380ed7fa 	srli	r7,r7,31
    b9e4:	12400f26 	beq	r2,r9,ba24 <__eqdf2+0x6c>
    b9e8:	0241ffc4 	movi	r9,2047
    b9ec:	1a400326 	beq	r3,r9,b9fc <__eqdf2+0x44>
    b9f0:	10c00526 	beq	r2,r3,ba08 <__eqdf2+0x50>
    b9f4:	00800044 	movi	r2,1
    b9f8:	f800283a 	ret
    b9fc:	4192b03a 	or	r9,r8,r6
    ba00:	483ffc1e 	bne	r9,zero,b9f4 <__alt_data_end+0xfffed1ac>
    ba04:	10fffb1e 	bne	r2,r3,b9f4 <__alt_data_end+0xfffed1ac>
    ba08:	523ffa1e 	bne	r10,r8,b9f4 <__alt_data_end+0xfffed1ac>
    ba0c:	21bff91e 	bne	r4,r6,b9f4 <__alt_data_end+0xfffed1ac>
    ba10:	29c00826 	beq	r5,r7,ba34 <__eqdf2+0x7c>
    ba14:	103ff71e 	bne	r2,zero,b9f4 <__alt_data_end+0xfffed1ac>
    ba18:	5104b03a 	or	r2,r10,r4
    ba1c:	1004c03a 	cmpne	r2,r2,zero
    ba20:	f800283a 	ret
    ba24:	5112b03a 	or	r9,r10,r4
    ba28:	483fef26 	beq	r9,zero,b9e8 <__alt_data_end+0xfffed1a0>
    ba2c:	00800044 	movi	r2,1
    ba30:	f800283a 	ret
    ba34:	0005883a 	mov	r2,zero
    ba38:	f800283a 	ret

0000ba3c <__gedf2>:
    ba3c:	2804d53a 	srli	r2,r5,20
    ba40:	3806d53a 	srli	r3,r7,20
    ba44:	02000434 	movhi	r8,16
    ba48:	423fffc4 	addi	r8,r8,-1
    ba4c:	0241ffc4 	movi	r9,2047
    ba50:	1081ffcc 	andi	r2,r2,2047
    ba54:	2a14703a 	and	r10,r5,r8
    ba58:	1a46703a 	and	r3,r3,r9
    ba5c:	3a10703a 	and	r8,r7,r8
    ba60:	280ad7fa 	srli	r5,r5,31
    ba64:	380ed7fa 	srli	r7,r7,31
    ba68:	12400b26 	beq	r2,r9,ba98 <__gedf2+0x5c>
    ba6c:	1a401626 	beq	r3,r9,bac8 <__gedf2+0x8c>
    ba70:	10000c1e 	bne	r2,zero,baa4 <__gedf2+0x68>
    ba74:	5112b03a 	or	r9,r10,r4
    ba78:	4813003a 	cmpeq	r9,r9,zero
    ba7c:	4817883a 	mov	r11,r9
    ba80:	18000c1e 	bne	r3,zero,bab4 <__gedf2+0x78>
    ba84:	4198b03a 	or	r12,r8,r6
    ba88:	60000a1e 	bne	r12,zero,bab4 <__gedf2+0x78>
    ba8c:	48001326 	beq	r9,zero,badc <__gedf2+0xa0>
    ba90:	0005883a 	mov	r2,zero
    ba94:	f800283a 	ret
    ba98:	5112b03a 	or	r9,r10,r4
    ba9c:	4800191e 	bne	r9,zero,bb04 <__gedf2+0xc8>
    baa0:	18800926 	beq	r3,r2,bac8 <__gedf2+0x8c>
    baa4:	18000b1e 	bne	r3,zero,bad4 <__gedf2+0x98>
    baa8:	4192b03a 	or	r9,r8,r6
    baac:	0017883a 	mov	r11,zero
    bab0:	48000a26 	beq	r9,zero,badc <__gedf2+0xa0>
    bab4:	39c03fcc 	andi	r7,r7,255
    bab8:	58000726 	beq	r11,zero,bad8 <__gedf2+0x9c>
    babc:	3800081e 	bne	r7,zero,bae0 <__gedf2+0xa4>
    bac0:	00bfffc4 	movi	r2,-1
    bac4:	f800283a 	ret
    bac8:	4192b03a 	or	r9,r8,r6
    bacc:	48000d1e 	bne	r9,zero,bb04 <__gedf2+0xc8>
    bad0:	103fe826 	beq	r2,zero,ba74 <__alt_data_end+0xfffed22c>
    bad4:	39c03fcc 	andi	r7,r7,255
    bad8:	29c00326 	beq	r5,r7,bae8 <__gedf2+0xac>
    badc:	283ff81e 	bne	r5,zero,bac0 <__alt_data_end+0xfffed278>
    bae0:	00800044 	movi	r2,1
    bae4:	f800283a 	ret
    bae8:	18bffc16 	blt	r3,r2,badc <__alt_data_end+0xfffed294>
    baec:	10c00316 	blt	r2,r3,bafc <__gedf2+0xc0>
    baf0:	42bffa36 	bltu	r8,r10,badc <__alt_data_end+0xfffed294>
    baf4:	52000526 	beq	r10,r8,bb0c <__gedf2+0xd0>
    baf8:	523fe52e 	bgeu	r10,r8,ba90 <__alt_data_end+0xfffed248>
    bafc:	283ff026 	beq	r5,zero,bac0 <__alt_data_end+0xfffed278>
    bb00:	003ff706 	br	bae0 <__alt_data_end+0xfffed298>
    bb04:	00bfff84 	movi	r2,-2
    bb08:	f800283a 	ret
    bb0c:	313ff336 	bltu	r6,r4,badc <__alt_data_end+0xfffed294>
    bb10:	21bfdf2e 	bgeu	r4,r6,ba90 <__alt_data_end+0xfffed248>
    bb14:	283fea26 	beq	r5,zero,bac0 <__alt_data_end+0xfffed278>
    bb18:	003ff106 	br	bae0 <__alt_data_end+0xfffed298>

0000bb1c <__ledf2>:
    bb1c:	2804d53a 	srli	r2,r5,20
    bb20:	3810d53a 	srli	r8,r7,20
    bb24:	00c00434 	movhi	r3,16
    bb28:	18ffffc4 	addi	r3,r3,-1
    bb2c:	0241ffc4 	movi	r9,2047
    bb30:	1081ffcc 	andi	r2,r2,2047
    bb34:	28d4703a 	and	r10,r5,r3
    bb38:	4250703a 	and	r8,r8,r9
    bb3c:	38c6703a 	and	r3,r7,r3
    bb40:	280ad7fa 	srli	r5,r5,31
    bb44:	380ed7fa 	srli	r7,r7,31
    bb48:	12400b26 	beq	r2,r9,bb78 <__ledf2+0x5c>
    bb4c:	42401926 	beq	r8,r9,bbb4 <__ledf2+0x98>
    bb50:	10000c1e 	bne	r2,zero,bb84 <__ledf2+0x68>
    bb54:	5112b03a 	or	r9,r10,r4
    bb58:	4813003a 	cmpeq	r9,r9,zero
    bb5c:	4817883a 	mov	r11,r9
    bb60:	40000f26 	beq	r8,zero,bba0 <__ledf2+0x84>
    bb64:	39c03fcc 	andi	r7,r7,255
    bb68:	58001826 	beq	r11,zero,bbcc <__ledf2+0xb0>
    bb6c:	38000a1e 	bne	r7,zero,bb98 <__ledf2+0x7c>
    bb70:	00bfffc4 	movi	r2,-1
    bb74:	f800283a 	ret
    bb78:	5112b03a 	or	r9,r10,r4
    bb7c:	48000f1e 	bne	r9,zero,bbbc <__ledf2+0xa0>
    bb80:	40800c26 	beq	r8,r2,bbb4 <__ledf2+0x98>
    bb84:	4000101e 	bne	r8,zero,bbc8 <__ledf2+0xac>
    bb88:	1992b03a 	or	r9,r3,r6
    bb8c:	0017883a 	mov	r11,zero
    bb90:	483ff41e 	bne	r9,zero,bb64 <__alt_data_end+0xfffed31c>
    bb94:	283ff61e 	bne	r5,zero,bb70 <__alt_data_end+0xfffed328>
    bb98:	00800044 	movi	r2,1
    bb9c:	f800283a 	ret
    bba0:	1998b03a 	or	r12,r3,r6
    bba4:	603fef1e 	bne	r12,zero,bb64 <__alt_data_end+0xfffed31c>
    bba8:	483ffa26 	beq	r9,zero,bb94 <__alt_data_end+0xfffed34c>
    bbac:	0005883a 	mov	r2,zero
    bbb0:	f800283a 	ret
    bbb4:	1992b03a 	or	r9,r3,r6
    bbb8:	48000226 	beq	r9,zero,bbc4 <__ledf2+0xa8>
    bbbc:	00800084 	movi	r2,2
    bbc0:	f800283a 	ret
    bbc4:	103fe326 	beq	r2,zero,bb54 <__alt_data_end+0xfffed30c>
    bbc8:	39c03fcc 	andi	r7,r7,255
    bbcc:	29fff11e 	bne	r5,r7,bb94 <__alt_data_end+0xfffed34c>
    bbd0:	40bff016 	blt	r8,r2,bb94 <__alt_data_end+0xfffed34c>
    bbd4:	12000316 	blt	r2,r8,bbe4 <__ledf2+0xc8>
    bbd8:	1abfee36 	bltu	r3,r10,bb94 <__alt_data_end+0xfffed34c>
    bbdc:	50c00326 	beq	r10,r3,bbec <__ledf2+0xd0>
    bbe0:	50fff22e 	bgeu	r10,r3,bbac <__alt_data_end+0xfffed364>
    bbe4:	283fe226 	beq	r5,zero,bb70 <__alt_data_end+0xfffed328>
    bbe8:	003feb06 	br	bb98 <__alt_data_end+0xfffed350>
    bbec:	313fe936 	bltu	r6,r4,bb94 <__alt_data_end+0xfffed34c>
    bbf0:	21bfee2e 	bgeu	r4,r6,bbac <__alt_data_end+0xfffed364>
    bbf4:	283fde26 	beq	r5,zero,bb70 <__alt_data_end+0xfffed328>
    bbf8:	003fe706 	br	bb98 <__alt_data_end+0xfffed350>

0000bbfc <__muldf3>:
    bbfc:	deffee04 	addi	sp,sp,-72
    bc00:	dd000c15 	stw	r20,48(sp)
    bc04:	2828d53a 	srli	r20,r5,20
    bc08:	dd400d15 	stw	r21,52(sp)
    bc0c:	282ad7fa 	srli	r21,r5,31
    bc10:	dc000815 	stw	r16,32(sp)
    bc14:	04000434 	movhi	r16,16
    bc18:	ddc00f15 	stw	r23,60(sp)
    bc1c:	dcc00b15 	stw	r19,44(sp)
    bc20:	dc800a15 	stw	r18,40(sp)
    bc24:	843fffc4 	addi	r16,r16,-1
    bc28:	dfc01115 	stw	ra,68(sp)
    bc2c:	df001015 	stw	fp,64(sp)
    bc30:	dd800e15 	stw	r22,56(sp)
    bc34:	dc400915 	stw	r17,36(sp)
    bc38:	a501ffcc 	andi	r20,r20,2047
    bc3c:	2025883a 	mov	r18,r4
    bc40:	202f883a 	mov	r23,r4
    bc44:	2c20703a 	and	r16,r5,r16
    bc48:	a827883a 	mov	r19,r21
    bc4c:	aa403fcc 	andi	r9,r21,255
    bc50:	a0005926 	beq	r20,zero,bdb8 <__muldf3+0x1bc>
    bc54:	0081ffc4 	movi	r2,2047
    bc58:	a0803426 	beq	r20,r2,bd2c <__muldf3+0x130>
    bc5c:	84000434 	orhi	r16,r16,16
    bc60:	2004d77a 	srli	r2,r4,29
    bc64:	802090fa 	slli	r16,r16,3
    bc68:	202e90fa 	slli	r23,r4,3
    bc6c:	a53f0044 	addi	r20,r20,-1023
    bc70:	80a0b03a 	or	r16,r16,r2
    bc74:	000b883a 	mov	r5,zero
    bc78:	0039883a 	mov	fp,zero
    bc7c:	3806d53a 	srli	r3,r7,20
    bc80:	382cd7fa 	srli	r22,r7,31
    bc84:	00800434 	movhi	r2,16
    bc88:	10bfffc4 	addi	r2,r2,-1
    bc8c:	18c1ffcc 	andi	r3,r3,2047
    bc90:	3025883a 	mov	r18,r6
    bc94:	38a2703a 	and	r17,r7,r2
    bc98:	b2803fcc 	andi	r10,r22,255
    bc9c:	18006426 	beq	r3,zero,be30 <__muldf3+0x234>
    bca0:	0081ffc4 	movi	r2,2047
    bca4:	18805c26 	beq	r3,r2,be18 <__muldf3+0x21c>
    bca8:	8c400434 	orhi	r17,r17,16
    bcac:	3004d77a 	srli	r2,r6,29
    bcb0:	882290fa 	slli	r17,r17,3
    bcb4:	302490fa 	slli	r18,r6,3
    bcb8:	18ff0044 	addi	r3,r3,-1023
    bcbc:	88a2b03a 	or	r17,r17,r2
    bcc0:	000f883a 	mov	r7,zero
    bcc4:	394ab03a 	or	r5,r7,r5
    bcc8:	280a90ba 	slli	r5,r5,2
    bccc:	00800074 	movhi	r2,1
    bcd0:	10af3b04 	addi	r2,r2,-17172
    bcd4:	288b883a 	add	r5,r5,r2
    bcd8:	28800017 	ldw	r2,0(r5)
    bcdc:	a0c7883a 	add	r3,r20,r3
    bce0:	b54cf03a 	xor	r6,r22,r21
    bce4:	1a000044 	addi	r8,r3,1
    bce8:	1000683a 	jmp	r2
    bcec:	0000bf30 	cmpltui	zero,zero,764
    bcf0:	0000bf1c 	xori	zero,zero,764
    bcf4:	0000bf1c 	xori	zero,zero,764
    bcf8:	0000bf08 	cmpgei	zero,zero,764
    bcfc:	0000bd48 	cmpgei	zero,zero,757
    bd00:	0000bd48 	cmpgei	zero,zero,757
    bd04:	0000bef0 	cmpltui	zero,zero,763
    bd08:	0000bf08 	cmpgei	zero,zero,764
    bd0c:	0000bd48 	cmpgei	zero,zero,757
    bd10:	0000bef0 	cmpltui	zero,zero,763
    bd14:	0000bd48 	cmpgei	zero,zero,757
    bd18:	0000bf08 	cmpgei	zero,zero,764
    bd1c:	0000bd4c 	andi	zero,zero,757
    bd20:	0000bd4c 	andi	zero,zero,757
    bd24:	0000bd4c 	andi	zero,zero,757
    bd28:	0000c26c 	andhi	zero,zero,777
    bd2c:	8104b03a 	or	r2,r16,r4
    bd30:	10006c1e 	bne	r2,zero,bee4 <__muldf3+0x2e8>
    bd34:	01400204 	movi	r5,8
    bd38:	0021883a 	mov	r16,zero
    bd3c:	002f883a 	mov	r23,zero
    bd40:	07000084 	movi	fp,2
    bd44:	003fcd06 	br	bc7c <__alt_data_end+0xfffed434>
    bd48:	3013883a 	mov	r9,r6
    bd4c:	00800084 	movi	r2,2
    bd50:	e080501e 	bne	fp,r2,be94 <__muldf3+0x298>
    bd54:	4cc0004c 	andi	r19,r9,1
    bd58:	0101ffc4 	movi	r4,2047
    bd5c:	0021883a 	mov	r16,zero
    bd60:	002f883a 	mov	r23,zero
    bd64:	2008953a 	slli	r4,r4,20
    bd68:	98c03fcc 	andi	r3,r19,255
    bd6c:	04400434 	movhi	r17,16
    bd70:	8c7fffc4 	addi	r17,r17,-1
    bd74:	180697fa 	slli	r3,r3,31
    bd78:	8460703a 	and	r16,r16,r17
    bd7c:	8120b03a 	or	r16,r16,r4
    bd80:	80c6b03a 	or	r3,r16,r3
    bd84:	b805883a 	mov	r2,r23
    bd88:	dfc01117 	ldw	ra,68(sp)
    bd8c:	df001017 	ldw	fp,64(sp)
    bd90:	ddc00f17 	ldw	r23,60(sp)
    bd94:	dd800e17 	ldw	r22,56(sp)
    bd98:	dd400d17 	ldw	r21,52(sp)
    bd9c:	dd000c17 	ldw	r20,48(sp)
    bda0:	dcc00b17 	ldw	r19,44(sp)
    bda4:	dc800a17 	ldw	r18,40(sp)
    bda8:	dc400917 	ldw	r17,36(sp)
    bdac:	dc000817 	ldw	r16,32(sp)
    bdb0:	dec01204 	addi	sp,sp,72
    bdb4:	f800283a 	ret
    bdb8:	8104b03a 	or	r2,r16,r4
    bdbc:	10004426 	beq	r2,zero,bed0 <__muldf3+0x2d4>
    bdc0:	80014b26 	beq	r16,zero,c2f0 <__muldf3+0x6f4>
    bdc4:	8009883a 	mov	r4,r16
    bdc8:	d9800715 	stw	r6,28(sp)
    bdcc:	d9c00215 	stw	r7,8(sp)
    bdd0:	da400415 	stw	r9,16(sp)
    bdd4:	000cf340 	call	cf34 <__clzsi2>
    bdd8:	d9800717 	ldw	r6,28(sp)
    bddc:	d9c00217 	ldw	r7,8(sp)
    bde0:	da400417 	ldw	r9,16(sp)
    bde4:	1007883a 	mov	r3,r2
    bde8:	01000a04 	movi	r4,40
    bdec:	1dfffe04 	addi	r23,r3,-8
    bdf0:	20c9c83a 	sub	r4,r4,r3
    bdf4:	85e0983a 	sll	r16,r16,r23
    bdf8:	9108d83a 	srl	r4,r18,r4
    bdfc:	95ee983a 	sll	r23,r18,r23
    be00:	2420b03a 	or	r16,r4,r16
    be04:	053f0344 	movi	r20,-1011
    be08:	a0e9c83a 	sub	r20,r20,r3
    be0c:	000b883a 	mov	r5,zero
    be10:	0039883a 	mov	fp,zero
    be14:	003f9906 	br	bc7c <__alt_data_end+0xfffed434>
    be18:	8984b03a 	or	r2,r17,r6
    be1c:	10002a1e 	bne	r2,zero,bec8 <__muldf3+0x2cc>
    be20:	0023883a 	mov	r17,zero
    be24:	0025883a 	mov	r18,zero
    be28:	01c00084 	movi	r7,2
    be2c:	003fa506 	br	bcc4 <__alt_data_end+0xfffed47c>
    be30:	8984b03a 	or	r2,r17,r6
    be34:	10002026 	beq	r2,zero,beb8 <__muldf3+0x2bc>
    be38:	88011c26 	beq	r17,zero,c2ac <__muldf3+0x6b0>
    be3c:	8809883a 	mov	r4,r17
    be40:	d9400215 	stw	r5,8(sp)
    be44:	d9800715 	stw	r6,28(sp)
    be48:	da400415 	stw	r9,16(sp)
    be4c:	da800315 	stw	r10,12(sp)
    be50:	000cf340 	call	cf34 <__clzsi2>
    be54:	d9400217 	ldw	r5,8(sp)
    be58:	d9800717 	ldw	r6,28(sp)
    be5c:	da400417 	ldw	r9,16(sp)
    be60:	da800317 	ldw	r10,12(sp)
    be64:	1007883a 	mov	r3,r2
    be68:	01000a04 	movi	r4,40
    be6c:	1cbffe04 	addi	r18,r3,-8
    be70:	20c9c83a 	sub	r4,r4,r3
    be74:	8ca2983a 	sll	r17,r17,r18
    be78:	3108d83a 	srl	r4,r6,r4
    be7c:	34a4983a 	sll	r18,r6,r18
    be80:	2462b03a 	or	r17,r4,r17
    be84:	00bf0344 	movi	r2,-1011
    be88:	10c7c83a 	sub	r3,r2,r3
    be8c:	000f883a 	mov	r7,zero
    be90:	003f8c06 	br	bcc4 <__alt_data_end+0xfffed47c>
    be94:	008000c4 	movi	r2,3
    be98:	e0816d26 	beq	fp,r2,c450 <__muldf3+0x854>
    be9c:	00800044 	movi	r2,1
    bea0:	e081321e 	bne	fp,r2,c36c <__muldf3+0x770>
    bea4:	48a6703a 	and	r19,r9,r2
    bea8:	0009883a 	mov	r4,zero
    beac:	0021883a 	mov	r16,zero
    beb0:	002f883a 	mov	r23,zero
    beb4:	003fab06 	br	bd64 <__alt_data_end+0xfffed51c>
    beb8:	0023883a 	mov	r17,zero
    bebc:	0025883a 	mov	r18,zero
    bec0:	01c00044 	movi	r7,1
    bec4:	003f7f06 	br	bcc4 <__alt_data_end+0xfffed47c>
    bec8:	01c000c4 	movi	r7,3
    becc:	003f7d06 	br	bcc4 <__alt_data_end+0xfffed47c>
    bed0:	01400104 	movi	r5,4
    bed4:	0021883a 	mov	r16,zero
    bed8:	002f883a 	mov	r23,zero
    bedc:	07000044 	movi	fp,1
    bee0:	003f6606 	br	bc7c <__alt_data_end+0xfffed434>
    bee4:	01400304 	movi	r5,12
    bee8:	070000c4 	movi	fp,3
    beec:	003f6306 	br	bc7c <__alt_data_end+0xfffed434>
    bef0:	04000434 	movhi	r16,16
    bef4:	0027883a 	mov	r19,zero
    bef8:	843fffc4 	addi	r16,r16,-1
    befc:	05ffffc4 	movi	r23,-1
    bf00:	0101ffc4 	movi	r4,2047
    bf04:	003f9706 	br	bd64 <__alt_data_end+0xfffed51c>
    bf08:	8821883a 	mov	r16,r17
    bf0c:	902f883a 	mov	r23,r18
    bf10:	5013883a 	mov	r9,r10
    bf14:	3839883a 	mov	fp,r7
    bf18:	003f8c06 	br	bd4c <__alt_data_end+0xfffed504>
    bf1c:	8821883a 	mov	r16,r17
    bf20:	902f883a 	mov	r23,r18
    bf24:	3013883a 	mov	r9,r6
    bf28:	3839883a 	mov	fp,r7
    bf2c:	003f8706 	br	bd4c <__alt_data_end+0xfffed504>
    bf30:	b82ad43a 	srli	r21,r23,16
    bf34:	9038d43a 	srli	fp,r18,16
    bf38:	bdffffcc 	andi	r23,r23,65535
    bf3c:	94bfffcc 	andi	r18,r18,65535
    bf40:	9009883a 	mov	r4,r18
    bf44:	b80b883a 	mov	r5,r23
    bf48:	d8c00515 	stw	r3,20(sp)
    bf4c:	d9800715 	stw	r6,28(sp)
    bf50:	da000615 	stw	r8,24(sp)
    bf54:	000a7740 	call	a774 <__mulsi3>
    bf58:	9009883a 	mov	r4,r18
    bf5c:	a80b883a 	mov	r5,r21
    bf60:	1029883a 	mov	r20,r2
    bf64:	000a7740 	call	a774 <__mulsi3>
    bf68:	e009883a 	mov	r4,fp
    bf6c:	a80b883a 	mov	r5,r21
    bf70:	102d883a 	mov	r22,r2
    bf74:	000a7740 	call	a774 <__mulsi3>
    bf78:	e009883a 	mov	r4,fp
    bf7c:	b80b883a 	mov	r5,r23
    bf80:	1027883a 	mov	r19,r2
    bf84:	000a7740 	call	a774 <__mulsi3>
    bf88:	a008d43a 	srli	r4,r20,16
    bf8c:	b085883a 	add	r2,r22,r2
    bf90:	d8c00517 	ldw	r3,20(sp)
    bf94:	110f883a 	add	r7,r2,r4
    bf98:	d9800717 	ldw	r6,28(sp)
    bf9c:	da000617 	ldw	r8,24(sp)
    bfa0:	3d80022e 	bgeu	r7,r22,bfac <__muldf3+0x3b0>
    bfa4:	00800074 	movhi	r2,1
    bfa8:	98a7883a 	add	r19,r19,r2
    bfac:	3804943a 	slli	r2,r7,16
    bfb0:	380ed43a 	srli	r7,r7,16
    bfb4:	882cd43a 	srli	r22,r17,16
    bfb8:	a53fffcc 	andi	r20,r20,65535
    bfbc:	8c7fffcc 	andi	r17,r17,65535
    bfc0:	1529883a 	add	r20,r2,r20
    bfc4:	8809883a 	mov	r4,r17
    bfc8:	b80b883a 	mov	r5,r23
    bfcc:	d8c00515 	stw	r3,20(sp)
    bfd0:	d9800715 	stw	r6,28(sp)
    bfd4:	da000615 	stw	r8,24(sp)
    bfd8:	d9c00015 	stw	r7,0(sp)
    bfdc:	dd000115 	stw	r20,4(sp)
    bfe0:	000a7740 	call	a774 <__mulsi3>
    bfe4:	a80b883a 	mov	r5,r21
    bfe8:	8809883a 	mov	r4,r17
    bfec:	d8800415 	stw	r2,16(sp)
    bff0:	000a7740 	call	a774 <__mulsi3>
    bff4:	a80b883a 	mov	r5,r21
    bff8:	b009883a 	mov	r4,r22
    bffc:	1029883a 	mov	r20,r2
    c000:	000a7740 	call	a774 <__mulsi3>
    c004:	b009883a 	mov	r4,r22
    c008:	b80b883a 	mov	r5,r23
    c00c:	102b883a 	mov	r21,r2
    c010:	000a7740 	call	a774 <__mulsi3>
    c014:	da400417 	ldw	r9,16(sp)
    c018:	a085883a 	add	r2,r20,r2
    c01c:	d8c00517 	ldw	r3,20(sp)
    c020:	4808d43a 	srli	r4,r9,16
    c024:	d9800717 	ldw	r6,28(sp)
    c028:	da000617 	ldw	r8,24(sp)
    c02c:	1109883a 	add	r4,r2,r4
    c030:	2500022e 	bgeu	r4,r20,c03c <__muldf3+0x440>
    c034:	00800074 	movhi	r2,1
    c038:	a8ab883a 	add	r21,r21,r2
    c03c:	200e943a 	slli	r7,r4,16
    c040:	2004d43a 	srli	r2,r4,16
    c044:	802ed43a 	srli	r23,r16,16
    c048:	843fffcc 	andi	r16,r16,65535
    c04c:	4d3fffcc 	andi	r20,r9,65535
    c050:	9009883a 	mov	r4,r18
    c054:	800b883a 	mov	r5,r16
    c058:	3d29883a 	add	r20,r7,r20
    c05c:	d8c00515 	stw	r3,20(sp)
    c060:	d9800715 	stw	r6,28(sp)
    c064:	da000615 	stw	r8,24(sp)
    c068:	a8ab883a 	add	r21,r21,r2
    c06c:	000a7740 	call	a774 <__mulsi3>
    c070:	9009883a 	mov	r4,r18
    c074:	b80b883a 	mov	r5,r23
    c078:	d8800315 	stw	r2,12(sp)
    c07c:	000a7740 	call	a774 <__mulsi3>
    c080:	e009883a 	mov	r4,fp
    c084:	b80b883a 	mov	r5,r23
    c088:	1025883a 	mov	r18,r2
    c08c:	000a7740 	call	a774 <__mulsi3>
    c090:	e009883a 	mov	r4,fp
    c094:	800b883a 	mov	r5,r16
    c098:	d8800215 	stw	r2,8(sp)
    c09c:	000a7740 	call	a774 <__mulsi3>
    c0a0:	da800317 	ldw	r10,12(sp)
    c0a4:	d9400017 	ldw	r5,0(sp)
    c0a8:	9085883a 	add	r2,r18,r2
    c0ac:	5008d43a 	srli	r4,r10,16
    c0b0:	a153883a 	add	r9,r20,r5
    c0b4:	d8c00517 	ldw	r3,20(sp)
    c0b8:	1109883a 	add	r4,r2,r4
    c0bc:	d9800717 	ldw	r6,28(sp)
    c0c0:	da000617 	ldw	r8,24(sp)
    c0c4:	dac00217 	ldw	r11,8(sp)
    c0c8:	2480022e 	bgeu	r4,r18,c0d4 <__muldf3+0x4d8>
    c0cc:	00800074 	movhi	r2,1
    c0d0:	5897883a 	add	r11,r11,r2
    c0d4:	200e943a 	slli	r7,r4,16
    c0d8:	2038d43a 	srli	fp,r4,16
    c0dc:	52bfffcc 	andi	r10,r10,65535
    c0e0:	3a8f883a 	add	r7,r7,r10
    c0e4:	8809883a 	mov	r4,r17
    c0e8:	800b883a 	mov	r5,r16
    c0ec:	d8c00515 	stw	r3,20(sp)
    c0f0:	d9800715 	stw	r6,28(sp)
    c0f4:	d9c00215 	stw	r7,8(sp)
    c0f8:	da000615 	stw	r8,24(sp)
    c0fc:	da400415 	stw	r9,16(sp)
    c100:	5f39883a 	add	fp,r11,fp
    c104:	000a7740 	call	a774 <__mulsi3>
    c108:	8809883a 	mov	r4,r17
    c10c:	b80b883a 	mov	r5,r23
    c110:	1025883a 	mov	r18,r2
    c114:	000a7740 	call	a774 <__mulsi3>
    c118:	b009883a 	mov	r4,r22
    c11c:	b80b883a 	mov	r5,r23
    c120:	d8800315 	stw	r2,12(sp)
    c124:	000a7740 	call	a774 <__mulsi3>
    c128:	b009883a 	mov	r4,r22
    c12c:	800b883a 	mov	r5,r16
    c130:	1023883a 	mov	r17,r2
    c134:	000a7740 	call	a774 <__mulsi3>
    c138:	da800317 	ldw	r10,12(sp)
    c13c:	9008d43a 	srli	r4,r18,16
    c140:	d8c00517 	ldw	r3,20(sp)
    c144:	5085883a 	add	r2,r10,r2
    c148:	1109883a 	add	r4,r2,r4
    c14c:	d9800717 	ldw	r6,28(sp)
    c150:	d9c00217 	ldw	r7,8(sp)
    c154:	da000617 	ldw	r8,24(sp)
    c158:	da400417 	ldw	r9,16(sp)
    c15c:	2280022e 	bgeu	r4,r10,c168 <__muldf3+0x56c>
    c160:	00800074 	movhi	r2,1
    c164:	88a3883a 	add	r17,r17,r2
    c168:	2004943a 	slli	r2,r4,16
    c16c:	94bfffcc 	andi	r18,r18,65535
    c170:	4ce7883a 	add	r19,r9,r19
    c174:	14a5883a 	add	r18,r2,r18
    c178:	9d29803a 	cmpltu	r20,r19,r20
    c17c:	9565883a 	add	r18,r18,r21
    c180:	9505883a 	add	r2,r18,r20
    c184:	99e7883a 	add	r19,r19,r7
    c188:	99cf803a 	cmpltu	r7,r19,r7
    c18c:	e08b883a 	add	r5,fp,r2
    c190:	2008d43a 	srli	r4,r4,16
    c194:	29ef883a 	add	r23,r5,r7
    c198:	1529803a 	cmpltu	r20,r2,r20
    c19c:	956b803a 	cmpltu	r21,r18,r21
    c1a0:	b9cf803a 	cmpltu	r7,r23,r7
    c1a4:	a564b03a 	or	r18,r20,r21
    c1a8:	2f39803a 	cmpltu	fp,r5,fp
    c1ac:	9125883a 	add	r18,r18,r4
    c1b0:	3f38b03a 	or	fp,r7,fp
    c1b4:	9725883a 	add	r18,r18,fp
    c1b8:	9804927a 	slli	r2,r19,9
    c1bc:	9463883a 	add	r17,r18,r17
    c1c0:	d9000117 	ldw	r4,4(sp)
    c1c4:	b820d5fa 	srli	r16,r23,23
    c1c8:	8822927a 	slli	r17,r17,9
    c1cc:	9826d5fa 	srli	r19,r19,23
    c1d0:	1104b03a 	or	r2,r2,r4
    c1d4:	b82e927a 	slli	r23,r23,9
    c1d8:	1004c03a 	cmpne	r2,r2,zero
    c1dc:	8c20b03a 	or	r16,r17,r16
    c1e0:	14e6b03a 	or	r19,r2,r19
    c1e4:	8080402c 	andhi	r2,r16,256
    c1e8:	9deeb03a 	or	r23,r19,r23
    c1ec:	10000726 	beq	r2,zero,c20c <__muldf3+0x610>
    c1f0:	b804d07a 	srli	r2,r23,1
    c1f4:	800697fa 	slli	r3,r16,31
    c1f8:	bdc0004c 	andi	r23,r23,1
    c1fc:	8020d07a 	srli	r16,r16,1
    c200:	b8aeb03a 	or	r23,r23,r2
    c204:	b8eeb03a 	or	r23,r23,r3
    c208:	4007883a 	mov	r3,r8
    c20c:	1900ffc4 	addi	r4,r3,1023
    c210:	01004d0e 	bge	zero,r4,c348 <__muldf3+0x74c>
    c214:	b88001cc 	andi	r2,r23,7
    c218:	10000726 	beq	r2,zero,c238 <__muldf3+0x63c>
    c21c:	b94003cc 	andi	r5,r23,15
    c220:	00800104 	movi	r2,4
    c224:	28800426 	beq	r5,r2,c238 <__muldf3+0x63c>
    c228:	b885883a 	add	r2,r23,r2
    c22c:	15ef803a 	cmpltu	r23,r2,r23
    c230:	85e1883a 	add	r16,r16,r23
    c234:	102f883a 	mov	r23,r2
    c238:	8080402c 	andhi	r2,r16,256
    c23c:	10000426 	beq	r2,zero,c250 <__muldf3+0x654>
    c240:	00bfc034 	movhi	r2,65280
    c244:	10bfffc4 	addi	r2,r2,-1
    c248:	19010004 	addi	r4,r3,1024
    c24c:	80a0703a 	and	r16,r16,r2
    c250:	0081ff84 	movi	r2,2046
    c254:	1100340e 	bge	r2,r4,c328 <__muldf3+0x72c>
    c258:	34c0004c 	andi	r19,r6,1
    c25c:	0101ffc4 	movi	r4,2047
    c260:	0021883a 	mov	r16,zero
    c264:	002f883a 	mov	r23,zero
    c268:	003ebe06 	br	bd64 <__alt_data_end+0xfffed51c>
    c26c:	8080022c 	andhi	r2,r16,8
    c270:	10000926 	beq	r2,zero,c298 <__muldf3+0x69c>
    c274:	8880022c 	andhi	r2,r17,8
    c278:	1000071e 	bne	r2,zero,c298 <__muldf3+0x69c>
    c27c:	00800434 	movhi	r2,16
    c280:	8c000234 	orhi	r16,r17,8
    c284:	10bfffc4 	addi	r2,r2,-1
    c288:	b027883a 	mov	r19,r22
    c28c:	80a0703a 	and	r16,r16,r2
    c290:	902f883a 	mov	r23,r18
    c294:	003f1a06 	br	bf00 <__alt_data_end+0xfffed6b8>
    c298:	00800434 	movhi	r2,16
    c29c:	84000234 	orhi	r16,r16,8
    c2a0:	10bfffc4 	addi	r2,r2,-1
    c2a4:	80a0703a 	and	r16,r16,r2
    c2a8:	003f1506 	br	bf00 <__alt_data_end+0xfffed6b8>
    c2ac:	3009883a 	mov	r4,r6
    c2b0:	d9400215 	stw	r5,8(sp)
    c2b4:	d9800715 	stw	r6,28(sp)
    c2b8:	da400415 	stw	r9,16(sp)
    c2bc:	da800315 	stw	r10,12(sp)
    c2c0:	000cf340 	call	cf34 <__clzsi2>
    c2c4:	10c00804 	addi	r3,r2,32
    c2c8:	010009c4 	movi	r4,39
    c2cc:	d9400217 	ldw	r5,8(sp)
    c2d0:	d9800717 	ldw	r6,28(sp)
    c2d4:	da400417 	ldw	r9,16(sp)
    c2d8:	da800317 	ldw	r10,12(sp)
    c2dc:	20fee20e 	bge	r4,r3,be68 <__alt_data_end+0xfffed620>
    c2e0:	147ffe04 	addi	r17,r2,-8
    c2e4:	9462983a 	sll	r17,r18,r17
    c2e8:	0025883a 	mov	r18,zero
    c2ec:	003ee506 	br	be84 <__alt_data_end+0xfffed63c>
    c2f0:	d9800715 	stw	r6,28(sp)
    c2f4:	d9c00215 	stw	r7,8(sp)
    c2f8:	da400415 	stw	r9,16(sp)
    c2fc:	000cf340 	call	cf34 <__clzsi2>
    c300:	10c00804 	addi	r3,r2,32
    c304:	010009c4 	movi	r4,39
    c308:	d9800717 	ldw	r6,28(sp)
    c30c:	d9c00217 	ldw	r7,8(sp)
    c310:	da400417 	ldw	r9,16(sp)
    c314:	20feb40e 	bge	r4,r3,bde8 <__alt_data_end+0xfffed5a0>
    c318:	143ffe04 	addi	r16,r2,-8
    c31c:	9420983a 	sll	r16,r18,r16
    c320:	002f883a 	mov	r23,zero
    c324:	003eb706 	br	be04 <__alt_data_end+0xfffed5bc>
    c328:	8004977a 	slli	r2,r16,29
    c32c:	b82ed0fa 	srli	r23,r23,3
    c330:	8020927a 	slli	r16,r16,9
    c334:	2101ffcc 	andi	r4,r4,2047
    c338:	15eeb03a 	or	r23,r2,r23
    c33c:	8020d33a 	srli	r16,r16,12
    c340:	34c0004c 	andi	r19,r6,1
    c344:	003e8706 	br	bd64 <__alt_data_end+0xfffed51c>
    c348:	00bf0084 	movi	r2,-1022
    c34c:	10c5c83a 	sub	r2,r2,r3
    c350:	01000e04 	movi	r4,56
    c354:	2080080e 	bge	r4,r2,c378 <__muldf3+0x77c>
    c358:	34c0004c 	andi	r19,r6,1
    c35c:	0009883a 	mov	r4,zero
    c360:	0021883a 	mov	r16,zero
    c364:	002f883a 	mov	r23,zero
    c368:	003e7e06 	br	bd64 <__alt_data_end+0xfffed51c>
    c36c:	4007883a 	mov	r3,r8
    c370:	480d883a 	mov	r6,r9
    c374:	003fa506 	br	c20c <__alt_data_end+0xfffed9c4>
    c378:	010007c4 	movi	r4,31
    c37c:	20801816 	blt	r4,r2,c3e0 <__muldf3+0x7e4>
    c380:	18c10784 	addi	r3,r3,1054
    c384:	80c8983a 	sll	r4,r16,r3
    c388:	b88ad83a 	srl	r5,r23,r2
    c38c:	b8c6983a 	sll	r3,r23,r3
    c390:	80a0d83a 	srl	r16,r16,r2
    c394:	2908b03a 	or	r4,r5,r4
    c398:	1804c03a 	cmpne	r2,r3,zero
    c39c:	2088b03a 	or	r4,r4,r2
    c3a0:	208001cc 	andi	r2,r4,7
    c3a4:	10000726 	beq	r2,zero,c3c4 <__muldf3+0x7c8>
    c3a8:	20c003cc 	andi	r3,r4,15
    c3ac:	00800104 	movi	r2,4
    c3b0:	18800426 	beq	r3,r2,c3c4 <__muldf3+0x7c8>
    c3b4:	20c00104 	addi	r3,r4,4
    c3b8:	1905803a 	cmpltu	r2,r3,r4
    c3bc:	80a1883a 	add	r16,r16,r2
    c3c0:	1809883a 	mov	r4,r3
    c3c4:	8080202c 	andhi	r2,r16,128
    c3c8:	10001b26 	beq	r2,zero,c438 <__muldf3+0x83c>
    c3cc:	34c0004c 	andi	r19,r6,1
    c3d0:	01000044 	movi	r4,1
    c3d4:	0021883a 	mov	r16,zero
    c3d8:	002f883a 	mov	r23,zero
    c3dc:	003e6106 	br	bd64 <__alt_data_end+0xfffed51c>
    c3e0:	013ef884 	movi	r4,-1054
    c3e4:	20c9c83a 	sub	r4,r4,r3
    c3e8:	01400804 	movi	r5,32
    c3ec:	8108d83a 	srl	r4,r16,r4
    c3f0:	11401526 	beq	r2,r5,c448 <__muldf3+0x84c>
    c3f4:	18c10f84 	addi	r3,r3,1086
    c3f8:	80e0983a 	sll	r16,r16,r3
    c3fc:	85eeb03a 	or	r23,r16,r23
    c400:	b804c03a 	cmpne	r2,r23,zero
    c404:	1108b03a 	or	r4,r2,r4
    c408:	20c001cc 	andi	r3,r4,7
    c40c:	1800061e 	bne	r3,zero,c428 <__muldf3+0x82c>
    c410:	0021883a 	mov	r16,zero
    c414:	202ed0fa 	srli	r23,r4,3
    c418:	34c0004c 	andi	r19,r6,1
    c41c:	0009883a 	mov	r4,zero
    c420:	b8eeb03a 	or	r23,r23,r3
    c424:	003e4f06 	br	bd64 <__alt_data_end+0xfffed51c>
    c428:	20c003cc 	andi	r3,r4,15
    c42c:	00800104 	movi	r2,4
    c430:	0021883a 	mov	r16,zero
    c434:	18bfdf1e 	bne	r3,r2,c3b4 <__alt_data_end+0xfffedb6c>
    c438:	8004927a 	slli	r2,r16,9
    c43c:	8006977a 	slli	r3,r16,29
    c440:	1020d33a 	srli	r16,r2,12
    c444:	003ff306 	br	c414 <__alt_data_end+0xfffedbcc>
    c448:	0021883a 	mov	r16,zero
    c44c:	003feb06 	br	c3fc <__alt_data_end+0xfffedbb4>
    c450:	00800434 	movhi	r2,16
    c454:	84000234 	orhi	r16,r16,8
    c458:	10bfffc4 	addi	r2,r2,-1
    c45c:	4cc0004c 	andi	r19,r9,1
    c460:	80a0703a 	and	r16,r16,r2
    c464:	003ea606 	br	bf00 <__alt_data_end+0xfffed6b8>

0000c468 <__subdf3>:
    c468:	00c00434 	movhi	r3,16
    c46c:	18ffffc4 	addi	r3,r3,-1
    c470:	defffb04 	addi	sp,sp,-20
    c474:	28d2703a 	and	r9,r5,r3
    c478:	3814d53a 	srli	r10,r7,20
    c47c:	38c6703a 	and	r3,r7,r3
    c480:	3004d77a 	srli	r2,r6,29
    c484:	dc800215 	stw	r18,8(sp)
    c488:	dc000015 	stw	r16,0(sp)
    c48c:	2824d7fa 	srli	r18,r5,31
    c490:	2820d53a 	srli	r16,r5,20
    c494:	481290fa 	slli	r9,r9,3
    c498:	200ad77a 	srli	r5,r4,29
    c49c:	180690fa 	slli	r3,r3,3
    c4a0:	dc400115 	stw	r17,4(sp)
    c4a4:	dfc00415 	stw	ra,16(sp)
    c4a8:	202290fa 	slli	r17,r4,3
    c4ac:	dcc00315 	stw	r19,12(sp)
    c4b0:	5281ffcc 	andi	r10,r10,2047
    c4b4:	0101ffc4 	movi	r4,2047
    c4b8:	9011883a 	mov	r8,r18
    c4bc:	8401ffcc 	andi	r16,r16,2047
    c4c0:	94803fcc 	andi	r18,r18,255
    c4c4:	494ab03a 	or	r5,r9,r5
    c4c8:	380ed7fa 	srli	r7,r7,31
    c4cc:	1886b03a 	or	r3,r3,r2
    c4d0:	300c90fa 	slli	r6,r6,3
    c4d4:	51009026 	beq	r10,r4,c718 <__subdf3+0x2b0>
    c4d8:	39c0005c 	xori	r7,r7,1
    c4dc:	8285c83a 	sub	r2,r16,r10
    c4e0:	91c06f26 	beq	r18,r7,c6a0 <__subdf3+0x238>
    c4e4:	0080b10e 	bge	zero,r2,c7ac <__subdf3+0x344>
    c4e8:	50002a1e 	bne	r10,zero,c594 <__subdf3+0x12c>
    c4ec:	1988b03a 	or	r4,r3,r6
    c4f0:	2000941e 	bne	r4,zero,c744 <__subdf3+0x2dc>
    c4f4:	888001cc 	andi	r2,r17,7
    c4f8:	10005b26 	beq	r2,zero,c668 <__subdf3+0x200>
    c4fc:	88c003cc 	andi	r3,r17,15
    c500:	00800104 	movi	r2,4
    c504:	18805826 	beq	r3,r2,c668 <__subdf3+0x200>
    c508:	88c00104 	addi	r3,r17,4
    c50c:	1c63803a 	cmpltu	r17,r3,r17
    c510:	2c4b883a 	add	r5,r5,r17
    c514:	2880202c 	andhi	r2,r5,128
    c518:	9200004c 	andi	r8,r18,1
    c51c:	1823883a 	mov	r17,r3
    c520:	10005426 	beq	r2,zero,c674 <__subdf3+0x20c>
    c524:	84000044 	addi	r16,r16,1
    c528:	0081ffc4 	movi	r2,2047
    c52c:	8080bf26 	beq	r16,r2,c82c <__subdf3+0x3c4>
    c530:	013fe034 	movhi	r4,65408
    c534:	213fffc4 	addi	r4,r4,-1
    c538:	290a703a 	and	r5,r5,r4
    c53c:	2804977a 	slli	r2,r5,29
    c540:	280a927a 	slli	r5,r5,9
    c544:	8822d0fa 	srli	r17,r17,3
    c548:	8401ffcc 	andi	r16,r16,2047
    c54c:	2808d33a 	srli	r4,r5,12
    c550:	1444b03a 	or	r2,r2,r17
    c554:	8401ffcc 	andi	r16,r16,2047
    c558:	800a953a 	slli	r5,r16,20
    c55c:	40c03fcc 	andi	r3,r8,255
    c560:	04000434 	movhi	r16,16
    c564:	180697fa 	slli	r3,r3,31
    c568:	843fffc4 	addi	r16,r16,-1
    c56c:	2420703a 	and	r16,r4,r16
    c570:	8160b03a 	or	r16,r16,r5
    c574:	80c6b03a 	or	r3,r16,r3
    c578:	dfc00417 	ldw	ra,16(sp)
    c57c:	dcc00317 	ldw	r19,12(sp)
    c580:	dc800217 	ldw	r18,8(sp)
    c584:	dc400117 	ldw	r17,4(sp)
    c588:	dc000017 	ldw	r16,0(sp)
    c58c:	dec00504 	addi	sp,sp,20
    c590:	f800283a 	ret
    c594:	0101ffc4 	movi	r4,2047
    c598:	813fd626 	beq	r16,r4,c4f4 <__alt_data_end+0xfffedcac>
    c59c:	18c02034 	orhi	r3,r3,128
    c5a0:	01000e04 	movi	r4,56
    c5a4:	2080a416 	blt	r4,r2,c838 <__subdf3+0x3d0>
    c5a8:	010007c4 	movi	r4,31
    c5ac:	2080c716 	blt	r4,r2,c8cc <__subdf3+0x464>
    c5b0:	01000804 	movi	r4,32
    c5b4:	2089c83a 	sub	r4,r4,r2
    c5b8:	1910983a 	sll	r8,r3,r4
    c5bc:	308ed83a 	srl	r7,r6,r2
    c5c0:	3108983a 	sll	r4,r6,r4
    c5c4:	1884d83a 	srl	r2,r3,r2
    c5c8:	41ccb03a 	or	r6,r8,r7
    c5cc:	2008c03a 	cmpne	r4,r4,zero
    c5d0:	310cb03a 	or	r6,r6,r4
    c5d4:	898dc83a 	sub	r6,r17,r6
    c5d8:	89a3803a 	cmpltu	r17,r17,r6
    c5dc:	288bc83a 	sub	r5,r5,r2
    c5e0:	2c4bc83a 	sub	r5,r5,r17
    c5e4:	3023883a 	mov	r17,r6
    c5e8:	2880202c 	andhi	r2,r5,128
    c5ec:	10006b26 	beq	r2,zero,c79c <__subdf3+0x334>
    c5f0:	04c02034 	movhi	r19,128
    c5f4:	9cffffc4 	addi	r19,r19,-1
    c5f8:	2ce6703a 	and	r19,r5,r19
    c5fc:	98007c26 	beq	r19,zero,c7f0 <__subdf3+0x388>
    c600:	9809883a 	mov	r4,r19
    c604:	000cf340 	call	cf34 <__clzsi2>
    c608:	10fffe04 	addi	r3,r2,-8
    c60c:	010007c4 	movi	r4,31
    c610:	20c07d16 	blt	r4,r3,c808 <__subdf3+0x3a0>
    c614:	01400a04 	movi	r5,40
    c618:	2885c83a 	sub	r2,r5,r2
    c61c:	888ad83a 	srl	r5,r17,r2
    c620:	98e6983a 	sll	r19,r19,r3
    c624:	88e2983a 	sll	r17,r17,r3
    c628:	2ce6b03a 	or	r19,r5,r19
    c62c:	1c007a16 	blt	r3,r16,c818 <__subdf3+0x3b0>
    c630:	1c21c83a 	sub	r16,r3,r16
    c634:	81400044 	addi	r5,r16,1
    c638:	00c007c4 	movi	r3,31
    c63c:	19409616 	blt	r3,r5,c898 <__subdf3+0x430>
    c640:	1c21c83a 	sub	r16,r3,r16
    c644:	8c08983a 	sll	r4,r17,r16
    c648:	8946d83a 	srl	r3,r17,r5
    c64c:	9c20983a 	sll	r16,r19,r16
    c650:	2008c03a 	cmpne	r4,r4,zero
    c654:	994ad83a 	srl	r5,r19,r5
    c658:	1c06b03a 	or	r3,r3,r16
    c65c:	1922b03a 	or	r17,r3,r4
    c660:	0021883a 	mov	r16,zero
    c664:	003fa306 	br	c4f4 <__alt_data_end+0xfffedcac>
    c668:	2880202c 	andhi	r2,r5,128
    c66c:	9200004c 	andi	r8,r18,1
    c670:	103fac1e 	bne	r2,zero,c524 <__alt_data_end+0xfffedcdc>
    c674:	2804977a 	slli	r2,r5,29
    c678:	8822d0fa 	srli	r17,r17,3
    c67c:	00c1ffc4 	movi	r3,2047
    c680:	280ad0fa 	srli	r5,r5,3
    c684:	1444b03a 	or	r2,r2,r17
    c688:	80c02726 	beq	r16,r3,c728 <__subdf3+0x2c0>
    c68c:	01000434 	movhi	r4,16
    c690:	213fffc4 	addi	r4,r4,-1
    c694:	80e0703a 	and	r16,r16,r3
    c698:	2908703a 	and	r4,r5,r4
    c69c:	003fad06 	br	c554 <__alt_data_end+0xfffedd0c>
    c6a0:	0080690e 	bge	zero,r2,c848 <__subdf3+0x3e0>
    c6a4:	50002f26 	beq	r10,zero,c764 <__subdf3+0x2fc>
    c6a8:	0101ffc4 	movi	r4,2047
    c6ac:	813f9126 	beq	r16,r4,c4f4 <__alt_data_end+0xfffedcac>
    c6b0:	18c02034 	orhi	r3,r3,128
    c6b4:	01000e04 	movi	r4,56
    c6b8:	2080b00e 	bge	r4,r2,c97c <__subdf3+0x514>
    c6bc:	198cb03a 	or	r6,r3,r6
    c6c0:	300ec03a 	cmpne	r7,r6,zero
    c6c4:	0005883a 	mov	r2,zero
    c6c8:	3c4f883a 	add	r7,r7,r17
    c6cc:	3c63803a 	cmpltu	r17,r7,r17
    c6d0:	114b883a 	add	r5,r2,r5
    c6d4:	2c4b883a 	add	r5,r5,r17
    c6d8:	3823883a 	mov	r17,r7
    c6dc:	2880202c 	andhi	r2,r5,128
    c6e0:	10002e26 	beq	r2,zero,c79c <__subdf3+0x334>
    c6e4:	84000044 	addi	r16,r16,1
    c6e8:	0081ffc4 	movi	r2,2047
    c6ec:	8080de26 	beq	r16,r2,ca68 <__subdf3+0x600>
    c6f0:	00bfe034 	movhi	r2,65408
    c6f4:	10bfffc4 	addi	r2,r2,-1
    c6f8:	288a703a 	and	r5,r5,r2
    c6fc:	880cd07a 	srli	r6,r17,1
    c700:	280897fa 	slli	r4,r5,31
    c704:	88c0004c 	andi	r3,r17,1
    c708:	30e2b03a 	or	r17,r6,r3
    c70c:	280ad07a 	srli	r5,r5,1
    c710:	8922b03a 	or	r17,r17,r4
    c714:	003f7706 	br	c4f4 <__alt_data_end+0xfffedcac>
    c718:	1984b03a 	or	r2,r3,r6
    c71c:	103f6e26 	beq	r2,zero,c4d8 <__alt_data_end+0xfffedc90>
    c720:	39c03fcc 	andi	r7,r7,255
    c724:	003f6d06 	br	c4dc <__alt_data_end+0xfffedc94>
    c728:	1146b03a 	or	r3,r2,r5
    c72c:	18003f26 	beq	r3,zero,c82c <__subdf3+0x3c4>
    c730:	00c00434 	movhi	r3,16
    c734:	29000234 	orhi	r4,r5,8
    c738:	18ffffc4 	addi	r3,r3,-1
    c73c:	20c8703a 	and	r4,r4,r3
    c740:	003f8406 	br	c554 <__alt_data_end+0xfffedd0c>
    c744:	10bfffc4 	addi	r2,r2,-1
    c748:	1000501e 	bne	r2,zero,c88c <__subdf3+0x424>
    c74c:	898fc83a 	sub	r7,r17,r6
    c750:	89e3803a 	cmpltu	r17,r17,r7
    c754:	28cbc83a 	sub	r5,r5,r3
    c758:	2c4bc83a 	sub	r5,r5,r17
    c75c:	3823883a 	mov	r17,r7
    c760:	003fa106 	br	c5e8 <__alt_data_end+0xfffedda0>
    c764:	1988b03a 	or	r4,r3,r6
    c768:	203f6226 	beq	r4,zero,c4f4 <__alt_data_end+0xfffedcac>
    c76c:	10bfffc4 	addi	r2,r2,-1
    c770:	10009b1e 	bne	r2,zero,c9e0 <__subdf3+0x578>
    c774:	344d883a 	add	r6,r6,r17
    c778:	3463803a 	cmpltu	r17,r6,r17
    c77c:	194b883a 	add	r5,r3,r5
    c780:	2c4b883a 	add	r5,r5,r17
    c784:	3023883a 	mov	r17,r6
    c788:	003fd406 	br	c6dc <__alt_data_end+0xfffede94>
    c78c:	1106b03a 	or	r3,r2,r4
    c790:	1800b426 	beq	r3,zero,ca64 <__subdf3+0x5fc>
    c794:	100b883a 	mov	r5,r2
    c798:	2023883a 	mov	r17,r4
    c79c:	888001cc 	andi	r2,r17,7
    c7a0:	103f561e 	bne	r2,zero,c4fc <__alt_data_end+0xfffedcb4>
    c7a4:	9200004c 	andi	r8,r18,1
    c7a8:	003fb206 	br	c674 <__alt_data_end+0xfffede2c>
    c7ac:	1000531e 	bne	r2,zero,c8fc <__subdf3+0x494>
    c7b0:	80800044 	addi	r2,r16,1
    c7b4:	1081ffcc 	andi	r2,r2,2047
    c7b8:	01000044 	movi	r4,1
    c7bc:	2080a00e 	bge	r4,r2,ca40 <__subdf3+0x5d8>
    c7c0:	8985c83a 	sub	r2,r17,r6
    c7c4:	8889803a 	cmpltu	r4,r17,r2
    c7c8:	28e7c83a 	sub	r19,r5,r3
    c7cc:	9927c83a 	sub	r19,r19,r4
    c7d0:	9900202c 	andhi	r4,r19,128
    c7d4:	20006226 	beq	r4,zero,c960 <__subdf3+0x4f8>
    c7d8:	3463c83a 	sub	r17,r6,r17
    c7dc:	194bc83a 	sub	r5,r3,r5
    c7e0:	344d803a 	cmpltu	r6,r6,r17
    c7e4:	29a7c83a 	sub	r19,r5,r6
    c7e8:	3825883a 	mov	r18,r7
    c7ec:	983f841e 	bne	r19,zero,c600 <__alt_data_end+0xfffeddb8>
    c7f0:	8809883a 	mov	r4,r17
    c7f4:	000cf340 	call	cf34 <__clzsi2>
    c7f8:	10800804 	addi	r2,r2,32
    c7fc:	10fffe04 	addi	r3,r2,-8
    c800:	010007c4 	movi	r4,31
    c804:	20ff830e 	bge	r4,r3,c614 <__alt_data_end+0xfffeddcc>
    c808:	14fff604 	addi	r19,r2,-40
    c80c:	8ce6983a 	sll	r19,r17,r19
    c810:	0023883a 	mov	r17,zero
    c814:	1c3f860e 	bge	r3,r16,c630 <__alt_data_end+0xfffedde8>
    c818:	017fe034 	movhi	r5,65408
    c81c:	297fffc4 	addi	r5,r5,-1
    c820:	80e1c83a 	sub	r16,r16,r3
    c824:	994a703a 	and	r5,r19,r5
    c828:	003f3206 	br	c4f4 <__alt_data_end+0xfffedcac>
    c82c:	0009883a 	mov	r4,zero
    c830:	0005883a 	mov	r2,zero
    c834:	003f4706 	br	c554 <__alt_data_end+0xfffedd0c>
    c838:	198cb03a 	or	r6,r3,r6
    c83c:	300cc03a 	cmpne	r6,r6,zero
    c840:	0005883a 	mov	r2,zero
    c844:	003f6306 	br	c5d4 <__alt_data_end+0xfffedd8c>
    c848:	10009d1e 	bne	r2,zero,cac0 <__subdf3+0x658>
    c84c:	81c00044 	addi	r7,r16,1
    c850:	3881ffcc 	andi	r2,r7,2047
    c854:	02400044 	movi	r9,1
    c858:	4880680e 	bge	r9,r2,c9fc <__subdf3+0x594>
    c85c:	0081ffc4 	movi	r2,2047
    c860:	3880ae26 	beq	r7,r2,cb1c <__subdf3+0x6b4>
    c864:	344d883a 	add	r6,r6,r17
    c868:	3463803a 	cmpltu	r17,r6,r17
    c86c:	194b883a 	add	r5,r3,r5
    c870:	2c4b883a 	add	r5,r5,r17
    c874:	282297fa 	slli	r17,r5,31
    c878:	300cd07a 	srli	r6,r6,1
    c87c:	280ad07a 	srli	r5,r5,1
    c880:	3821883a 	mov	r16,r7
    c884:	89a2b03a 	or	r17,r17,r6
    c888:	003f1a06 	br	c4f4 <__alt_data_end+0xfffedcac>
    c88c:	0101ffc4 	movi	r4,2047
    c890:	813f431e 	bne	r16,r4,c5a0 <__alt_data_end+0xfffedd58>
    c894:	003f1706 	br	c4f4 <__alt_data_end+0xfffedcac>
    c898:	80bff844 	addi	r2,r16,-31
    c89c:	00c00804 	movi	r3,32
    c8a0:	9884d83a 	srl	r2,r19,r2
    c8a4:	28c05126 	beq	r5,r3,c9ec <__subdf3+0x584>
    c8a8:	00c00fc4 	movi	r3,63
    c8ac:	1c21c83a 	sub	r16,r3,r16
    c8b0:	9c26983a 	sll	r19,r19,r16
    c8b4:	9c62b03a 	or	r17,r19,r17
    c8b8:	8822c03a 	cmpne	r17,r17,zero
    c8bc:	88a2b03a 	or	r17,r17,r2
    c8c0:	000b883a 	mov	r5,zero
    c8c4:	0021883a 	mov	r16,zero
    c8c8:	003fb406 	br	c79c <__alt_data_end+0xfffedf54>
    c8cc:	113ff804 	addi	r4,r2,-32
    c8d0:	01c00804 	movi	r7,32
    c8d4:	1908d83a 	srl	r4,r3,r4
    c8d8:	11c04626 	beq	r2,r7,c9f4 <__subdf3+0x58c>
    c8dc:	01c01004 	movi	r7,64
    c8e0:	3885c83a 	sub	r2,r7,r2
    c8e4:	1884983a 	sll	r2,r3,r2
    c8e8:	118cb03a 	or	r6,r2,r6
    c8ec:	300cc03a 	cmpne	r6,r6,zero
    c8f0:	310cb03a 	or	r6,r6,r4
    c8f4:	0005883a 	mov	r2,zero
    c8f8:	003f3606 	br	c5d4 <__alt_data_end+0xfffedd8c>
    c8fc:	80002b26 	beq	r16,zero,c9ac <__subdf3+0x544>
    c900:	0101ffc4 	movi	r4,2047
    c904:	51006926 	beq	r10,r4,caac <__subdf3+0x644>
    c908:	0085c83a 	sub	r2,zero,r2
    c90c:	29402034 	orhi	r5,r5,128
    c910:	01000e04 	movi	r4,56
    c914:	20807d16 	blt	r4,r2,cb0c <__subdf3+0x6a4>
    c918:	010007c4 	movi	r4,31
    c91c:	2080d916 	blt	r4,r2,cc84 <__subdf3+0x81c>
    c920:	01000804 	movi	r4,32
    c924:	2089c83a 	sub	r4,r4,r2
    c928:	2912983a 	sll	r9,r5,r4
    c92c:	8890d83a 	srl	r8,r17,r2
    c930:	8908983a 	sll	r4,r17,r4
    c934:	2884d83a 	srl	r2,r5,r2
    c938:	4a22b03a 	or	r17,r9,r8
    c93c:	2008c03a 	cmpne	r4,r4,zero
    c940:	8922b03a 	or	r17,r17,r4
    c944:	3463c83a 	sub	r17,r6,r17
    c948:	1885c83a 	sub	r2,r3,r2
    c94c:	344d803a 	cmpltu	r6,r6,r17
    c950:	118bc83a 	sub	r5,r2,r6
    c954:	5021883a 	mov	r16,r10
    c958:	3825883a 	mov	r18,r7
    c95c:	003f2206 	br	c5e8 <__alt_data_end+0xfffedda0>
    c960:	9886b03a 	or	r3,r19,r2
    c964:	18001c1e 	bne	r3,zero,c9d8 <__subdf3+0x570>
    c968:	0011883a 	mov	r8,zero
    c96c:	000b883a 	mov	r5,zero
    c970:	0023883a 	mov	r17,zero
    c974:	0021883a 	mov	r16,zero
    c978:	003f3e06 	br	c674 <__alt_data_end+0xfffede2c>
    c97c:	010007c4 	movi	r4,31
    c980:	20803c16 	blt	r4,r2,ca74 <__subdf3+0x60c>
    c984:	01000804 	movi	r4,32
    c988:	2089c83a 	sub	r4,r4,r2
    c98c:	1912983a 	sll	r9,r3,r4
    c990:	308ed83a 	srl	r7,r6,r2
    c994:	3108983a 	sll	r4,r6,r4
    c998:	1884d83a 	srl	r2,r3,r2
    c99c:	49ceb03a 	or	r7,r9,r7
    c9a0:	2008c03a 	cmpne	r4,r4,zero
    c9a4:	390eb03a 	or	r7,r7,r4
    c9a8:	003f4706 	br	c6c8 <__alt_data_end+0xfffede80>
    c9ac:	2c48b03a 	or	r4,r5,r17
    c9b0:	20003e26 	beq	r4,zero,caac <__subdf3+0x644>
    c9b4:	0084303a 	nor	r2,zero,r2
    c9b8:	10003a1e 	bne	r2,zero,caa4 <__subdf3+0x63c>
    c9bc:	3463c83a 	sub	r17,r6,r17
    c9c0:	194bc83a 	sub	r5,r3,r5
    c9c4:	344d803a 	cmpltu	r6,r6,r17
    c9c8:	298bc83a 	sub	r5,r5,r6
    c9cc:	5021883a 	mov	r16,r10
    c9d0:	3825883a 	mov	r18,r7
    c9d4:	003f0406 	br	c5e8 <__alt_data_end+0xfffedda0>
    c9d8:	1023883a 	mov	r17,r2
    c9dc:	003f0706 	br	c5fc <__alt_data_end+0xfffeddb4>
    c9e0:	0101ffc4 	movi	r4,2047
    c9e4:	813f331e 	bne	r16,r4,c6b4 <__alt_data_end+0xfffede6c>
    c9e8:	003ec206 	br	c4f4 <__alt_data_end+0xfffedcac>
    c9ec:	0027883a 	mov	r19,zero
    c9f0:	003fb006 	br	c8b4 <__alt_data_end+0xfffee06c>
    c9f4:	0005883a 	mov	r2,zero
    c9f8:	003fbb06 	br	c8e8 <__alt_data_end+0xfffee0a0>
    c9fc:	2c44b03a 	or	r2,r5,r17
    ca00:	80008b1e 	bne	r16,zero,cc30 <__subdf3+0x7c8>
    ca04:	1000b526 	beq	r2,zero,ccdc <__subdf3+0x874>
    ca08:	1984b03a 	or	r2,r3,r6
    ca0c:	103eb926 	beq	r2,zero,c4f4 <__alt_data_end+0xfffedcac>
    ca10:	3449883a 	add	r4,r6,r17
    ca14:	2463803a 	cmpltu	r17,r4,r17
    ca18:	194b883a 	add	r5,r3,r5
    ca1c:	2c4b883a 	add	r5,r5,r17
    ca20:	2880202c 	andhi	r2,r5,128
    ca24:	2023883a 	mov	r17,r4
    ca28:	103f5c26 	beq	r2,zero,c79c <__alt_data_end+0xfffedf54>
    ca2c:	00bfe034 	movhi	r2,65408
    ca30:	10bfffc4 	addi	r2,r2,-1
    ca34:	4821883a 	mov	r16,r9
    ca38:	288a703a 	and	r5,r5,r2
    ca3c:	003ead06 	br	c4f4 <__alt_data_end+0xfffedcac>
    ca40:	2c44b03a 	or	r2,r5,r17
    ca44:	8000291e 	bne	r16,zero,caec <__subdf3+0x684>
    ca48:	10004f1e 	bne	r2,zero,cb88 <__subdf3+0x720>
    ca4c:	1984b03a 	or	r2,r3,r6
    ca50:	10000426 	beq	r2,zero,ca64 <__subdf3+0x5fc>
    ca54:	180b883a 	mov	r5,r3
    ca58:	3023883a 	mov	r17,r6
    ca5c:	3825883a 	mov	r18,r7
    ca60:	003ea406 	br	c4f4 <__alt_data_end+0xfffedcac>
    ca64:	0011883a 	mov	r8,zero
    ca68:	000b883a 	mov	r5,zero
    ca6c:	0023883a 	mov	r17,zero
    ca70:	003f0006 	br	c674 <__alt_data_end+0xfffede2c>
    ca74:	11fff804 	addi	r7,r2,-32
    ca78:	19c8d83a 	srl	r4,r3,r7
    ca7c:	01c00804 	movi	r7,32
    ca80:	11c07e26 	beq	r2,r7,cc7c <__subdf3+0x814>
    ca84:	01c01004 	movi	r7,64
    ca88:	3885c83a 	sub	r2,r7,r2
    ca8c:	1884983a 	sll	r2,r3,r2
    ca90:	118cb03a 	or	r6,r2,r6
    ca94:	300ec03a 	cmpne	r7,r6,zero
    ca98:	390eb03a 	or	r7,r7,r4
    ca9c:	0005883a 	mov	r2,zero
    caa0:	003f0906 	br	c6c8 <__alt_data_end+0xfffede80>
    caa4:	0101ffc4 	movi	r4,2047
    caa8:	513f991e 	bne	r10,r4,c910 <__alt_data_end+0xfffee0c8>
    caac:	180b883a 	mov	r5,r3
    cab0:	3023883a 	mov	r17,r6
    cab4:	5021883a 	mov	r16,r10
    cab8:	3825883a 	mov	r18,r7
    cabc:	003e8d06 	br	c4f4 <__alt_data_end+0xfffedcac>
    cac0:	80001a1e 	bne	r16,zero,cb2c <__subdf3+0x6c4>
    cac4:	2c48b03a 	or	r4,r5,r17
    cac8:	20005526 	beq	r4,zero,cc20 <__subdf3+0x7b8>
    cacc:	0084303a 	nor	r2,zero,r2
    cad0:	1000511e 	bne	r2,zero,cc18 <__subdf3+0x7b0>
    cad4:	89a3883a 	add	r17,r17,r6
    cad8:	194b883a 	add	r5,r3,r5
    cadc:	898d803a 	cmpltu	r6,r17,r6
    cae0:	298b883a 	add	r5,r5,r6
    cae4:	5021883a 	mov	r16,r10
    cae8:	003efc06 	br	c6dc <__alt_data_end+0xfffede94>
    caec:	1000341e 	bne	r2,zero,cbc0 <__subdf3+0x758>
    caf0:	1984b03a 	or	r2,r3,r6
    caf4:	10006f26 	beq	r2,zero,ccb4 <__subdf3+0x84c>
    caf8:	180b883a 	mov	r5,r3
    cafc:	3023883a 	mov	r17,r6
    cb00:	3825883a 	mov	r18,r7
    cb04:	0401ffc4 	movi	r16,2047
    cb08:	003e7a06 	br	c4f4 <__alt_data_end+0xfffedcac>
    cb0c:	2c62b03a 	or	r17,r5,r17
    cb10:	8822c03a 	cmpne	r17,r17,zero
    cb14:	0005883a 	mov	r2,zero
    cb18:	003f8a06 	br	c944 <__alt_data_end+0xfffee0fc>
    cb1c:	3821883a 	mov	r16,r7
    cb20:	000b883a 	mov	r5,zero
    cb24:	0023883a 	mov	r17,zero
    cb28:	003ed206 	br	c674 <__alt_data_end+0xfffede2c>
    cb2c:	0101ffc4 	movi	r4,2047
    cb30:	51003b26 	beq	r10,r4,cc20 <__subdf3+0x7b8>
    cb34:	0085c83a 	sub	r2,zero,r2
    cb38:	29402034 	orhi	r5,r5,128
    cb3c:	01000e04 	movi	r4,56
    cb40:	20806216 	blt	r4,r2,cccc <__subdf3+0x864>
    cb44:	010007c4 	movi	r4,31
    cb48:	20806b16 	blt	r4,r2,ccf8 <__subdf3+0x890>
    cb4c:	01000804 	movi	r4,32
    cb50:	2089c83a 	sub	r4,r4,r2
    cb54:	2912983a 	sll	r9,r5,r4
    cb58:	888ed83a 	srl	r7,r17,r2
    cb5c:	8908983a 	sll	r4,r17,r4
    cb60:	2884d83a 	srl	r2,r5,r2
    cb64:	49e2b03a 	or	r17,r9,r7
    cb68:	2008c03a 	cmpne	r4,r4,zero
    cb6c:	8922b03a 	or	r17,r17,r4
    cb70:	89a3883a 	add	r17,r17,r6
    cb74:	10c5883a 	add	r2,r2,r3
    cb78:	898d803a 	cmpltu	r6,r17,r6
    cb7c:	118b883a 	add	r5,r2,r6
    cb80:	5021883a 	mov	r16,r10
    cb84:	003ed506 	br	c6dc <__alt_data_end+0xfffede94>
    cb88:	1984b03a 	or	r2,r3,r6
    cb8c:	103e5926 	beq	r2,zero,c4f4 <__alt_data_end+0xfffedcac>
    cb90:	8989c83a 	sub	r4,r17,r6
    cb94:	8911803a 	cmpltu	r8,r17,r4
    cb98:	28c5c83a 	sub	r2,r5,r3
    cb9c:	1205c83a 	sub	r2,r2,r8
    cba0:	1200202c 	andhi	r8,r2,128
    cba4:	403ef926 	beq	r8,zero,c78c <__alt_data_end+0xfffedf44>
    cba8:	3463c83a 	sub	r17,r6,r17
    cbac:	194bc83a 	sub	r5,r3,r5
    cbb0:	344d803a 	cmpltu	r6,r6,r17
    cbb4:	298bc83a 	sub	r5,r5,r6
    cbb8:	3825883a 	mov	r18,r7
    cbbc:	003e4d06 	br	c4f4 <__alt_data_end+0xfffedcac>
    cbc0:	1984b03a 	or	r2,r3,r6
    cbc4:	10002b26 	beq	r2,zero,cc74 <__subdf3+0x80c>
    cbc8:	2808d0fa 	srli	r4,r5,3
    cbcc:	8822d0fa 	srli	r17,r17,3
    cbd0:	280a977a 	slli	r5,r5,29
    cbd4:	2080022c 	andhi	r2,r4,8
    cbd8:	2c62b03a 	or	r17,r5,r17
    cbdc:	10000826 	beq	r2,zero,cc00 <__subdf3+0x798>
    cbe0:	1810d0fa 	srli	r8,r3,3
    cbe4:	4080022c 	andhi	r2,r8,8
    cbe8:	1000051e 	bne	r2,zero,cc00 <__subdf3+0x798>
    cbec:	300cd0fa 	srli	r6,r6,3
    cbf0:	1804977a 	slli	r2,r3,29
    cbf4:	4009883a 	mov	r4,r8
    cbf8:	3825883a 	mov	r18,r7
    cbfc:	11a2b03a 	or	r17,r2,r6
    cc00:	880ad77a 	srli	r5,r17,29
    cc04:	200890fa 	slli	r4,r4,3
    cc08:	882290fa 	slli	r17,r17,3
    cc0c:	0401ffc4 	movi	r16,2047
    cc10:	290ab03a 	or	r5,r5,r4
    cc14:	003e3706 	br	c4f4 <__alt_data_end+0xfffedcac>
    cc18:	0101ffc4 	movi	r4,2047
    cc1c:	513fc71e 	bne	r10,r4,cb3c <__alt_data_end+0xfffee2f4>
    cc20:	180b883a 	mov	r5,r3
    cc24:	3023883a 	mov	r17,r6
    cc28:	5021883a 	mov	r16,r10
    cc2c:	003e3106 	br	c4f4 <__alt_data_end+0xfffedcac>
    cc30:	10002d26 	beq	r2,zero,cce8 <__subdf3+0x880>
    cc34:	1984b03a 	or	r2,r3,r6
    cc38:	10000e26 	beq	r2,zero,cc74 <__subdf3+0x80c>
    cc3c:	2808d0fa 	srli	r4,r5,3
    cc40:	8822d0fa 	srli	r17,r17,3
    cc44:	280a977a 	slli	r5,r5,29
    cc48:	2080022c 	andhi	r2,r4,8
    cc4c:	2c62b03a 	or	r17,r5,r17
    cc50:	103feb26 	beq	r2,zero,cc00 <__alt_data_end+0xfffee3b8>
    cc54:	180ed0fa 	srli	r7,r3,3
    cc58:	3880022c 	andhi	r2,r7,8
    cc5c:	103fe81e 	bne	r2,zero,cc00 <__alt_data_end+0xfffee3b8>
    cc60:	300cd0fa 	srli	r6,r6,3
    cc64:	1804977a 	slli	r2,r3,29
    cc68:	3809883a 	mov	r4,r7
    cc6c:	11a2b03a 	or	r17,r2,r6
    cc70:	003fe306 	br	cc00 <__alt_data_end+0xfffee3b8>
    cc74:	0401ffc4 	movi	r16,2047
    cc78:	003e1e06 	br	c4f4 <__alt_data_end+0xfffedcac>
    cc7c:	0005883a 	mov	r2,zero
    cc80:	003f8306 	br	ca90 <__alt_data_end+0xfffee248>
    cc84:	113ff804 	addi	r4,r2,-32
    cc88:	02000804 	movi	r8,32
    cc8c:	2908d83a 	srl	r4,r5,r4
    cc90:	12002526 	beq	r2,r8,cd28 <__subdf3+0x8c0>
    cc94:	02001004 	movi	r8,64
    cc98:	4085c83a 	sub	r2,r8,r2
    cc9c:	288a983a 	sll	r5,r5,r2
    cca0:	2c62b03a 	or	r17,r5,r17
    cca4:	8822c03a 	cmpne	r17,r17,zero
    cca8:	8922b03a 	or	r17,r17,r4
    ccac:	0005883a 	mov	r2,zero
    ccb0:	003f2406 	br	c944 <__alt_data_end+0xfffee0fc>
    ccb4:	01402034 	movhi	r5,128
    ccb8:	0011883a 	mov	r8,zero
    ccbc:	297fffc4 	addi	r5,r5,-1
    ccc0:	047ffe04 	movi	r17,-8
    ccc4:	0401ffc4 	movi	r16,2047
    ccc8:	003e6a06 	br	c674 <__alt_data_end+0xfffede2c>
    cccc:	2c62b03a 	or	r17,r5,r17
    ccd0:	8822c03a 	cmpne	r17,r17,zero
    ccd4:	0005883a 	mov	r2,zero
    ccd8:	003fa506 	br	cb70 <__alt_data_end+0xfffee328>
    ccdc:	180b883a 	mov	r5,r3
    cce0:	3023883a 	mov	r17,r6
    cce4:	003e0306 	br	c4f4 <__alt_data_end+0xfffedcac>
    cce8:	180b883a 	mov	r5,r3
    ccec:	3023883a 	mov	r17,r6
    ccf0:	0401ffc4 	movi	r16,2047
    ccf4:	003dff06 	br	c4f4 <__alt_data_end+0xfffedcac>
    ccf8:	113ff804 	addi	r4,r2,-32
    ccfc:	01c00804 	movi	r7,32
    cd00:	2908d83a 	srl	r4,r5,r4
    cd04:	11c00a26 	beq	r2,r7,cd30 <__subdf3+0x8c8>
    cd08:	01c01004 	movi	r7,64
    cd0c:	3885c83a 	sub	r2,r7,r2
    cd10:	288a983a 	sll	r5,r5,r2
    cd14:	2c62b03a 	or	r17,r5,r17
    cd18:	8822c03a 	cmpne	r17,r17,zero
    cd1c:	8922b03a 	or	r17,r17,r4
    cd20:	0005883a 	mov	r2,zero
    cd24:	003f9206 	br	cb70 <__alt_data_end+0xfffee328>
    cd28:	000b883a 	mov	r5,zero
    cd2c:	003fdc06 	br	cca0 <__alt_data_end+0xfffee458>
    cd30:	000b883a 	mov	r5,zero
    cd34:	003ff706 	br	cd14 <__alt_data_end+0xfffee4cc>

0000cd38 <__fixdfsi>:
    cd38:	2806d53a 	srli	r3,r5,20
    cd3c:	00800434 	movhi	r2,16
    cd40:	10bfffc4 	addi	r2,r2,-1
    cd44:	18c1ffcc 	andi	r3,r3,2047
    cd48:	0180ff84 	movi	r6,1022
    cd4c:	2884703a 	and	r2,r5,r2
    cd50:	280ad7fa 	srli	r5,r5,31
    cd54:	30c0130e 	bge	r6,r3,cda4 <__fixdfsi+0x6c>
    cd58:	01810744 	movi	r6,1053
    cd5c:	30c00d16 	blt	r6,r3,cd94 <__fixdfsi+0x5c>
    cd60:	01810cc4 	movi	r6,1075
    cd64:	30cdc83a 	sub	r6,r6,r3
    cd68:	01c007c4 	movi	r7,31
    cd6c:	10800434 	orhi	r2,r2,16
    cd70:	39800e0e 	bge	r7,r6,cdac <__fixdfsi+0x74>
    cd74:	010104c4 	movi	r4,1043
    cd78:	20c7c83a 	sub	r3,r4,r3
    cd7c:	10c6d83a 	srl	r3,r2,r3
    cd80:	29403fcc 	andi	r5,r5,255
    cd84:	0145c83a 	sub	r2,zero,r5
    cd88:	1884f03a 	xor	r2,r3,r2
    cd8c:	1145883a 	add	r2,r2,r5
    cd90:	f800283a 	ret
    cd94:	00a00034 	movhi	r2,32768
    cd98:	10bfffc4 	addi	r2,r2,-1
    cd9c:	2885883a 	add	r2,r5,r2
    cda0:	f800283a 	ret
    cda4:	0005883a 	mov	r2,zero
    cda8:	f800283a 	ret
    cdac:	18fefb44 	addi	r3,r3,-1043
    cdb0:	2188d83a 	srl	r4,r4,r6
    cdb4:	10c6983a 	sll	r3,r2,r3
    cdb8:	20c6b03a 	or	r3,r4,r3
    cdbc:	003ff006 	br	cd80 <__alt_data_end+0xfffee538>

0000cdc0 <__floatsidf>:
    cdc0:	defffd04 	addi	sp,sp,-12
    cdc4:	dc400115 	stw	r17,4(sp)
    cdc8:	dfc00215 	stw	ra,8(sp)
    cdcc:	dc000015 	stw	r16,0(sp)
    cdd0:	2023883a 	mov	r17,r4
    cdd4:	20001426 	beq	r4,zero,ce28 <__floatsidf+0x68>
    cdd8:	2020d7fa 	srli	r16,r4,31
    cddc:	80000126 	beq	r16,zero,cde4 <__floatsidf+0x24>
    cde0:	0123c83a 	sub	r17,zero,r4
    cde4:	8809883a 	mov	r4,r17
    cde8:	000cf340 	call	cf34 <__clzsi2>
    cdec:	01410784 	movi	r5,1054
    cdf0:	00c00284 	movi	r3,10
    cdf4:	288bc83a 	sub	r5,r5,r2
    cdf8:	18801c16 	blt	r3,r2,ce6c <__floatsidf+0xac>
    cdfc:	00c002c4 	movi	r3,11
    ce00:	1887c83a 	sub	r3,r3,r2
    ce04:	88c8d83a 	srl	r4,r17,r3
    ce08:	00c00434 	movhi	r3,16
    ce0c:	18ffffc4 	addi	r3,r3,-1
    ce10:	10800544 	addi	r2,r2,21
    ce14:	20c8703a 	and	r4,r4,r3
    ce18:	8884983a 	sll	r2,r17,r2
    ce1c:	28c1ffcc 	andi	r3,r5,2047
    ce20:	800d883a 	mov	r6,r16
    ce24:	00000406 	br	ce38 <__floatsidf+0x78>
    ce28:	000d883a 	mov	r6,zero
    ce2c:	0007883a 	mov	r3,zero
    ce30:	0009883a 	mov	r4,zero
    ce34:	0005883a 	mov	r2,zero
    ce38:	180a953a 	slli	r5,r3,20
    ce3c:	31803fcc 	andi	r6,r6,255
    ce40:	00c00434 	movhi	r3,16
    ce44:	300c97fa 	slli	r6,r6,31
    ce48:	18ffffc4 	addi	r3,r3,-1
    ce4c:	20c6703a 	and	r3,r4,r3
    ce50:	1946b03a 	or	r3,r3,r5
    ce54:	1986b03a 	or	r3,r3,r6
    ce58:	dfc00217 	ldw	ra,8(sp)
    ce5c:	dc400117 	ldw	r17,4(sp)
    ce60:	dc000017 	ldw	r16,0(sp)
    ce64:	dec00304 	addi	sp,sp,12
    ce68:	f800283a 	ret
    ce6c:	10fffd44 	addi	r3,r2,-11
    ce70:	88c8983a 	sll	r4,r17,r3
    ce74:	00800434 	movhi	r2,16
    ce78:	10bfffc4 	addi	r2,r2,-1
    ce7c:	2088703a 	and	r4,r4,r2
    ce80:	28c1ffcc 	andi	r3,r5,2047
    ce84:	800d883a 	mov	r6,r16
    ce88:	0005883a 	mov	r2,zero
    ce8c:	003fea06 	br	ce38 <__alt_data_end+0xfffee5f0>

0000ce90 <__floatunsidf>:
    ce90:	defffe04 	addi	sp,sp,-8
    ce94:	dc000015 	stw	r16,0(sp)
    ce98:	dfc00115 	stw	ra,4(sp)
    ce9c:	2021883a 	mov	r16,r4
    cea0:	20001026 	beq	r4,zero,cee4 <__floatunsidf+0x54>
    cea4:	000cf340 	call	cf34 <__clzsi2>
    cea8:	01410784 	movi	r5,1054
    ceac:	100d883a 	mov	r6,r2
    ceb0:	288bc83a 	sub	r5,r5,r2
    ceb4:	00800284 	movi	r2,10
    ceb8:	11801616 	blt	r2,r6,cf14 <__floatunsidf+0x84>
    cebc:	008002c4 	movi	r2,11
    cec0:	1185c83a 	sub	r2,r2,r6
    cec4:	8084d83a 	srl	r2,r16,r2
    cec8:	00c00434 	movhi	r3,16
    cecc:	31c00544 	addi	r7,r6,21
    ced0:	18ffffc4 	addi	r3,r3,-1
    ced4:	81e0983a 	sll	r16,r16,r7
    ced8:	10cc703a 	and	r6,r2,r3
    cedc:	2941ffcc 	andi	r5,r5,2047
    cee0:	00000206 	br	ceec <__floatunsidf+0x5c>
    cee4:	000b883a 	mov	r5,zero
    cee8:	000d883a 	mov	r6,zero
    ceec:	280a953a 	slli	r5,r5,20
    cef0:	00c00434 	movhi	r3,16
    cef4:	18ffffc4 	addi	r3,r3,-1
    cef8:	30c6703a 	and	r3,r6,r3
    cefc:	8005883a 	mov	r2,r16
    cf00:	1946b03a 	or	r3,r3,r5
    cf04:	dfc00117 	ldw	ra,4(sp)
    cf08:	dc000017 	ldw	r16,0(sp)
    cf0c:	dec00204 	addi	sp,sp,8
    cf10:	f800283a 	ret
    cf14:	31bffd44 	addi	r6,r6,-11
    cf18:	818c983a 	sll	r6,r16,r6
    cf1c:	00800434 	movhi	r2,16
    cf20:	10bfffc4 	addi	r2,r2,-1
    cf24:	2941ffcc 	andi	r5,r5,2047
    cf28:	0021883a 	mov	r16,zero
    cf2c:	308c703a 	and	r6,r6,r2
    cf30:	003fee06 	br	ceec <__alt_data_end+0xfffee6a4>

0000cf34 <__clzsi2>:
    cf34:	00bfffd4 	movui	r2,65535
    cf38:	11000b36 	bltu	r2,r4,cf68 <__clzsi2+0x34>
    cf3c:	00803fc4 	movi	r2,255
    cf40:	1100122e 	bgeu	r2,r4,cf8c <__clzsi2+0x58>
    cf44:	00c00204 	movi	r3,8
    cf48:	01400604 	movi	r5,24
    cf4c:	20c8d83a 	srl	r4,r4,r3
    cf50:	00800074 	movhi	r2,1
    cf54:	10be3504 	addi	r2,r2,-1836
    cf58:	1109883a 	add	r4,r2,r4
    cf5c:	20800003 	ldbu	r2,0(r4)
    cf60:	2885c83a 	sub	r2,r5,r2
    cf64:	f800283a 	ret
    cf68:	00804034 	movhi	r2,256
    cf6c:	10bfffc4 	addi	r2,r2,-1
    cf70:	11000336 	bltu	r2,r4,cf80 <__clzsi2+0x4c>
    cf74:	00c00404 	movi	r3,16
    cf78:	180b883a 	mov	r5,r3
    cf7c:	003ff306 	br	cf4c <__alt_data_end+0xfffee704>
    cf80:	00c00604 	movi	r3,24
    cf84:	01400204 	movi	r5,8
    cf88:	003ff006 	br	cf4c <__alt_data_end+0xfffee704>
    cf8c:	0007883a 	mov	r3,zero
    cf90:	01400804 	movi	r5,32
    cf94:	003fed06 	br	cf4c <__alt_data_end+0xfffee704>

0000cf98 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    cf98:	defffe04 	addi	sp,sp,-8
    cf9c:	dfc00115 	stw	ra,4(sp)
    cfa0:	df000015 	stw	fp,0(sp)
    cfa4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    cfa8:	00800074 	movhi	r2,1
    cfac:	10853804 	addi	r2,r2,5344
    cfb0:	10800017 	ldw	r2,0(r2)
    cfb4:	10000526 	beq	r2,zero,cfcc <alt_get_errno+0x34>
    cfb8:	00800074 	movhi	r2,1
    cfbc:	10853804 	addi	r2,r2,5344
    cfc0:	10800017 	ldw	r2,0(r2)
    cfc4:	103ee83a 	callr	r2
    cfc8:	00000206 	br	cfd4 <alt_get_errno+0x3c>
    cfcc:	00800074 	movhi	r2,1
    cfd0:	108bfb04 	addi	r2,r2,12268
}
    cfd4:	e037883a 	mov	sp,fp
    cfd8:	dfc00117 	ldw	ra,4(sp)
    cfdc:	df000017 	ldw	fp,0(sp)
    cfe0:	dec00204 	addi	sp,sp,8
    cfe4:	f800283a 	ret

0000cfe8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
    cfe8:	defffb04 	addi	sp,sp,-20
    cfec:	dfc00415 	stw	ra,16(sp)
    cff0:	df000315 	stw	fp,12(sp)
    cff4:	df000304 	addi	fp,sp,12
    cff8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
    cffc:	e0bfff17 	ldw	r2,-4(fp)
    d000:	10000816 	blt	r2,zero,d024 <close+0x3c>
    d004:	e13fff17 	ldw	r4,-4(fp)
    d008:	01400304 	movi	r5,12
    d00c:	000a7740 	call	a774 <__mulsi3>
    d010:	1007883a 	mov	r3,r2
    d014:	00800074 	movhi	r2,1
    d018:	1080b504 	addi	r2,r2,724
    d01c:	1885883a 	add	r2,r3,r2
    d020:	00000106 	br	d028 <close+0x40>
    d024:	0005883a 	mov	r2,zero
    d028:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
    d02c:	e0bffd17 	ldw	r2,-12(fp)
    d030:	10001926 	beq	r2,zero,d098 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
    d034:	e0bffd17 	ldw	r2,-12(fp)
    d038:	10800017 	ldw	r2,0(r2)
    d03c:	10800417 	ldw	r2,16(r2)
    d040:	10000626 	beq	r2,zero,d05c <close+0x74>
    d044:	e0bffd17 	ldw	r2,-12(fp)
    d048:	10800017 	ldw	r2,0(r2)
    d04c:	10800417 	ldw	r2,16(r2)
    d050:	e13ffd17 	ldw	r4,-12(fp)
    d054:	103ee83a 	callr	r2
    d058:	00000106 	br	d060 <close+0x78>
    d05c:	0005883a 	mov	r2,zero
    d060:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
    d064:	e13fff17 	ldw	r4,-4(fp)
    d068:	000d70c0 	call	d70c <alt_release_fd>
    if (rval < 0)
    d06c:	e0bffe17 	ldw	r2,-8(fp)
    d070:	1000070e 	bge	r2,zero,d090 <close+0xa8>
    {
      ALT_ERRNO = -rval;
    d074:	000cf980 	call	cf98 <alt_get_errno>
    d078:	1007883a 	mov	r3,r2
    d07c:	e0bffe17 	ldw	r2,-8(fp)
    d080:	0085c83a 	sub	r2,zero,r2
    d084:	18800015 	stw	r2,0(r3)
      return -1;
    d088:	00bfffc4 	movi	r2,-1
    d08c:	00000706 	br	d0ac <close+0xc4>
    }
    return 0;
    d090:	0005883a 	mov	r2,zero
    d094:	00000506 	br	d0ac <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d098:	000cf980 	call	cf98 <alt_get_errno>
    d09c:	1007883a 	mov	r3,r2
    d0a0:	00801444 	movi	r2,81
    d0a4:	18800015 	stw	r2,0(r3)
    return -1;
    d0a8:	00bfffc4 	movi	r2,-1
  }
}
    d0ac:	e037883a 	mov	sp,fp
    d0b0:	dfc00117 	ldw	ra,4(sp)
    d0b4:	df000017 	ldw	fp,0(sp)
    d0b8:	dec00204 	addi	sp,sp,8
    d0bc:	f800283a 	ret

0000d0c0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
    d0c0:	defffc04 	addi	sp,sp,-16
    d0c4:	df000315 	stw	fp,12(sp)
    d0c8:	df000304 	addi	fp,sp,12
    d0cc:	e13ffd15 	stw	r4,-12(fp)
    d0d0:	e17ffe15 	stw	r5,-8(fp)
    d0d4:	e1bfff15 	stw	r6,-4(fp)
  return len;
    d0d8:	e0bfff17 	ldw	r2,-4(fp)
}
    d0dc:	e037883a 	mov	sp,fp
    d0e0:	df000017 	ldw	fp,0(sp)
    d0e4:	dec00104 	addi	sp,sp,4
    d0e8:	f800283a 	ret

0000d0ec <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d0ec:	defffe04 	addi	sp,sp,-8
    d0f0:	dfc00115 	stw	ra,4(sp)
    d0f4:	df000015 	stw	fp,0(sp)
    d0f8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d0fc:	00800074 	movhi	r2,1
    d100:	10853804 	addi	r2,r2,5344
    d104:	10800017 	ldw	r2,0(r2)
    d108:	10000526 	beq	r2,zero,d120 <alt_get_errno+0x34>
    d10c:	00800074 	movhi	r2,1
    d110:	10853804 	addi	r2,r2,5344
    d114:	10800017 	ldw	r2,0(r2)
    d118:	103ee83a 	callr	r2
    d11c:	00000206 	br	d128 <alt_get_errno+0x3c>
    d120:	00800074 	movhi	r2,1
    d124:	108bfb04 	addi	r2,r2,12268
}
    d128:	e037883a 	mov	sp,fp
    d12c:	dfc00117 	ldw	ra,4(sp)
    d130:	df000017 	ldw	fp,0(sp)
    d134:	dec00204 	addi	sp,sp,8
    d138:	f800283a 	ret

0000d13c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
    d13c:	defffb04 	addi	sp,sp,-20
    d140:	dfc00415 	stw	ra,16(sp)
    d144:	df000315 	stw	fp,12(sp)
    d148:	df000304 	addi	fp,sp,12
    d14c:	e13ffe15 	stw	r4,-8(fp)
    d150:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d154:	e0bffe17 	ldw	r2,-8(fp)
    d158:	10000816 	blt	r2,zero,d17c <fstat+0x40>
    d15c:	e13ffe17 	ldw	r4,-8(fp)
    d160:	01400304 	movi	r5,12
    d164:	000a7740 	call	a774 <__mulsi3>
    d168:	1007883a 	mov	r3,r2
    d16c:	00800074 	movhi	r2,1
    d170:	1080b504 	addi	r2,r2,724
    d174:	1885883a 	add	r2,r3,r2
    d178:	00000106 	br	d180 <fstat+0x44>
    d17c:	0005883a 	mov	r2,zero
    d180:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
    d184:	e0bffd17 	ldw	r2,-12(fp)
    d188:	10001026 	beq	r2,zero,d1cc <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
    d18c:	e0bffd17 	ldw	r2,-12(fp)
    d190:	10800017 	ldw	r2,0(r2)
    d194:	10800817 	ldw	r2,32(r2)
    d198:	10000726 	beq	r2,zero,d1b8 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
    d19c:	e0bffd17 	ldw	r2,-12(fp)
    d1a0:	10800017 	ldw	r2,0(r2)
    d1a4:	10800817 	ldw	r2,32(r2)
    d1a8:	e13ffd17 	ldw	r4,-12(fp)
    d1ac:	e17fff17 	ldw	r5,-4(fp)
    d1b0:	103ee83a 	callr	r2
    d1b4:	00000a06 	br	d1e0 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
    d1b8:	e0bfff17 	ldw	r2,-4(fp)
    d1bc:	00c80004 	movi	r3,8192
    d1c0:	10c00115 	stw	r3,4(r2)
      return 0;
    d1c4:	0005883a 	mov	r2,zero
    d1c8:	00000506 	br	d1e0 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d1cc:	000d0ec0 	call	d0ec <alt_get_errno>
    d1d0:	1007883a 	mov	r3,r2
    d1d4:	00801444 	movi	r2,81
    d1d8:	18800015 	stw	r2,0(r3)
    return -1;
    d1dc:	00bfffc4 	movi	r2,-1
  }
}
    d1e0:	e037883a 	mov	sp,fp
    d1e4:	dfc00117 	ldw	ra,4(sp)
    d1e8:	df000017 	ldw	fp,0(sp)
    d1ec:	dec00204 	addi	sp,sp,8
    d1f0:	f800283a 	ret

0000d1f4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d1f4:	defffe04 	addi	sp,sp,-8
    d1f8:	dfc00115 	stw	ra,4(sp)
    d1fc:	df000015 	stw	fp,0(sp)
    d200:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d204:	00800074 	movhi	r2,1
    d208:	10853804 	addi	r2,r2,5344
    d20c:	10800017 	ldw	r2,0(r2)
    d210:	10000526 	beq	r2,zero,d228 <alt_get_errno+0x34>
    d214:	00800074 	movhi	r2,1
    d218:	10853804 	addi	r2,r2,5344
    d21c:	10800017 	ldw	r2,0(r2)
    d220:	103ee83a 	callr	r2
    d224:	00000206 	br	d230 <alt_get_errno+0x3c>
    d228:	00800074 	movhi	r2,1
    d22c:	108bfb04 	addi	r2,r2,12268
}
    d230:	e037883a 	mov	sp,fp
    d234:	dfc00117 	ldw	ra,4(sp)
    d238:	df000017 	ldw	fp,0(sp)
    d23c:	dec00204 	addi	sp,sp,8
    d240:	f800283a 	ret

0000d244 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
    d244:	deffed04 	addi	sp,sp,-76
    d248:	dfc01215 	stw	ra,72(sp)
    d24c:	df001115 	stw	fp,68(sp)
    d250:	df001104 	addi	fp,sp,68
    d254:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d258:	e0bfff17 	ldw	r2,-4(fp)
    d25c:	10000816 	blt	r2,zero,d280 <isatty+0x3c>
    d260:	e13fff17 	ldw	r4,-4(fp)
    d264:	01400304 	movi	r5,12
    d268:	000a7740 	call	a774 <__mulsi3>
    d26c:	1007883a 	mov	r3,r2
    d270:	00800074 	movhi	r2,1
    d274:	1080b504 	addi	r2,r2,724
    d278:	1885883a 	add	r2,r3,r2
    d27c:	00000106 	br	d284 <isatty+0x40>
    d280:	0005883a 	mov	r2,zero
    d284:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
    d288:	e0bfef17 	ldw	r2,-68(fp)
    d28c:	10000e26 	beq	r2,zero,d2c8 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
    d290:	e0bfef17 	ldw	r2,-68(fp)
    d294:	10800017 	ldw	r2,0(r2)
    d298:	10800817 	ldw	r2,32(r2)
    d29c:	1000021e 	bne	r2,zero,d2a8 <isatty+0x64>
    {
      return 1;
    d2a0:	00800044 	movi	r2,1
    d2a4:	00000d06 	br	d2dc <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
    d2a8:	e0bff004 	addi	r2,fp,-64
    d2ac:	e13fff17 	ldw	r4,-4(fp)
    d2b0:	100b883a 	mov	r5,r2
    d2b4:	000d13c0 	call	d13c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
    d2b8:	e0bff117 	ldw	r2,-60(fp)
    d2bc:	10880020 	cmpeqi	r2,r2,8192
    d2c0:	10803fcc 	andi	r2,r2,255
    d2c4:	00000506 	br	d2dc <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
    d2c8:	000d1f40 	call	d1f4 <alt_get_errno>
    d2cc:	1007883a 	mov	r3,r2
    d2d0:	00801444 	movi	r2,81
    d2d4:	18800015 	stw	r2,0(r3)
    return 0;
    d2d8:	0005883a 	mov	r2,zero
  }
}
    d2dc:	e037883a 	mov	sp,fp
    d2e0:	dfc00117 	ldw	ra,4(sp)
    d2e4:	df000017 	ldw	fp,0(sp)
    d2e8:	dec00204 	addi	sp,sp,8
    d2ec:	f800283a 	ret

0000d2f0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
    d2f0:	defffc04 	addi	sp,sp,-16
    d2f4:	df000315 	stw	fp,12(sp)
    d2f8:	df000304 	addi	fp,sp,12
    d2fc:	e13ffd15 	stw	r4,-12(fp)
    d300:	e17ffe15 	stw	r5,-8(fp)
    d304:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
    d308:	e0fffe17 	ldw	r3,-8(fp)
    d30c:	e0bffd17 	ldw	r2,-12(fp)
    d310:	18800c26 	beq	r3,r2,d344 <alt_load_section+0x54>
  {
    while( to != end )
    d314:	00000806 	br	d338 <alt_load_section+0x48>
    {
      *to++ = *from++;
    d318:	e0bffe17 	ldw	r2,-8(fp)
    d31c:	10c00104 	addi	r3,r2,4
    d320:	e0fffe15 	stw	r3,-8(fp)
    d324:	e0fffd17 	ldw	r3,-12(fp)
    d328:	19000104 	addi	r4,r3,4
    d32c:	e13ffd15 	stw	r4,-12(fp)
    d330:	18c00017 	ldw	r3,0(r3)
    d334:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
    d338:	e0fffe17 	ldw	r3,-8(fp)
    d33c:	e0bfff17 	ldw	r2,-4(fp)
    d340:	18bff51e 	bne	r3,r2,d318 <__alt_data_end+0xfffeead0>
    {
      *to++ = *from++;
    }
  }
}
    d344:	e037883a 	mov	sp,fp
    d348:	df000017 	ldw	fp,0(sp)
    d34c:	dec00104 	addi	sp,sp,4
    d350:	f800283a 	ret

0000d354 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
    d354:	defffe04 	addi	sp,sp,-8
    d358:	dfc00115 	stw	ra,4(sp)
    d35c:	df000015 	stw	fp,0(sp)
    d360:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
    d364:	01000074 	movhi	r4,1
    d368:	21053d04 	addi	r4,r4,5364
    d36c:	01400074 	movhi	r5,1
    d370:	297e8204 	addi	r5,r5,-1528
    d374:	01800074 	movhi	r6,1
    d378:	31853d04 	addi	r6,r6,5364
    d37c:	000d2f00 	call	d2f0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
    d380:	01000034 	movhi	r4,0
    d384:	21000804 	addi	r4,r4,32
    d388:	01400034 	movhi	r5,0
    d38c:	29400804 	addi	r5,r5,32
    d390:	01800034 	movhi	r6,0
    d394:	31808b04 	addi	r6,r6,556
    d398:	000d2f00 	call	d2f0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
    d39c:	01000074 	movhi	r4,1
    d3a0:	213dbc04 	addi	r4,r4,-2320
    d3a4:	01400074 	movhi	r5,1
    d3a8:	297dbc04 	addi	r5,r5,-2320
    d3ac:	01800074 	movhi	r6,1
    d3b0:	31be8204 	addi	r6,r6,-1528
    d3b4:	000d2f00 	call	d2f0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
    d3b8:	000e5cc0 	call	e5cc <alt_dcache_flush_all>
  alt_icache_flush_all();
    d3bc:	000e7940 	call	e794 <alt_icache_flush_all>
}
    d3c0:	e037883a 	mov	sp,fp
    d3c4:	dfc00117 	ldw	ra,4(sp)
    d3c8:	df000017 	ldw	fp,0(sp)
    d3cc:	dec00204 	addi	sp,sp,8
    d3d0:	f800283a 	ret

0000d3d4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d3d4:	defffe04 	addi	sp,sp,-8
    d3d8:	dfc00115 	stw	ra,4(sp)
    d3dc:	df000015 	stw	fp,0(sp)
    d3e0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d3e4:	00800074 	movhi	r2,1
    d3e8:	10853804 	addi	r2,r2,5344
    d3ec:	10800017 	ldw	r2,0(r2)
    d3f0:	10000526 	beq	r2,zero,d408 <alt_get_errno+0x34>
    d3f4:	00800074 	movhi	r2,1
    d3f8:	10853804 	addi	r2,r2,5344
    d3fc:	10800017 	ldw	r2,0(r2)
    d400:	103ee83a 	callr	r2
    d404:	00000206 	br	d410 <alt_get_errno+0x3c>
    d408:	00800074 	movhi	r2,1
    d40c:	108bfb04 	addi	r2,r2,12268
}
    d410:	e037883a 	mov	sp,fp
    d414:	dfc00117 	ldw	ra,4(sp)
    d418:	df000017 	ldw	fp,0(sp)
    d41c:	dec00204 	addi	sp,sp,8
    d420:	f800283a 	ret

0000d424 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
    d424:	defff904 	addi	sp,sp,-28
    d428:	dfc00615 	stw	ra,24(sp)
    d42c:	df000515 	stw	fp,20(sp)
    d430:	df000504 	addi	fp,sp,20
    d434:	e13ffd15 	stw	r4,-12(fp)
    d438:	e17ffe15 	stw	r5,-8(fp)
    d43c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
    d440:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d444:	e0bffd17 	ldw	r2,-12(fp)
    d448:	10000816 	blt	r2,zero,d46c <lseek+0x48>
    d44c:	e13ffd17 	ldw	r4,-12(fp)
    d450:	01400304 	movi	r5,12
    d454:	000a7740 	call	a774 <__mulsi3>
    d458:	1007883a 	mov	r3,r2
    d45c:	00800074 	movhi	r2,1
    d460:	1080b504 	addi	r2,r2,724
    d464:	1885883a 	add	r2,r3,r2
    d468:	00000106 	br	d470 <lseek+0x4c>
    d46c:	0005883a 	mov	r2,zero
    d470:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
    d474:	e0bffc17 	ldw	r2,-16(fp)
    d478:	10001026 	beq	r2,zero,d4bc <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
    d47c:	e0bffc17 	ldw	r2,-16(fp)
    d480:	10800017 	ldw	r2,0(r2)
    d484:	10800717 	ldw	r2,28(r2)
    d488:	10000926 	beq	r2,zero,d4b0 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
    d48c:	e0bffc17 	ldw	r2,-16(fp)
    d490:	10800017 	ldw	r2,0(r2)
    d494:	10800717 	ldw	r2,28(r2)
    d498:	e13ffc17 	ldw	r4,-16(fp)
    d49c:	e17ffe17 	ldw	r5,-8(fp)
    d4a0:	e1bfff17 	ldw	r6,-4(fp)
    d4a4:	103ee83a 	callr	r2
    d4a8:	e0bffb15 	stw	r2,-20(fp)
    d4ac:	00000506 	br	d4c4 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
    d4b0:	00bfde84 	movi	r2,-134
    d4b4:	e0bffb15 	stw	r2,-20(fp)
    d4b8:	00000206 	br	d4c4 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
    d4bc:	00bfebc4 	movi	r2,-81
    d4c0:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
    d4c4:	e0bffb17 	ldw	r2,-20(fp)
    d4c8:	1000070e 	bge	r2,zero,d4e8 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
    d4cc:	000d3d40 	call	d3d4 <alt_get_errno>
    d4d0:	1007883a 	mov	r3,r2
    d4d4:	e0bffb17 	ldw	r2,-20(fp)
    d4d8:	0085c83a 	sub	r2,zero,r2
    d4dc:	18800015 	stw	r2,0(r3)
    rc = -1;
    d4e0:	00bfffc4 	movi	r2,-1
    d4e4:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
    d4e8:	e0bffb17 	ldw	r2,-20(fp)
}
    d4ec:	e037883a 	mov	sp,fp
    d4f0:	dfc00117 	ldw	ra,4(sp)
    d4f4:	df000017 	ldw	fp,0(sp)
    d4f8:	dec00204 	addi	sp,sp,8
    d4fc:	f800283a 	ret

0000d500 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
    d500:	defffd04 	addi	sp,sp,-12
    d504:	dfc00215 	stw	ra,8(sp)
    d508:	df000115 	stw	fp,4(sp)
    d50c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
    d510:	0009883a 	mov	r4,zero
    d514:	000d9c40 	call	d9c4 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
    d518:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
    d51c:	000d9f80 	call	d9f8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
    d520:	01000074 	movhi	r4,1
    d524:	213e7804 	addi	r4,r4,-1568
    d528:	01400074 	movhi	r5,1
    d52c:	297e7804 	addi	r5,r5,-1568
    d530:	01800074 	movhi	r6,1
    d534:	31be7804 	addi	r6,r6,-1568
    d538:	000eb600 	call	eb60 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
    d53c:	000e6dc0 	call	e6dc <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
    d540:	01000074 	movhi	r4,1
    d544:	2139ce04 	addi	r4,r4,-6344
    d548:	000f34c0 	call	f34c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
    d54c:	d126d217 	ldw	r4,-25784(gp)
    d550:	d0e6d317 	ldw	r3,-25780(gp)
    d554:	d0a6d417 	ldw	r2,-25776(gp)
    d558:	180b883a 	mov	r5,r3
    d55c:	100d883a 	mov	r6,r2
    d560:	00006280 	call	628 <main>
    d564:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
    d568:	01000044 	movi	r4,1
    d56c:	000cfe80 	call	cfe8 <close>
  exit (result);
    d570:	e13fff17 	ldw	r4,-4(fp)
    d574:	000f3600 	call	f360 <exit>

0000d578 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
    d578:	defffe04 	addi	sp,sp,-8
    d57c:	df000115 	stw	fp,4(sp)
    d580:	df000104 	addi	fp,sp,4
    d584:	e13fff15 	stw	r4,-4(fp)
}
    d588:	e037883a 	mov	sp,fp
    d58c:	df000017 	ldw	fp,0(sp)
    d590:	dec00104 	addi	sp,sp,4
    d594:	f800283a 	ret

0000d598 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
    d598:	defffe04 	addi	sp,sp,-8
    d59c:	df000115 	stw	fp,4(sp)
    d5a0:	df000104 	addi	fp,sp,4
    d5a4:	e13fff15 	stw	r4,-4(fp)
}
    d5a8:	e037883a 	mov	sp,fp
    d5ac:	df000017 	ldw	fp,0(sp)
    d5b0:	dec00104 	addi	sp,sp,4
    d5b4:	f800283a 	ret

0000d5b8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d5b8:	defffe04 	addi	sp,sp,-8
    d5bc:	dfc00115 	stw	ra,4(sp)
    d5c0:	df000015 	stw	fp,0(sp)
    d5c4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d5c8:	00800074 	movhi	r2,1
    d5cc:	10853804 	addi	r2,r2,5344
    d5d0:	10800017 	ldw	r2,0(r2)
    d5d4:	10000526 	beq	r2,zero,d5ec <alt_get_errno+0x34>
    d5d8:	00800074 	movhi	r2,1
    d5dc:	10853804 	addi	r2,r2,5344
    d5e0:	10800017 	ldw	r2,0(r2)
    d5e4:	103ee83a 	callr	r2
    d5e8:	00000206 	br	d5f4 <alt_get_errno+0x3c>
    d5ec:	00800074 	movhi	r2,1
    d5f0:	108bfb04 	addi	r2,r2,12268
}
    d5f4:	e037883a 	mov	sp,fp
    d5f8:	dfc00117 	ldw	ra,4(sp)
    d5fc:	df000017 	ldw	fp,0(sp)
    d600:	dec00204 	addi	sp,sp,8
    d604:	f800283a 	ret

0000d608 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
    d608:	defff904 	addi	sp,sp,-28
    d60c:	dfc00615 	stw	ra,24(sp)
    d610:	df000515 	stw	fp,20(sp)
    d614:	df000504 	addi	fp,sp,20
    d618:	e13ffd15 	stw	r4,-12(fp)
    d61c:	e17ffe15 	stw	r5,-8(fp)
    d620:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d624:	e0bffd17 	ldw	r2,-12(fp)
    d628:	10000816 	blt	r2,zero,d64c <read+0x44>
    d62c:	e13ffd17 	ldw	r4,-12(fp)
    d630:	01400304 	movi	r5,12
    d634:	000a7740 	call	a774 <__mulsi3>
    d638:	1007883a 	mov	r3,r2
    d63c:	00800074 	movhi	r2,1
    d640:	1080b504 	addi	r2,r2,724
    d644:	1885883a 	add	r2,r3,r2
    d648:	00000106 	br	d650 <read+0x48>
    d64c:	0005883a 	mov	r2,zero
    d650:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    d654:	e0bffb17 	ldw	r2,-20(fp)
    d658:	10002226 	beq	r2,zero,d6e4 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d65c:	e0bffb17 	ldw	r2,-20(fp)
    d660:	10800217 	ldw	r2,8(r2)
    d664:	108000cc 	andi	r2,r2,3
    d668:	10800060 	cmpeqi	r2,r2,1
    d66c:	1000181e 	bne	r2,zero,d6d0 <read+0xc8>
        (fd->dev->read))
    d670:	e0bffb17 	ldw	r2,-20(fp)
    d674:	10800017 	ldw	r2,0(r2)
    d678:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
    d67c:	10001426 	beq	r2,zero,d6d0 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
    d680:	e0bffb17 	ldw	r2,-20(fp)
    d684:	10800017 	ldw	r2,0(r2)
    d688:	10800517 	ldw	r2,20(r2)
    d68c:	e0ffff17 	ldw	r3,-4(fp)
    d690:	e13ffb17 	ldw	r4,-20(fp)
    d694:	e17ffe17 	ldw	r5,-8(fp)
    d698:	180d883a 	mov	r6,r3
    d69c:	103ee83a 	callr	r2
    d6a0:	e0bffc15 	stw	r2,-16(fp)
    d6a4:	e0bffc17 	ldw	r2,-16(fp)
    d6a8:	1000070e 	bge	r2,zero,d6c8 <read+0xc0>
        {
          ALT_ERRNO = -rval;
    d6ac:	000d5b80 	call	d5b8 <alt_get_errno>
    d6b0:	1007883a 	mov	r3,r2
    d6b4:	e0bffc17 	ldw	r2,-16(fp)
    d6b8:	0085c83a 	sub	r2,zero,r2
    d6bc:	18800015 	stw	r2,0(r3)
          return -1;
    d6c0:	00bfffc4 	movi	r2,-1
    d6c4:	00000c06 	br	d6f8 <read+0xf0>
        }
        return rval;
    d6c8:	e0bffc17 	ldw	r2,-16(fp)
    d6cc:	00000a06 	br	d6f8 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
    d6d0:	000d5b80 	call	d5b8 <alt_get_errno>
    d6d4:	1007883a 	mov	r3,r2
    d6d8:	00800344 	movi	r2,13
    d6dc:	18800015 	stw	r2,0(r3)
    d6e0:	00000406 	br	d6f4 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
    d6e4:	000d5b80 	call	d5b8 <alt_get_errno>
    d6e8:	1007883a 	mov	r3,r2
    d6ec:	00801444 	movi	r2,81
    d6f0:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d6f4:	00bfffc4 	movi	r2,-1
}
    d6f8:	e037883a 	mov	sp,fp
    d6fc:	dfc00117 	ldw	ra,4(sp)
    d700:	df000017 	ldw	fp,0(sp)
    d704:	dec00204 	addi	sp,sp,8
    d708:	f800283a 	ret

0000d70c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
    d70c:	defffc04 	addi	sp,sp,-16
    d710:	dfc00315 	stw	ra,12(sp)
    d714:	df000215 	stw	fp,8(sp)
    d718:	dc000115 	stw	r16,4(sp)
    d71c:	df000204 	addi	fp,sp,8
    d720:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
    d724:	e0bffe17 	ldw	r2,-8(fp)
    d728:	108000d0 	cmplti	r2,r2,3
    d72c:	1000111e 	bne	r2,zero,d774 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
    d730:	04000074 	movhi	r16,1
    d734:	8400b504 	addi	r16,r16,724
    d738:	e0bffe17 	ldw	r2,-8(fp)
    d73c:	1009883a 	mov	r4,r2
    d740:	01400304 	movi	r5,12
    d744:	000a7740 	call	a774 <__mulsi3>
    d748:	8085883a 	add	r2,r16,r2
    d74c:	10800204 	addi	r2,r2,8
    d750:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
    d754:	04000074 	movhi	r16,1
    d758:	8400b504 	addi	r16,r16,724
    d75c:	e0bffe17 	ldw	r2,-8(fp)
    d760:	1009883a 	mov	r4,r2
    d764:	01400304 	movi	r5,12
    d768:	000a7740 	call	a774 <__mulsi3>
    d76c:	8085883a 	add	r2,r16,r2
    d770:	10000015 	stw	zero,0(r2)
  }
}
    d774:	e6ffff04 	addi	sp,fp,-4
    d778:	dfc00217 	ldw	ra,8(sp)
    d77c:	df000117 	ldw	fp,4(sp)
    d780:	dc000017 	ldw	r16,0(sp)
    d784:	dec00304 	addi	sp,sp,12
    d788:	f800283a 	ret

0000d78c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
    d78c:	defff904 	addi	sp,sp,-28
    d790:	df000615 	stw	fp,24(sp)
    d794:	df000604 	addi	fp,sp,24
    d798:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    d79c:	0005303a 	rdctl	r2,status
    d7a0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    d7a4:	e0fffc17 	ldw	r3,-16(fp)
    d7a8:	00bfff84 	movi	r2,-2
    d7ac:	1884703a 	and	r2,r3,r2
    d7b0:	1001703a 	wrctl	status,r2
  
  return context;
    d7b4:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
    d7b8:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
    d7bc:	d0a00c17 	ldw	r2,-32720(gp)
    d7c0:	10c000c4 	addi	r3,r2,3
    d7c4:	00bfff04 	movi	r2,-4
    d7c8:	1884703a 	and	r2,r3,r2
    d7cc:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
    d7d0:	d0e00c17 	ldw	r3,-32720(gp)
    d7d4:	e0bfff17 	ldw	r2,-4(fp)
    d7d8:	1887883a 	add	r3,r3,r2
    d7dc:	008000b4 	movhi	r2,2
    d7e0:	10ba1204 	addi	r2,r2,-6072
    d7e4:	10c0062e 	bgeu	r2,r3,d800 <sbrk+0x74>
    d7e8:	e0bffa17 	ldw	r2,-24(fp)
    d7ec:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    d7f0:	e0bffd17 	ldw	r2,-12(fp)
    d7f4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
    d7f8:	00bfffc4 	movi	r2,-1
    d7fc:	00000b06 	br	d82c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
    d800:	d0a00c17 	ldw	r2,-32720(gp)
    d804:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
    d808:	d0e00c17 	ldw	r3,-32720(gp)
    d80c:	e0bfff17 	ldw	r2,-4(fp)
    d810:	1885883a 	add	r2,r3,r2
    d814:	d0a00c15 	stw	r2,-32720(gp)
    d818:	e0bffa17 	ldw	r2,-24(fp)
    d81c:	e0bffe15 	stw	r2,-8(fp)
    d820:	e0bffe17 	ldw	r2,-8(fp)
    d824:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
    d828:	e0bffb17 	ldw	r2,-20(fp)
} 
    d82c:	e037883a 	mov	sp,fp
    d830:	df000017 	ldw	fp,0(sp)
    d834:	dec00104 	addi	sp,sp,4
    d838:	f800283a 	ret

0000d83c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    d83c:	defffe04 	addi	sp,sp,-8
    d840:	dfc00115 	stw	ra,4(sp)
    d844:	df000015 	stw	fp,0(sp)
    d848:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    d84c:	00800074 	movhi	r2,1
    d850:	10853804 	addi	r2,r2,5344
    d854:	10800017 	ldw	r2,0(r2)
    d858:	10000526 	beq	r2,zero,d870 <alt_get_errno+0x34>
    d85c:	00800074 	movhi	r2,1
    d860:	10853804 	addi	r2,r2,5344
    d864:	10800017 	ldw	r2,0(r2)
    d868:	103ee83a 	callr	r2
    d86c:	00000206 	br	d878 <alt_get_errno+0x3c>
    d870:	00800074 	movhi	r2,1
    d874:	108bfb04 	addi	r2,r2,12268
}
    d878:	e037883a 	mov	sp,fp
    d87c:	dfc00117 	ldw	ra,4(sp)
    d880:	df000017 	ldw	fp,0(sp)
    d884:	dec00204 	addi	sp,sp,8
    d888:	f800283a 	ret

0000d88c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
    d88c:	defff904 	addi	sp,sp,-28
    d890:	dfc00615 	stw	ra,24(sp)
    d894:	df000515 	stw	fp,20(sp)
    d898:	df000504 	addi	fp,sp,20
    d89c:	e13ffd15 	stw	r4,-12(fp)
    d8a0:	e17ffe15 	stw	r5,-8(fp)
    d8a4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
    d8a8:	e0bffd17 	ldw	r2,-12(fp)
    d8ac:	10000816 	blt	r2,zero,d8d0 <write+0x44>
    d8b0:	e13ffd17 	ldw	r4,-12(fp)
    d8b4:	01400304 	movi	r5,12
    d8b8:	000a7740 	call	a774 <__mulsi3>
    d8bc:	1007883a 	mov	r3,r2
    d8c0:	00800074 	movhi	r2,1
    d8c4:	1080b504 	addi	r2,r2,724
    d8c8:	1885883a 	add	r2,r3,r2
    d8cc:	00000106 	br	d8d4 <write+0x48>
    d8d0:	0005883a 	mov	r2,zero
    d8d4:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
    d8d8:	e0bffb17 	ldw	r2,-20(fp)
    d8dc:	10002126 	beq	r2,zero,d964 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
    d8e0:	e0bffb17 	ldw	r2,-20(fp)
    d8e4:	10800217 	ldw	r2,8(r2)
    d8e8:	108000cc 	andi	r2,r2,3
    d8ec:	10001826 	beq	r2,zero,d950 <write+0xc4>
    d8f0:	e0bffb17 	ldw	r2,-20(fp)
    d8f4:	10800017 	ldw	r2,0(r2)
    d8f8:	10800617 	ldw	r2,24(r2)
    d8fc:	10001426 	beq	r2,zero,d950 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
    d900:	e0bffb17 	ldw	r2,-20(fp)
    d904:	10800017 	ldw	r2,0(r2)
    d908:	10800617 	ldw	r2,24(r2)
    d90c:	e0ffff17 	ldw	r3,-4(fp)
    d910:	e13ffb17 	ldw	r4,-20(fp)
    d914:	e17ffe17 	ldw	r5,-8(fp)
    d918:	180d883a 	mov	r6,r3
    d91c:	103ee83a 	callr	r2
    d920:	e0bffc15 	stw	r2,-16(fp)
    d924:	e0bffc17 	ldw	r2,-16(fp)
    d928:	1000070e 	bge	r2,zero,d948 <write+0xbc>
      {
        ALT_ERRNO = -rval;
    d92c:	000d83c0 	call	d83c <alt_get_errno>
    d930:	1007883a 	mov	r3,r2
    d934:	e0bffc17 	ldw	r2,-16(fp)
    d938:	0085c83a 	sub	r2,zero,r2
    d93c:	18800015 	stw	r2,0(r3)
        return -1;
    d940:	00bfffc4 	movi	r2,-1
    d944:	00000c06 	br	d978 <write+0xec>
      }
      return rval;
    d948:	e0bffc17 	ldw	r2,-16(fp)
    d94c:	00000a06 	br	d978 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
    d950:	000d83c0 	call	d83c <alt_get_errno>
    d954:	1007883a 	mov	r3,r2
    d958:	00800344 	movi	r2,13
    d95c:	18800015 	stw	r2,0(r3)
    d960:	00000406 	br	d974 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
    d964:	000d83c0 	call	d83c <alt_get_errno>
    d968:	1007883a 	mov	r3,r2
    d96c:	00801444 	movi	r2,81
    d970:	18800015 	stw	r2,0(r3)
  }
  return -1;
    d974:	00bfffc4 	movi	r2,-1
}
    d978:	e037883a 	mov	sp,fp
    d97c:	dfc00117 	ldw	ra,4(sp)
    d980:	df000017 	ldw	fp,0(sp)
    d984:	dec00204 	addi	sp,sp,8
    d988:	f800283a 	ret

0000d98c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
    d98c:	defffd04 	addi	sp,sp,-12
    d990:	dfc00215 	stw	ra,8(sp)
    d994:	df000115 	stw	fp,4(sp)
    d998:	df000104 	addi	fp,sp,4
    d99c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
    d9a0:	e13fff17 	ldw	r4,-4(fp)
    d9a4:	01400074 	movhi	r5,1
    d9a8:	29453504 	addi	r5,r5,5332
    d9ac:	000e6380 	call	e638 <alt_dev_llist_insert>
}
    d9b0:	e037883a 	mov	sp,fp
    d9b4:	dfc00117 	ldw	ra,4(sp)
    d9b8:	df000017 	ldw	fp,0(sp)
    d9bc:	dec00204 	addi	sp,sp,8
    d9c0:	f800283a 	ret

0000d9c4 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
    d9c4:	defffd04 	addi	sp,sp,-12
    d9c8:	dfc00215 	stw	ra,8(sp)
    d9cc:	df000115 	stw	fp,4(sp)
    d9d0:	df000104 	addi	fp,sp,4
    d9d4:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
    d9d8:	000f0180 	call	f018 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
    d9dc:	00800044 	movi	r2,1
    d9e0:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
    d9e4:	e037883a 	mov	sp,fp
    d9e8:	dfc00117 	ldw	ra,4(sp)
    d9ec:	df000017 	ldw	fp,0(sp)
    d9f0:	dec00204 	addi	sp,sp,8
    d9f4:	f800283a 	ret

0000d9f8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    d9f8:	defffe04 	addi	sp,sp,-8
    d9fc:	dfc00115 	stw	ra,4(sp)
    da00:	df000015 	stw	fp,0(sp)
    da04:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
    da08:	01000074 	movhi	r4,1
    da0c:	21011f04 	addi	r4,r4,1148
    da10:	000b883a 	mov	r5,zero
    da14:	01800144 	movi	r6,5
    da18:	000dba40 	call	dba4 <altera_avalon_jtag_uart_init>
    da1c:	01000074 	movhi	r4,1
    da20:	21011504 	addi	r4,r4,1108
    da24:	000d98c0 	call	d98c <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
    da28:	0001883a 	nop
}
    da2c:	e037883a 	mov	sp,fp
    da30:	dfc00117 	ldw	ra,4(sp)
    da34:	df000017 	ldw	fp,0(sp)
    da38:	dec00204 	addi	sp,sp,8
    da3c:	f800283a 	ret

0000da40 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    da40:	defffa04 	addi	sp,sp,-24
    da44:	dfc00515 	stw	ra,20(sp)
    da48:	df000415 	stw	fp,16(sp)
    da4c:	df000404 	addi	fp,sp,16
    da50:	e13ffd15 	stw	r4,-12(fp)
    da54:	e17ffe15 	stw	r5,-8(fp)
    da58:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    da5c:	e0bffd17 	ldw	r2,-12(fp)
    da60:	10800017 	ldw	r2,0(r2)
    da64:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
    da68:	e0bffc17 	ldw	r2,-16(fp)
    da6c:	10c00a04 	addi	r3,r2,40
    da70:	e0bffd17 	ldw	r2,-12(fp)
    da74:	10800217 	ldw	r2,8(r2)
    da78:	1809883a 	mov	r4,r3
    da7c:	e17ffe17 	ldw	r5,-8(fp)
    da80:	e1bfff17 	ldw	r6,-4(fp)
    da84:	100f883a 	mov	r7,r2
    da88:	000e0680 	call	e068 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
    da8c:	e037883a 	mov	sp,fp
    da90:	dfc00117 	ldw	ra,4(sp)
    da94:	df000017 	ldw	fp,0(sp)
    da98:	dec00204 	addi	sp,sp,8
    da9c:	f800283a 	ret

0000daa0 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    daa0:	defffa04 	addi	sp,sp,-24
    daa4:	dfc00515 	stw	ra,20(sp)
    daa8:	df000415 	stw	fp,16(sp)
    daac:	df000404 	addi	fp,sp,16
    dab0:	e13ffd15 	stw	r4,-12(fp)
    dab4:	e17ffe15 	stw	r5,-8(fp)
    dab8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    dabc:	e0bffd17 	ldw	r2,-12(fp)
    dac0:	10800017 	ldw	r2,0(r2)
    dac4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
    dac8:	e0bffc17 	ldw	r2,-16(fp)
    dacc:	10c00a04 	addi	r3,r2,40
    dad0:	e0bffd17 	ldw	r2,-12(fp)
    dad4:	10800217 	ldw	r2,8(r2)
    dad8:	1809883a 	mov	r4,r3
    dadc:	e17ffe17 	ldw	r5,-8(fp)
    dae0:	e1bfff17 	ldw	r6,-4(fp)
    dae4:	100f883a 	mov	r7,r2
    dae8:	000e2740 	call	e274 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
    daec:	e037883a 	mov	sp,fp
    daf0:	dfc00117 	ldw	ra,4(sp)
    daf4:	df000017 	ldw	fp,0(sp)
    daf8:	dec00204 	addi	sp,sp,8
    dafc:	f800283a 	ret

0000db00 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
    db00:	defffc04 	addi	sp,sp,-16
    db04:	dfc00315 	stw	ra,12(sp)
    db08:	df000215 	stw	fp,8(sp)
    db0c:	df000204 	addi	fp,sp,8
    db10:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
    db14:	e0bfff17 	ldw	r2,-4(fp)
    db18:	10800017 	ldw	r2,0(r2)
    db1c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
    db20:	e0bffe17 	ldw	r2,-8(fp)
    db24:	10c00a04 	addi	r3,r2,40
    db28:	e0bfff17 	ldw	r2,-4(fp)
    db2c:	10800217 	ldw	r2,8(r2)
    db30:	1809883a 	mov	r4,r3
    db34:	100b883a 	mov	r5,r2
    db38:	000df140 	call	df14 <altera_avalon_jtag_uart_close>
}
    db3c:	e037883a 	mov	sp,fp
    db40:	dfc00117 	ldw	ra,4(sp)
    db44:	df000017 	ldw	fp,0(sp)
    db48:	dec00204 	addi	sp,sp,8
    db4c:	f800283a 	ret

0000db50 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
    db50:	defffa04 	addi	sp,sp,-24
    db54:	dfc00515 	stw	ra,20(sp)
    db58:	df000415 	stw	fp,16(sp)
    db5c:	df000404 	addi	fp,sp,16
    db60:	e13ffd15 	stw	r4,-12(fp)
    db64:	e17ffe15 	stw	r5,-8(fp)
    db68:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
    db6c:	e0bffd17 	ldw	r2,-12(fp)
    db70:	10800017 	ldw	r2,0(r2)
    db74:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
    db78:	e0bffc17 	ldw	r2,-16(fp)
    db7c:	10800a04 	addi	r2,r2,40
    db80:	1009883a 	mov	r4,r2
    db84:	e17ffe17 	ldw	r5,-8(fp)
    db88:	e1bfff17 	ldw	r6,-4(fp)
    db8c:	000df7c0 	call	df7c <altera_avalon_jtag_uart_ioctl>
}
    db90:	e037883a 	mov	sp,fp
    db94:	dfc00117 	ldw	ra,4(sp)
    db98:	df000017 	ldw	fp,0(sp)
    db9c:	dec00204 	addi	sp,sp,8
    dba0:	f800283a 	ret

0000dba4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
    dba4:	defffa04 	addi	sp,sp,-24
    dba8:	dfc00515 	stw	ra,20(sp)
    dbac:	df000415 	stw	fp,16(sp)
    dbb0:	df000404 	addi	fp,sp,16
    dbb4:	e13ffd15 	stw	r4,-12(fp)
    dbb8:	e17ffe15 	stw	r5,-8(fp)
    dbbc:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    dbc0:	e0bffd17 	ldw	r2,-12(fp)
    dbc4:	00c00044 	movi	r3,1
    dbc8:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
    dbcc:	e0bffd17 	ldw	r2,-12(fp)
    dbd0:	10800017 	ldw	r2,0(r2)
    dbd4:	10800104 	addi	r2,r2,4
    dbd8:	1007883a 	mov	r3,r2
    dbdc:	e0bffd17 	ldw	r2,-12(fp)
    dbe0:	10800817 	ldw	r2,32(r2)
    dbe4:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
    dbe8:	e0fffe17 	ldw	r3,-8(fp)
    dbec:	e0bfff17 	ldw	r2,-4(fp)
    dbf0:	d8000015 	stw	zero,0(sp)
    dbf4:	1809883a 	mov	r4,r3
    dbf8:	100b883a 	mov	r5,r2
    dbfc:	01800074 	movhi	r6,1
    dc00:	31b71a04 	addi	r6,r6,-9112
    dc04:	e1fffd17 	ldw	r7,-12(fp)
    dc08:	000e7b00 	call	e7b0 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
    dc0c:	e0bffd17 	ldw	r2,-12(fp)
    dc10:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
    dc14:	e0bffd17 	ldw	r2,-12(fp)
    dc18:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
    dc1c:	00800074 	movhi	r2,1
    dc20:	108c0304 	addi	r2,r2,12300
    dc24:	10800017 	ldw	r2,0(r2)
    dc28:	1809883a 	mov	r4,r3
    dc2c:	100b883a 	mov	r5,r2
    dc30:	01800074 	movhi	r6,1
    dc34:	31b79b04 	addi	r6,r6,-8596
    dc38:	e1fffd17 	ldw	r7,-12(fp)
    dc3c:	000e48c0 	call	e48c <alt_alarm_start>
    dc40:	1000040e 	bge	r2,zero,dc54 <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
    dc44:	e0fffd17 	ldw	r3,-12(fp)
    dc48:	00a00034 	movhi	r2,32768
    dc4c:	10bfffc4 	addi	r2,r2,-1
    dc50:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
    dc54:	e037883a 	mov	sp,fp
    dc58:	dfc00117 	ldw	ra,4(sp)
    dc5c:	df000017 	ldw	fp,0(sp)
    dc60:	dec00204 	addi	sp,sp,8
    dc64:	f800283a 	ret

0000dc68 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
    dc68:	defff804 	addi	sp,sp,-32
    dc6c:	df000715 	stw	fp,28(sp)
    dc70:	df000704 	addi	fp,sp,28
    dc74:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
    dc78:	e0bfff17 	ldw	r2,-4(fp)
    dc7c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
    dc80:	e0bffb17 	ldw	r2,-20(fp)
    dc84:	10800017 	ldw	r2,0(r2)
    dc88:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    dc8c:	e0bffc17 	ldw	r2,-16(fp)
    dc90:	10800104 	addi	r2,r2,4
    dc94:	10800037 	ldwio	r2,0(r2)
    dc98:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
    dc9c:	e0bffd17 	ldw	r2,-12(fp)
    dca0:	1080c00c 	andi	r2,r2,768
    dca4:	1000011e 	bne	r2,zero,dcac <altera_avalon_jtag_uart_irq+0x44>
      break;
    dca8:	00006c06 	br	de5c <altera_avalon_jtag_uart_irq+0x1f4>

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
    dcac:	e0bffd17 	ldw	r2,-12(fp)
    dcb0:	1080400c 	andi	r2,r2,256
    dcb4:	10003426 	beq	r2,zero,dd88 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
    dcb8:	00800074 	movhi	r2,1
    dcbc:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    dcc0:	e0bffb17 	ldw	r2,-20(fp)
    dcc4:	10800a17 	ldw	r2,40(r2)
    dcc8:	10800044 	addi	r2,r2,1
    dccc:	1081ffcc 	andi	r2,r2,2047
    dcd0:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
    dcd4:	e0bffb17 	ldw	r2,-20(fp)
    dcd8:	10c00b17 	ldw	r3,44(r2)
    dcdc:	e0bffe17 	ldw	r2,-8(fp)
    dce0:	1880011e 	bne	r3,r2,dce8 <altera_avalon_jtag_uart_irq+0x80>
          break;
    dce4:	00001606 	br	dd40 <altera_avalon_jtag_uart_irq+0xd8>

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
    dce8:	e0bffc17 	ldw	r2,-16(fp)
    dcec:	10800037 	ldwio	r2,0(r2)
    dcf0:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
    dcf4:	e0bff917 	ldw	r2,-28(fp)
    dcf8:	10a0000c 	andi	r2,r2,32768
    dcfc:	1000011e 	bne	r2,zero,dd04 <altera_avalon_jtag_uart_irq+0x9c>
          break;
    dd00:	00000f06 	br	dd40 <altera_avalon_jtag_uart_irq+0xd8>

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    dd04:	e0bffb17 	ldw	r2,-20(fp)
    dd08:	10800a17 	ldw	r2,40(r2)
    dd0c:	e0fff917 	ldw	r3,-28(fp)
    dd10:	1809883a 	mov	r4,r3
    dd14:	e0fffb17 	ldw	r3,-20(fp)
    dd18:	1885883a 	add	r2,r3,r2
    dd1c:	10800e04 	addi	r2,r2,56
    dd20:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    dd24:	e0bffb17 	ldw	r2,-20(fp)
    dd28:	10800a17 	ldw	r2,40(r2)
    dd2c:	10800044 	addi	r2,r2,1
    dd30:	10c1ffcc 	andi	r3,r2,2047
    dd34:	e0bffb17 	ldw	r2,-20(fp)
    dd38:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
    dd3c:	003fe006 	br	dcc0 <__alt_data_end+0xfffef478>

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
    dd40:	e0bff917 	ldw	r2,-28(fp)
    dd44:	10bfffec 	andhi	r2,r2,65535
    dd48:	10000f26 	beq	r2,zero,dd88 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    dd4c:	e0bffb17 	ldw	r2,-20(fp)
    dd50:	10c00817 	ldw	r3,32(r2)
    dd54:	00bfff84 	movi	r2,-2
    dd58:	1886703a 	and	r3,r3,r2
    dd5c:	e0bffb17 	ldw	r2,-20(fp)
    dd60:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
    dd64:	e0bffc17 	ldw	r2,-16(fp)
    dd68:	10800104 	addi	r2,r2,4
    dd6c:	1007883a 	mov	r3,r2
    dd70:	e0bffb17 	ldw	r2,-20(fp)
    dd74:	10800817 	ldw	r2,32(r2)
    dd78:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    dd7c:	e0bffc17 	ldw	r2,-16(fp)
    dd80:	10800104 	addi	r2,r2,4
    dd84:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    dd88:	e0bffd17 	ldw	r2,-12(fp)
    dd8c:	1080800c 	andi	r2,r2,512
    dd90:	10003126 	beq	r2,zero,de58 <altera_avalon_jtag_uart_irq+0x1f0>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
    dd94:	e0bffd17 	ldw	r2,-12(fp)
    dd98:	1004d43a 	srli	r2,r2,16
    dd9c:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
    dda0:	00001406 	br	ddf4 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
    dda4:	e0bffc17 	ldw	r2,-16(fp)
    dda8:	e0fffb17 	ldw	r3,-20(fp)
    ddac:	18c00d17 	ldw	r3,52(r3)
    ddb0:	e13ffb17 	ldw	r4,-20(fp)
    ddb4:	20c7883a 	add	r3,r4,r3
    ddb8:	18c20e04 	addi	r3,r3,2104
    ddbc:	18c00003 	ldbu	r3,0(r3)
    ddc0:	18c03fcc 	andi	r3,r3,255
    ddc4:	18c0201c 	xori	r3,r3,128
    ddc8:	18ffe004 	addi	r3,r3,-128
    ddcc:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    ddd0:	e0bffb17 	ldw	r2,-20(fp)
    ddd4:	10800d17 	ldw	r2,52(r2)
    ddd8:	10800044 	addi	r2,r2,1
    dddc:	10c1ffcc 	andi	r3,r2,2047
    dde0:	e0bffb17 	ldw	r2,-20(fp)
    dde4:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
    dde8:	e0bffa17 	ldw	r2,-24(fp)
    ddec:	10bfffc4 	addi	r2,r2,-1
    ddf0:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
    ddf4:	e0bffa17 	ldw	r2,-24(fp)
    ddf8:	10000526 	beq	r2,zero,de10 <altera_avalon_jtag_uart_irq+0x1a8>
    ddfc:	e0bffb17 	ldw	r2,-20(fp)
    de00:	10c00d17 	ldw	r3,52(r2)
    de04:	e0bffb17 	ldw	r2,-20(fp)
    de08:	10800c17 	ldw	r2,48(r2)
    de0c:	18bfe51e 	bne	r3,r2,dda4 <__alt_data_end+0xfffef55c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
    de10:	e0bffa17 	ldw	r2,-24(fp)
    de14:	10001026 	beq	r2,zero,de58 <altera_avalon_jtag_uart_irq+0x1f0>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    de18:	e0bffb17 	ldw	r2,-20(fp)
    de1c:	10c00817 	ldw	r3,32(r2)
    de20:	00bfff44 	movi	r2,-3
    de24:	1886703a 	and	r3,r3,r2
    de28:	e0bffb17 	ldw	r2,-20(fp)
    de2c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    de30:	e0bffb17 	ldw	r2,-20(fp)
    de34:	10800017 	ldw	r2,0(r2)
    de38:	10800104 	addi	r2,r2,4
    de3c:	1007883a 	mov	r3,r2
    de40:	e0bffb17 	ldw	r2,-20(fp)
    de44:	10800817 	ldw	r2,32(r2)
    de48:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
    de4c:	e0bffc17 	ldw	r2,-16(fp)
    de50:	10800104 	addi	r2,r2,4
    de54:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
    de58:	003f8c06 	br	dc8c <__alt_data_end+0xfffef444>
}
    de5c:	e037883a 	mov	sp,fp
    de60:	df000017 	ldw	fp,0(sp)
    de64:	dec00104 	addi	sp,sp,4
    de68:	f800283a 	ret

0000de6c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
    de6c:	defff804 	addi	sp,sp,-32
    de70:	df000715 	stw	fp,28(sp)
    de74:	df000704 	addi	fp,sp,28
    de78:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
    de7c:	e0bffb17 	ldw	r2,-20(fp)
    de80:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
    de84:	e0bff917 	ldw	r2,-28(fp)
    de88:	10800017 	ldw	r2,0(r2)
    de8c:	10800104 	addi	r2,r2,4
    de90:	10800037 	ldwio	r2,0(r2)
    de94:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
    de98:	e0bffa17 	ldw	r2,-24(fp)
    de9c:	1081000c 	andi	r2,r2,1024
    dea0:	10000b26 	beq	r2,zero,ded0 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
    dea4:	e0bff917 	ldw	r2,-28(fp)
    dea8:	10800017 	ldw	r2,0(r2)
    deac:	10800104 	addi	r2,r2,4
    deb0:	1007883a 	mov	r3,r2
    deb4:	e0bff917 	ldw	r2,-28(fp)
    deb8:	10800817 	ldw	r2,32(r2)
    debc:	10810014 	ori	r2,r2,1024
    dec0:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
    dec4:	e0bff917 	ldw	r2,-28(fp)
    dec8:	10000915 	stw	zero,36(r2)
    decc:	00000a06 	br	def8 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
    ded0:	e0bff917 	ldw	r2,-28(fp)
    ded4:	10c00917 	ldw	r3,36(r2)
    ded8:	00a00034 	movhi	r2,32768
    dedc:	10bfff04 	addi	r2,r2,-4
    dee0:	10c00536 	bltu	r2,r3,def8 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
    dee4:	e0bff917 	ldw	r2,-28(fp)
    dee8:	10800917 	ldw	r2,36(r2)
    deec:	10c00044 	addi	r3,r2,1
    def0:	e0bff917 	ldw	r2,-28(fp)
    def4:	10c00915 	stw	r3,36(r2)
    def8:	00800074 	movhi	r2,1
    defc:	108c0304 	addi	r2,r2,12300
    df00:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
    df04:	e037883a 	mov	sp,fp
    df08:	df000017 	ldw	fp,0(sp)
    df0c:	dec00104 	addi	sp,sp,4
    df10:	f800283a 	ret

0000df14 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
    df14:	defffd04 	addi	sp,sp,-12
    df18:	df000215 	stw	fp,8(sp)
    df1c:	df000204 	addi	fp,sp,8
    df20:	e13ffe15 	stw	r4,-8(fp)
    df24:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    df28:	00000506 	br	df40 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
    df2c:	e0bfff17 	ldw	r2,-4(fp)
    df30:	1090000c 	andi	r2,r2,16384
    df34:	10000226 	beq	r2,zero,df40 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
    df38:	00bffd44 	movi	r2,-11
    df3c:	00000b06 	br	df6c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
    df40:	e0bffe17 	ldw	r2,-8(fp)
    df44:	10c00d17 	ldw	r3,52(r2)
    df48:	e0bffe17 	ldw	r2,-8(fp)
    df4c:	10800c17 	ldw	r2,48(r2)
    df50:	18800526 	beq	r3,r2,df68 <altera_avalon_jtag_uart_close+0x54>
    df54:	e0bffe17 	ldw	r2,-8(fp)
    df58:	10c00917 	ldw	r3,36(r2)
    df5c:	e0bffe17 	ldw	r2,-8(fp)
    df60:	10800117 	ldw	r2,4(r2)
    df64:	18bff136 	bltu	r3,r2,df2c <__alt_data_end+0xfffef6e4>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
    df68:	0005883a 	mov	r2,zero
}
    df6c:	e037883a 	mov	sp,fp
    df70:	df000017 	ldw	fp,0(sp)
    df74:	dec00104 	addi	sp,sp,4
    df78:	f800283a 	ret

0000df7c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
    df7c:	defffa04 	addi	sp,sp,-24
    df80:	df000515 	stw	fp,20(sp)
    df84:	df000504 	addi	fp,sp,20
    df88:	e13ffd15 	stw	r4,-12(fp)
    df8c:	e17ffe15 	stw	r5,-8(fp)
    df90:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
    df94:	00bff9c4 	movi	r2,-25
    df98:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
    df9c:	e0bffe17 	ldw	r2,-8(fp)
    dfa0:	10da8060 	cmpeqi	r3,r2,27137
    dfa4:	1800031e 	bne	r3,zero,dfb4 <altera_avalon_jtag_uart_ioctl+0x38>
    dfa8:	109a80a0 	cmpeqi	r2,r2,27138
    dfac:	1000191e 	bne	r2,zero,e014 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
    dfb0:	00002806 	br	e054 <altera_avalon_jtag_uart_ioctl+0xd8>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
    dfb4:	e0bffd17 	ldw	r2,-12(fp)
    dfb8:	10c00117 	ldw	r3,4(r2)
    dfbc:	00a00034 	movhi	r2,32768
    dfc0:	10bfffc4 	addi	r2,r2,-1
    dfc4:	18801226 	beq	r3,r2,e010 <altera_avalon_jtag_uart_ioctl+0x94>
    {
      int timeout = *((int *)arg);
    dfc8:	e0bfff17 	ldw	r2,-4(fp)
    dfcc:	10800017 	ldw	r2,0(r2)
    dfd0:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
    dfd4:	e0bffc17 	ldw	r2,-16(fp)
    dfd8:	10800090 	cmplti	r2,r2,2
    dfdc:	1000061e 	bne	r2,zero,dff8 <altera_avalon_jtag_uart_ioctl+0x7c>
    dfe0:	e0fffc17 	ldw	r3,-16(fp)
    dfe4:	00a00034 	movhi	r2,32768
    dfe8:	10bfffc4 	addi	r2,r2,-1
    dfec:	18800226 	beq	r3,r2,dff8 <altera_avalon_jtag_uart_ioctl+0x7c>
    dff0:	e0bffc17 	ldw	r2,-16(fp)
    dff4:	00000206 	br	e000 <altera_avalon_jtag_uart_ioctl+0x84>
    dff8:	00a00034 	movhi	r2,32768
    dffc:	10bfff84 	addi	r2,r2,-2
    e000:	e0fffd17 	ldw	r3,-12(fp)
    e004:	18800115 	stw	r2,4(r3)
      rc = 0;
    e008:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    e00c:	00001106 	br	e054 <altera_avalon_jtag_uart_ioctl+0xd8>
    e010:	00001006 	br	e054 <altera_avalon_jtag_uart_ioctl+0xd8>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
    e014:	e0bffd17 	ldw	r2,-12(fp)
    e018:	10c00117 	ldw	r3,4(r2)
    e01c:	00a00034 	movhi	r2,32768
    e020:	10bfffc4 	addi	r2,r2,-1
    e024:	18800a26 	beq	r3,r2,e050 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
    e028:	e0bffd17 	ldw	r2,-12(fp)
    e02c:	10c00917 	ldw	r3,36(r2)
    e030:	e0bffd17 	ldw	r2,-12(fp)
    e034:	10800117 	ldw	r2,4(r2)
    e038:	1885803a 	cmpltu	r2,r3,r2
    e03c:	10c03fcc 	andi	r3,r2,255
    e040:	e0bfff17 	ldw	r2,-4(fp)
    e044:	10c00015 	stw	r3,0(r2)
      rc = 0;
    e048:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
    e04c:	00000006 	br	e050 <altera_avalon_jtag_uart_ioctl+0xd4>
    e050:	0001883a 	nop

  default:
    break;
  }

  return rc;
    e054:	e0bffb17 	ldw	r2,-20(fp)
}
    e058:	e037883a 	mov	sp,fp
    e05c:	df000017 	ldw	fp,0(sp)
    e060:	dec00104 	addi	sp,sp,4
    e064:	f800283a 	ret

0000e068 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
    e068:	defff304 	addi	sp,sp,-52
    e06c:	dfc00c15 	stw	ra,48(sp)
    e070:	df000b15 	stw	fp,44(sp)
    e074:	df000b04 	addi	fp,sp,44
    e078:	e13ffc15 	stw	r4,-16(fp)
    e07c:	e17ffd15 	stw	r5,-12(fp)
    e080:	e1bffe15 	stw	r6,-8(fp)
    e084:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
    e088:	e0bffd17 	ldw	r2,-12(fp)
    e08c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e090:	00004906 	br	e1b8 <altera_avalon_jtag_uart_read+0x150>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
    e094:	e0bffc17 	ldw	r2,-16(fp)
    e098:	10800a17 	ldw	r2,40(r2)
    e09c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
    e0a0:	e0bffc17 	ldw	r2,-16(fp)
    e0a4:	10800b17 	ldw	r2,44(r2)
    e0a8:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
    e0ac:	e0fff717 	ldw	r3,-36(fp)
    e0b0:	e0bff817 	ldw	r2,-32(fp)
    e0b4:	18800536 	bltu	r3,r2,e0cc <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
    e0b8:	e0fff717 	ldw	r3,-36(fp)
    e0bc:	e0bff817 	ldw	r2,-32(fp)
    e0c0:	1885c83a 	sub	r2,r3,r2
    e0c4:	e0bff615 	stw	r2,-40(fp)
    e0c8:	00000406 	br	e0dc <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
    e0cc:	00c20004 	movi	r3,2048
    e0d0:	e0bff817 	ldw	r2,-32(fp)
    e0d4:	1885c83a 	sub	r2,r3,r2
    e0d8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    e0dc:	e0bff617 	ldw	r2,-40(fp)
    e0e0:	1000011e 	bne	r2,zero,e0e8 <altera_avalon_jtag_uart_read+0x80>
        break; /* No more data available */
    e0e4:	00001d06 	br	e15c <altera_avalon_jtag_uart_read+0xf4>

      if (n > space)
    e0e8:	e0fffe17 	ldw	r3,-8(fp)
    e0ec:	e0bff617 	ldw	r2,-40(fp)
    e0f0:	1880022e 	bgeu	r3,r2,e0fc <altera_avalon_jtag_uart_read+0x94>
        n = space;
    e0f4:	e0bffe17 	ldw	r2,-8(fp)
    e0f8:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
    e0fc:	e0bff817 	ldw	r2,-32(fp)
    e100:	10800e04 	addi	r2,r2,56
    e104:	e0fffc17 	ldw	r3,-16(fp)
    e108:	1885883a 	add	r2,r3,r2
    e10c:	e13ff517 	ldw	r4,-44(fp)
    e110:	100b883a 	mov	r5,r2
    e114:	e1bff617 	ldw	r6,-40(fp)
    e118:	0005a140 	call	5a14 <memcpy>
      ptr   += n;
    e11c:	e0fff517 	ldw	r3,-44(fp)
    e120:	e0bff617 	ldw	r2,-40(fp)
    e124:	1885883a 	add	r2,r3,r2
    e128:	e0bff515 	stw	r2,-44(fp)
      space -= n;
    e12c:	e0fffe17 	ldw	r3,-8(fp)
    e130:	e0bff617 	ldw	r2,-40(fp)
    e134:	1885c83a 	sub	r2,r3,r2
    e138:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e13c:	e0fff817 	ldw	r3,-32(fp)
    e140:	e0bff617 	ldw	r2,-40(fp)
    e144:	1885883a 	add	r2,r3,r2
    e148:	10c1ffcc 	andi	r3,r2,2047
    e14c:	e0bffc17 	ldw	r2,-16(fp)
    e150:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
    e154:	e0bffe17 	ldw	r2,-8(fp)
    e158:	00bfce16 	blt	zero,r2,e094 <__alt_data_end+0xfffef84c>

    /* If we read any data then return it */
    if (ptr != buffer)
    e15c:	e0fff517 	ldw	r3,-44(fp)
    e160:	e0bffd17 	ldw	r2,-12(fp)
    e164:	18800126 	beq	r3,r2,e16c <altera_avalon_jtag_uart_read+0x104>
      break;
    e168:	00001506 	br	e1c0 <altera_avalon_jtag_uart_read+0x158>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
    e16c:	e0bfff17 	ldw	r2,-4(fp)
    e170:	1090000c 	andi	r2,r2,16384
    e174:	10000126 	beq	r2,zero,e17c <altera_avalon_jtag_uart_read+0x114>
      break;
    e178:	00001106 	br	e1c0 <altera_avalon_jtag_uart_read+0x158>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
    e17c:	0001883a 	nop
    e180:	e0bffc17 	ldw	r2,-16(fp)
    e184:	10c00a17 	ldw	r3,40(r2)
    e188:	e0bff717 	ldw	r2,-36(fp)
    e18c:	1880051e 	bne	r3,r2,e1a4 <altera_avalon_jtag_uart_read+0x13c>
    e190:	e0bffc17 	ldw	r2,-16(fp)
    e194:	10c00917 	ldw	r3,36(r2)
    e198:	e0bffc17 	ldw	r2,-16(fp)
    e19c:	10800117 	ldw	r2,4(r2)
    e1a0:	18bff736 	bltu	r3,r2,e180 <__alt_data_end+0xfffef938>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
    e1a4:	e0bffc17 	ldw	r2,-16(fp)
    e1a8:	10c00a17 	ldw	r3,40(r2)
    e1ac:	e0bff717 	ldw	r2,-36(fp)
    e1b0:	1880011e 	bne	r3,r2,e1b8 <altera_avalon_jtag_uart_read+0x150>
      break;
    e1b4:	00000206 	br	e1c0 <altera_avalon_jtag_uart_read+0x158>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
    e1b8:	e0bffe17 	ldw	r2,-8(fp)
    e1bc:	00bfb516 	blt	zero,r2,e094 <__alt_data_end+0xfffef84c>
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
    e1c0:	e0fff517 	ldw	r3,-44(fp)
    e1c4:	e0bffd17 	ldw	r2,-12(fp)
    e1c8:	18801826 	beq	r3,r2,e22c <altera_avalon_jtag_uart_read+0x1c4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e1cc:	0005303a 	rdctl	r2,status
    e1d0:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e1d4:	e0fffa17 	ldw	r3,-24(fp)
    e1d8:	00bfff84 	movi	r2,-2
    e1dc:	1884703a 	and	r2,r3,r2
    e1e0:	1001703a 	wrctl	status,r2
  
  return context;
    e1e4:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
    e1e8:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
    e1ec:	e0bffc17 	ldw	r2,-16(fp)
    e1f0:	10800817 	ldw	r2,32(r2)
    e1f4:	10c00054 	ori	r3,r2,1
    e1f8:	e0bffc17 	ldw	r2,-16(fp)
    e1fc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e200:	e0bffc17 	ldw	r2,-16(fp)
    e204:	10800017 	ldw	r2,0(r2)
    e208:	10800104 	addi	r2,r2,4
    e20c:	1007883a 	mov	r3,r2
    e210:	e0bffc17 	ldw	r2,-16(fp)
    e214:	10800817 	ldw	r2,32(r2)
    e218:	18800035 	stwio	r2,0(r3)
    e21c:	e0bff917 	ldw	r2,-28(fp)
    e220:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e224:	e0bffb17 	ldw	r2,-20(fp)
    e228:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
    e22c:	e0fff517 	ldw	r3,-44(fp)
    e230:	e0bffd17 	ldw	r2,-12(fp)
    e234:	18800426 	beq	r3,r2,e248 <altera_avalon_jtag_uart_read+0x1e0>
    return ptr - buffer;
    e238:	e0fff517 	ldw	r3,-44(fp)
    e23c:	e0bffd17 	ldw	r2,-12(fp)
    e240:	1885c83a 	sub	r2,r3,r2
    e244:	00000606 	br	e260 <altera_avalon_jtag_uart_read+0x1f8>
  else if (flags & O_NONBLOCK)
    e248:	e0bfff17 	ldw	r2,-4(fp)
    e24c:	1090000c 	andi	r2,r2,16384
    e250:	10000226 	beq	r2,zero,e25c <altera_avalon_jtag_uart_read+0x1f4>
    return -EWOULDBLOCK;
    e254:	00bffd44 	movi	r2,-11
    e258:	00000106 	br	e260 <altera_avalon_jtag_uart_read+0x1f8>
  else
    return -EIO;
    e25c:	00bffec4 	movi	r2,-5
}
    e260:	e037883a 	mov	sp,fp
    e264:	dfc00117 	ldw	ra,4(sp)
    e268:	df000017 	ldw	fp,0(sp)
    e26c:	dec00204 	addi	sp,sp,8
    e270:	f800283a 	ret

0000e274 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
    e274:	defff304 	addi	sp,sp,-52
    e278:	dfc00c15 	stw	ra,48(sp)
    e27c:	df000b15 	stw	fp,44(sp)
    e280:	df000b04 	addi	fp,sp,44
    e284:	e13ffc15 	stw	r4,-16(fp)
    e288:	e17ffd15 	stw	r5,-12(fp)
    e28c:	e1bffe15 	stw	r6,-8(fp)
    e290:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
    e294:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
    e298:	e0bffd17 	ldw	r2,-12(fp)
    e29c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e2a0:	00003806 	br	e384 <altera_avalon_jtag_uart_write+0x110>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
    e2a4:	e0bffc17 	ldw	r2,-16(fp)
    e2a8:	10800c17 	ldw	r2,48(r2)
    e2ac:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
    e2b0:	e0bffc17 	ldw	r2,-16(fp)
    e2b4:	10800d17 	ldw	r2,52(r2)
    e2b8:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
    e2bc:	e0fff817 	ldw	r3,-32(fp)
    e2c0:	e0bff517 	ldw	r2,-44(fp)
    e2c4:	1880062e 	bgeu	r3,r2,e2e0 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
    e2c8:	e0fff517 	ldw	r3,-44(fp)
    e2cc:	e0bff817 	ldw	r2,-32(fp)
    e2d0:	1885c83a 	sub	r2,r3,r2
    e2d4:	10bfffc4 	addi	r2,r2,-1
    e2d8:	e0bff615 	stw	r2,-40(fp)
    e2dc:	00000b06 	br	e30c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
    e2e0:	e0bff517 	ldw	r2,-44(fp)
    e2e4:	10000526 	beq	r2,zero,e2fc <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
    e2e8:	00c20004 	movi	r3,2048
    e2ec:	e0bff817 	ldw	r2,-32(fp)
    e2f0:	1885c83a 	sub	r2,r3,r2
    e2f4:	e0bff615 	stw	r2,-40(fp)
    e2f8:	00000406 	br	e30c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
    e2fc:	00c1ffc4 	movi	r3,2047
    e300:	e0bff817 	ldw	r2,-32(fp)
    e304:	1885c83a 	sub	r2,r3,r2
    e308:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
    e30c:	e0bff617 	ldw	r2,-40(fp)
    e310:	1000011e 	bne	r2,zero,e318 <altera_avalon_jtag_uart_write+0xa4>
        break;
    e314:	00001d06 	br	e38c <altera_avalon_jtag_uart_write+0x118>

      if (n > count)
    e318:	e0fffe17 	ldw	r3,-8(fp)
    e31c:	e0bff617 	ldw	r2,-40(fp)
    e320:	1880022e 	bgeu	r3,r2,e32c <altera_avalon_jtag_uart_write+0xb8>
        n = count;
    e324:	e0bffe17 	ldw	r2,-8(fp)
    e328:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
    e32c:	e0bff817 	ldw	r2,-32(fp)
    e330:	10820e04 	addi	r2,r2,2104
    e334:	e0fffc17 	ldw	r3,-16(fp)
    e338:	1885883a 	add	r2,r3,r2
    e33c:	1009883a 	mov	r4,r2
    e340:	e17ffd17 	ldw	r5,-12(fp)
    e344:	e1bff617 	ldw	r6,-40(fp)
    e348:	0005a140 	call	5a14 <memcpy>
      ptr   += n;
    e34c:	e0fffd17 	ldw	r3,-12(fp)
    e350:	e0bff617 	ldw	r2,-40(fp)
    e354:	1885883a 	add	r2,r3,r2
    e358:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
    e35c:	e0fffe17 	ldw	r3,-8(fp)
    e360:	e0bff617 	ldw	r2,-40(fp)
    e364:	1885c83a 	sub	r2,r3,r2
    e368:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    e36c:	e0fff817 	ldw	r3,-32(fp)
    e370:	e0bff617 	ldw	r2,-40(fp)
    e374:	1885883a 	add	r2,r3,r2
    e378:	10c1ffcc 	andi	r3,r2,2047
    e37c:	e0bffc17 	ldw	r2,-16(fp)
    e380:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
    e384:	e0bffe17 	ldw	r2,-8(fp)
    e388:	00bfc616 	blt	zero,r2,e2a4 <__alt_data_end+0xfffefa5c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e38c:	0005303a 	rdctl	r2,status
    e390:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e394:	e0fffa17 	ldw	r3,-24(fp)
    e398:	00bfff84 	movi	r2,-2
    e39c:	1884703a 	and	r2,r3,r2
    e3a0:	1001703a 	wrctl	status,r2
  
  return context;
    e3a4:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
    e3a8:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
    e3ac:	e0bffc17 	ldw	r2,-16(fp)
    e3b0:	10800817 	ldw	r2,32(r2)
    e3b4:	10c00094 	ori	r3,r2,2
    e3b8:	e0bffc17 	ldw	r2,-16(fp)
    e3bc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
    e3c0:	e0bffc17 	ldw	r2,-16(fp)
    e3c4:	10800017 	ldw	r2,0(r2)
    e3c8:	10800104 	addi	r2,r2,4
    e3cc:	1007883a 	mov	r3,r2
    e3d0:	e0bffc17 	ldw	r2,-16(fp)
    e3d4:	10800817 	ldw	r2,32(r2)
    e3d8:	18800035 	stwio	r2,0(r3)
    e3dc:	e0bff917 	ldw	r2,-28(fp)
    e3e0:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e3e4:	e0bffb17 	ldw	r2,-20(fp)
    e3e8:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    e3ec:	e0bffe17 	ldw	r2,-8(fp)
    e3f0:	0080120e 	bge	zero,r2,e43c <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
    e3f4:	e0bfff17 	ldw	r2,-4(fp)
    e3f8:	1090000c 	andi	r2,r2,16384
    e3fc:	10000126 	beq	r2,zero,e404 <altera_avalon_jtag_uart_write+0x190>
        break;
    e400:	00001006 	br	e444 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
    e404:	0001883a 	nop
    e408:	e0bffc17 	ldw	r2,-16(fp)
    e40c:	10c00d17 	ldw	r3,52(r2)
    e410:	e0bff517 	ldw	r2,-44(fp)
    e414:	1880051e 	bne	r3,r2,e42c <altera_avalon_jtag_uart_write+0x1b8>
    e418:	e0bffc17 	ldw	r2,-16(fp)
    e41c:	10c00917 	ldw	r3,36(r2)
    e420:	e0bffc17 	ldw	r2,-16(fp)
    e424:	10800117 	ldw	r2,4(r2)
    e428:	18bff736 	bltu	r3,r2,e408 <__alt_data_end+0xfffefbc0>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
    e42c:	e0bffc17 	ldw	r2,-16(fp)
    e430:	10800917 	ldw	r2,36(r2)
    e434:	10000126 	beq	r2,zero,e43c <altera_avalon_jtag_uart_write+0x1c8>
         break;
    e438:	00000206 	br	e444 <altera_avalon_jtag_uart_write+0x1d0>
    }
  }
  while (count > 0);
    e43c:	e0bffe17 	ldw	r2,-8(fp)
    e440:	00bf9716 	blt	zero,r2,e2a0 <__alt_data_end+0xfffefa58>
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
    e444:	e0fffd17 	ldw	r3,-12(fp)
    e448:	e0bff717 	ldw	r2,-36(fp)
    e44c:	18800426 	beq	r3,r2,e460 <altera_avalon_jtag_uart_write+0x1ec>
    return ptr - start;
    e450:	e0fffd17 	ldw	r3,-12(fp)
    e454:	e0bff717 	ldw	r2,-36(fp)
    e458:	1885c83a 	sub	r2,r3,r2
    e45c:	00000606 	br	e478 <altera_avalon_jtag_uart_write+0x204>
  else if (flags & O_NONBLOCK)
    e460:	e0bfff17 	ldw	r2,-4(fp)
    e464:	1090000c 	andi	r2,r2,16384
    e468:	10000226 	beq	r2,zero,e474 <altera_avalon_jtag_uart_write+0x200>
    return -EWOULDBLOCK;
    e46c:	00bffd44 	movi	r2,-11
    e470:	00000106 	br	e478 <altera_avalon_jtag_uart_write+0x204>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
    e474:	00bffec4 	movi	r2,-5
}
    e478:	e037883a 	mov	sp,fp
    e47c:	dfc00117 	ldw	ra,4(sp)
    e480:	df000017 	ldw	fp,0(sp)
    e484:	dec00204 	addi	sp,sp,8
    e488:	f800283a 	ret

0000e48c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
    e48c:	defff504 	addi	sp,sp,-44
    e490:	df000a15 	stw	fp,40(sp)
    e494:	df000a04 	addi	fp,sp,40
    e498:	e13ffc15 	stw	r4,-16(fp)
    e49c:	e17ffd15 	stw	r5,-12(fp)
    e4a0:	e1bffe15 	stw	r6,-8(fp)
    e4a4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
    e4a8:	e03ff615 	stw	zero,-40(fp)
    e4ac:	00800074 	movhi	r2,1
    e4b0:	108c0304 	addi	r2,r2,12300
    e4b4:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
    e4b8:	10003f26 	beq	r2,zero,e5b8 <alt_alarm_start+0x12c>
  {
    if (alarm)
    e4bc:	e0bffc17 	ldw	r2,-16(fp)
    e4c0:	10003b26 	beq	r2,zero,e5b0 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
    e4c4:	e0bffc17 	ldw	r2,-16(fp)
    e4c8:	e0fffe17 	ldw	r3,-8(fp)
    e4cc:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
    e4d0:	e0bffc17 	ldw	r2,-16(fp)
    e4d4:	e0ffff17 	ldw	r3,-4(fp)
    e4d8:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e4dc:	0005303a 	rdctl	r2,status
    e4e0:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e4e4:	e0fff817 	ldw	r3,-32(fp)
    e4e8:	00bfff84 	movi	r2,-2
    e4ec:	1884703a 	and	r2,r3,r2
    e4f0:	1001703a 	wrctl	status,r2
  
  return context;
    e4f4:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
    e4f8:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
    e4fc:	00800074 	movhi	r2,1
    e500:	108c0404 	addi	r2,r2,12304
    e504:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
    e508:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
    e50c:	e0fffd17 	ldw	r3,-12(fp)
    e510:	e0bff617 	ldw	r2,-40(fp)
    e514:	1885883a 	add	r2,r3,r2
    e518:	10c00044 	addi	r3,r2,1
    e51c:	e0bffc17 	ldw	r2,-16(fp)
    e520:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
    e524:	e0bffc17 	ldw	r2,-16(fp)
    e528:	10c00217 	ldw	r3,8(r2)
    e52c:	e0bff617 	ldw	r2,-40(fp)
    e530:	1880042e 	bgeu	r3,r2,e544 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
    e534:	e0bffc17 	ldw	r2,-16(fp)
    e538:	00c00044 	movi	r3,1
    e53c:	10c00405 	stb	r3,16(r2)
    e540:	00000206 	br	e54c <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
    e544:	e0bffc17 	ldw	r2,-16(fp)
    e548:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
    e54c:	e0fffc17 	ldw	r3,-16(fp)
    e550:	00800074 	movhi	r2,1
    e554:	10853b04 	addi	r2,r2,5356
    e558:	e0bff915 	stw	r2,-28(fp)
    e55c:	e0fffa15 	stw	r3,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e560:	e0bffa17 	ldw	r2,-24(fp)
    e564:	e0fff917 	ldw	r3,-28(fp)
    e568:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e56c:	e0bff917 	ldw	r2,-28(fp)
    e570:	10c00017 	ldw	r3,0(r2)
    e574:	e0bffa17 	ldw	r2,-24(fp)
    e578:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e57c:	e0bff917 	ldw	r2,-28(fp)
    e580:	10800017 	ldw	r2,0(r2)
    e584:	e0fffa17 	ldw	r3,-24(fp)
    e588:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e58c:	e0bff917 	ldw	r2,-28(fp)
    e590:	e0fffa17 	ldw	r3,-24(fp)
    e594:	10c00015 	stw	r3,0(r2)
    e598:	e0bff717 	ldw	r2,-36(fp)
    e59c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e5a0:	e0bffb17 	ldw	r2,-20(fp)
    e5a4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
    e5a8:	0005883a 	mov	r2,zero
    e5ac:	00000306 	br	e5bc <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
    e5b0:	00bffa84 	movi	r2,-22
    e5b4:	00000106 	br	e5bc <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
    e5b8:	00bfde84 	movi	r2,-134
  }
}
    e5bc:	e037883a 	mov	sp,fp
    e5c0:	df000017 	ldw	fp,0(sp)
    e5c4:	dec00104 	addi	sp,sp,4
    e5c8:	f800283a 	ret

0000e5cc <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
    e5cc:	deffff04 	addi	sp,sp,-4
    e5d0:	df000015 	stw	fp,0(sp)
    e5d4:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
    e5d8:	e037883a 	mov	sp,fp
    e5dc:	df000017 	ldw	fp,0(sp)
    e5e0:	dec00104 	addi	sp,sp,4
    e5e4:	f800283a 	ret

0000e5e8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    e5e8:	defffe04 	addi	sp,sp,-8
    e5ec:	dfc00115 	stw	ra,4(sp)
    e5f0:	df000015 	stw	fp,0(sp)
    e5f4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    e5f8:	00800074 	movhi	r2,1
    e5fc:	10853804 	addi	r2,r2,5344
    e600:	10800017 	ldw	r2,0(r2)
    e604:	10000526 	beq	r2,zero,e61c <alt_get_errno+0x34>
    e608:	00800074 	movhi	r2,1
    e60c:	10853804 	addi	r2,r2,5344
    e610:	10800017 	ldw	r2,0(r2)
    e614:	103ee83a 	callr	r2
    e618:	00000206 	br	e624 <alt_get_errno+0x3c>
    e61c:	00800074 	movhi	r2,1
    e620:	108bfb04 	addi	r2,r2,12268
}
    e624:	e037883a 	mov	sp,fp
    e628:	dfc00117 	ldw	ra,4(sp)
    e62c:	df000017 	ldw	fp,0(sp)
    e630:	dec00204 	addi	sp,sp,8
    e634:	f800283a 	ret

0000e638 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
    e638:	defffa04 	addi	sp,sp,-24
    e63c:	dfc00515 	stw	ra,20(sp)
    e640:	df000415 	stw	fp,16(sp)
    e644:	df000404 	addi	fp,sp,16
    e648:	e13ffe15 	stw	r4,-8(fp)
    e64c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
    e650:	e0bffe17 	ldw	r2,-8(fp)
    e654:	10000326 	beq	r2,zero,e664 <alt_dev_llist_insert+0x2c>
    e658:	e0bffe17 	ldw	r2,-8(fp)
    e65c:	10800217 	ldw	r2,8(r2)
    e660:	1000061e 	bne	r2,zero,e67c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
    e664:	000e5e80 	call	e5e8 <alt_get_errno>
    e668:	1007883a 	mov	r3,r2
    e66c:	00800584 	movi	r2,22
    e670:	18800015 	stw	r2,0(r3)
    return -EINVAL;
    e674:	00bffa84 	movi	r2,-22
    e678:	00001306 	br	e6c8 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
    e67c:	e0bffe17 	ldw	r2,-8(fp)
    e680:	e0ffff17 	ldw	r3,-4(fp)
    e684:	e0fffc15 	stw	r3,-16(fp)
    e688:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
    e68c:	e0bffd17 	ldw	r2,-12(fp)
    e690:	e0fffc17 	ldw	r3,-16(fp)
    e694:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
    e698:	e0bffc17 	ldw	r2,-16(fp)
    e69c:	10c00017 	ldw	r3,0(r2)
    e6a0:	e0bffd17 	ldw	r2,-12(fp)
    e6a4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
    e6a8:	e0bffc17 	ldw	r2,-16(fp)
    e6ac:	10800017 	ldw	r2,0(r2)
    e6b0:	e0fffd17 	ldw	r3,-12(fp)
    e6b4:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
    e6b8:	e0bffc17 	ldw	r2,-16(fp)
    e6bc:	e0fffd17 	ldw	r3,-12(fp)
    e6c0:	10c00015 	stw	r3,0(r2)

  return 0;  
    e6c4:	0005883a 	mov	r2,zero
}
    e6c8:	e037883a 	mov	sp,fp
    e6cc:	dfc00117 	ldw	ra,4(sp)
    e6d0:	df000017 	ldw	fp,0(sp)
    e6d4:	dec00204 	addi	sp,sp,8
    e6d8:	f800283a 	ret

0000e6dc <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
    e6dc:	defffd04 	addi	sp,sp,-12
    e6e0:	dfc00215 	stw	ra,8(sp)
    e6e4:	df000115 	stw	fp,4(sp)
    e6e8:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    e6ec:	00800074 	movhi	r2,1
    e6f0:	10bdbb04 	addi	r2,r2,-2324
    e6f4:	e0bfff15 	stw	r2,-4(fp)
    e6f8:	00000606 	br	e714 <_do_ctors+0x38>
        (*ctor) (); 
    e6fc:	e0bfff17 	ldw	r2,-4(fp)
    e700:	10800017 	ldw	r2,0(r2)
    e704:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
    e708:	e0bfff17 	ldw	r2,-4(fp)
    e70c:	10bfff04 	addi	r2,r2,-4
    e710:	e0bfff15 	stw	r2,-4(fp)
    e714:	e0ffff17 	ldw	r3,-4(fp)
    e718:	00800074 	movhi	r2,1
    e71c:	10bdbc04 	addi	r2,r2,-2320
    e720:	18bff62e 	bgeu	r3,r2,e6fc <__alt_data_end+0xfffefeb4>
        (*ctor) (); 
}
    e724:	e037883a 	mov	sp,fp
    e728:	dfc00117 	ldw	ra,4(sp)
    e72c:	df000017 	ldw	fp,0(sp)
    e730:	dec00204 	addi	sp,sp,8
    e734:	f800283a 	ret

0000e738 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
    e738:	defffd04 	addi	sp,sp,-12
    e73c:	dfc00215 	stw	ra,8(sp)
    e740:	df000115 	stw	fp,4(sp)
    e744:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    e748:	00800074 	movhi	r2,1
    e74c:	10bdbb04 	addi	r2,r2,-2324
    e750:	e0bfff15 	stw	r2,-4(fp)
    e754:	00000606 	br	e770 <_do_dtors+0x38>
        (*dtor) (); 
    e758:	e0bfff17 	ldw	r2,-4(fp)
    e75c:	10800017 	ldw	r2,0(r2)
    e760:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
    e764:	e0bfff17 	ldw	r2,-4(fp)
    e768:	10bfff04 	addi	r2,r2,-4
    e76c:	e0bfff15 	stw	r2,-4(fp)
    e770:	e0ffff17 	ldw	r3,-4(fp)
    e774:	00800074 	movhi	r2,1
    e778:	10bdbc04 	addi	r2,r2,-2320
    e77c:	18bff62e 	bgeu	r3,r2,e758 <__alt_data_end+0xfffeff10>
        (*dtor) (); 
}
    e780:	e037883a 	mov	sp,fp
    e784:	dfc00117 	ldw	ra,4(sp)
    e788:	df000017 	ldw	fp,0(sp)
    e78c:	dec00204 	addi	sp,sp,8
    e790:	f800283a 	ret

0000e794 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
    e794:	deffff04 	addi	sp,sp,-4
    e798:	df000015 	stw	fp,0(sp)
    e79c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
    e7a0:	e037883a 	mov	sp,fp
    e7a4:	df000017 	ldw	fp,0(sp)
    e7a8:	dec00104 	addi	sp,sp,4
    e7ac:	f800283a 	ret

0000e7b0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e7b0:	defff904 	addi	sp,sp,-28
    e7b4:	dfc00615 	stw	ra,24(sp)
    e7b8:	df000515 	stw	fp,20(sp)
    e7bc:	df000504 	addi	fp,sp,20
    e7c0:	e13ffc15 	stw	r4,-16(fp)
    e7c4:	e17ffd15 	stw	r5,-12(fp)
    e7c8:	e1bffe15 	stw	r6,-8(fp)
    e7cc:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
    e7d0:	e0800217 	ldw	r2,8(fp)
    e7d4:	d8800015 	stw	r2,0(sp)
    e7d8:	e13ffc17 	ldw	r4,-16(fp)
    e7dc:	e17ffd17 	ldw	r5,-12(fp)
    e7e0:	e1bffe17 	ldw	r6,-8(fp)
    e7e4:	e1ffff17 	ldw	r7,-4(fp)
    e7e8:	000e9900 	call	e990 <alt_iic_isr_register>
}  
    e7ec:	e037883a 	mov	sp,fp
    e7f0:	dfc00117 	ldw	ra,4(sp)
    e7f4:	df000017 	ldw	fp,0(sp)
    e7f8:	dec00204 	addi	sp,sp,8
    e7fc:	f800283a 	ret

0000e800 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
    e800:	defff904 	addi	sp,sp,-28
    e804:	df000615 	stw	fp,24(sp)
    e808:	df000604 	addi	fp,sp,24
    e80c:	e13ffe15 	stw	r4,-8(fp)
    e810:	e17fff15 	stw	r5,-4(fp)
    e814:	e0bfff17 	ldw	r2,-4(fp)
    e818:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e81c:	0005303a 	rdctl	r2,status
    e820:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e824:	e0fffb17 	ldw	r3,-20(fp)
    e828:	00bfff84 	movi	r2,-2
    e82c:	1884703a 	and	r2,r3,r2
    e830:	1001703a 	wrctl	status,r2
  
  return context;
    e834:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    e838:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
    e83c:	e0bffa17 	ldw	r2,-24(fp)
    e840:	00c00044 	movi	r3,1
    e844:	1884983a 	sll	r2,r3,r2
    e848:	1007883a 	mov	r3,r2
    e84c:	00800074 	movhi	r2,1
    e850:	108c0204 	addi	r2,r2,12296
    e854:	10800017 	ldw	r2,0(r2)
    e858:	1886b03a 	or	r3,r3,r2
    e85c:	00800074 	movhi	r2,1
    e860:	108c0204 	addi	r2,r2,12296
    e864:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    e868:	00800074 	movhi	r2,1
    e86c:	108c0204 	addi	r2,r2,12296
    e870:	10800017 	ldw	r2,0(r2)
    e874:	100170fa 	wrctl	ienable,r2
    e878:	e0bffc17 	ldw	r2,-16(fp)
    e87c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e880:	e0bffd17 	ldw	r2,-12(fp)
    e884:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    e888:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
    e88c:	0001883a 	nop
}
    e890:	e037883a 	mov	sp,fp
    e894:	df000017 	ldw	fp,0(sp)
    e898:	dec00104 	addi	sp,sp,4
    e89c:	f800283a 	ret

0000e8a0 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
    e8a0:	defff904 	addi	sp,sp,-28
    e8a4:	df000615 	stw	fp,24(sp)
    e8a8:	df000604 	addi	fp,sp,24
    e8ac:	e13ffe15 	stw	r4,-8(fp)
    e8b0:	e17fff15 	stw	r5,-4(fp)
    e8b4:	e0bfff17 	ldw	r2,-4(fp)
    e8b8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e8bc:	0005303a 	rdctl	r2,status
    e8c0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e8c4:	e0fffb17 	ldw	r3,-20(fp)
    e8c8:	00bfff84 	movi	r2,-2
    e8cc:	1884703a 	and	r2,r3,r2
    e8d0:	1001703a 	wrctl	status,r2
  
  return context;
    e8d4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
    e8d8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
    e8dc:	e0bffa17 	ldw	r2,-24(fp)
    e8e0:	00c00044 	movi	r3,1
    e8e4:	1884983a 	sll	r2,r3,r2
    e8e8:	0084303a 	nor	r2,zero,r2
    e8ec:	1007883a 	mov	r3,r2
    e8f0:	00800074 	movhi	r2,1
    e8f4:	108c0204 	addi	r2,r2,12296
    e8f8:	10800017 	ldw	r2,0(r2)
    e8fc:	1886703a 	and	r3,r3,r2
    e900:	00800074 	movhi	r2,1
    e904:	108c0204 	addi	r2,r2,12296
    e908:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
    e90c:	00800074 	movhi	r2,1
    e910:	108c0204 	addi	r2,r2,12296
    e914:	10800017 	ldw	r2,0(r2)
    e918:	100170fa 	wrctl	ienable,r2
    e91c:	e0bffc17 	ldw	r2,-16(fp)
    e920:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    e924:	e0bffd17 	ldw	r2,-12(fp)
    e928:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
    e92c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
    e930:	0001883a 	nop
}
    e934:	e037883a 	mov	sp,fp
    e938:	df000017 	ldw	fp,0(sp)
    e93c:	dec00104 	addi	sp,sp,4
    e940:	f800283a 	ret

0000e944 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
    e944:	defffc04 	addi	sp,sp,-16
    e948:	df000315 	stw	fp,12(sp)
    e94c:	df000304 	addi	fp,sp,12
    e950:	e13ffe15 	stw	r4,-8(fp)
    e954:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
    e958:	000530fa 	rdctl	r2,ienable
    e95c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
    e960:	e0bfff17 	ldw	r2,-4(fp)
    e964:	00c00044 	movi	r3,1
    e968:	1884983a 	sll	r2,r3,r2
    e96c:	1007883a 	mov	r3,r2
    e970:	e0bffd17 	ldw	r2,-12(fp)
    e974:	1884703a 	and	r2,r3,r2
    e978:	1004c03a 	cmpne	r2,r2,zero
    e97c:	10803fcc 	andi	r2,r2,255
}
    e980:	e037883a 	mov	sp,fp
    e984:	df000017 	ldw	fp,0(sp)
    e988:	dec00104 	addi	sp,sp,4
    e98c:	f800283a 	ret

0000e990 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
    e990:	defff504 	addi	sp,sp,-44
    e994:	dfc00a15 	stw	ra,40(sp)
    e998:	df000915 	stw	fp,36(sp)
    e99c:	df000904 	addi	fp,sp,36
    e9a0:	e13ffc15 	stw	r4,-16(fp)
    e9a4:	e17ffd15 	stw	r5,-12(fp)
    e9a8:	e1bffe15 	stw	r6,-8(fp)
    e9ac:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
    e9b0:	00bffa84 	movi	r2,-22
    e9b4:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
    e9b8:	e0bffd17 	ldw	r2,-12(fp)
    e9bc:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
    e9c0:	e0bff817 	ldw	r2,-32(fp)
    e9c4:	10800808 	cmpgei	r2,r2,32
    e9c8:	1000271e 	bne	r2,zero,ea68 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    e9cc:	0005303a 	rdctl	r2,status
    e9d0:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    e9d4:	e0fffa17 	ldw	r3,-24(fp)
    e9d8:	00bfff84 	movi	r2,-2
    e9dc:	1884703a 	and	r2,r3,r2
    e9e0:	1001703a 	wrctl	status,r2
  
  return context;
    e9e4:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
    e9e8:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
    e9ec:	00800074 	movhi	r2,1
    e9f0:	108c1004 	addi	r2,r2,12352
    e9f4:	e0fff817 	ldw	r3,-32(fp)
    e9f8:	180690fa 	slli	r3,r3,3
    e9fc:	10c5883a 	add	r2,r2,r3
    ea00:	e0fffe17 	ldw	r3,-8(fp)
    ea04:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
    ea08:	00800074 	movhi	r2,1
    ea0c:	108c1004 	addi	r2,r2,12352
    ea10:	e0fff817 	ldw	r3,-32(fp)
    ea14:	180690fa 	slli	r3,r3,3
    ea18:	10c5883a 	add	r2,r2,r3
    ea1c:	10800104 	addi	r2,r2,4
    ea20:	e0ffff17 	ldw	r3,-4(fp)
    ea24:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
    ea28:	e0bffe17 	ldw	r2,-8(fp)
    ea2c:	10000526 	beq	r2,zero,ea44 <alt_iic_isr_register+0xb4>
    ea30:	e0bff817 	ldw	r2,-32(fp)
    ea34:	e13ffc17 	ldw	r4,-16(fp)
    ea38:	100b883a 	mov	r5,r2
    ea3c:	000e8000 	call	e800 <alt_ic_irq_enable>
    ea40:	00000406 	br	ea54 <alt_iic_isr_register+0xc4>
    ea44:	e0bff817 	ldw	r2,-32(fp)
    ea48:	e13ffc17 	ldw	r4,-16(fp)
    ea4c:	100b883a 	mov	r5,r2
    ea50:	000e8a00 	call	e8a0 <alt_ic_irq_disable>
    ea54:	e0bff715 	stw	r2,-36(fp)
    ea58:	e0bff917 	ldw	r2,-28(fp)
    ea5c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    ea60:	e0bffb17 	ldw	r2,-20(fp)
    ea64:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
    ea68:	e0bff717 	ldw	r2,-36(fp)
}
    ea6c:	e037883a 	mov	sp,fp
    ea70:	dfc00117 	ldw	ra,4(sp)
    ea74:	df000017 	ldw	fp,0(sp)
    ea78:	dec00204 	addi	sp,sp,8
    ea7c:	f800283a 	ret

0000ea80 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
    ea80:	defff804 	addi	sp,sp,-32
    ea84:	dfc00715 	stw	ra,28(sp)
    ea88:	df000615 	stw	fp,24(sp)
    ea8c:	dc000515 	stw	r16,20(sp)
    ea90:	df000604 	addi	fp,sp,24
    ea94:	e13ffb15 	stw	r4,-20(fp)
    ea98:	e17ffc15 	stw	r5,-16(fp)
    ea9c:	e1bffd15 	stw	r6,-12(fp)
    eaa0:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
    eaa4:	e13ffc17 	ldw	r4,-16(fp)
    eaa8:	e17ffd17 	ldw	r5,-12(fp)
    eaac:	e1bffe17 	ldw	r6,-8(fp)
    eab0:	000ed1c0 	call	ed1c <open>
    eab4:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
    eab8:	e0bffa17 	ldw	r2,-24(fp)
    eabc:	10002216 	blt	r2,zero,eb48 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
    eac0:	04000074 	movhi	r16,1
    eac4:	8400b504 	addi	r16,r16,724
    eac8:	e0bffa17 	ldw	r2,-24(fp)
    eacc:	1009883a 	mov	r4,r2
    ead0:	01400304 	movi	r5,12
    ead4:	000a7740 	call	a774 <__mulsi3>
    ead8:	8085883a 	add	r2,r16,r2
    eadc:	10c00017 	ldw	r3,0(r2)
    eae0:	e0bffb17 	ldw	r2,-20(fp)
    eae4:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
    eae8:	04000074 	movhi	r16,1
    eaec:	8400b504 	addi	r16,r16,724
    eaf0:	e0bffa17 	ldw	r2,-24(fp)
    eaf4:	1009883a 	mov	r4,r2
    eaf8:	01400304 	movi	r5,12
    eafc:	000a7740 	call	a774 <__mulsi3>
    eb00:	8085883a 	add	r2,r16,r2
    eb04:	10800104 	addi	r2,r2,4
    eb08:	10c00017 	ldw	r3,0(r2)
    eb0c:	e0bffb17 	ldw	r2,-20(fp)
    eb10:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
    eb14:	04000074 	movhi	r16,1
    eb18:	8400b504 	addi	r16,r16,724
    eb1c:	e0bffa17 	ldw	r2,-24(fp)
    eb20:	1009883a 	mov	r4,r2
    eb24:	01400304 	movi	r5,12
    eb28:	000a7740 	call	a774 <__mulsi3>
    eb2c:	8085883a 	add	r2,r16,r2
    eb30:	10800204 	addi	r2,r2,8
    eb34:	10c00017 	ldw	r3,0(r2)
    eb38:	e0bffb17 	ldw	r2,-20(fp)
    eb3c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
    eb40:	e13ffa17 	ldw	r4,-24(fp)
    eb44:	000d70c0 	call	d70c <alt_release_fd>
  }
} 
    eb48:	e6ffff04 	addi	sp,fp,-4
    eb4c:	dfc00217 	ldw	ra,8(sp)
    eb50:	df000117 	ldw	fp,4(sp)
    eb54:	dc000017 	ldw	r16,0(sp)
    eb58:	dec00304 	addi	sp,sp,12
    eb5c:	f800283a 	ret

0000eb60 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
    eb60:	defffb04 	addi	sp,sp,-20
    eb64:	dfc00415 	stw	ra,16(sp)
    eb68:	df000315 	stw	fp,12(sp)
    eb6c:	df000304 	addi	fp,sp,12
    eb70:	e13ffd15 	stw	r4,-12(fp)
    eb74:	e17ffe15 	stw	r5,-8(fp)
    eb78:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
    eb7c:	01000074 	movhi	r4,1
    eb80:	2100b804 	addi	r4,r4,736
    eb84:	e17ffd17 	ldw	r5,-12(fp)
    eb88:	01800044 	movi	r6,1
    eb8c:	01c07fc4 	movi	r7,511
    eb90:	000ea800 	call	ea80 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
    eb94:	01000074 	movhi	r4,1
    eb98:	2100b504 	addi	r4,r4,724
    eb9c:	e17ffe17 	ldw	r5,-8(fp)
    eba0:	000d883a 	mov	r6,zero
    eba4:	01c07fc4 	movi	r7,511
    eba8:	000ea800 	call	ea80 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
    ebac:	01000074 	movhi	r4,1
    ebb0:	2100bb04 	addi	r4,r4,748
    ebb4:	e17fff17 	ldw	r5,-4(fp)
    ebb8:	01800044 	movi	r6,1
    ebbc:	01c07fc4 	movi	r7,511
    ebc0:	000ea800 	call	ea80 <alt_open_fd>
}  
    ebc4:	e037883a 	mov	sp,fp
    ebc8:	dfc00117 	ldw	ra,4(sp)
    ebcc:	df000017 	ldw	fp,0(sp)
    ebd0:	dec00204 	addi	sp,sp,8
    ebd4:	f800283a 	ret

0000ebd8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
    ebd8:	defffe04 	addi	sp,sp,-8
    ebdc:	dfc00115 	stw	ra,4(sp)
    ebe0:	df000015 	stw	fp,0(sp)
    ebe4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
    ebe8:	00800074 	movhi	r2,1
    ebec:	10853804 	addi	r2,r2,5344
    ebf0:	10800017 	ldw	r2,0(r2)
    ebf4:	10000526 	beq	r2,zero,ec0c <alt_get_errno+0x34>
    ebf8:	00800074 	movhi	r2,1
    ebfc:	10853804 	addi	r2,r2,5344
    ec00:	10800017 	ldw	r2,0(r2)
    ec04:	103ee83a 	callr	r2
    ec08:	00000206 	br	ec14 <alt_get_errno+0x3c>
    ec0c:	00800074 	movhi	r2,1
    ec10:	108bfb04 	addi	r2,r2,12268
}
    ec14:	e037883a 	mov	sp,fp
    ec18:	dfc00117 	ldw	ra,4(sp)
    ec1c:	df000017 	ldw	fp,0(sp)
    ec20:	dec00204 	addi	sp,sp,8
    ec24:	f800283a 	ret

0000ec28 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
    ec28:	defffb04 	addi	sp,sp,-20
    ec2c:	dfc00415 	stw	ra,16(sp)
    ec30:	df000315 	stw	fp,12(sp)
    ec34:	dc000215 	stw	r16,8(sp)
    ec38:	df000304 	addi	fp,sp,12
    ec3c:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
    ec40:	e0bffe17 	ldw	r2,-8(fp)
    ec44:	10800217 	ldw	r2,8(r2)
    ec48:	10d00034 	orhi	r3,r2,16384
    ec4c:	e0bffe17 	ldw	r2,-8(fp)
    ec50:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    ec54:	e03ffd15 	stw	zero,-12(fp)
    ec58:	00002306 	br	ece8 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    ec5c:	04000074 	movhi	r16,1
    ec60:	8400b504 	addi	r16,r16,724
    ec64:	e0bffd17 	ldw	r2,-12(fp)
    ec68:	1009883a 	mov	r4,r2
    ec6c:	01400304 	movi	r5,12
    ec70:	000a7740 	call	a774 <__mulsi3>
    ec74:	8085883a 	add	r2,r16,r2
    ec78:	10c00017 	ldw	r3,0(r2)
    ec7c:	e0bffe17 	ldw	r2,-8(fp)
    ec80:	10800017 	ldw	r2,0(r2)
    ec84:	1880151e 	bne	r3,r2,ecdc <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    ec88:	04000074 	movhi	r16,1
    ec8c:	8400b504 	addi	r16,r16,724
    ec90:	e0bffd17 	ldw	r2,-12(fp)
    ec94:	1009883a 	mov	r4,r2
    ec98:	01400304 	movi	r5,12
    ec9c:	000a7740 	call	a774 <__mulsi3>
    eca0:	8085883a 	add	r2,r16,r2
    eca4:	10800204 	addi	r2,r2,8
    eca8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
    ecac:	10000b0e 	bge	r2,zero,ecdc <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
    ecb0:	e13ffd17 	ldw	r4,-12(fp)
    ecb4:	01400304 	movi	r5,12
    ecb8:	000a7740 	call	a774 <__mulsi3>
    ecbc:	1007883a 	mov	r3,r2
    ecc0:	00800074 	movhi	r2,1
    ecc4:	1080b504 	addi	r2,r2,724
    ecc8:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
    eccc:	e0bffe17 	ldw	r2,-8(fp)
    ecd0:	18800226 	beq	r3,r2,ecdc <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
    ecd4:	00bffcc4 	movi	r2,-13
    ecd8:	00000a06 	br	ed04 <alt_file_locked+0xdc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
    ecdc:	e0bffd17 	ldw	r2,-12(fp)
    ece0:	10800044 	addi	r2,r2,1
    ece4:	e0bffd15 	stw	r2,-12(fp)
    ece8:	00800074 	movhi	r2,1
    ecec:	10853704 	addi	r2,r2,5340
    ecf0:	10800017 	ldw	r2,0(r2)
    ecf4:	1007883a 	mov	r3,r2
    ecf8:	e0bffd17 	ldw	r2,-12(fp)
    ecfc:	18bfd72e 	bgeu	r3,r2,ec5c <__alt_data_end+0xffff0414>
    }
  }
  
  /* The device is not locked */
 
  return 0;
    ed00:	0005883a 	mov	r2,zero
}
    ed04:	e6ffff04 	addi	sp,fp,-4
    ed08:	dfc00217 	ldw	ra,8(sp)
    ed0c:	df000117 	ldw	fp,4(sp)
    ed10:	dc000017 	ldw	r16,0(sp)
    ed14:	dec00304 	addi	sp,sp,12
    ed18:	f800283a 	ret

0000ed1c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
    ed1c:	defff604 	addi	sp,sp,-40
    ed20:	dfc00915 	stw	ra,36(sp)
    ed24:	df000815 	stw	fp,32(sp)
    ed28:	df000804 	addi	fp,sp,32
    ed2c:	e13ffd15 	stw	r4,-12(fp)
    ed30:	e17ffe15 	stw	r5,-8(fp)
    ed34:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
    ed38:	00bfffc4 	movi	r2,-1
    ed3c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
    ed40:	00bffb44 	movi	r2,-19
    ed44:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
    ed48:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
    ed4c:	e13ffd17 	ldw	r4,-12(fp)
    ed50:	01400074 	movhi	r5,1
    ed54:	29453504 	addi	r5,r5,5332
    ed58:	000f0380 	call	f038 <alt_find_dev>
    ed5c:	e0bff815 	stw	r2,-32(fp)
    ed60:	e0bff817 	ldw	r2,-32(fp)
    ed64:	1000051e 	bne	r2,zero,ed7c <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
    ed68:	e13ffd17 	ldw	r4,-12(fp)
    ed6c:	000f0c80 	call	f0c8 <alt_find_file>
    ed70:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
    ed74:	00800044 	movi	r2,1
    ed78:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
    ed7c:	e0bff817 	ldw	r2,-32(fp)
    ed80:	10002b26 	beq	r2,zero,ee30 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
    ed84:	e13ff817 	ldw	r4,-32(fp)
    ed88:	000f1dc0 	call	f1dc <alt_get_fd>
    ed8c:	e0bff915 	stw	r2,-28(fp)
    ed90:	e0bff917 	ldw	r2,-28(fp)
    ed94:	1000030e 	bge	r2,zero,eda4 <open+0x88>
    {
      status = index;
    ed98:	e0bff917 	ldw	r2,-28(fp)
    ed9c:	e0bffa15 	stw	r2,-24(fp)
    eda0:	00002506 	br	ee38 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
    eda4:	e13ff917 	ldw	r4,-28(fp)
    eda8:	01400304 	movi	r5,12
    edac:	000a7740 	call	a774 <__mulsi3>
    edb0:	1007883a 	mov	r3,r2
    edb4:	00800074 	movhi	r2,1
    edb8:	1080b504 	addi	r2,r2,724
    edbc:	1885883a 	add	r2,r3,r2
    edc0:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
    edc4:	e0fffe17 	ldw	r3,-8(fp)
    edc8:	00900034 	movhi	r2,16384
    edcc:	10bfffc4 	addi	r2,r2,-1
    edd0:	1886703a 	and	r3,r3,r2
    edd4:	e0bffc17 	ldw	r2,-16(fp)
    edd8:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
    eddc:	e0bffb17 	ldw	r2,-20(fp)
    ede0:	1000051e 	bne	r2,zero,edf8 <open+0xdc>
    ede4:	e13ffc17 	ldw	r4,-16(fp)
    ede8:	000ec280 	call	ec28 <alt_file_locked>
    edec:	e0bffa15 	stw	r2,-24(fp)
    edf0:	e0bffa17 	ldw	r2,-24(fp)
    edf4:	10001016 	blt	r2,zero,ee38 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
    edf8:	e0bff817 	ldw	r2,-32(fp)
    edfc:	10800317 	ldw	r2,12(r2)
    ee00:	10000826 	beq	r2,zero,ee24 <open+0x108>
    ee04:	e0bff817 	ldw	r2,-32(fp)
    ee08:	10800317 	ldw	r2,12(r2)
    ee0c:	e13ffc17 	ldw	r4,-16(fp)
    ee10:	e17ffd17 	ldw	r5,-12(fp)
    ee14:	e1bffe17 	ldw	r6,-8(fp)
    ee18:	e1ffff17 	ldw	r7,-4(fp)
    ee1c:	103ee83a 	callr	r2
    ee20:	00000106 	br	ee28 <open+0x10c>
    ee24:	0005883a 	mov	r2,zero
    ee28:	e0bffa15 	stw	r2,-24(fp)
    ee2c:	00000206 	br	ee38 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
    ee30:	00bffb44 	movi	r2,-19
    ee34:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
    ee38:	e0bffa17 	ldw	r2,-24(fp)
    ee3c:	1000090e 	bge	r2,zero,ee64 <open+0x148>
  {
    alt_release_fd (index);  
    ee40:	e13ff917 	ldw	r4,-28(fp)
    ee44:	000d70c0 	call	d70c <alt_release_fd>
    ALT_ERRNO = -status;
    ee48:	000ebd80 	call	ebd8 <alt_get_errno>
    ee4c:	1007883a 	mov	r3,r2
    ee50:	e0bffa17 	ldw	r2,-24(fp)
    ee54:	0085c83a 	sub	r2,zero,r2
    ee58:	18800015 	stw	r2,0(r3)
    return -1;
    ee5c:	00bfffc4 	movi	r2,-1
    ee60:	00000106 	br	ee68 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
    ee64:	e0bff917 	ldw	r2,-28(fp)
}
    ee68:	e037883a 	mov	sp,fp
    ee6c:	dfc00117 	ldw	ra,4(sp)
    ee70:	df000017 	ldw	fp,0(sp)
    ee74:	dec00204 	addi	sp,sp,8
    ee78:	f800283a 	ret

0000ee7c <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
    ee7c:	defffa04 	addi	sp,sp,-24
    ee80:	df000515 	stw	fp,20(sp)
    ee84:	df000504 	addi	fp,sp,20
    ee88:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
    ee8c:	0005303a 	rdctl	r2,status
    ee90:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
    ee94:	e0fffc17 	ldw	r3,-16(fp)
    ee98:	00bfff84 	movi	r2,-2
    ee9c:	1884703a 	and	r2,r3,r2
    eea0:	1001703a 	wrctl	status,r2
  
  return context;
    eea4:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
    eea8:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
    eeac:	e0bfff17 	ldw	r2,-4(fp)
    eeb0:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
    eeb4:	e0bffd17 	ldw	r2,-12(fp)
    eeb8:	10800017 	ldw	r2,0(r2)
    eebc:	e0fffd17 	ldw	r3,-12(fp)
    eec0:	18c00117 	ldw	r3,4(r3)
    eec4:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
    eec8:	e0bffd17 	ldw	r2,-12(fp)
    eecc:	10800117 	ldw	r2,4(r2)
    eed0:	e0fffd17 	ldw	r3,-12(fp)
    eed4:	18c00017 	ldw	r3,0(r3)
    eed8:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
    eedc:	e0bffd17 	ldw	r2,-12(fp)
    eee0:	e0fffd17 	ldw	r3,-12(fp)
    eee4:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
    eee8:	e0bffd17 	ldw	r2,-12(fp)
    eeec:	e0fffd17 	ldw	r3,-12(fp)
    eef0:	10c00015 	stw	r3,0(r2)
    eef4:	e0bffb17 	ldw	r2,-20(fp)
    eef8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
    eefc:	e0bffe17 	ldw	r2,-8(fp)
    ef00:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
    ef04:	e037883a 	mov	sp,fp
    ef08:	df000017 	ldw	fp,0(sp)
    ef0c:	dec00104 	addi	sp,sp,4
    ef10:	f800283a 	ret

0000ef14 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
    ef14:	defffb04 	addi	sp,sp,-20
    ef18:	dfc00415 	stw	ra,16(sp)
    ef1c:	df000315 	stw	fp,12(sp)
    ef20:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
    ef24:	d0a00e17 	ldw	r2,-32712(gp)
    ef28:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
    ef2c:	d0a6d717 	ldw	r2,-25764(gp)
    ef30:	10800044 	addi	r2,r2,1
    ef34:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    ef38:	00002e06 	br	eff4 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
    ef3c:	e0bffd17 	ldw	r2,-12(fp)
    ef40:	10800017 	ldw	r2,0(r2)
    ef44:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
    ef48:	e0bffd17 	ldw	r2,-12(fp)
    ef4c:	10800403 	ldbu	r2,16(r2)
    ef50:	10803fcc 	andi	r2,r2,255
    ef54:	10000426 	beq	r2,zero,ef68 <alt_tick+0x54>
    ef58:	d0a6d717 	ldw	r2,-25764(gp)
    ef5c:	1000021e 	bne	r2,zero,ef68 <alt_tick+0x54>
    {
      alarm->rollover = 0;
    ef60:	e0bffd17 	ldw	r2,-12(fp)
    ef64:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
    ef68:	e0bffd17 	ldw	r2,-12(fp)
    ef6c:	10800217 	ldw	r2,8(r2)
    ef70:	d0e6d717 	ldw	r3,-25764(gp)
    ef74:	18801d36 	bltu	r3,r2,efec <alt_tick+0xd8>
    ef78:	e0bffd17 	ldw	r2,-12(fp)
    ef7c:	10800403 	ldbu	r2,16(r2)
    ef80:	10803fcc 	andi	r2,r2,255
    ef84:	1000191e 	bne	r2,zero,efec <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
    ef88:	e0bffd17 	ldw	r2,-12(fp)
    ef8c:	10800317 	ldw	r2,12(r2)
    ef90:	e0fffd17 	ldw	r3,-12(fp)
    ef94:	18c00517 	ldw	r3,20(r3)
    ef98:	1809883a 	mov	r4,r3
    ef9c:	103ee83a 	callr	r2
    efa0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
    efa4:	e0bfff17 	ldw	r2,-4(fp)
    efa8:	1000031e 	bne	r2,zero,efb8 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
    efac:	e13ffd17 	ldw	r4,-12(fp)
    efb0:	000ee7c0 	call	ee7c <alt_alarm_stop>
    efb4:	00000d06 	br	efec <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
    efb8:	e0bffd17 	ldw	r2,-12(fp)
    efbc:	10c00217 	ldw	r3,8(r2)
    efc0:	e0bfff17 	ldw	r2,-4(fp)
    efc4:	1887883a 	add	r3,r3,r2
    efc8:	e0bffd17 	ldw	r2,-12(fp)
    efcc:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
    efd0:	e0bffd17 	ldw	r2,-12(fp)
    efd4:	10c00217 	ldw	r3,8(r2)
    efd8:	d0a6d717 	ldw	r2,-25764(gp)
    efdc:	1880032e 	bgeu	r3,r2,efec <alt_tick+0xd8>
        {
          alarm->rollover = 1;
    efe0:	e0bffd17 	ldw	r2,-12(fp)
    efe4:	00c00044 	movi	r3,1
    efe8:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
    efec:	e0bffe17 	ldw	r2,-8(fp)
    eff0:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
    eff4:	e0fffd17 	ldw	r3,-12(fp)
    eff8:	d0a00e04 	addi	r2,gp,-32712
    effc:	18bfcf1e 	bne	r3,r2,ef3c <__alt_data_end+0xffff06f4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
    f000:	0001883a 	nop
}
    f004:	e037883a 	mov	sp,fp
    f008:	dfc00117 	ldw	ra,4(sp)
    f00c:	df000017 	ldw	fp,0(sp)
    f010:	dec00204 	addi	sp,sp,8
    f014:	f800283a 	ret

0000f018 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    f018:	deffff04 	addi	sp,sp,-4
    f01c:	df000015 	stw	fp,0(sp)
    f020:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
    f024:	000170fa 	wrctl	ienable,zero
}
    f028:	e037883a 	mov	sp,fp
    f02c:	df000017 	ldw	fp,0(sp)
    f030:	dec00104 	addi	sp,sp,4
    f034:	f800283a 	ret

0000f038 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
    f038:	defffa04 	addi	sp,sp,-24
    f03c:	dfc00515 	stw	ra,20(sp)
    f040:	df000415 	stw	fp,16(sp)
    f044:	df000404 	addi	fp,sp,16
    f048:	e13ffe15 	stw	r4,-8(fp)
    f04c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
    f050:	e0bfff17 	ldw	r2,-4(fp)
    f054:	10800017 	ldw	r2,0(r2)
    f058:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
    f05c:	e13ffe17 	ldw	r4,-8(fp)
    f060:	0006f0c0 	call	6f0c <strlen>
    f064:	10800044 	addi	r2,r2,1
    f068:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f06c:	00000d06 	br	f0a4 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
    f070:	e0bffc17 	ldw	r2,-16(fp)
    f074:	10c00217 	ldw	r3,8(r2)
    f078:	e0bffd17 	ldw	r2,-12(fp)
    f07c:	1809883a 	mov	r4,r3
    f080:	e17ffe17 	ldw	r5,-8(fp)
    f084:	100d883a 	mov	r6,r2
    f088:	000f3980 	call	f398 <memcmp>
    f08c:	1000021e 	bne	r2,zero,f098 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
    f090:	e0bffc17 	ldw	r2,-16(fp)
    f094:	00000706 	br	f0b4 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
    f098:	e0bffc17 	ldw	r2,-16(fp)
    f09c:	10800017 	ldw	r2,0(r2)
    f0a0:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
    f0a4:	e0fffc17 	ldw	r3,-16(fp)
    f0a8:	e0bfff17 	ldw	r2,-4(fp)
    f0ac:	18bff01e 	bne	r3,r2,f070 <__alt_data_end+0xffff0828>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
    f0b0:	0005883a 	mov	r2,zero
}
    f0b4:	e037883a 	mov	sp,fp
    f0b8:	dfc00117 	ldw	ra,4(sp)
    f0bc:	df000017 	ldw	fp,0(sp)
    f0c0:	dec00204 	addi	sp,sp,8
    f0c4:	f800283a 	ret

0000f0c8 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
    f0c8:	defffb04 	addi	sp,sp,-20
    f0cc:	dfc00415 	stw	ra,16(sp)
    f0d0:	df000315 	stw	fp,12(sp)
    f0d4:	df000304 	addi	fp,sp,12
    f0d8:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
    f0dc:	00800074 	movhi	r2,1
    f0e0:	10853304 	addi	r2,r2,5324
    f0e4:	10800017 	ldw	r2,0(r2)
    f0e8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    f0ec:	00003106 	br	f1b4 <alt_find_file+0xec>
  {
    len = strlen(next->name);
    f0f0:	e0bffd17 	ldw	r2,-12(fp)
    f0f4:	10800217 	ldw	r2,8(r2)
    f0f8:	1009883a 	mov	r4,r2
    f0fc:	0006f0c0 	call	6f0c <strlen>
    f100:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
    f104:	e0bffd17 	ldw	r2,-12(fp)
    f108:	10c00217 	ldw	r3,8(r2)
    f10c:	e0bffe17 	ldw	r2,-8(fp)
    f110:	10bfffc4 	addi	r2,r2,-1
    f114:	1885883a 	add	r2,r3,r2
    f118:	10800003 	ldbu	r2,0(r2)
    f11c:	10803fcc 	andi	r2,r2,255
    f120:	1080201c 	xori	r2,r2,128
    f124:	10bfe004 	addi	r2,r2,-128
    f128:	10800bd8 	cmpnei	r2,r2,47
    f12c:	1000031e 	bne	r2,zero,f13c <alt_find_file+0x74>
    {
      len -= 1;
    f130:	e0bffe17 	ldw	r2,-8(fp)
    f134:	10bfffc4 	addi	r2,r2,-1
    f138:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    f13c:	e0bffe17 	ldw	r2,-8(fp)
    f140:	e0ffff17 	ldw	r3,-4(fp)
    f144:	1885883a 	add	r2,r3,r2
    f148:	10800003 	ldbu	r2,0(r2)
    f14c:	10803fcc 	andi	r2,r2,255
    f150:	1080201c 	xori	r2,r2,128
    f154:	10bfe004 	addi	r2,r2,-128
    f158:	10800be0 	cmpeqi	r2,r2,47
    f15c:	1000081e 	bne	r2,zero,f180 <alt_find_file+0xb8>
    f160:	e0bffe17 	ldw	r2,-8(fp)
    f164:	e0ffff17 	ldw	r3,-4(fp)
    f168:	1885883a 	add	r2,r3,r2
    f16c:	10800003 	ldbu	r2,0(r2)
    f170:	10803fcc 	andi	r2,r2,255
    f174:	1080201c 	xori	r2,r2,128
    f178:	10bfe004 	addi	r2,r2,-128
    f17c:	10000a1e 	bne	r2,zero,f1a8 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    f180:	e0bffd17 	ldw	r2,-12(fp)
    f184:	10c00217 	ldw	r3,8(r2)
    f188:	e0bffe17 	ldw	r2,-8(fp)
    f18c:	1809883a 	mov	r4,r3
    f190:	e17fff17 	ldw	r5,-4(fp)
    f194:	100d883a 	mov	r6,r2
    f198:	000f3980 	call	f398 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
    f19c:	1000021e 	bne	r2,zero,f1a8 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
    f1a0:	e0bffd17 	ldw	r2,-12(fp)
    f1a4:	00000806 	br	f1c8 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
    f1a8:	e0bffd17 	ldw	r2,-12(fp)
    f1ac:	10800017 	ldw	r2,0(r2)
    f1b0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
    f1b4:	e0fffd17 	ldw	r3,-12(fp)
    f1b8:	00800074 	movhi	r2,1
    f1bc:	10853304 	addi	r2,r2,5324
    f1c0:	18bfcb1e 	bne	r3,r2,f0f0 <__alt_data_end+0xffff08a8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
    f1c4:	0005883a 	mov	r2,zero
}
    f1c8:	e037883a 	mov	sp,fp
    f1cc:	dfc00117 	ldw	ra,4(sp)
    f1d0:	df000017 	ldw	fp,0(sp)
    f1d4:	dec00204 	addi	sp,sp,8
    f1d8:	f800283a 	ret

0000f1dc <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
    f1dc:	defffa04 	addi	sp,sp,-24
    f1e0:	dfc00515 	stw	ra,20(sp)
    f1e4:	df000415 	stw	fp,16(sp)
    f1e8:	dc000315 	stw	r16,12(sp)
    f1ec:	df000404 	addi	fp,sp,16
    f1f0:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
    f1f4:	00bffa04 	movi	r2,-24
    f1f8:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    f1fc:	e03ffc15 	stw	zero,-16(fp)
    f200:	00002106 	br	f288 <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
    f204:	04000074 	movhi	r16,1
    f208:	8400b504 	addi	r16,r16,724
    f20c:	e0bffc17 	ldw	r2,-16(fp)
    f210:	1009883a 	mov	r4,r2
    f214:	01400304 	movi	r5,12
    f218:	000a7740 	call	a774 <__mulsi3>
    f21c:	8085883a 	add	r2,r16,r2
    f220:	10800017 	ldw	r2,0(r2)
    f224:	1000151e 	bne	r2,zero,f27c <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
    f228:	04000074 	movhi	r16,1
    f22c:	8400b504 	addi	r16,r16,724
    f230:	e0bffc17 	ldw	r2,-16(fp)
    f234:	1009883a 	mov	r4,r2
    f238:	01400304 	movi	r5,12
    f23c:	000a7740 	call	a774 <__mulsi3>
    f240:	8085883a 	add	r2,r16,r2
    f244:	e0fffe17 	ldw	r3,-8(fp)
    f248:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
    f24c:	00800074 	movhi	r2,1
    f250:	10853704 	addi	r2,r2,5340
    f254:	10c00017 	ldw	r3,0(r2)
    f258:	e0bffc17 	ldw	r2,-16(fp)
    f25c:	1880040e 	bge	r3,r2,f270 <alt_get_fd+0x94>
      {
        alt_max_fd = i;
    f260:	00800074 	movhi	r2,1
    f264:	10853704 	addi	r2,r2,5340
    f268:	e0fffc17 	ldw	r3,-16(fp)
    f26c:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
    f270:	e0bffc17 	ldw	r2,-16(fp)
    f274:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
    f278:	00000606 	br	f294 <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
    f27c:	e0bffc17 	ldw	r2,-16(fp)
    f280:	10800044 	addi	r2,r2,1
    f284:	e0bffc15 	stw	r2,-16(fp)
    f288:	e0bffc17 	ldw	r2,-16(fp)
    f28c:	10800810 	cmplti	r2,r2,32
    f290:	103fdc1e 	bne	r2,zero,f204 <__alt_data_end+0xffff09bc>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
    f294:	e0bffd17 	ldw	r2,-12(fp)
}
    f298:	e6ffff04 	addi	sp,fp,-4
    f29c:	dfc00217 	ldw	ra,8(sp)
    f2a0:	df000117 	ldw	fp,4(sp)
    f2a4:	dc000017 	ldw	r16,0(sp)
    f2a8:	dec00304 	addi	sp,sp,12
    f2ac:	f800283a 	ret

0000f2b0 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
    f2b0:	defffe04 	addi	sp,sp,-8
    f2b4:	df000115 	stw	fp,4(sp)
    f2b8:	df000104 	addi	fp,sp,4
    f2bc:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
    f2c0:	e0bfff17 	ldw	r2,-4(fp)
    f2c4:	10bffe84 	addi	r2,r2,-6
    f2c8:	10c00428 	cmpgeui	r3,r2,16
    f2cc:	18001a1e 	bne	r3,zero,f338 <alt_exception_cause_generated_bad_addr+0x88>
    f2d0:	100690ba 	slli	r3,r2,2
    f2d4:	00800074 	movhi	r2,1
    f2d8:	10bcba04 	addi	r2,r2,-3352
    f2dc:	1885883a 	add	r2,r3,r2
    f2e0:	10800017 	ldw	r2,0(r2)
    f2e4:	1000683a 	jmp	r2
    f2e8:	0000f328 	cmpgeui	zero,zero,972
    f2ec:	0000f328 	cmpgeui	zero,zero,972
    f2f0:	0000f338 	rdprs	zero,zero,972
    f2f4:	0000f338 	rdprs	zero,zero,972
    f2f8:	0000f338 	rdprs	zero,zero,972
    f2fc:	0000f328 	cmpgeui	zero,zero,972
    f300:	0000f330 	cmpltui	zero,zero,972
    f304:	0000f338 	rdprs	zero,zero,972
    f308:	0000f328 	cmpgeui	zero,zero,972
    f30c:	0000f328 	cmpgeui	zero,zero,972
    f310:	0000f338 	rdprs	zero,zero,972
    f314:	0000f328 	cmpgeui	zero,zero,972
    f318:	0000f330 	cmpltui	zero,zero,972
    f31c:	0000f338 	rdprs	zero,zero,972
    f320:	0000f338 	rdprs	zero,zero,972
    f324:	0000f328 	cmpgeui	zero,zero,972
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
    f328:	00800044 	movi	r2,1
    f32c:	00000306 	br	f33c <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
    f330:	0005883a 	mov	r2,zero
    f334:	00000106 	br	f33c <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
    f338:	0005883a 	mov	r2,zero
  }
}
    f33c:	e037883a 	mov	sp,fp
    f340:	df000017 	ldw	fp,0(sp)
    f344:	dec00104 	addi	sp,sp,4
    f348:	f800283a 	ret

0000f34c <atexit>:
    f34c:	200b883a 	mov	r5,r4
    f350:	000d883a 	mov	r6,zero
    f354:	0009883a 	mov	r4,zero
    f358:	000f883a 	mov	r7,zero
    f35c:	000f4141 	jmpi	f414 <__register_exitproc>

0000f360 <exit>:
    f360:	defffe04 	addi	sp,sp,-8
    f364:	000b883a 	mov	r5,zero
    f368:	dc000015 	stw	r16,0(sp)
    f36c:	dfc00115 	stw	ra,4(sp)
    f370:	2021883a 	mov	r16,r4
    f374:	000f5280 	call	f528 <__call_exitprocs>
    f378:	00800074 	movhi	r2,1
    f37c:	10852f04 	addi	r2,r2,5308
    f380:	11000017 	ldw	r4,0(r2)
    f384:	20800f17 	ldw	r2,60(r4)
    f388:	10000126 	beq	r2,zero,f390 <exit+0x30>
    f38c:	103ee83a 	callr	r2
    f390:	8009883a 	mov	r4,r16
    f394:	000f6bc0 	call	f6bc <_exit>

0000f398 <memcmp>:
    f398:	01c000c4 	movi	r7,3
    f39c:	3980192e 	bgeu	r7,r6,f404 <memcmp+0x6c>
    f3a0:	2144b03a 	or	r2,r4,r5
    f3a4:	11c4703a 	and	r2,r2,r7
    f3a8:	10000f26 	beq	r2,zero,f3e8 <memcmp+0x50>
    f3ac:	20800003 	ldbu	r2,0(r4)
    f3b0:	28c00003 	ldbu	r3,0(r5)
    f3b4:	10c0151e 	bne	r2,r3,f40c <memcmp+0x74>
    f3b8:	31bfff84 	addi	r6,r6,-2
    f3bc:	01ffffc4 	movi	r7,-1
    f3c0:	00000406 	br	f3d4 <memcmp+0x3c>
    f3c4:	20800003 	ldbu	r2,0(r4)
    f3c8:	28c00003 	ldbu	r3,0(r5)
    f3cc:	31bfffc4 	addi	r6,r6,-1
    f3d0:	10c00e1e 	bne	r2,r3,f40c <memcmp+0x74>
    f3d4:	21000044 	addi	r4,r4,1
    f3d8:	29400044 	addi	r5,r5,1
    f3dc:	31fff91e 	bne	r6,r7,f3c4 <__alt_data_end+0xffff0b7c>
    f3e0:	0005883a 	mov	r2,zero
    f3e4:	f800283a 	ret
    f3e8:	20c00017 	ldw	r3,0(r4)
    f3ec:	28800017 	ldw	r2,0(r5)
    f3f0:	1880041e 	bne	r3,r2,f404 <memcmp+0x6c>
    f3f4:	31bfff04 	addi	r6,r6,-4
    f3f8:	21000104 	addi	r4,r4,4
    f3fc:	29400104 	addi	r5,r5,4
    f400:	39bff936 	bltu	r7,r6,f3e8 <__alt_data_end+0xffff0ba0>
    f404:	303fe91e 	bne	r6,zero,f3ac <__alt_data_end+0xffff0b64>
    f408:	003ff506 	br	f3e0 <__alt_data_end+0xffff0b98>
    f40c:	10c5c83a 	sub	r2,r2,r3
    f410:	f800283a 	ret

0000f414 <__register_exitproc>:
    f414:	00800074 	movhi	r2,1
    f418:	defffa04 	addi	sp,sp,-24
    f41c:	10852f04 	addi	r2,r2,5308
    f420:	dc000315 	stw	r16,12(sp)
    f424:	14000017 	ldw	r16,0(r2)
    f428:	dc400415 	stw	r17,16(sp)
    f42c:	dfc00515 	stw	ra,20(sp)
    f430:	80805217 	ldw	r2,328(r16)
    f434:	2023883a 	mov	r17,r4
    f438:	10003626 	beq	r2,zero,f514 <__register_exitproc+0x100>
    f43c:	10c00117 	ldw	r3,4(r2)
    f440:	010007c4 	movi	r4,31
    f444:	20c00e16 	blt	r4,r3,f480 <__register_exitproc+0x6c>
    f448:	1a400044 	addi	r9,r3,1
    f44c:	8800211e 	bne	r17,zero,f4d4 <__register_exitproc+0xc0>
    f450:	18c00084 	addi	r3,r3,2
    f454:	18c7883a 	add	r3,r3,r3
    f458:	18c7883a 	add	r3,r3,r3
    f45c:	12400115 	stw	r9,4(r2)
    f460:	10c7883a 	add	r3,r2,r3
    f464:	19400015 	stw	r5,0(r3)
    f468:	0005883a 	mov	r2,zero
    f46c:	dfc00517 	ldw	ra,20(sp)
    f470:	dc400417 	ldw	r17,16(sp)
    f474:	dc000317 	ldw	r16,12(sp)
    f478:	dec00604 	addi	sp,sp,24
    f47c:	f800283a 	ret
    f480:	00800034 	movhi	r2,0
    f484:	1081b604 	addi	r2,r2,1752
    f488:	10002526 	beq	r2,zero,f520 <__register_exitproc+0x10c>
    f48c:	01006404 	movi	r4,400
    f490:	d9400015 	stw	r5,0(sp)
    f494:	d9800115 	stw	r6,4(sp)
    f498:	d9c00215 	stw	r7,8(sp)
    f49c:	00006d80 	call	6d8 <malloc>
    f4a0:	d9400017 	ldw	r5,0(sp)
    f4a4:	d9800117 	ldw	r6,4(sp)
    f4a8:	d9c00217 	ldw	r7,8(sp)
    f4ac:	10001c26 	beq	r2,zero,f520 <__register_exitproc+0x10c>
    f4b0:	80c05217 	ldw	r3,328(r16)
    f4b4:	10000115 	stw	zero,4(r2)
    f4b8:	02400044 	movi	r9,1
    f4bc:	10c00015 	stw	r3,0(r2)
    f4c0:	80805215 	stw	r2,328(r16)
    f4c4:	10006215 	stw	zero,392(r2)
    f4c8:	10006315 	stw	zero,396(r2)
    f4cc:	0007883a 	mov	r3,zero
    f4d0:	883fdf26 	beq	r17,zero,f450 <__alt_data_end+0xffff0c08>
    f4d4:	18d1883a 	add	r8,r3,r3
    f4d8:	4211883a 	add	r8,r8,r8
    f4dc:	1211883a 	add	r8,r2,r8
    f4e0:	41802215 	stw	r6,136(r8)
    f4e4:	01000044 	movi	r4,1
    f4e8:	11806217 	ldw	r6,392(r2)
    f4ec:	20c8983a 	sll	r4,r4,r3
    f4f0:	310cb03a 	or	r6,r6,r4
    f4f4:	11806215 	stw	r6,392(r2)
    f4f8:	41c04215 	stw	r7,264(r8)
    f4fc:	01800084 	movi	r6,2
    f500:	89bfd31e 	bne	r17,r6,f450 <__alt_data_end+0xffff0c08>
    f504:	11806317 	ldw	r6,396(r2)
    f508:	3108b03a 	or	r4,r6,r4
    f50c:	11006315 	stw	r4,396(r2)
    f510:	003fcf06 	br	f450 <__alt_data_end+0xffff0c08>
    f514:	80805304 	addi	r2,r16,332
    f518:	80805215 	stw	r2,328(r16)
    f51c:	003fc706 	br	f43c <__alt_data_end+0xffff0bf4>
    f520:	00bfffc4 	movi	r2,-1
    f524:	003fd106 	br	f46c <__alt_data_end+0xffff0c24>

0000f528 <__call_exitprocs>:
    f528:	00800074 	movhi	r2,1
    f52c:	10852f04 	addi	r2,r2,5308
    f530:	10800017 	ldw	r2,0(r2)
    f534:	defff404 	addi	sp,sp,-48
    f538:	dd800815 	stw	r22,32(sp)
    f53c:	d8800015 	stw	r2,0(sp)
    f540:	10805204 	addi	r2,r2,328
    f544:	dd000615 	stw	r20,24(sp)
    f548:	dc800415 	stw	r18,16(sp)
    f54c:	dfc00b15 	stw	ra,44(sp)
    f550:	df000a15 	stw	fp,40(sp)
    f554:	ddc00915 	stw	r23,36(sp)
    f558:	dd400715 	stw	r21,28(sp)
    f55c:	dcc00515 	stw	r19,20(sp)
    f560:	dc400315 	stw	r17,12(sp)
    f564:	dc000215 	stw	r16,8(sp)
    f568:	2025883a 	mov	r18,r4
    f56c:	2829883a 	mov	r20,r5
    f570:	d8800115 	stw	r2,4(sp)
    f574:	05bfffc4 	movi	r22,-1
    f578:	d8800017 	ldw	r2,0(sp)
    f57c:	14c05217 	ldw	r19,328(r2)
    f580:	98001d26 	beq	r19,zero,f5f8 <__call_exitprocs+0xd0>
    f584:	dd400117 	ldw	r21,4(sp)
    f588:	98800117 	ldw	r2,4(r19)
    f58c:	173fffc4 	addi	fp,r2,-1
    f590:	e0000d16 	blt	fp,zero,f5c8 <__call_exitprocs+0xa0>
    f594:	14000044 	addi	r16,r2,1
    f598:	8421883a 	add	r16,r16,r16
    f59c:	8421883a 	add	r16,r16,r16
    f5a0:	84402004 	addi	r17,r16,128
    f5a4:	9c63883a 	add	r17,r19,r17
    f5a8:	9c21883a 	add	r16,r19,r16
    f5ac:	a0001e26 	beq	r20,zero,f628 <__call_exitprocs+0x100>
    f5b0:	80804017 	ldw	r2,256(r16)
    f5b4:	15001c26 	beq	r2,r20,f628 <__call_exitprocs+0x100>
    f5b8:	e73fffc4 	addi	fp,fp,-1
    f5bc:	843fff04 	addi	r16,r16,-4
    f5c0:	8c7fff04 	addi	r17,r17,-4
    f5c4:	e5bff91e 	bne	fp,r22,f5ac <__alt_data_end+0xffff0d64>
    f5c8:	00800034 	movhi	r2,0
    f5cc:	1081bb04 	addi	r2,r2,1772
    f5d0:	10000926 	beq	r2,zero,f5f8 <__call_exitprocs+0xd0>
    f5d4:	98800117 	ldw	r2,4(r19)
    f5d8:	1000311e 	bne	r2,zero,f6a0 <__call_exitprocs+0x178>
    f5dc:	98800017 	ldw	r2,0(r19)
    f5e0:	10003426 	beq	r2,zero,f6b4 <__call_exitprocs+0x18c>
    f5e4:	9809883a 	mov	r4,r19
    f5e8:	a8800015 	stw	r2,0(r21)
    f5ec:	00006ec0 	call	6ec <free>
    f5f0:	acc00017 	ldw	r19,0(r21)
    f5f4:	983fe41e 	bne	r19,zero,f588 <__alt_data_end+0xffff0d40>
    f5f8:	dfc00b17 	ldw	ra,44(sp)
    f5fc:	df000a17 	ldw	fp,40(sp)
    f600:	ddc00917 	ldw	r23,36(sp)
    f604:	dd800817 	ldw	r22,32(sp)
    f608:	dd400717 	ldw	r21,28(sp)
    f60c:	dd000617 	ldw	r20,24(sp)
    f610:	dcc00517 	ldw	r19,20(sp)
    f614:	dc800417 	ldw	r18,16(sp)
    f618:	dc400317 	ldw	r17,12(sp)
    f61c:	dc000217 	ldw	r16,8(sp)
    f620:	dec00c04 	addi	sp,sp,48
    f624:	f800283a 	ret
    f628:	98800117 	ldw	r2,4(r19)
    f62c:	80c00017 	ldw	r3,0(r16)
    f630:	10bfffc4 	addi	r2,r2,-1
    f634:	17001526 	beq	r2,fp,f68c <__call_exitprocs+0x164>
    f638:	80000015 	stw	zero,0(r16)
    f63c:	183fde26 	beq	r3,zero,f5b8 <__alt_data_end+0xffff0d70>
    f640:	00800044 	movi	r2,1
    f644:	1708983a 	sll	r4,r2,fp
    f648:	98806217 	ldw	r2,392(r19)
    f64c:	9dc00117 	ldw	r23,4(r19)
    f650:	2084703a 	and	r2,r4,r2
    f654:	1000061e 	bne	r2,zero,f670 <__call_exitprocs+0x148>
    f658:	183ee83a 	callr	r3
    f65c:	98800117 	ldw	r2,4(r19)
    f660:	15ffc51e 	bne	r2,r23,f578 <__alt_data_end+0xffff0d30>
    f664:	a8800017 	ldw	r2,0(r21)
    f668:	14ffd326 	beq	r2,r19,f5b8 <__alt_data_end+0xffff0d70>
    f66c:	003fc206 	br	f578 <__alt_data_end+0xffff0d30>
    f670:	98806317 	ldw	r2,396(r19)
    f674:	2084703a 	and	r2,r4,r2
    f678:	1000061e 	bne	r2,zero,f694 <__call_exitprocs+0x16c>
    f67c:	89400017 	ldw	r5,0(r17)
    f680:	9009883a 	mov	r4,r18
    f684:	183ee83a 	callr	r3
    f688:	003ff406 	br	f65c <__alt_data_end+0xffff0e14>
    f68c:	9f000115 	stw	fp,4(r19)
    f690:	003fea06 	br	f63c <__alt_data_end+0xffff0df4>
    f694:	89000017 	ldw	r4,0(r17)
    f698:	183ee83a 	callr	r3
    f69c:	003fef06 	br	f65c <__alt_data_end+0xffff0e14>
    f6a0:	98800017 	ldw	r2,0(r19)
    f6a4:	982b883a 	mov	r21,r19
    f6a8:	1027883a 	mov	r19,r2
    f6ac:	983fb61e 	bne	r19,zero,f588 <__alt_data_end+0xffff0d40>
    f6b0:	003fd106 	br	f5f8 <__alt_data_end+0xffff0db0>
    f6b4:	0005883a 	mov	r2,zero
    f6b8:	003ffa06 	br	f6a4 <__alt_data_end+0xffff0e5c>

0000f6bc <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
    f6bc:	defffd04 	addi	sp,sp,-12
    f6c0:	df000215 	stw	fp,8(sp)
    f6c4:	df000204 	addi	fp,sp,8
    f6c8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
    f6cc:	0001883a 	nop
    f6d0:	e0bfff17 	ldw	r2,-4(fp)
    f6d4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
    f6d8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
    f6dc:	10000226 	beq	r2,zero,f6e8 <_exit+0x2c>
    ALT_SIM_FAIL();
    f6e0:	002af070 	cmpltui	zero,zero,43969
    f6e4:	00000106 	br	f6ec <_exit+0x30>
  } else {
    ALT_SIM_PASS();
    f6e8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
    f6ec:	003fff06 	br	f6ec <__alt_data_end+0xffff0ea4>
